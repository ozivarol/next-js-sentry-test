/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar reactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsY0FBYyxtQkFBTyxDQUFDLGtEQUFVOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTs7O0FBR0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG9CQUFvQixpQkFBaUI7QUFDckM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzPzkxZGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n"));

/***/ }),

/***/ "./node_modules/next/constants.js":
/*!****************************************!*\
  !*** ./node_modules/next/constants.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/constants */ \"./node_modules/next/dist/shared/lib/constants.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsMkhBQXVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2NvbnN0YW50cy5qcz8zN2UwIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L3NoYXJlZC9saWIvY29uc3RhbnRzJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/constants.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar ref, ref1;\nmodule.exports = ((ref = __webpack_require__.g.process) == null ? void 0 : ref.env) && typeof ((ref1 = __webpack_require__.g.process) == null ? void 0 : ref1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSx5QkFBeUIscUJBQU0seURBQXlELHFCQUFNLHNEQUFzRCxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCOztBQUVyTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgcmVmLCByZWYxO1xubW9kdWxlLmV4cG9ydHMgPSAoKHJlZiA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogcmVmLmVudikgJiYgdHlwZW9mICgocmVmMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogcmVmMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwiLi4vLi4vY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./sentry.client.config.js":
/*!*********************************!*\
  !*** ./sentry.client.config.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/nextjs */ \"./node_modules/@sentry/nextjs/esm/index.client.js\");\nvar _sentryCollisionFreeGlobalObject =  true ? window : 0;\n_sentryCollisionFreeGlobalObject[\"__sentryRewritesTunnelPath__\"] = \"/monitoring\";\n_sentryCollisionFreeGlobalObject[\"SENTRY_RELEASE\"] = undefined;\n_sentryCollisionFreeGlobalObject[\"__sentryBasePath\"] = undefined;\n_sentryCollisionFreeGlobalObject[\"__rewriteFramesAssetPrefixPath__\"] = \"\";\n// This file configures the initialization of Sentry on the client.\n// The config you add here will be used whenever a users loads a page in their browser.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\n_sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.init({\n    dsn: \"http://08c98deed9c90a8b3061095f78d7fa53@localhost:9000/2\",\n    // Adjust this value in production, or use tracesSampler for greater control\n    tracesSampleRate: 1,\n    // Setting this option to true will print useful information to the console while you're setting up Sentry.\n    debug: false,\n    replaysOnErrorSampleRate: 1.0,\n    // This sets the sample rate to be 10%. You may want this to be 100% while\n    // in development and sample at a lower rate in production\n    replaysSessionSampleRate: 0.1,\n    // You can remove this option if you're not planning to use the Sentry Session Replay feature:\n    integrations: [\n        _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.replayIntegration({\n            // Additional Replay configuration goes in here, for example:\n            maskAllText: true,\n            blockAllMedia: true\n        })\n    ]\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZW50cnkuY2xpZW50LmNvbmZpZy5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLG1DQUFtQyxLQUE0QixHQUFHQyxTQUFTLENBQThFO0FBQzdKRCxnQ0FBZ0MsQ0FBQywrQkFBK0IsR0FBRztBQUNuRUEsZ0NBQWdDLENBQUMsaUJBQWlCLEdBQUdJO0FBQ3JESixnQ0FBZ0MsQ0FBQyxtQkFBbUIsR0FBR0k7QUFDdkRKLGdDQUFnQyxDQUFDLG1DQUFtQyxHQUFHO0FBRXZFLG1FQUFtRTtBQUNuRSx1RkFBdUY7QUFDdkYsNkRBQTZEO0FBRXBCO0FBRXpDSyxnREFBVyxDQUFDO0lBQ1ZFLEtBQUs7SUFFTCw0RUFBNEU7SUFDNUVDLGtCQUFrQjtJQUVsQiwyR0FBMkc7SUFDM0dDLE9BQU8sS0FBSztJQUVaQywwQkFBMEI7SUFFMUIsMEVBQTBFO0lBQzFFLDBEQUEwRDtJQUMxREMsMEJBQTBCO0lBRTFCLDhGQUE4RjtJQUM5RkMsY0FBYztRQUNaUCw2REFBd0IsQ0FBQztZQUN2Qiw2REFBNkQ7WUFDN0RTLGFBQWEsSUFBSTtZQUNqQkMsZUFBZSxJQUFJO1FBQ3JCO0tBQ0Q7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zZW50cnkuY2xpZW50LmNvbmZpZy5qcz9jZDg2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfc2VudHJ5Q29sbGlzaW9uRnJlZUdsb2JhbE9iamVjdCA9IHR5cGVvZiB3aW5kb3cgIT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHR5cGVvZiBnbG9iYWwgIT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbCA6IHR5cGVvZiBzZWxmICE9IFwidW5kZWZpbmVkXCIgPyBzZWxmIDoge307XG5fc2VudHJ5Q29sbGlzaW9uRnJlZUdsb2JhbE9iamVjdFtcIl9fc2VudHJ5UmV3cml0ZXNUdW5uZWxQYXRoX19cIl0gPSBcIi9tb25pdG9yaW5nXCI7XG5fc2VudHJ5Q29sbGlzaW9uRnJlZUdsb2JhbE9iamVjdFtcIlNFTlRSWV9SRUxFQVNFXCJdID0gdW5kZWZpbmVkO1xuX3NlbnRyeUNvbGxpc2lvbkZyZWVHbG9iYWxPYmplY3RbXCJfX3NlbnRyeUJhc2VQYXRoXCJdID0gdW5kZWZpbmVkO1xuX3NlbnRyeUNvbGxpc2lvbkZyZWVHbG9iYWxPYmplY3RbXCJfX3Jld3JpdGVGcmFtZXNBc3NldFByZWZpeFBhdGhfX1wiXSA9IFwiXCI7XG5cbi8vIFRoaXMgZmlsZSBjb25maWd1cmVzIHRoZSBpbml0aWFsaXphdGlvbiBvZiBTZW50cnkgb24gdGhlIGNsaWVudC5cbi8vIFRoZSBjb25maWcgeW91IGFkZCBoZXJlIHdpbGwgYmUgdXNlZCB3aGVuZXZlciBhIHVzZXJzIGxvYWRzIGEgcGFnZSBpbiB0aGVpciBicm93c2VyLlxuLy8gaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvbmV4dGpzL1xuXG5pbXBvcnQgKiBhcyBTZW50cnkgZnJvbSBcIkBzZW50cnkvbmV4dGpzXCI7XG5cblNlbnRyeS5pbml0KHtcbiAgZHNuOiBcImh0dHA6Ly8wOGM5OGRlZWQ5YzkwYThiMzA2MTA5NWY3OGQ3ZmE1M0Bsb2NhbGhvc3Q6OTAwMC8yXCIsXG5cbiAgLy8gQWRqdXN0IHRoaXMgdmFsdWUgaW4gcHJvZHVjdGlvbiwgb3IgdXNlIHRyYWNlc1NhbXBsZXIgZm9yIGdyZWF0ZXIgY29udHJvbFxuICB0cmFjZXNTYW1wbGVSYXRlOiAxLFxuXG4gIC8vIFNldHRpbmcgdGhpcyBvcHRpb24gdG8gdHJ1ZSB3aWxsIHByaW50IHVzZWZ1bCBpbmZvcm1hdGlvbiB0byB0aGUgY29uc29sZSB3aGlsZSB5b3UncmUgc2V0dGluZyB1cCBTZW50cnkuXG4gIGRlYnVnOiBmYWxzZSxcblxuICByZXBsYXlzT25FcnJvclNhbXBsZVJhdGU6IDEuMCxcblxuICAvLyBUaGlzIHNldHMgdGhlIHNhbXBsZSByYXRlIHRvIGJlIDEwJS4gWW91IG1heSB3YW50IHRoaXMgdG8gYmUgMTAwJSB3aGlsZVxuICAvLyBpbiBkZXZlbG9wbWVudCBhbmQgc2FtcGxlIGF0IGEgbG93ZXIgcmF0ZSBpbiBwcm9kdWN0aW9uXG4gIHJlcGxheXNTZXNzaW9uU2FtcGxlUmF0ZTogMC4xLFxuXG4gIC8vIFlvdSBjYW4gcmVtb3ZlIHRoaXMgb3B0aW9uIGlmIHlvdSdyZSBub3QgcGxhbm5pbmcgdG8gdXNlIHRoZSBTZW50cnkgU2Vzc2lvbiBSZXBsYXkgZmVhdHVyZTpcbiAgaW50ZWdyYXRpb25zOiBbXG4gICAgU2VudHJ5LnJlcGxheUludGVncmF0aW9uKHtcbiAgICAgIC8vIEFkZGl0aW9uYWwgUmVwbGF5IGNvbmZpZ3VyYXRpb24gZ29lcyBpbiBoZXJlLCBmb3IgZXhhbXBsZTpcbiAgICAgIG1hc2tBbGxUZXh0OiB0cnVlLFxuICAgICAgYmxvY2tBbGxNZWRpYTogdHJ1ZSxcbiAgICB9KSxcbiAgXSxcbn0pO1xuIl0sIm5hbWVzIjpbIl9zZW50cnlDb2xsaXNpb25GcmVlR2xvYmFsT2JqZWN0Iiwid2luZG93IiwiZ2xvYmFsIiwic2VsZiIsInVuZGVmaW5lZCIsIlNlbnRyeSIsImluaXQiLCJkc24iLCJ0cmFjZXNTYW1wbGVSYXRlIiwiZGVidWciLCJyZXBsYXlzT25FcnJvclNhbXBsZVJhdGUiLCJyZXBsYXlzU2Vzc2lvblNhbXBsZVJhdGUiLCJpbnRlZ3JhdGlvbnMiLCJyZXBsYXlJbnRlZ3JhdGlvbiIsIm1hc2tBbGxUZXh0IiwiYmxvY2tBbGxNZWRpYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./sentry.client.config.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/constants.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/constants.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SYSTEM_ENTRYPOINTS = exports.EDGE_UNSUPPORTED_NODE_APIS = exports.RSC_MODULE_TYPES = exports.TURBO_TRACE_DEFAULT_MEMORY_LIMIT = exports.TRACE_OUTPUT_VERSION = exports.STATIC_STATUS_PAGES = exports.DEFAULT_SANS_SERIF_FONT = exports.DEFAULT_SERIF_FONT = exports.OPTIMIZED_FONT_PROVIDERS = exports.GOOGLE_FONT_PROVIDER = exports.SERVER_PROPS_ID = exports.STATIC_PROPS_ID = exports.PERMANENT_REDIRECT_STATUS = exports.TEMPORARY_REDIRECT_STATUS = exports.EDGE_RUNTIME_WEBPACK = exports.CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = exports.CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = exports.CLIENT_STATIC_FILES_RUNTIME_WEBPACK = exports.CLIENT_STATIC_FILES_RUNTIME_AMP = exports.CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = exports.APP_CLIENT_INTERNALS = exports.CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = exports.CLIENT_STATIC_FILES_RUNTIME_MAIN = exports.MIDDLEWARE_REACT_LOADABLE_MANIFEST = exports.MIDDLEWARE_BUILD_MANIFEST = exports.SERVER_REFERENCE_MANIFEST = exports.FLIGHT_SERVER_CSS_MANIFEST = exports.CLIENT_REFERENCE_MANIFEST = exports.NEXT_CLIENT_SSR_ENTRY_SUFFIX = exports.NEXT_BUILTIN_DOCUMENT = exports.MODERN_BROWSERSLIST_TARGET = exports.STRING_LITERAL_DROP_BUNDLE = exports.CLIENT_STATIC_FILES_RUNTIME = exports.CLIENT_STATIC_FILES_PATH = exports.CLIENT_PUBLIC_FILES_PATH = exports.BLOCKED_PAGES = exports.BUILD_ID_FILE = exports.CONFIG_FILES = exports.SERVER_DIRECTORY = exports.FONT_MANIFEST = exports.REACT_LOADABLE_MANIFEST = exports.DEV_MIDDLEWARE_MANIFEST = exports.MIDDLEWARE_MANIFEST = exports.DEV_CLIENT_PAGES_MANIFEST = exports.SERVER_FILES_MANIFEST = exports.IMAGES_MANIFEST = exports.ROUTES_MANIFEST = exports.PRERENDER_MANIFEST = exports.EXPORT_DETAIL = exports.EXPORT_MARKER = exports.NEXT_FONT_MANIFEST = exports.SUBRESOURCE_INTEGRITY_MANIFEST = exports.APP_BUILD_MANIFEST = exports.BUILD_MANIFEST = exports.APP_PATH_ROUTES_MANIFEST = exports.APP_PATHS_MANIFEST = exports.PAGES_MANIFEST = exports.PHASE_TEST = exports.PHASE_DEVELOPMENT_SERVER = exports.PHASE_PRODUCTION_SERVER = exports.PHASE_PRODUCTION_BUILD = exports.PHASE_EXPORT = exports.COMPILER_INDEXES = exports.COMPILER_NAMES = void 0;\nconst COMPILER_NAMES = {\n    client: \"client\",\n    server: \"server\",\n    edgeServer: \"edge-server\"\n};\nexports.COMPILER_NAMES = COMPILER_NAMES;\nconst COMPILER_INDEXES = {\n    [COMPILER_NAMES.client]: 0,\n    [COMPILER_NAMES.server]: 1,\n    [COMPILER_NAMES.edgeServer]: 2\n};\nexports.COMPILER_INDEXES = COMPILER_INDEXES;\nconst PHASE_EXPORT = \"phase-export\";\nexports.PHASE_EXPORT = PHASE_EXPORT;\nconst PHASE_PRODUCTION_BUILD = \"phase-production-build\";\nexports.PHASE_PRODUCTION_BUILD = PHASE_PRODUCTION_BUILD;\nconst PHASE_PRODUCTION_SERVER = \"phase-production-server\";\nexports.PHASE_PRODUCTION_SERVER = PHASE_PRODUCTION_SERVER;\nconst PHASE_DEVELOPMENT_SERVER = \"phase-development-server\";\nexports.PHASE_DEVELOPMENT_SERVER = PHASE_DEVELOPMENT_SERVER;\nconst PHASE_TEST = \"phase-test\";\nexports.PHASE_TEST = PHASE_TEST;\nconst PAGES_MANIFEST = \"pages-manifest.json\";\nexports.PAGES_MANIFEST = PAGES_MANIFEST;\nconst APP_PATHS_MANIFEST = \"app-paths-manifest.json\";\nexports.APP_PATHS_MANIFEST = APP_PATHS_MANIFEST;\nconst APP_PATH_ROUTES_MANIFEST = \"app-path-routes-manifest.json\";\nexports.APP_PATH_ROUTES_MANIFEST = APP_PATH_ROUTES_MANIFEST;\nconst BUILD_MANIFEST = \"build-manifest.json\";\nexports.BUILD_MANIFEST = BUILD_MANIFEST;\nconst APP_BUILD_MANIFEST = \"app-build-manifest.json\";\nexports.APP_BUILD_MANIFEST = APP_BUILD_MANIFEST;\nconst SUBRESOURCE_INTEGRITY_MANIFEST = \"subresource-integrity-manifest\";\nexports.SUBRESOURCE_INTEGRITY_MANIFEST = SUBRESOURCE_INTEGRITY_MANIFEST;\nconst NEXT_FONT_MANIFEST = \"next-font-manifest\";\nexports.NEXT_FONT_MANIFEST = NEXT_FONT_MANIFEST;\nconst EXPORT_MARKER = \"export-marker.json\";\nexports.EXPORT_MARKER = EXPORT_MARKER;\nconst EXPORT_DETAIL = \"export-detail.json\";\nexports.EXPORT_DETAIL = EXPORT_DETAIL;\nconst PRERENDER_MANIFEST = \"prerender-manifest.json\";\nexports.PRERENDER_MANIFEST = PRERENDER_MANIFEST;\nconst ROUTES_MANIFEST = \"routes-manifest.json\";\nexports.ROUTES_MANIFEST = ROUTES_MANIFEST;\nconst IMAGES_MANIFEST = \"images-manifest.json\";\nexports.IMAGES_MANIFEST = IMAGES_MANIFEST;\nconst SERVER_FILES_MANIFEST = \"required-server-files.json\";\nexports.SERVER_FILES_MANIFEST = SERVER_FILES_MANIFEST;\nconst DEV_CLIENT_PAGES_MANIFEST = \"_devPagesManifest.json\";\nexports.DEV_CLIENT_PAGES_MANIFEST = DEV_CLIENT_PAGES_MANIFEST;\nconst MIDDLEWARE_MANIFEST = \"middleware-manifest.json\";\nexports.MIDDLEWARE_MANIFEST = MIDDLEWARE_MANIFEST;\nconst DEV_MIDDLEWARE_MANIFEST = \"_devMiddlewareManifest.json\";\nexports.DEV_MIDDLEWARE_MANIFEST = DEV_MIDDLEWARE_MANIFEST;\nconst REACT_LOADABLE_MANIFEST = \"react-loadable-manifest.json\";\nexports.REACT_LOADABLE_MANIFEST = REACT_LOADABLE_MANIFEST;\nconst FONT_MANIFEST = \"font-manifest.json\";\nexports.FONT_MANIFEST = FONT_MANIFEST;\nconst SERVER_DIRECTORY = \"server\";\nexports.SERVER_DIRECTORY = SERVER_DIRECTORY;\nconst CONFIG_FILES = [\n    \"next.config.js\",\n    \"next.config.mjs\"\n];\nexports.CONFIG_FILES = CONFIG_FILES;\nconst BUILD_ID_FILE = \"BUILD_ID\";\nexports.BUILD_ID_FILE = BUILD_ID_FILE;\nconst BLOCKED_PAGES = [\n    \"/_document\",\n    \"/_app\",\n    \"/_error\"\n];\nexports.BLOCKED_PAGES = BLOCKED_PAGES;\nconst CLIENT_PUBLIC_FILES_PATH = \"public\";\nexports.CLIENT_PUBLIC_FILES_PATH = CLIENT_PUBLIC_FILES_PATH;\nconst CLIENT_STATIC_FILES_PATH = \"static\";\nexports.CLIENT_STATIC_FILES_PATH = CLIENT_STATIC_FILES_PATH;\nconst CLIENT_STATIC_FILES_RUNTIME = \"runtime\";\nexports.CLIENT_STATIC_FILES_RUNTIME = CLIENT_STATIC_FILES_RUNTIME;\nconst STRING_LITERAL_DROP_BUNDLE = \"__NEXT_DROP_CLIENT_FILE__\";\nexports.STRING_LITERAL_DROP_BUNDLE = STRING_LITERAL_DROP_BUNDLE;\nconst MODERN_BROWSERSLIST_TARGET = [\n    \"chrome 64\",\n    \"edge 79\",\n    \"firefox 67\",\n    \"opera 51\",\n    \"safari 12\"\n];\nexports.MODERN_BROWSERSLIST_TARGET = MODERN_BROWSERSLIST_TARGET;\nconst NEXT_BUILTIN_DOCUMENT = \"__NEXT_BUILTIN_DOCUMENT__\";\nexports.NEXT_BUILTIN_DOCUMENT = NEXT_BUILTIN_DOCUMENT;\nconst NEXT_CLIENT_SSR_ENTRY_SUFFIX = \".__sc_client__\";\nexports.NEXT_CLIENT_SSR_ENTRY_SUFFIX = NEXT_CLIENT_SSR_ENTRY_SUFFIX;\nconst CLIENT_REFERENCE_MANIFEST = \"client-reference-manifest\";\nexports.CLIENT_REFERENCE_MANIFEST = CLIENT_REFERENCE_MANIFEST;\nconst FLIGHT_SERVER_CSS_MANIFEST = \"flight-server-css-manifest\";\nexports.FLIGHT_SERVER_CSS_MANIFEST = FLIGHT_SERVER_CSS_MANIFEST;\nconst SERVER_REFERENCE_MANIFEST = \"server-reference-manifest\";\nexports.SERVER_REFERENCE_MANIFEST = SERVER_REFERENCE_MANIFEST;\nconst MIDDLEWARE_BUILD_MANIFEST = \"middleware-build-manifest\";\nexports.MIDDLEWARE_BUILD_MANIFEST = MIDDLEWARE_BUILD_MANIFEST;\nconst MIDDLEWARE_REACT_LOADABLE_MANIFEST = \"middleware-react-loadable-manifest\";\nexports.MIDDLEWARE_REACT_LOADABLE_MANIFEST = MIDDLEWARE_REACT_LOADABLE_MANIFEST;\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN = \"main\";\nexports.CLIENT_STATIC_FILES_RUNTIME_MAIN = CLIENT_STATIC_FILES_RUNTIME_MAIN;\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = \"\".concat(CLIENT_STATIC_FILES_RUNTIME_MAIN, \"-app\");\nexports.CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = CLIENT_STATIC_FILES_RUNTIME_MAIN_APP;\nconst APP_CLIENT_INTERNALS = \"app-client-internals\";\nexports.APP_CLIENT_INTERNALS = APP_CLIENT_INTERNALS;\nconst CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = \"react-refresh\";\nexports.CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH;\nconst CLIENT_STATIC_FILES_RUNTIME_AMP = \"amp\";\nexports.CLIENT_STATIC_FILES_RUNTIME_AMP = CLIENT_STATIC_FILES_RUNTIME_AMP;\nconst CLIENT_STATIC_FILES_RUNTIME_WEBPACK = \"webpack\";\nexports.CLIENT_STATIC_FILES_RUNTIME_WEBPACK = CLIENT_STATIC_FILES_RUNTIME_WEBPACK;\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = \"polyfills\";\nexports.CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = CLIENT_STATIC_FILES_RUNTIME_POLYFILLS;\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(CLIENT_STATIC_FILES_RUNTIME_POLYFILLS);\n_c = CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL;\nexports.CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL;\nconst EDGE_RUNTIME_WEBPACK = \"edge-runtime-webpack\";\nexports.EDGE_RUNTIME_WEBPACK = EDGE_RUNTIME_WEBPACK;\nconst TEMPORARY_REDIRECT_STATUS = 307;\nexports.TEMPORARY_REDIRECT_STATUS = TEMPORARY_REDIRECT_STATUS;\nconst PERMANENT_REDIRECT_STATUS = 308;\nexports.PERMANENT_REDIRECT_STATUS = PERMANENT_REDIRECT_STATUS;\nconst STATIC_PROPS_ID = \"__N_SSG\";\nexports.STATIC_PROPS_ID = STATIC_PROPS_ID;\nconst SERVER_PROPS_ID = \"__N_SSP\";\nexports.SERVER_PROPS_ID = SERVER_PROPS_ID;\nconst GOOGLE_FONT_PROVIDER = \"https://fonts.googleapis.com/\";\nexports.GOOGLE_FONT_PROVIDER = GOOGLE_FONT_PROVIDER;\nconst OPTIMIZED_FONT_PROVIDERS = [\n    {\n        url: GOOGLE_FONT_PROVIDER,\n        preconnect: \"https://fonts.gstatic.com\"\n    },\n    {\n        url: \"https://use.typekit.net\",\n        preconnect: \"https://use.typekit.net\"\n    }\n];\nexports.OPTIMIZED_FONT_PROVIDERS = OPTIMIZED_FONT_PROVIDERS;\nconst DEFAULT_SERIF_FONT = {\n    name: \"Times New Roman\",\n    xAvgCharWidth: 821,\n    azAvgWidth: 854.3953488372093,\n    unitsPerEm: 2048\n};\nexports.DEFAULT_SERIF_FONT = DEFAULT_SERIF_FONT;\nconst DEFAULT_SANS_SERIF_FONT = {\n    name: \"Arial\",\n    xAvgCharWidth: 904,\n    azAvgWidth: 934.5116279069767,\n    unitsPerEm: 2048\n};\nexports.DEFAULT_SANS_SERIF_FONT = DEFAULT_SANS_SERIF_FONT;\nconst STATIC_STATUS_PAGES = [\n    \"/500\"\n];\nexports.STATIC_STATUS_PAGES = STATIC_STATUS_PAGES;\nconst TRACE_OUTPUT_VERSION = 1;\nexports.TRACE_OUTPUT_VERSION = TRACE_OUTPUT_VERSION;\nconst TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000;\nexports.TURBO_TRACE_DEFAULT_MEMORY_LIMIT = TURBO_TRACE_DEFAULT_MEMORY_LIMIT;\nconst RSC_MODULE_TYPES = {\n    client: \"client\",\n    server: \"server\"\n};\nexports.RSC_MODULE_TYPES = RSC_MODULE_TYPES;\nconst EDGE_UNSUPPORTED_NODE_APIS = [\n    \"clearImmediate\",\n    \"setImmediate\",\n    \"BroadcastChannel\",\n    \"Buffer\",\n    \"ByteLengthQueuingStrategy\",\n    \"CompressionStream\",\n    \"CountQueuingStrategy\",\n    \"DecompressionStream\",\n    \"DomException\",\n    \"MessageChannel\",\n    \"MessageEvent\",\n    \"MessagePort\",\n    \"ReadableByteStreamController\",\n    \"ReadableStreamBYOBRequest\",\n    \"ReadableStreamDefaultController\",\n    \"TextDecoderStream\",\n    \"TextEncoderStream\",\n    \"TransformStreamDefaultController\",\n    \"WritableStreamDefaultController\"\n];\nexports.EDGE_UNSUPPORTED_NODE_APIS = EDGE_UNSUPPORTED_NODE_APIS;\nconst SYSTEM_ENTRYPOINTS = new Set([\n    CLIENT_STATIC_FILES_RUNTIME_MAIN,\n    CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n    CLIENT_STATIC_FILES_RUNTIME_AMP,\n    CLIENT_STATIC_FILES_RUNTIME_MAIN_APP\n]);\nexports.SYSTEM_ENTRYPOINTS = SYSTEM_ENTRYPOINTS;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=constants.js.map\nvar _c;\n$RefreshReg$(_c, \"CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/constants.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ App; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction App(param) {\n    let { Component , pageProps , err  } = param;\n    // Workaround for https://github.com/vercel/next.js/issues/8592\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n        ...pageProps,\n        err: err\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\pc\\\\Desktop\\\\mycodes\\\\Code\\\\next-js-sentry-test\\\\pages\\\\_app.js\",\n        lineNumber: 3,\n        columnNumber: 10\n    }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZSxTQUFTQSxJQUFJLEtBQTZCLEVBQUU7UUFBL0IsRUFBRUMsVUFBUyxFQUFFQyxVQUFTLEVBQUVDLElBQUcsRUFBRSxHQUE3QjtJQUMxQiwrREFBK0Q7SUFDL0QscUJBQU8sOERBQUNGO1FBQVcsR0FBR0MsU0FBUztRQUFFQyxLQUFLQTs7Ozs7O0FBQ3hDLENBQUM7S0FIdUJIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL19hcHAuanM/ZTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcywgZXJyIH0pIHtcclxuICAvLyBXb3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanMvaXNzdWVzLzg1OTJcclxuICByZXR1cm4gPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSBlcnI9e2Vycn0gLz5cclxufVxyXG4iXSwibmFtZXMiOlsiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwiZXJyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/router.js":
/*!*************************************!*\
  !*** ./node_modules/next/router.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/router */ \"./node_modules/next/dist/client/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsNkdBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3JvdXRlci5qcz8xYmI2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9yb3V0ZXInKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/router.js\n"));

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLGdJQUF5RDtBQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/YjMxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-is/index.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-runtime.development.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-runtime.development.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-runtime.js":
/*!*******************************************!*\
  !*** ./node_modules/react/jsx-runtime.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLCtJQUFrRTtBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanM/MzRkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-runtime.js\n"));

/***/ }),

/***/ "./node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parse\": function() { return /* binding */ parse; }\n/* harmony export */ });\nvar UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RhY2t0cmFjZS1wYXJzZXIvZGlzdC9zdGFjay10cmFjZS1wYXJzZXIuZXNtLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsK0RBQStEOztBQUUvRCwyREFBMkQ7O0FBRTNEOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEI7O0FBRTVCLDRCQUE0Qjs7QUFFNUIsNEJBQTRCO0FBQzVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdGFja3RyYWNlLXBhcnNlci9kaXN0L3N0YWNrLXRyYWNlLXBhcnNlci5lc20uanM/NmE0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgVU5LTk9XTl9GVU5DVElPTiA9ICc8dW5rbm93bj4nO1xuLyoqXG4gKiBUaGlzIHBhcnNlcyB0aGUgZGlmZmVyZW50IHN0YWNrIHRyYWNlcyBhbmQgcHV0cyB0aGVtIGludG8gb25lIGZvcm1hdFxuICogVGhpcyBib3Jyb3dzIGhlYXZpbHkgZnJvbSBUcmFjZUtpdCAoaHR0cHM6Ly9naXRodWIuY29tL2Nzbm92ZXIvVHJhY2VLaXQpXG4gKi9cblxuZnVuY3Rpb24gcGFyc2Uoc3RhY2tTdHJpbmcpIHtcbiAgdmFyIGxpbmVzID0gc3RhY2tTdHJpbmcuc3BsaXQoJ1xcbicpO1xuICByZXR1cm4gbGluZXMucmVkdWNlKGZ1bmN0aW9uIChzdGFjaywgbGluZSkge1xuICAgIHZhciBwYXJzZVJlc3VsdCA9IHBhcnNlQ2hyb21lKGxpbmUpIHx8IHBhcnNlV2luanMobGluZSkgfHwgcGFyc2VHZWNrbyhsaW5lKSB8fCBwYXJzZU5vZGUobGluZSkgfHwgcGFyc2VKU0MobGluZSk7XG5cbiAgICBpZiAocGFyc2VSZXN1bHQpIHtcbiAgICAgIHN0YWNrLnB1c2gocGFyc2VSZXN1bHQpO1xuICAgIH1cblxuICAgIHJldHVybiBzdGFjaztcbiAgfSwgW10pO1xufVxudmFyIGNocm9tZVJlID0gL15cXHMqYXQgKC4qPykgP1xcKCgoPzpmaWxlfGh0dHBzP3xibG9ifGNocm9tZS1leHRlbnNpb258bmF0aXZlfGV2YWx8d2VicGFja3w8YW5vbnltb3VzPnxcXC98W2Etel06XFxcXHxcXFxcXFxcXCkuKj8pKD86OihcXGQrKSk/KD86OihcXGQrKSk/XFwpP1xccyokL2k7XG52YXIgY2hyb21lRXZhbFJlID0gL1xcKChcXFMqKSg/OjooXFxkKykpKD86OihcXGQrKSlcXCkvO1xuXG5mdW5jdGlvbiBwYXJzZUNocm9tZShsaW5lKSB7XG4gIHZhciBwYXJ0cyA9IGNocm9tZVJlLmV4ZWMobGluZSk7XG5cbiAgaWYgKCFwYXJ0cykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIGlzTmF0aXZlID0gcGFydHNbMl0gJiYgcGFydHNbMl0uaW5kZXhPZignbmF0aXZlJykgPT09IDA7IC8vIHN0YXJ0IG9mIGxpbmVcblxuICB2YXIgaXNFdmFsID0gcGFydHNbMl0gJiYgcGFydHNbMl0uaW5kZXhPZignZXZhbCcpID09PSAwOyAvLyBzdGFydCBvZiBsaW5lXG5cbiAgdmFyIHN1Ym1hdGNoID0gY2hyb21lRXZhbFJlLmV4ZWMocGFydHNbMl0pO1xuXG4gIGlmIChpc0V2YWwgJiYgc3VibWF0Y2ggIT0gbnVsbCkge1xuICAgIC8vIHRocm93IG91dCBldmFsIGxpbmUvY29sdW1uIGFuZCB1c2UgdG9wLW1vc3QgbGluZS9jb2x1bW4gbnVtYmVyXG4gICAgcGFydHNbMl0gPSBzdWJtYXRjaFsxXTsgLy8gdXJsXG5cbiAgICBwYXJ0c1szXSA9IHN1Ym1hdGNoWzJdOyAvLyBsaW5lXG5cbiAgICBwYXJ0c1s0XSA9IHN1Ym1hdGNoWzNdOyAvLyBjb2x1bW5cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZmlsZTogIWlzTmF0aXZlID8gcGFydHNbMl0gOiBudWxsLFxuICAgIG1ldGhvZE5hbWU6IHBhcnRzWzFdIHx8IFVOS05PV05fRlVOQ1RJT04sXG4gICAgYXJndW1lbnRzOiBpc05hdGl2ZSA/IFtwYXJ0c1syXV0gOiBbXSxcbiAgICBsaW5lTnVtYmVyOiBwYXJ0c1szXSA/ICtwYXJ0c1szXSA6IG51bGwsXG4gICAgY29sdW1uOiBwYXJ0c1s0XSA/ICtwYXJ0c1s0XSA6IG51bGxcbiAgfTtcbn1cblxudmFyIHdpbmpzUmUgPSAvXlxccyphdCAoPzooKD86XFxbb2JqZWN0IG9iamVjdFxcXSk/LispICk/XFwoPygoPzpmaWxlfG1zLWFwcHh8aHR0cHM/fHdlYnBhY2t8YmxvYik6Lio/KTooXFxkKykoPzo6KFxcZCspKT9cXCk/XFxzKiQvaTtcblxuZnVuY3Rpb24gcGFyc2VXaW5qcyhsaW5lKSB7XG4gIHZhciBwYXJ0cyA9IHdpbmpzUmUuZXhlYyhsaW5lKTtcblxuICBpZiAoIXBhcnRzKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGZpbGU6IHBhcnRzWzJdLFxuICAgIG1ldGhvZE5hbWU6IHBhcnRzWzFdIHx8IFVOS05PV05fRlVOQ1RJT04sXG4gICAgYXJndW1lbnRzOiBbXSxcbiAgICBsaW5lTnVtYmVyOiArcGFydHNbM10sXG4gICAgY29sdW1uOiBwYXJ0c1s0XSA/ICtwYXJ0c1s0XSA6IG51bGxcbiAgfTtcbn1cblxudmFyIGdlY2tvUmUgPSAvXlxccyooLio/KSg/OlxcKCguKj8pXFwpKT8oPzpefEApKCg/OmZpbGV8aHR0cHM/fGJsb2J8Y2hyb21lfHdlYnBhY2t8cmVzb3VyY2V8XFxbbmF0aXZlKS4qP3xbXkBdKmJ1bmRsZSkoPzo6KFxcZCspKT8oPzo6KFxcZCspKT9cXHMqJC9pO1xudmFyIGdlY2tvRXZhbFJlID0gLyhcXFMrKSBsaW5lIChcXGQrKSg/OiA+IGV2YWwgbGluZSBcXGQrKSogPiBldmFsL2k7XG5cbmZ1bmN0aW9uIHBhcnNlR2Vja28obGluZSkge1xuICB2YXIgcGFydHMgPSBnZWNrb1JlLmV4ZWMobGluZSk7XG5cbiAgaWYgKCFwYXJ0cykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIGlzRXZhbCA9IHBhcnRzWzNdICYmIHBhcnRzWzNdLmluZGV4T2YoJyA+IGV2YWwnKSA+IC0xO1xuICB2YXIgc3VibWF0Y2ggPSBnZWNrb0V2YWxSZS5leGVjKHBhcnRzWzNdKTtcblxuICBpZiAoaXNFdmFsICYmIHN1Ym1hdGNoICE9IG51bGwpIHtcbiAgICAvLyB0aHJvdyBvdXQgZXZhbCBsaW5lL2NvbHVtbiBhbmQgdXNlIHRvcC1tb3N0IGxpbmUgbnVtYmVyXG4gICAgcGFydHNbM10gPSBzdWJtYXRjaFsxXTtcbiAgICBwYXJ0c1s0XSA9IHN1Ym1hdGNoWzJdO1xuICAgIHBhcnRzWzVdID0gbnVsbDsgLy8gbm8gY29sdW1uIHdoZW4gZXZhbFxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBmaWxlOiBwYXJ0c1szXSxcbiAgICBtZXRob2ROYW1lOiBwYXJ0c1sxXSB8fCBVTktOT1dOX0ZVTkNUSU9OLFxuICAgIGFyZ3VtZW50czogcGFydHNbMl0gPyBwYXJ0c1syXS5zcGxpdCgnLCcpIDogW10sXG4gICAgbGluZU51bWJlcjogcGFydHNbNF0gPyArcGFydHNbNF0gOiBudWxsLFxuICAgIGNvbHVtbjogcGFydHNbNV0gPyArcGFydHNbNV0gOiBudWxsXG4gIH07XG59XG5cbnZhciBqYXZhU2NyaXB0Q29yZVJlID0gL15cXHMqKD86KFteQF0qKSg/OlxcKCguKj8pXFwpKT9AKT8oXFxTLio/KTooXFxkKykoPzo6KFxcZCspKT9cXHMqJC9pO1xuXG5mdW5jdGlvbiBwYXJzZUpTQyhsaW5lKSB7XG4gIHZhciBwYXJ0cyA9IGphdmFTY3JpcHRDb3JlUmUuZXhlYyhsaW5lKTtcblxuICBpZiAoIXBhcnRzKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGZpbGU6IHBhcnRzWzNdLFxuICAgIG1ldGhvZE5hbWU6IHBhcnRzWzFdIHx8IFVOS05PV05fRlVOQ1RJT04sXG4gICAgYXJndW1lbnRzOiBbXSxcbiAgICBsaW5lTnVtYmVyOiArcGFydHNbNF0sXG4gICAgY29sdW1uOiBwYXJ0c1s1XSA/ICtwYXJ0c1s1XSA6IG51bGxcbiAgfTtcbn1cblxudmFyIG5vZGVSZSA9IC9eXFxzKmF0ICg/OigoPzpcXFtvYmplY3Qgb2JqZWN0XFxdKT9bXlxcXFwvXSsoPzogXFxbYXMgXFxTK1xcXSk/KSApP1xcKD8oLio/KTooXFxkKykoPzo6KFxcZCspKT9cXCk/XFxzKiQvaTtcblxuZnVuY3Rpb24gcGFyc2VOb2RlKGxpbmUpIHtcbiAgdmFyIHBhcnRzID0gbm9kZVJlLmV4ZWMobGluZSk7XG5cbiAgaWYgKCFwYXJ0cykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBmaWxlOiBwYXJ0c1syXSxcbiAgICBtZXRob2ROYW1lOiBwYXJ0c1sxXSB8fCBVTktOT1dOX0ZVTkNUSU9OLFxuICAgIGFyZ3VtZW50czogW10sXG4gICAgbGluZU51bWJlcjogK3BhcnRzWzNdLFxuICAgIGNvbHVtbjogcGFydHNbNF0gPyArcGFydHNbNF0gOiBudWxsXG4gIH07XG59XG5cbmV4cG9ydCB7IHBhcnNlIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/debug-build.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/debug-build.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEBUG_BUILD\": function() { return /* binding */ DEBUG_BUILD; }\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9kZWJ1Zy1idWlsZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUV6RDtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9kZWJ1Zy1idWlsZC5qcz8xMDViIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBzZXJ2ZXMgYXMgYSBidWlsZCB0aW1lIGZsYWcgdGhhdCB3aWxsIGJlIHRydWUgYnkgZGVmYXVsdCwgYnV0IGZhbHNlIGluIG5vbi1kZWJ1ZyBidWlsZHMgb3IgaWYgdXNlcnMgcmVwbGFjZSBgX19TRU5UUllfREVCVUdfX2AgaW4gdGhlaXIgZ2VuZXJhdGVkIGNvZGUuXG4gKlxuICogQVRURU5USU9OOiBUaGlzIGNvbnN0YW50IG11c3QgbmV2ZXIgY3Jvc3MgcGFja2FnZSBib3VuZGFyaWVzIChpLmUuIGJlIGV4cG9ydGVkKSB0byBndWFyYW50ZWUgdGhhdCBpdCBjYW4gYmUgdXNlZCBmb3IgdHJlZSBzaGFraW5nLlxuICovXG5jb25zdCBERUJVR19CVUlMRCA9ICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXyk7XG5cbmV4cG9ydCB7IERFQlVHX0JVSUxEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy1idWlsZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/debug-build.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/getNativeImplementation.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/getNativeImplementation.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clearCachedImplementation\": function() { return /* binding */ clearCachedImplementation; },\n/* harmony export */   \"fetch\": function() { return /* binding */ fetch; },\n/* harmony export */   \"getNativeImplementation\": function() { return /* binding */ getNativeImplementation; },\n/* harmony export */   \"setTimeout\": function() { return /* binding */ setTimeout; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry-internal/browser-utils/esm/debug-build.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n\n\n\n\n/**\n * We generally want to use window.fetch / window.setTimeout.\n * However, in some cases this may be wrapped (e.g. by Zone.js for Angular),\n * so we try to get an unpatched version of this from a sandboxed iframe.\n */\n\nconst cachedImplementations = {};\n\n/**\n * Get the native implementation of a browser function.\n *\n * This can be used to ensure we get an unwrapped version of a function, in cases where a wrapped function can lead to problems.\n *\n * The following methods can be retrieved:\n * - `setTimeout`: This can be wrapped by e.g. Angular, causing change detection to be triggered.\n * - `fetch`: This can be wrapped by e.g. ad-blockers, causing an infinite loop when a request is blocked.\n */\nfunction getNativeImplementation(\n  name,\n) {\n  const cached = cachedImplementations[name];\n  if (cached) {\n    return cached;\n  }\n\n  let impl = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW[name] ;\n\n  // Fast path to avoid DOM I/O\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isNativeFunction)(impl)) {\n    return (cachedImplementations[name] = impl.bind(_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW) );\n  }\n\n  const document = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow[name]) {\n        impl = contentWindow[name] ;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      // Could not create sandbox iframe, just use window.xxx\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`Could not create sandbox iframe for ${name} check, bailing to window.${name}: `, e);\n    }\n  }\n\n  // Sanity check: This _should_ not happen, but if it does, we just skip caching...\n  // This can happen e.g. in tests where fetch may not be available in the env, or similar.\n  if (!impl) {\n    return impl;\n  }\n\n  return (cachedImplementations[name] = impl.bind(_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW) );\n}\n\n/** Clear a cached implementation. */\nfunction clearCachedImplementation(name) {\n  cachedImplementations[name] = undefined;\n}\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction fetch(...rest) {\n  return getNativeImplementation('fetch')(...rest);\n}\n\n/**\n * Get an unwrapped `setTimeout` method.\n * This ensures that even if e.g. Angular wraps `setTimeout`, we get the native implementation,\n * avoiding triggering change detection.\n */\nfunction setTimeout(...rest) {\n  return getNativeImplementation('setTimeout')(...rest);\n}\n\n\n//# sourceMappingURL=getNativeImplementation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9nZXROYXRpdmVJbXBsZW1lbnRhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXlEO0FBQ1Y7QUFDWDs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLDZDQUFNOztBQUVuQjtBQUNBLE1BQU0sK0RBQWdCO0FBQ3RCLG9EQUFvRCw2Q0FBTTtBQUMxRDs7QUFFQSxtQkFBbUIsc0RBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU0sd0RBQVcsSUFBSSxzREFBVyx3Q0FBd0MsTUFBTSwyQkFBMkIsS0FBSztBQUM5RztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0RBQWtELDZDQUFNO0FBQ3hEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixLQUFLO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUY7QUFDakYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vZ2V0TmF0aXZlSW1wbGVtZW50YXRpb24uanM/ODMwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc05hdGl2ZUZ1bmN0aW9uLCBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuL3R5cGVzLmpzJztcblxuLyoqXG4gKiBXZSBnZW5lcmFsbHkgd2FudCB0byB1c2Ugd2luZG93LmZldGNoIC8gd2luZG93LnNldFRpbWVvdXQuXG4gKiBIb3dldmVyLCBpbiBzb21lIGNhc2VzIHRoaXMgbWF5IGJlIHdyYXBwZWQgKGUuZy4gYnkgWm9uZS5qcyBmb3IgQW5ndWxhciksXG4gKiBzbyB3ZSB0cnkgdG8gZ2V0IGFuIHVucGF0Y2hlZCB2ZXJzaW9uIG9mIHRoaXMgZnJvbSBhIHNhbmRib3hlZCBpZnJhbWUuXG4gKi9cblxuY29uc3QgY2FjaGVkSW1wbGVtZW50YXRpb25zID0ge307XG5cbi8qKlxuICogR2V0IHRoZSBuYXRpdmUgaW1wbGVtZW50YXRpb24gb2YgYSBicm93c2VyIGZ1bmN0aW9uLlxuICpcbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gZW5zdXJlIHdlIGdldCBhbiB1bndyYXBwZWQgdmVyc2lvbiBvZiBhIGZ1bmN0aW9uLCBpbiBjYXNlcyB3aGVyZSBhIHdyYXBwZWQgZnVuY3Rpb24gY2FuIGxlYWQgdG8gcHJvYmxlbXMuXG4gKlxuICogVGhlIGZvbGxvd2luZyBtZXRob2RzIGNhbiBiZSByZXRyaWV2ZWQ6XG4gKiAtIGBzZXRUaW1lb3V0YDogVGhpcyBjYW4gYmUgd3JhcHBlZCBieSBlLmcuIEFuZ3VsYXIsIGNhdXNpbmcgY2hhbmdlIGRldGVjdGlvbiB0byBiZSB0cmlnZ2VyZWQuXG4gKiAtIGBmZXRjaGA6IFRoaXMgY2FuIGJlIHdyYXBwZWQgYnkgZS5nLiBhZC1ibG9ja2VycywgY2F1c2luZyBhbiBpbmZpbml0ZSBsb29wIHdoZW4gYSByZXF1ZXN0IGlzIGJsb2NrZWQuXG4gKi9cbmZ1bmN0aW9uIGdldE5hdGl2ZUltcGxlbWVudGF0aW9uKFxuICBuYW1lLFxuKSB7XG4gIGNvbnN0IGNhY2hlZCA9IGNhY2hlZEltcGxlbWVudGF0aW9uc1tuYW1lXTtcbiAgaWYgKGNhY2hlZCkge1xuICAgIHJldHVybiBjYWNoZWQ7XG4gIH1cblxuICBsZXQgaW1wbCA9IFdJTkRPV1tuYW1lXSA7XG5cbiAgLy8gRmFzdCBwYXRoIHRvIGF2b2lkIERPTSBJL09cbiAgaWYgKGlzTmF0aXZlRnVuY3Rpb24oaW1wbCkpIHtcbiAgICByZXR1cm4gKGNhY2hlZEltcGxlbWVudGF0aW9uc1tuYW1lXSA9IGltcGwuYmluZChXSU5ET1cpICk7XG4gIH1cblxuICBjb25zdCBkb2N1bWVudCA9IFdJTkRPVy5kb2N1bWVudDtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGlmIChkb2N1bWVudCAmJiB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBzYW5kYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgICBzYW5kYm94LmhpZGRlbiA9IHRydWU7XG4gICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNhbmRib3gpO1xuICAgICAgY29uc3QgY29udGVudFdpbmRvdyA9IHNhbmRib3guY29udGVudFdpbmRvdztcbiAgICAgIGlmIChjb250ZW50V2luZG93ICYmIGNvbnRlbnRXaW5kb3dbbmFtZV0pIHtcbiAgICAgICAgaW1wbCA9IGNvbnRlbnRXaW5kb3dbbmFtZV0gO1xuICAgICAgfVxuICAgICAgZG9jdW1lbnQuaGVhZC5yZW1vdmVDaGlsZChzYW5kYm94KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvLyBDb3VsZCBub3QgY3JlYXRlIHNhbmRib3ggaWZyYW1lLCBqdXN0IHVzZSB3aW5kb3cueHh4XG4gICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIud2FybihgQ291bGQgbm90IGNyZWF0ZSBzYW5kYm94IGlmcmFtZSBmb3IgJHtuYW1lfSBjaGVjaywgYmFpbGluZyB0byB3aW5kb3cuJHtuYW1lfTogYCwgZSk7XG4gICAgfVxuICB9XG5cbiAgLy8gU2FuaXR5IGNoZWNrOiBUaGlzIF9zaG91bGRfIG5vdCBoYXBwZW4sIGJ1dCBpZiBpdCBkb2VzLCB3ZSBqdXN0IHNraXAgY2FjaGluZy4uLlxuICAvLyBUaGlzIGNhbiBoYXBwZW4gZS5nLiBpbiB0ZXN0cyB3aGVyZSBmZXRjaCBtYXkgbm90IGJlIGF2YWlsYWJsZSBpbiB0aGUgZW52LCBvciBzaW1pbGFyLlxuICBpZiAoIWltcGwpIHtcbiAgICByZXR1cm4gaW1wbDtcbiAgfVxuXG4gIHJldHVybiAoY2FjaGVkSW1wbGVtZW50YXRpb25zW25hbWVdID0gaW1wbC5iaW5kKFdJTkRPVykgKTtcbn1cblxuLyoqIENsZWFyIGEgY2FjaGVkIGltcGxlbWVudGF0aW9uLiAqL1xuZnVuY3Rpb24gY2xlYXJDYWNoZWRJbXBsZW1lbnRhdGlvbihuYW1lKSB7XG4gIGNhY2hlZEltcGxlbWVudGF0aW9uc1tuYW1lXSA9IHVuZGVmaW5lZDtcbn1cblxuLyoqXG4gKiBBIHNwZWNpYWwgdXNlY2FzZSBmb3IgaW5jb3JyZWN0bHkgd3JhcHBlZCBGZXRjaCBBUElzIGluIGNvbmp1bmN0aW9uIHdpdGggYWQtYmxvY2tlcnMuXG4gKiBXaGVuZXZlciBzb21lb25lIHdyYXBzIHRoZSBGZXRjaCBBUEkgYW5kIHJldHVybnMgdGhlIHdyb25nIHByb21pc2UgY2hhaW4sXG4gKiB0aGlzIGNoYWluIGJlY29tZXMgb3JwaGFuZWQgYW5kIHRoZXJlIGlzIG5vIHBvc3NpYmxlIHdheSB0byBjYXB0dXJlIGl0J3MgcmVqZWN0aW9uc1xuICogb3RoZXIgdGhhbiBhbGxvd2luZyBpdCBidWJibGUgdXAgdG8gdGhpcyB2ZXJ5IGhhbmRsZXIuIGVnLlxuICpcbiAqIGNvbnN0IGYgPSB3aW5kb3cuZmV0Y2g7XG4gKiB3aW5kb3cuZmV0Y2ggPSBmdW5jdGlvbiAoKSB7XG4gKiAgIGNvbnN0IHAgPSBmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gKlxuICogICBwLnRoZW4oZnVuY3Rpb24oKSB7XG4gKiAgICAgY29uc29sZS5sb2coJ2hpLicpO1xuICogICB9KTtcbiAqXG4gKiAgIHJldHVybiBwO1xuICogfVxuICpcbiAqIGBwLnRoZW4oZnVuY3Rpb24gKCkgeyAuLi4gfSlgIGlzIHByb2R1Y2luZyBhIGNvbXBsZXRlbHkgc2VwYXJhdGUgcHJvbWlzZSBjaGFpbixcbiAqIGhvd2V2ZXIsIHdoYXQncyByZXR1cm5lZCBpcyBgcGAgLSB0aGUgcmVzdWx0IG9mIG9yaWdpbmFsIGBmZXRjaGAgY2FsbC5cbiAqXG4gKiBUaGlzIG1lYW4sIHRoYXQgd2hlbmV2ZXIgd2UgdXNlIHRoZSBGZXRjaCBBUEkgdG8gc2VuZCBvdXIgb3duIHJlcXVlc3RzLCBfYW5kX1xuICogc29tZSBhZC1ibG9ja2VyIGJsb2NrcyBpdCwgdGhpcyBvcnBoYW5lZCBjaGFpbiB3aWxsIF9hbHdheXNfIHJlamVjdCxcbiAqIGVmZmVjdGl2ZWx5IGNhdXNpbmcgYW5vdGhlciBldmVudCB0byBiZSBjYXB0dXJlZC5cbiAqIFRoaXMgbWFrZXMgYSB3aG9sZSBwcm9jZXNzIGJlY29tZSBhbiBpbmZpbml0ZSBsb29wLCB3aGljaCB3ZSBuZWVkIHRvIHNvbWVob3dcbiAqIGRlYWwgd2l0aCwgYW5kIGJyZWFrIGl0IGluIG9uZSB3YXkgb3IgYW5vdGhlci5cbiAqXG4gKiBUbyBkZWFsIHdpdGggdGhpcyBpc3N1ZSwgd2UgYXJlIG1ha2luZyBzdXJlIHRoYXQgd2UgX2Fsd2F5c18gdXNlIHRoZSByZWFsXG4gKiBicm93c2VyIEZldGNoIEFQSSwgaW5zdGVhZCBvZiByZWx5aW5nIG9uIHdoYXQgYHdpbmRvdy5mZXRjaGAgZXhwb3Nlcy5cbiAqIFRoZSBvbmx5IGRvd25zaWRlIHRvIHRoaXMgd291bGQgYmUgbWlzc2luZyBvdXIgb3duIHJlcXVlc3RzIGFzIGJyZWFkY3J1bWJzLFxuICogYnV0IGJlY2F1c2Ugd2UgYXJlIGFscmVhZHkgbm90IGRvaW5nIHRoaXMsIGl0IHNob3VsZCBiZSBqdXN0IGZpbmUuXG4gKlxuICogUG9zc2libGUgZmFpbGVkIGZldGNoIGVycm9yIG1lc3NhZ2VzIHBlci1icm93c2VyOlxuICpcbiAqIENocm9tZTogIEZhaWxlZCB0byBmZXRjaFxuICogRWRnZTogICAgRmFpbGVkIHRvIEZldGNoXG4gKiBGaXJlZm94OiBOZXR3b3JrRXJyb3Igd2hlbiBhdHRlbXB0aW5nIHRvIGZldGNoIHJlc291cmNlXG4gKiBTYWZhcmk6ICByZXNvdXJjZSBibG9ja2VkIGJ5IGNvbnRlbnQgYmxvY2tlclxuICovXG5mdW5jdGlvbiBmZXRjaCguLi5yZXN0KSB7XG4gIHJldHVybiBnZXROYXRpdmVJbXBsZW1lbnRhdGlvbignZmV0Y2gnKSguLi5yZXN0KTtcbn1cblxuLyoqXG4gKiBHZXQgYW4gdW53cmFwcGVkIGBzZXRUaW1lb3V0YCBtZXRob2QuXG4gKiBUaGlzIGVuc3VyZXMgdGhhdCBldmVuIGlmIGUuZy4gQW5ndWxhciB3cmFwcyBgc2V0VGltZW91dGAsIHdlIGdldCB0aGUgbmF0aXZlIGltcGxlbWVudGF0aW9uLFxuICogYXZvaWRpbmcgdHJpZ2dlcmluZyBjaGFuZ2UgZGV0ZWN0aW9uLlxuICovXG5mdW5jdGlvbiBzZXRUaW1lb3V0KC4uLnJlc3QpIHtcbiAgcmV0dXJuIGdldE5hdGl2ZUltcGxlbWVudGF0aW9uKCdzZXRUaW1lb3V0JykoLi4ucmVzdCk7XG59XG5cbmV4cG9ydCB7IGNsZWFyQ2FjaGVkSW1wbGVtZW50YXRpb24sIGZldGNoLCBnZXROYXRpdmVJbXBsZW1lbnRhdGlvbiwgc2V0VGltZW91dCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TmF0aXZlSW1wbGVtZW50YXRpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/getNativeImplementation.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SENTRY_XHR_DATA_KEY\": function() { return /* reexport safe */ _instrument_xhr_js__WEBPACK_IMPORTED_MODULE_5__.SENTRY_XHR_DATA_KEY; },\n/* harmony export */   \"addClickKeypressInstrumentationHandler\": function() { return /* reexport safe */ _instrument_dom_js__WEBPACK_IMPORTED_MODULE_2__.addClickKeypressInstrumentationHandler; },\n/* harmony export */   \"addClsInstrumentationHandler\": function() { return /* reexport safe */ _metrics_instrument_js__WEBPACK_IMPORTED_MODULE_0__.addClsInstrumentationHandler; },\n/* harmony export */   \"addFidInstrumentationHandler\": function() { return /* reexport safe */ _metrics_instrument_js__WEBPACK_IMPORTED_MODULE_0__.addFidInstrumentationHandler; },\n/* harmony export */   \"addHistoryInstrumentationHandler\": function() { return /* reexport safe */ _instrument_history_js__WEBPACK_IMPORTED_MODULE_3__.addHistoryInstrumentationHandler; },\n/* harmony export */   \"addLcpInstrumentationHandler\": function() { return /* reexport safe */ _metrics_instrument_js__WEBPACK_IMPORTED_MODULE_0__.addLcpInstrumentationHandler; },\n/* harmony export */   \"addPerformanceEntries\": function() { return /* reexport safe */ _metrics_browserMetrics_js__WEBPACK_IMPORTED_MODULE_1__.addPerformanceEntries; },\n/* harmony export */   \"addPerformanceInstrumentationHandler\": function() { return /* reexport safe */ _metrics_instrument_js__WEBPACK_IMPORTED_MODULE_0__.addPerformanceInstrumentationHandler; },\n/* harmony export */   \"addTtfbInstrumentationHandler\": function() { return /* reexport safe */ _metrics_instrument_js__WEBPACK_IMPORTED_MODULE_0__.addTtfbInstrumentationHandler; },\n/* harmony export */   \"addXhrInstrumentationHandler\": function() { return /* reexport safe */ _instrument_xhr_js__WEBPACK_IMPORTED_MODULE_5__.addXhrInstrumentationHandler; },\n/* harmony export */   \"clearCachedImplementation\": function() { return /* reexport safe */ _getNativeImplementation_js__WEBPACK_IMPORTED_MODULE_4__.clearCachedImplementation; },\n/* harmony export */   \"fetch\": function() { return /* reexport safe */ _getNativeImplementation_js__WEBPACK_IMPORTED_MODULE_4__.fetch; },\n/* harmony export */   \"getNativeImplementation\": function() { return /* reexport safe */ _getNativeImplementation_js__WEBPACK_IMPORTED_MODULE_4__.getNativeImplementation; },\n/* harmony export */   \"setTimeout\": function() { return /* reexport safe */ _getNativeImplementation_js__WEBPACK_IMPORTED_MODULE_4__.setTimeout; },\n/* harmony export */   \"startTrackingINP\": function() { return /* reexport safe */ _metrics_inp_js__WEBPACK_IMPORTED_MODULE_6__.startTrackingINP; },\n/* harmony export */   \"startTrackingInteractions\": function() { return /* reexport safe */ _metrics_browserMetrics_js__WEBPACK_IMPORTED_MODULE_1__.startTrackingInteractions; },\n/* harmony export */   \"startTrackingLongTasks\": function() { return /* reexport safe */ _metrics_browserMetrics_js__WEBPACK_IMPORTED_MODULE_1__.startTrackingLongTasks; },\n/* harmony export */   \"startTrackingWebVitals\": function() { return /* reexport safe */ _metrics_browserMetrics_js__WEBPACK_IMPORTED_MODULE_1__.startTrackingWebVitals; }\n/* harmony export */ });\n/* harmony import */ var _metrics_instrument_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./metrics/instrument.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/instrument.js\");\n/* harmony import */ var _metrics_browserMetrics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./metrics/browserMetrics.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/browserMetrics.js\");\n/* harmony import */ var _instrument_dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instrument/dom.js */ \"./node_modules/@sentry-internal/browser-utils/esm/instrument/dom.js\");\n/* harmony import */ var _instrument_history_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instrument/history.js */ \"./node_modules/@sentry-internal/browser-utils/esm/instrument/history.js\");\n/* harmony import */ var _getNativeImplementation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNativeImplementation.js */ \"./node_modules/@sentry-internal/browser-utils/esm/getNativeImplementation.js\");\n/* harmony import */ var _instrument_xhr_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./instrument/xhr.js */ \"./node_modules/@sentry-internal/browser-utils/esm/instrument/xhr.js\");\n/* harmony import */ var _metrics_inp_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./metrics/inp.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/inp.js\");\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdNO0FBQ3pEO0FBQ2xFO0FBQ0Y7QUFDMEM7QUFDN0I7QUFDcEM7QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vaW5kZXguanM/MmFiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBhZGRDbHNJbnN0cnVtZW50YXRpb25IYW5kbGVyLCBhZGRGaWRJbnN0cnVtZW50YXRpb25IYW5kbGVyLCBhZGRMY3BJbnN0cnVtZW50YXRpb25IYW5kbGVyLCBhZGRQZXJmb3JtYW5jZUluc3RydW1lbnRhdGlvbkhhbmRsZXIsIGFkZFR0ZmJJbnN0cnVtZW50YXRpb25IYW5kbGVyIH0gZnJvbSAnLi9tZXRyaWNzL2luc3RydW1lbnQuanMnO1xuZXhwb3J0IHsgYWRkUGVyZm9ybWFuY2VFbnRyaWVzLCBzdGFydFRyYWNraW5nSW50ZXJhY3Rpb25zLCBzdGFydFRyYWNraW5nTG9uZ1Rhc2tzLCBzdGFydFRyYWNraW5nV2ViVml0YWxzIH0gZnJvbSAnLi9tZXRyaWNzL2Jyb3dzZXJNZXRyaWNzLmpzJztcbmV4cG9ydCB7IGFkZENsaWNrS2V5cHJlc3NJbnN0cnVtZW50YXRpb25IYW5kbGVyIH0gZnJvbSAnLi9pbnN0cnVtZW50L2RvbS5qcyc7XG5leHBvcnQgeyBhZGRIaXN0b3J5SW5zdHJ1bWVudGF0aW9uSGFuZGxlciB9IGZyb20gJy4vaW5zdHJ1bWVudC9oaXN0b3J5LmpzJztcbmV4cG9ydCB7IGNsZWFyQ2FjaGVkSW1wbGVtZW50YXRpb24sIGZldGNoLCBnZXROYXRpdmVJbXBsZW1lbnRhdGlvbiwgc2V0VGltZW91dCB9IGZyb20gJy4vZ2V0TmF0aXZlSW1wbGVtZW50YXRpb24uanMnO1xuZXhwb3J0IHsgU0VOVFJZX1hIUl9EQVRBX0tFWSwgYWRkWGhySW5zdHJ1bWVudGF0aW9uSGFuZGxlciB9IGZyb20gJy4vaW5zdHJ1bWVudC94aHIuanMnO1xuZXhwb3J0IHsgc3RhcnRUcmFja2luZ0lOUCB9IGZyb20gJy4vbWV0cmljcy9pbnAuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/instrument/dom.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/instrument/dom.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addClickKeypressInstrumentationHandler\": function() { return /* binding */ addClickKeypressInstrumentationHandler; },\n/* harmony export */   \"instrumentDOM\": function() { return /* binding */ instrumentDOM; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n\n\n\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID;\nlet lastCapturedEventType;\nlet lastCapturedEventTargetId;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addClickKeypressInstrumentationHandler(handler) {\n  const type = 'dom';\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nfunction instrumentDOM() {\n  if (!_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    const proto = (_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW )[target] && (_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event) {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target )._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType, target) {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler,\n  globalListener = false,\n) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(target, '_sentryId', (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event) {\n  try {\n    return event.target ;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n\n\n//# sourceMappingURL=dom.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/instrument/dom.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/instrument/history.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/instrument/history.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addHistoryInstrumentationHandler\": function() { return /* binding */ addHistoryInstrumentationHandler; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n\n\n\nlet lastHref;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addHistoryInstrumentationHandler(handler) {\n  const type = 'history';\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentHistory);\n}\n\nfunction instrumentHistory() {\n  if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.supportsHistory)()) {\n    return;\n  }\n\n  const oldOnPopState = _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.onpopstate;\n  _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.onpopstate = function ( ...args) {\n    const to = _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData = { from, to };\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData = { from, to };\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.history, 'pushState', historyReplacementFunction);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\n\n//# sourceMappingURL=history.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9pbnN0cnVtZW50L2hpc3RvcnkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9HO0FBQy9EOztBQUVyQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUseURBQVU7QUFDWixFQUFFLDhEQUFlO0FBQ2pCOztBQUVBO0FBQ0EsT0FBTyw4REFBZTtBQUN0QjtBQUNBOztBQUVBLHdCQUF3Qix3REFBaUI7QUFDekMsRUFBRSx3REFBaUI7QUFDbkIsZUFBZSwyREFBb0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCLElBQUksOERBQWU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QixRQUFRLDhEQUFlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsbURBQUksQ0FBQyxxREFBYztBQUNyQixFQUFFLG1EQUFJLENBQUMscURBQWM7QUFDckI7O0FBRTRDO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL2Jyb3dzZXItdXRpbHMvZXNtL2luc3RydW1lbnQvaGlzdG9yeS5qcz80MDkzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZEhhbmRsZXIsIG1heWJlSW5zdHJ1bWVudCwgc3VwcG9ydHNIaXN0b3J5LCB0cmlnZ2VySGFuZGxlcnMsIGZpbGwgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uL3R5cGVzLmpzJztcblxubGV0IGxhc3RIcmVmO1xuXG4vKipcbiAqIEFkZCBhbiBpbnN0cnVtZW50YXRpb24gaGFuZGxlciBmb3Igd2hlbiBhIGZldGNoIHJlcXVlc3QgaGFwcGVucy5cbiAqIFRoZSBoYW5kbGVyIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbmNlIHdoZW4gdGhlIHJlcXVlc3Qgc3RhcnRzIGFuZCBvbmNlIHdoZW4gaXQgZW5kcyxcbiAqIHdoaWNoIGNhbiBiZSBpZGVudGlmaWVkIGJ5IGNoZWNraW5nIGlmIGl0IGhhcyBhbiBgZW5kVGltZXN0YW1wYC5cbiAqXG4gKiBVc2UgYXQgeW91ciBvd24gcmlzaywgdGhpcyBtaWdodCBicmVhayB3aXRob3V0IGNoYW5nZWxvZyBub3RpY2UsIG9ubHkgdXNlZCBpbnRlcm5hbGx5LlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBhZGRIaXN0b3J5SW5zdHJ1bWVudGF0aW9uSGFuZGxlcihoYW5kbGVyKSB7XG4gIGNvbnN0IHR5cGUgPSAnaGlzdG9yeSc7XG4gIGFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIG1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50SGlzdG9yeSk7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRIaXN0b3J5KCkge1xuICBpZiAoIXN1cHBvcnRzSGlzdG9yeSgpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3Qgb2xkT25Qb3BTdGF0ZSA9IFdJTkRPVy5vbnBvcHN0YXRlO1xuICBXSU5ET1cub25wb3BzdGF0ZSA9IGZ1bmN0aW9uICggLi4uYXJncykge1xuICAgIGNvbnN0IHRvID0gV0lORE9XLmxvY2F0aW9uLmhyZWY7XG4gICAgLy8ga2VlcCB0cmFjayBvZiB0aGUgY3VycmVudCBVUkwgc3RhdGUsIGFzIHdlIGFsd2F5cyByZWNlaXZlIG9ubHkgdGhlIHVwZGF0ZWQgc3RhdGVcbiAgICBjb25zdCBmcm9tID0gbGFzdEhyZWY7XG4gICAgbGFzdEhyZWYgPSB0bztcbiAgICBjb25zdCBoYW5kbGVyRGF0YSA9IHsgZnJvbSwgdG8gfTtcbiAgICB0cmlnZ2VySGFuZGxlcnMoJ2hpc3RvcnknLCBoYW5kbGVyRGF0YSk7XG4gICAgaWYgKG9sZE9uUG9wU3RhdGUpIHtcbiAgICAgIC8vIEFwcGFyZW50bHkgdGhpcyBjYW4gdGhyb3cgaW4gRmlyZWZveCB3aGVuIGluY29ycmVjdGx5IGltcGxlbWVudGVkIHBsdWdpbiBpcyBpbnN0YWxsZWQuXG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L2lzc3Vlcy8zMzQ0XG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vYnVnc25hZy9idWdzbmFnLWpzL2lzc3Vlcy80NjlcbiAgICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBvbGRPblBvcFN0YXRlLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgfSBjYXRjaCAoX29PKSB7XG4gICAgICAgIC8vIG5vLWVtcHR5XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGZ1bmN0aW9uIGhpc3RvcnlSZXBsYWNlbWVudEZ1bmN0aW9uKG9yaWdpbmFsSGlzdG9yeUZ1bmN0aW9uKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICggLi4uYXJncykge1xuICAgICAgY29uc3QgdXJsID0gYXJncy5sZW5ndGggPiAyID8gYXJnc1syXSA6IHVuZGVmaW5lZDtcbiAgICAgIGlmICh1cmwpIHtcbiAgICAgICAgLy8gY29lcmNlIHRvIHN0cmluZyAodGhpcyBpcyB3aGF0IHB1c2hTdGF0ZSBkb2VzKVxuICAgICAgICBjb25zdCBmcm9tID0gbGFzdEhyZWY7XG4gICAgICAgIGNvbnN0IHRvID0gU3RyaW5nKHVybCk7XG4gICAgICAgIC8vIGtlZXAgdHJhY2sgb2YgdGhlIGN1cnJlbnQgVVJMIHN0YXRlLCBhcyB3ZSBhbHdheXMgcmVjZWl2ZSBvbmx5IHRoZSB1cGRhdGVkIHN0YXRlXG4gICAgICAgIGxhc3RIcmVmID0gdG87XG4gICAgICAgIGNvbnN0IGhhbmRsZXJEYXRhID0geyBmcm9tLCB0byB9O1xuICAgICAgICB0cmlnZ2VySGFuZGxlcnMoJ2hpc3RvcnknLCBoYW5kbGVyRGF0YSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gb3JpZ2luYWxIaXN0b3J5RnVuY3Rpb24uYXBwbHkodGhpcywgYXJncyk7XG4gICAgfTtcbiAgfVxuXG4gIGZpbGwoV0lORE9XLmhpc3RvcnksICdwdXNoU3RhdGUnLCBoaXN0b3J5UmVwbGFjZW1lbnRGdW5jdGlvbik7XG4gIGZpbGwoV0lORE9XLmhpc3RvcnksICdyZXBsYWNlU3RhdGUnLCBoaXN0b3J5UmVwbGFjZW1lbnRGdW5jdGlvbik7XG59XG5cbmV4cG9ydCB7IGFkZEhpc3RvcnlJbnN0cnVtZW50YXRpb25IYW5kbGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oaXN0b3J5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/instrument/history.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/instrument/xhr.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/instrument/xhr.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SENTRY_XHR_DATA_KEY\": function() { return /* binding */ SENTRY_XHR_DATA_KEY; },\n/* harmony export */   \"addXhrInstrumentationHandler\": function() { return /* binding */ addXhrInstrumentationHandler; },\n/* harmony export */   \"instrumentXHR\": function() { return /* binding */ instrumentXHR; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n\n\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addXhrInstrumentationHandler(handler) {\n  const type = 'xhr';\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nfunction instrumentXHR() {\n  if (!_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const startTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)() * 1000;\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData = {\n            endTimestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)() * 1000,\n            startTimestamp,\n            xhr: this,\n          };\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(header) && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData = {\n        startTimestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)() * 1000,\n        xhr: this,\n      };\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url) {\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url ).toString();\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n\n\n//# sourceMappingURL=xhr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9pbnN0cnVtZW50L3hoci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpSDtBQUM1RTs7QUFFckM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHlEQUFVO0FBQ1osRUFBRSw4REFBZTtBQUNqQjs7QUFFQTtBQUNBO0FBQ0EsT0FBTyw0REFBd0I7QUFDL0I7QUFDQTs7QUFFQTs7QUFFQSxFQUFFLG1EQUFJO0FBQ047QUFDQSw2QkFBNkIsaUVBQWtCOztBQUUvQztBQUNBO0FBQ0EscUJBQXFCLHVEQUFRO0FBQzdCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEIsaUVBQWtCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLFVBQVUsOERBQWU7QUFDekI7QUFDQTs7QUFFQTtBQUNBLFFBQVEsbURBQUk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLG1EQUFJO0FBQ1Y7QUFDQTs7QUFFQTs7QUFFQSx5QkFBeUIsdURBQVEsWUFBWSx1REFBUTtBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxHQUFHOztBQUVILEVBQUUsbURBQUk7QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3QkFBd0IsaUVBQWtCO0FBQzFDO0FBQ0E7QUFDQSxNQUFNLDhEQUFlOztBQUVyQjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0EsTUFBTSx1REFBUTtBQUNkO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxjQUFjOztBQUVsQjtBQUNBOztBQUU0RTtBQUM1RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9pbnN0cnVtZW50L3hoci5qcz9iODFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZEhhbmRsZXIsIG1heWJlSW5zdHJ1bWVudCwgZmlsbCwgdGltZXN0YW1wSW5TZWNvbmRzLCBpc1N0cmluZywgdHJpZ2dlckhhbmRsZXJzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi90eXBlcy5qcyc7XG5cbmNvbnN0IFNFTlRSWV9YSFJfREFUQV9LRVkgPSAnX19zZW50cnlfeGhyX3YzX18nO1xuXG4vKipcbiAqIEFkZCBhbiBpbnN0cnVtZW50YXRpb24gaGFuZGxlciBmb3Igd2hlbiBhbiBYSFIgcmVxdWVzdCBoYXBwZW5zLlxuICogVGhlIGhhbmRsZXIgZnVuY3Rpb24gaXMgY2FsbGVkIG9uY2Ugd2hlbiB0aGUgcmVxdWVzdCBzdGFydHMgYW5kIG9uY2Ugd2hlbiBpdCBlbmRzLFxuICogd2hpY2ggY2FuIGJlIGlkZW50aWZpZWQgYnkgY2hlY2tpbmcgaWYgaXQgaGFzIGFuIGBlbmRUaW1lc3RhbXBgLlxuICpcbiAqIFVzZSBhdCB5b3VyIG93biByaXNrLCB0aGlzIG1pZ2h0IGJyZWFrIHdpdGhvdXQgY2hhbmdlbG9nIG5vdGljZSwgb25seSB1c2VkIGludGVybmFsbHkuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGFkZFhockluc3RydW1lbnRhdGlvbkhhbmRsZXIoaGFuZGxlcikge1xuICBjb25zdCB0eXBlID0gJ3hocic7XG4gIGFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIG1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50WEhSKTtcbn1cblxuLyoqIEV4cG9ydGVkIG9ubHkgZm9yIHRlc3RzLiAqL1xuZnVuY3Rpb24gaW5zdHJ1bWVudFhIUigpIHtcbiAgaWYgKCEoV0lORE9XICkuWE1MSHR0cFJlcXVlc3QpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCB4aHJwcm90byA9IFhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZTtcblxuICBmaWxsKHhocnByb3RvLCAnb3BlbicsIGZ1bmN0aW9uIChvcmlnaW5hbE9wZW4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCAuLi5hcmdzKSB7XG4gICAgICBjb25zdCBzdGFydFRpbWVzdGFtcCA9IHRpbWVzdGFtcEluU2Vjb25kcygpICogMTAwMDtcblxuICAgICAgLy8gb3BlbigpIHNob3VsZCBhbHdheXMgYmUgY2FsbGVkIHdpdGggdHdvIG9yIG1vcmUgYXJndW1lbnRzXG4gICAgICAvLyBCdXQgdG8gYmUgb24gdGhlIHNhZmUgc2lkZSwgd2UgYWN0dWFsbHkgdmFsaWRhdGUgdGhpcyBhbmQgYmFpbCBvdXQgaWYgd2UgZG9uJ3QgaGF2ZSBhIG1ldGhvZCAmIHVybFxuICAgICAgY29uc3QgbWV0aG9kID0gaXNTdHJpbmcoYXJnc1swXSkgPyBhcmdzWzBdLnRvVXBwZXJDYXNlKCkgOiB1bmRlZmluZWQ7XG4gICAgICBjb25zdCB1cmwgPSBwYXJzZVVybChhcmdzWzFdKTtcblxuICAgICAgaWYgKCFtZXRob2QgfHwgIXVybCkge1xuICAgICAgICByZXR1cm4gb3JpZ2luYWxPcGVuLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgfVxuXG4gICAgICB0aGlzW1NFTlRSWV9YSFJfREFUQV9LRVldID0ge1xuICAgICAgICBtZXRob2QsXG4gICAgICAgIHVybCxcbiAgICAgICAgcmVxdWVzdF9oZWFkZXJzOiB7fSxcbiAgICAgIH07XG5cbiAgICAgIC8vIGlmIFNlbnRyeSBrZXkgYXBwZWFycyBpbiBVUkwsIGRvbid0IGNhcHR1cmUgaXQgYXMgYSByZXF1ZXN0XG4gICAgICBpZiAobWV0aG9kID09PSAnUE9TVCcgJiYgdXJsLm1hdGNoKC9zZW50cnlfa2V5LykpIHtcbiAgICAgICAgdGhpcy5fX3NlbnRyeV9vd25fcmVxdWVzdF9fID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgb25yZWFkeXN0YXRlY2hhbmdlSGFuZGxlciA9ICgpID0+IHtcbiAgICAgICAgLy8gRm9yIHdoYXRldmVyIHJlYXNvbiwgdGhpcyBpcyBub3QgdGhlIHNhbWUgaW5zdGFuY2UgaGVyZSBhcyBmcm9tIHRoZSBvdXRlciBtZXRob2RcbiAgICAgICAgY29uc3QgeGhySW5mbyA9IHRoaXNbU0VOVFJZX1hIUl9EQVRBX0tFWV07XG5cbiAgICAgICAgaWYgKCF4aHJJbmZvKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gNCkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyB0b3VjaGluZyBzdGF0dXNDb2RlIGluIHNvbWUgcGxhdGZvcm1zIHRocm93c1xuICAgICAgICAgICAgLy8gYW4gZXhjZXB0aW9uXG4gICAgICAgICAgICB4aHJJbmZvLnN0YXR1c19jb2RlID0gdGhpcy5zdGF0dXM7XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgLyogZG8gbm90aGluZyAqL1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IGhhbmRsZXJEYXRhID0ge1xuICAgICAgICAgICAgZW5kVGltZXN0YW1wOiB0aW1lc3RhbXBJblNlY29uZHMoKSAqIDEwMDAsXG4gICAgICAgICAgICBzdGFydFRpbWVzdGFtcCxcbiAgICAgICAgICAgIHhocjogdGhpcyxcbiAgICAgICAgICB9O1xuICAgICAgICAgIHRyaWdnZXJIYW5kbGVycygneGhyJywgaGFuZGxlckRhdGEpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBpZiAoJ29ucmVhZHlzdGF0ZWNoYW5nZScgaW4gdGhpcyAmJiB0eXBlb2YgdGhpcy5vbnJlYWR5c3RhdGVjaGFuZ2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgZmlsbCh0aGlzLCAnb25yZWFkeXN0YXRlY2hhbmdlJywgZnVuY3Rpb24gKG9yaWdpbmFsKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICggLi4ucmVhZHlTdGF0ZUFyZ3MpIHtcbiAgICAgICAgICAgIG9ucmVhZHlzdGF0ZWNoYW5nZUhhbmRsZXIoKTtcbiAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbC5hcHBseSh0aGlzLCByZWFkeVN0YXRlQXJncyk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ3JlYWR5c3RhdGVjaGFuZ2UnLCBvbnJlYWR5c3RhdGVjaGFuZ2VIYW5kbGVyKTtcbiAgICAgIH1cblxuICAgICAgLy8gSW50ZXJjZXB0aW5nIGBzZXRSZXF1ZXN0SGVhZGVyYCB0byBhY2Nlc3MgdGhlIHJlcXVlc3QgaGVhZGVycyBvZiBYSFIgaW5zdGFuY2UuXG4gICAgICAvLyBUaGlzIHdpbGwgb25seSB3b3JrIGZvciB1c2VyL2xpYnJhcnkgZGVmaW5lZCBoZWFkZXJzLCBub3QgZm9yIHRoZSBkZWZhdWx0L2Jyb3dzZXItYXNzaWduZWQgaGVhZGVycy5cbiAgICAgIC8vIFJlcXVlc3QgY29va2llcyBhcmUgYWxzbyB1bmF2YWlsYWJsZSBmb3IgWEhSLCBhcyBgQ29va2llYCBoZWFkZXIgY2FuJ3QgYmUgZGVmaW5lZCBieSBgc2V0UmVxdWVzdEhlYWRlcmAuXG4gICAgICBmaWxsKHRoaXMsICdzZXRSZXF1ZXN0SGVhZGVyJywgZnVuY3Rpb24gKG9yaWdpbmFsKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoIC4uLnNldFJlcXVlc3RIZWFkZXJBcmdzKSB7XG4gICAgICAgICAgY29uc3QgW2hlYWRlciwgdmFsdWVdID0gc2V0UmVxdWVzdEhlYWRlckFyZ3M7XG5cbiAgICAgICAgICBjb25zdCB4aHJJbmZvID0gdGhpc1tTRU5UUllfWEhSX0RBVEFfS0VZXTtcblxuICAgICAgICAgIGlmICh4aHJJbmZvICYmIGlzU3RyaW5nKGhlYWRlcikgJiYgaXNTdHJpbmcodmFsdWUpKSB7XG4gICAgICAgICAgICB4aHJJbmZvLnJlcXVlc3RfaGVhZGVyc1toZWFkZXIudG9Mb3dlckNhc2UoKV0gPSB2YWx1ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gb3JpZ2luYWwuYXBwbHkodGhpcywgc2V0UmVxdWVzdEhlYWRlckFyZ3MpO1xuICAgICAgICB9O1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBvcmlnaW5hbE9wZW4uYXBwbHkodGhpcywgYXJncyk7XG4gICAgfTtcbiAgfSk7XG5cbiAgZmlsbCh4aHJwcm90bywgJ3NlbmQnLCBmdW5jdGlvbiAob3JpZ2luYWxTZW5kKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICggLi4uYXJncykge1xuICAgICAgY29uc3Qgc2VudHJ5WGhyRGF0YSA9IHRoaXNbU0VOVFJZX1hIUl9EQVRBX0tFWV07XG5cbiAgICAgIGlmICghc2VudHJ5WGhyRGF0YSkge1xuICAgICAgICByZXR1cm4gb3JpZ2luYWxTZW5kLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgfVxuXG4gICAgICBpZiAoYXJnc1swXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHNlbnRyeVhockRhdGEuYm9keSA9IGFyZ3NbMF07XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGhhbmRsZXJEYXRhID0ge1xuICAgICAgICBzdGFydFRpbWVzdGFtcDogdGltZXN0YW1wSW5TZWNvbmRzKCkgKiAxMDAwLFxuICAgICAgICB4aHI6IHRoaXMsXG4gICAgICB9O1xuICAgICAgdHJpZ2dlckhhbmRsZXJzKCd4aHInLCBoYW5kbGVyRGF0YSk7XG5cbiAgICAgIHJldHVybiBvcmlnaW5hbFNlbmQuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVXJsKHVybCkge1xuICBpZiAoaXNTdHJpbmcodXJsKSkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB0cnkge1xuICAgIC8vIHVybCBjYW4gYmUgYSBzdHJpbmcgb3IgVVJMXG4gICAgLy8gYnV0IHNpbmNlIFVSTCBpcyBub3QgYXZhaWxhYmxlIGluIElFMTEsIHdlIGRvIG5vdCBjaGVjayBmb3IgaXQsXG4gICAgLy8gYnV0IHNpbXBseSBhc3N1bWUgaXQgaXMgYW4gVVJMIGFuZCByZXR1cm4gYHRvU3RyaW5nKClgIGZyb20gaXQgKHdoaWNoIHJldHVybnMgdGhlIGZ1bGwgVVJMKVxuICAgIC8vIElmIHRoYXQgZmFpbHMsIHdlIGp1c3QgcmV0dXJuIHVuZGVmaW5lZFxuICAgIHJldHVybiAodXJsICkudG9TdHJpbmcoKTtcbiAgfSBjYXRjaCAoZTIpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcblxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgeyBTRU5UUllfWEhSX0RBVEFfS0VZLCBhZGRYaHJJbnN0cnVtZW50YXRpb25IYW5kbGVyLCBpbnN0cnVtZW50WEhSIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD14aHIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/instrument/xhr.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/browserMetrics.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/browserMetrics.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_addMeasureSpans\": function() { return /* binding */ _addMeasureSpans; },\n/* harmony export */   \"_addResourceSpans\": function() { return /* binding */ _addResourceSpans; },\n/* harmony export */   \"addPerformanceEntries\": function() { return /* binding */ addPerformanceEntries; },\n/* harmony export */   \"startTrackingInteractions\": function() { return /* binding */ startTrackingInteractions; },\n/* harmony export */   \"startTrackingLongTasks\": function() { return /* binding */ startTrackingLongTasks; },\n/* harmony export */   \"startTrackingWebVitals\": function() { return /* binding */ startTrackingWebVitals; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry-internal/browser-utils/esm/debug-build.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n/* harmony import */ var _instrument_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instrument.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/instrument.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/utils.js\");\n/* harmony import */ var _web_vitals_lib_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./web-vitals/lib/getNavigationEntry.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getNavigationEntry.js\");\n/* harmony import */ var _web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./web-vitals/lib/getVisibilityWatcher.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getVisibilityWatcher.js\");\n\n\n\n\n\n\n\n\n\n/* eslint-disable max-lines */\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals() {\n  const performance = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getBrowserPerformanceAPI)();\n  if (performance && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      _types_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n    const ttfbCallback = _trackTtfb();\n\n    return () => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n      ttfbCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  (0,_instrument_js__WEBPACK_IMPORTED_MODULE_3__.addPerformanceInstrumentationHandler)('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getActiveSpan)()) {\n        return;\n      }\n      const startTime = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(entry.duration);\n\n      const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.startInactiveSpan)({\n        name: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        startTime,\n        attributes: {\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n      if (span) {\n        span.end(startTime + duration);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  (0,_instrument_js__WEBPACK_IMPORTED_MODULE_3__.addPerformanceInstrumentationHandler)('event', ({ entries }) => {\n    for (const entry of entries) {\n      if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getActiveSpan)()) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(entry.duration);\n\n        const spanOptions = {\n          name: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.htmlTreeAsString)(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTime: startTime,\n          attributes: {\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n          },\n        };\n\n        const componentName = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getComponentName)(entry.target);\n        if (componentName) {\n          spanOptions.attributes['ui.component_name'] = componentName;\n        }\n\n        const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.startInactiveSpan)(spanOptions);\n        if (span) {\n          span.end(startTime + duration);\n        }\n      }\n    }\n  });\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_3__.addClsInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_3__.addLcpInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_3__.addFidInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin );\n    const startTime = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(entry.startTime);\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_3__.addTtfbInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(span) {\n  const performance = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getBrowserPerformanceAPI)();\n  if (!performance || !_types_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.performance.getEntries || !_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.spanToJSON)(span);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(entry.startTime);\n    const duration = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(entry.duration);\n\n    if (op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(span, entry, timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(span, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = (0,_web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_6__.getVisibilityWatcher)();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(span, entry, entry.name , startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(span);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the span span data, so these web vitals will need\n      // to be adjusted to be relative to span.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.startAndEndSpan)(span, fidMark.value, fidMark.value + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(_measurements['fid'].value), {\n        name: 'first input delay',\n        op: 'ui.action',\n        attributes: {\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.setMeasurement)(measurementName, _measurements[measurementName].value, _measurements[measurementName].unit);\n    });\n\n    _tagMetricInfo(span);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  span,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.startAndEndSpan)(span, measureStartTimestamp, measureEndTimestamp, {\n    name: entry.name ,\n    op: entry.entryType ,\n    attributes: {\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n    },\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(span, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(span, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(span, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(span, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(span, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(span, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  span,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  name,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.startAndEndSpan)(span, timeOrigin + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(start), timeOrigin + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(end), {\n    op: 'browser',\n    name: name || event,\n    attributes: {\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n    },\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(span, entry, timeOrigin) {\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire span if it contained faulty spans.\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.startAndEndSpan)(\n      span,\n      timeOrigin + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(entry.requestStart ),\n      timeOrigin + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(entry.responseEnd ),\n      {\n        op: 'browser',\n        name: 'request',\n        attributes: {\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      },\n    );\n\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.startAndEndSpan)(\n      span,\n      timeOrigin + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(entry.responseStart ),\n      timeOrigin + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(entry.responseEnd ),\n      {\n        op: 'browser',\n        name: 'response',\n        attributes: {\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.browser.metrics',\n        },\n      },\n    );\n  }\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  span,\n  entry,\n  resourceUrl,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.parseUrl)(resourceUrl);\n\n  const attributes = {\n    [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.resource.browser.metrics',\n  };\n  setResourceEntrySizeData(attributes, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(attributes, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(attributes, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    attributes['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    attributes['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    attributes['server.address'] = parsedUrl.host;\n  }\n\n  attributes['url.same_origin'] = resourceUrl.includes(_types_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.startAndEndSpan)(span, startTimestamp, endTimestamp, {\n    name: resourceUrl.replace(_types_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location.origin, ''),\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    attributes,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(span) {\n  const navigator = _types_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      span.setAttribute('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      span.setAttribute('connectionType', connection.type);\n    }\n\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isMeasurementValue)(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isMeasurementValue)(navigator.deviceMemory)) {\n    span.setAttribute('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isMeasurementValue)(navigator.hardwareConcurrency)) {\n    span.setAttribute('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to span to allow debugging */\nfunction _tagMetricInfo(span) {\n  if (_lcpEntry) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      span.setAttribute('lcp.element', (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.htmlTreeAsString)(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      span.setAttribute('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      span.setAttribute('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    span.setAttribute('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      span.setAttribute(`cls.source.${index + 1}`, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.htmlTreeAsString)(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  attributes,\n  entry,\n  key,\n  dataKey,\n) {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    attributes[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements) {\n  const navEntry = (0,_web_vitals_lib_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_7__.getNavigationEntry)();\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding TTFB Request Time');\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\n\n//# sourceMappingURL=browserMetrics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/browserMetrics.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/inp.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/inp.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startTrackingINP\": function() { return /* binding */ startTrackingINP; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _instrument_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instrument.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/instrument.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/utils.js\");\n\n\n\n\n\n/**\n * Start tracking INP webvital events.\n */\nfunction startTrackingINP() {\n  const performance = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getBrowserPerformanceAPI)();\n  if (performance && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP();\n\n    return () => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\nconst INP_ENTRY_MAP = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addInpInstrumentationHandler)(({ metric }) => {\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)();\n    if (!client || metric.value == undefined) {\n      return;\n    }\n\n    const entry = metric.entries.find(entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name]);\n\n    if (!entry) {\n      return;\n    }\n\n    const interactionType = INP_ENTRY_MAP[entry.name];\n\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n    const duration = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.msToSec)(metric.value);\n    const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentScope)();\n    const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getActiveSpan)();\n    const rootSpan = activeSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getRootSpan)(activeSpan) : undefined;\n\n    const routeName = rootSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(rootSpan).description : undefined;\n    const user = scope.getUser();\n\n    // We need to get the replay, user, and activeTransaction from the current scope\n    // so that we can associate replay id, profile id, and a user display to the span\n    const replay = client.getIntegrationByName('Replay');\n\n    const replayId = replay && replay.getReplayId();\n\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    let profileId = undefined;\n    try {\n      // @ts-expect-error skip optional chaining to save bundle size with try catch\n      profileId = scope.getScopeData().contexts.profile.profile_id;\n    } catch (e) {\n      // do nothing\n    }\n\n    const name = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.htmlTreeAsString)(entry.target);\n    const attributes = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({\n      release: options.release,\n      environment: options.environment,\n      transaction: routeName,\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_3__.SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: metric.value,\n      user: userDisplay || undefined,\n      profile_id: profileId || undefined,\n      replay_id: replayId || undefined,\n    });\n\n    const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startInactiveSpan)({\n      name,\n      op: `ui.interaction.${interactionType}`,\n      attributes,\n      startTime: startTime,\n      experimental: {\n        standalone: true,\n      },\n    });\n\n    span.addEvent('inp', {\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_3__.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: 'millisecond',\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_3__.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: metric.value,\n    });\n\n    span.end(startTime + duration);\n  });\n}\n\n\n//# sourceMappingURL=inp.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL2lucC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpUDtBQUMvSTtBQUNuQztBQUNBOztBQUUvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtRUFBd0I7QUFDOUMscUJBQXFCLHVFQUE0QjtBQUNqRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTLDRFQUE0QixJQUFJLFFBQVE7QUFDakQsbUJBQW1CLHVEQUFTO0FBQzVCO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLHNCQUFzQixrREFBTyxFQUFFLHVFQUE0QjtBQUMzRCxxQkFBcUIsa0RBQU87QUFDNUIsa0JBQWtCLDZEQUFlO0FBQ2pDLHVCQUF1QiwyREFBYTtBQUNwQyxrQ0FBa0MseURBQVc7O0FBRTdDLGlDQUFpQyx3REFBVTtBQUMzQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBLGlCQUFpQiwrREFBZ0I7QUFDakMsdUJBQXVCLGdFQUFpQjtBQUN4QztBQUNBO0FBQ0E7QUFDQSxPQUFPLDJFQUFpQztBQUN4QztBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMLGlCQUFpQiwrREFBaUI7QUFDbEM7QUFDQSw0QkFBNEIsZ0JBQWdCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7O0FBRUw7QUFDQSxPQUFPLG9GQUEwQztBQUNqRCxPQUFPLHFGQUEyQztBQUNsRCxLQUFLOztBQUVMO0FBQ0EsR0FBRztBQUNIOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL2lucC5qcz81OTY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENsaWVudCwgZ2V0Q3VycmVudFNjb3BlLCBnZXRBY3RpdmVTcGFuLCBnZXRSb290U3Bhbiwgc3BhblRvSlNPTiwgU0VNQU5USUNfQVRUUklCVVRFX0VYQ0xVU0lWRV9USU1FLCBzdGFydEluYWN0aXZlU3BhbiwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9NRUFTVVJFTUVOVF9VTklULCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX01FQVNVUkVNRU5UX1ZBTFVFIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGJyb3dzZXJQZXJmb3JtYW5jZVRpbWVPcmlnaW4sIGh0bWxUcmVlQXNTdHJpbmcsIGRyb3BVbmRlZmluZWRLZXlzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBhZGRJbnBJbnN0cnVtZW50YXRpb25IYW5kbGVyIH0gZnJvbSAnLi9pbnN0cnVtZW50LmpzJztcbmltcG9ydCB7IGdldEJyb3dzZXJQZXJmb3JtYW5jZUFQSSwgbXNUb1NlYyB9IGZyb20gJy4vdXRpbHMuanMnO1xuXG4vKipcbiAqIFN0YXJ0IHRyYWNraW5nIElOUCB3ZWJ2aXRhbCBldmVudHMuXG4gKi9cbmZ1bmN0aW9uIHN0YXJ0VHJhY2tpbmdJTlAoKSB7XG4gIGNvbnN0IHBlcmZvcm1hbmNlID0gZ2V0QnJvd3NlclBlcmZvcm1hbmNlQVBJKCk7XG4gIGlmIChwZXJmb3JtYW5jZSAmJiBicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luKSB7XG4gICAgY29uc3QgaW5wQ2FsbGJhY2sgPSBfdHJhY2tJTlAoKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpbnBDYWxsYmFjaygpO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gKCkgPT4gdW5kZWZpbmVkO1xufVxuXG5jb25zdCBJTlBfRU5UUllfTUFQID0ge1xuICBjbGljazogJ2NsaWNrJyxcbiAgcG9pbnRlcmRvd246ICdjbGljaycsXG4gIHBvaW50ZXJ1cDogJ2NsaWNrJyxcbiAgbW91c2Vkb3duOiAnY2xpY2snLFxuICBtb3VzZXVwOiAnY2xpY2snLFxuICB0b3VjaHN0YXJ0OiAnY2xpY2snLFxuICB0b3VjaGVuZDogJ2NsaWNrJyxcbiAgbW91c2VvdmVyOiAnaG92ZXInLFxuICBtb3VzZW91dDogJ2hvdmVyJyxcbiAgbW91c2VlbnRlcjogJ2hvdmVyJyxcbiAgbW91c2VsZWF2ZTogJ2hvdmVyJyxcbiAgcG9pbnRlcm92ZXI6ICdob3ZlcicsXG4gIHBvaW50ZXJvdXQ6ICdob3ZlcicsXG4gIHBvaW50ZXJlbnRlcjogJ2hvdmVyJyxcbiAgcG9pbnRlcmxlYXZlOiAnaG92ZXInLFxuICBkcmFnc3RhcnQ6ICdkcmFnJyxcbiAgZHJhZ2VuZDogJ2RyYWcnLFxuICBkcmFnOiAnZHJhZycsXG4gIGRyYWdlbnRlcjogJ2RyYWcnLFxuICBkcmFnbGVhdmU6ICdkcmFnJyxcbiAgZHJhZ292ZXI6ICdkcmFnJyxcbiAgZHJvcDogJ2RyYWcnLFxuICBrZXlkb3duOiAncHJlc3MnLFxuICBrZXl1cDogJ3ByZXNzJyxcbiAga2V5cHJlc3M6ICdwcmVzcycsXG4gIGlucHV0OiAncHJlc3MnLFxufTtcblxuLyoqIFN0YXJ0cyB0cmFja2luZyB0aGUgSW50ZXJhY3Rpb24gdG8gTmV4dCBQYWludCBvbiB0aGUgY3VycmVudCBwYWdlLiAqL1xuZnVuY3Rpb24gX3RyYWNrSU5QKCkge1xuICByZXR1cm4gYWRkSW5wSW5zdHJ1bWVudGF0aW9uSGFuZGxlcigoeyBtZXRyaWMgfSkgPT4ge1xuICAgIGNvbnN0IGNsaWVudCA9IGdldENsaWVudCgpO1xuICAgIGlmICghY2xpZW50IHx8IG1ldHJpYy52YWx1ZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBlbnRyeSA9IG1ldHJpYy5lbnRyaWVzLmZpbmQoZW50cnkgPT4gZW50cnkuZHVyYXRpb24gPT09IG1ldHJpYy52YWx1ZSAmJiBJTlBfRU5UUllfTUFQW2VudHJ5Lm5hbWVdKTtcblxuICAgIGlmICghZW50cnkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBpbnRlcmFjdGlvblR5cGUgPSBJTlBfRU5UUllfTUFQW2VudHJ5Lm5hbWVdO1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IGNsaWVudC5nZXRPcHRpb25zKCk7XG4gICAgLyoqIEJ1aWxkIHRoZSBJTlAgc3BhbiwgY3JlYXRlIGFuIGVudmVsb3BlIGZyb20gdGhlIHNwYW4sIGFuZCB0aGVuIHNlbmQgdGhlIGVudmVsb3BlICovXG4gICAgY29uc3Qgc3RhcnRUaW1lID0gbXNUb1NlYygoYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbiApICsgZW50cnkuc3RhcnRUaW1lKTtcbiAgICBjb25zdCBkdXJhdGlvbiA9IG1zVG9TZWMobWV0cmljLnZhbHVlKTtcbiAgICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRTY29wZSgpO1xuICAgIGNvbnN0IGFjdGl2ZVNwYW4gPSBnZXRBY3RpdmVTcGFuKCk7XG4gICAgY29uc3Qgcm9vdFNwYW4gPSBhY3RpdmVTcGFuID8gZ2V0Um9vdFNwYW4oYWN0aXZlU3BhbikgOiB1bmRlZmluZWQ7XG5cbiAgICBjb25zdCByb3V0ZU5hbWUgPSByb290U3BhbiA/IHNwYW5Ub0pTT04ocm9vdFNwYW4pLmRlc2NyaXB0aW9uIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IHVzZXIgPSBzY29wZS5nZXRVc2VyKCk7XG5cbiAgICAvLyBXZSBuZWVkIHRvIGdldCB0aGUgcmVwbGF5LCB1c2VyLCBhbmQgYWN0aXZlVHJhbnNhY3Rpb24gZnJvbSB0aGUgY3VycmVudCBzY29wZVxuICAgIC8vIHNvIHRoYXQgd2UgY2FuIGFzc29jaWF0ZSByZXBsYXkgaWQsIHByb2ZpbGUgaWQsIGFuZCBhIHVzZXIgZGlzcGxheSB0byB0aGUgc3BhblxuICAgIGNvbnN0IHJlcGxheSA9IGNsaWVudC5nZXRJbnRlZ3JhdGlvbkJ5TmFtZSgnUmVwbGF5Jyk7XG5cbiAgICBjb25zdCByZXBsYXlJZCA9IHJlcGxheSAmJiByZXBsYXkuZ2V0UmVwbGF5SWQoKTtcblxuICAgIGNvbnN0IHVzZXJEaXNwbGF5ID0gdXNlciAhPT0gdW5kZWZpbmVkID8gdXNlci5lbWFpbCB8fCB1c2VyLmlkIHx8IHVzZXIuaXBfYWRkcmVzcyA6IHVuZGVmaW5lZDtcbiAgICBsZXQgcHJvZmlsZUlkID0gdW5kZWZpbmVkO1xuICAgIHRyeSB7XG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHNraXAgb3B0aW9uYWwgY2hhaW5pbmcgdG8gc2F2ZSBidW5kbGUgc2l6ZSB3aXRoIHRyeSBjYXRjaFxuICAgICAgcHJvZmlsZUlkID0gc2NvcGUuZ2V0U2NvcGVEYXRhKCkuY29udGV4dHMucHJvZmlsZS5wcm9maWxlX2lkO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIGRvIG5vdGhpbmdcbiAgICB9XG5cbiAgICBjb25zdCBuYW1lID0gaHRtbFRyZWVBc1N0cmluZyhlbnRyeS50YXJnZXQpO1xuICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSBkcm9wVW5kZWZpbmVkS2V5cyh7XG4gICAgICByZWxlYXNlOiBvcHRpb25zLnJlbGVhc2UsXG4gICAgICBlbnZpcm9ubWVudDogb3B0aW9ucy5lbnZpcm9ubWVudCxcbiAgICAgIHRyYW5zYWN0aW9uOiByb3V0ZU5hbWUsXG4gICAgICBbU0VNQU5USUNfQVRUUklCVVRFX0VYQ0xVU0lWRV9USU1FXTogbWV0cmljLnZhbHVlLFxuICAgICAgdXNlcjogdXNlckRpc3BsYXkgfHwgdW5kZWZpbmVkLFxuICAgICAgcHJvZmlsZV9pZDogcHJvZmlsZUlkIHx8IHVuZGVmaW5lZCxcbiAgICAgIHJlcGxheV9pZDogcmVwbGF5SWQgfHwgdW5kZWZpbmVkLFxuICAgIH0pO1xuXG4gICAgY29uc3Qgc3BhbiA9IHN0YXJ0SW5hY3RpdmVTcGFuKHtcbiAgICAgIG5hbWUsXG4gICAgICBvcDogYHVpLmludGVyYWN0aW9uLiR7aW50ZXJhY3Rpb25UeXBlfWAsXG4gICAgICBhdHRyaWJ1dGVzLFxuICAgICAgc3RhcnRUaW1lOiBzdGFydFRpbWUsXG4gICAgICBleHBlcmltZW50YWw6IHtcbiAgICAgICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBzcGFuLmFkZEV2ZW50KCdpbnAnLCB7XG4gICAgICBbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9NRUFTVVJFTUVOVF9VTklUXTogJ21pbGxpc2Vjb25kJyxcbiAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX01FQVNVUkVNRU5UX1ZBTFVFXTogbWV0cmljLnZhbHVlLFxuICAgIH0pO1xuXG4gICAgc3Bhbi5lbmQoc3RhcnRUaW1lICsgZHVyYXRpb24pO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgc3RhcnRUcmFja2luZ0lOUCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5wLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/inp.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/instrument.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/instrument.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addClsInstrumentationHandler\": function() { return /* binding */ addClsInstrumentationHandler; },\n/* harmony export */   \"addFidInstrumentationHandler\": function() { return /* binding */ addFidInstrumentationHandler; },\n/* harmony export */   \"addInpInstrumentationHandler\": function() { return /* binding */ addInpInstrumentationHandler; },\n/* harmony export */   \"addLcpInstrumentationHandler\": function() { return /* binding */ addLcpInstrumentationHandler; },\n/* harmony export */   \"addPerformanceInstrumentationHandler\": function() { return /* binding */ addPerformanceInstrumentationHandler; },\n/* harmony export */   \"addTtfbInstrumentationHandler\": function() { return /* binding */ addTtfbInstrumentationHandler; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry-internal/browser-utils/esm/debug-build.js\");\n/* harmony import */ var _web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web-vitals/getCLS.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getCLS.js\");\n/* harmony import */ var _web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./web-vitals/getFID.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getFID.js\");\n/* harmony import */ var _web_vitals_getINP_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./web-vitals/getINP.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getINP.js\");\n/* harmony import */ var _web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web-vitals/getLCP.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getLCP.js\");\n/* harmony import */ var _web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./web-vitals/lib/observe.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js\");\n/* harmony import */ var _web_vitals_onTTFB_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./web-vitals/onTTFB.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onTTFB.js\");\n\n\n\n\n\n\n\n\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\nlet _previousTtfb;\nlet _previousInp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nfunction addClsInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nfunction addLcpInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nfunction addTtfbInstrumentationHandler(callback) {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addInpInstrumentationHandler(\n  callback,\n) {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  return (0,_web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_2__.onCLS)(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    // We want the callback to be called whenever the CLS value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid() {\n  return (0,_web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_3__.onFID)(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  return (0,_web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_4__.onLCP)(\n    metric => {\n      triggerHandlers('lcp', {\n        metric,\n      });\n      _previousLcp = metric;\n    },\n    // We want the callback to be called whenever the LCP value updates.\n    // By default, the callback is only called when the tab goes to the background.\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentTtfb() {\n  return (0,_web_vitals_onTTFB_js__WEBPACK_IMPORTED_MODULE_5__.onTTFB)(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp() {\n  return (0,_web_vitals_getINP_js__WEBPACK_IMPORTED_MODULE_6__.onINP)(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n  stopOnCallback = false,\n) {\n  addHandler(type, callback);\n\n  let stopListening;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  (0,_web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_7__.observe)(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type,\n  callback,\n  stopListening,\n) {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\n\n//# sourceMappingURL=instrument.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/instrument.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/utils.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getBrowserPerformanceAPI\": function() { return /* binding */ getBrowserPerformanceAPI; },\n/* harmony export */   \"isMeasurementValue\": function() { return /* binding */ isMeasurementValue; },\n/* harmony export */   \"msToSec\": function() { return /* binding */ msToSec; },\n/* harmony export */   \"startAndEndSpan\": function() { return /* binding */ startAndEndSpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n\n\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction startAndEndSpan(\n  parentSpan,\n  startTimeInSeconds,\n  endTime,\n  { ...ctx },\n) {\n  const parentStartTime = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToJSON)(parentSpan).start_timestamp;\n  if (parentStartTime && parentStartTime > startTimeInSeconds) {\n    // We can only do this for SentrySpans...\n    if (typeof (parentSpan ).updateStartTime === 'function') {\n      (parentSpan ).updateStartTime(startTimeInSeconds);\n    }\n  }\n\n  // The return value only exists for tests\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.withActiveSpan)(parentSpan, () => {\n    const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startInactiveSpan)({\n      startTime: startTimeInSeconds,\n      ...ctx,\n    });\n\n    if (span) {\n      span.end(endTime);\n    }\n\n    return span;\n  });\n}\n\n/** Get the browser performance API. */\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW && _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.addEventListener && _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.performance;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2RTtBQUN4Qzs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksUUFBUTtBQUNaO0FBQ0EsMEJBQTBCLHdEQUFVO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFNBQVMsNERBQWM7QUFDdkIsaUJBQWlCLCtEQUFpQjtBQUNsQztBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUyw2Q0FBTSxJQUFJLDhEQUF1QixJQUFJLHlEQUFrQjtBQUNoRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFa0Y7QUFDbEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vbWV0cmljcy91dGlscy5qcz8yOGZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNwYW5Ub0pTT04sIHdpdGhBY3RpdmVTcGFuLCBzdGFydEluYWN0aXZlU3BhbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi90eXBlcy5qcyc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gdmFsdWUgaXMgYSB2YWxpZCBtZWFzdXJlbWVudCB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gaXNNZWFzdXJlbWVudFZhbHVlKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmIGlzRmluaXRlKHZhbHVlKTtcbn1cblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gc3RhcnQgY2hpbGQgb24gdHJhbnNhY3Rpb25zLiBUaGlzIGZ1bmN0aW9uIHdpbGwgbWFrZSBzdXJlIHRoYXQgdGhlIHRyYW5zYWN0aW9uIHdpbGxcbiAqIHVzZSB0aGUgc3RhcnQgdGltZXN0YW1wIG9mIHRoZSBjcmVhdGVkIGNoaWxkIHNwYW4gaWYgaXQgaXMgZWFybGllciB0aGFuIHRoZSB0cmFuc2FjdGlvbnMgYWN0dWFsXG4gKiBzdGFydCB0aW1lc3RhbXAuXG4gKi9cbmZ1bmN0aW9uIHN0YXJ0QW5kRW5kU3BhbihcbiAgcGFyZW50U3BhbixcbiAgc3RhcnRUaW1lSW5TZWNvbmRzLFxuICBlbmRUaW1lLFxuICB7IC4uLmN0eCB9LFxuKSB7XG4gIGNvbnN0IHBhcmVudFN0YXJ0VGltZSA9IHNwYW5Ub0pTT04ocGFyZW50U3Bhbikuc3RhcnRfdGltZXN0YW1wO1xuICBpZiAocGFyZW50U3RhcnRUaW1lICYmIHBhcmVudFN0YXJ0VGltZSA+IHN0YXJ0VGltZUluU2Vjb25kcykge1xuICAgIC8vIFdlIGNhbiBvbmx5IGRvIHRoaXMgZm9yIFNlbnRyeVNwYW5zLi4uXG4gICAgaWYgKHR5cGVvZiAocGFyZW50U3BhbiApLnVwZGF0ZVN0YXJ0VGltZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgKHBhcmVudFNwYW4gKS51cGRhdGVTdGFydFRpbWUoc3RhcnRUaW1lSW5TZWNvbmRzKTtcbiAgICB9XG4gIH1cblxuICAvLyBUaGUgcmV0dXJuIHZhbHVlIG9ubHkgZXhpc3RzIGZvciB0ZXN0c1xuICByZXR1cm4gd2l0aEFjdGl2ZVNwYW4ocGFyZW50U3BhbiwgKCkgPT4ge1xuICAgIGNvbnN0IHNwYW4gPSBzdGFydEluYWN0aXZlU3Bhbih7XG4gICAgICBzdGFydFRpbWU6IHN0YXJ0VGltZUluU2Vjb25kcyxcbiAgICAgIC4uLmN0eCxcbiAgICB9KTtcblxuICAgIGlmIChzcGFuKSB7XG4gICAgICBzcGFuLmVuZChlbmRUaW1lKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3BhbjtcbiAgfSk7XG59XG5cbi8qKiBHZXQgdGhlIGJyb3dzZXIgcGVyZm9ybWFuY2UgQVBJLiAqL1xuZnVuY3Rpb24gZ2V0QnJvd3NlclBlcmZvcm1hbmNlQVBJKCkge1xuICAvLyBAdHMtZXhwZWN0LWVycm9yIHdlIHdhbnQgdG8gbWFrZSBzdXJlIGFsbCBvZiB0aGVzZSBhcmUgYXZhaWxhYmxlLCBldmVuIGlmIFRTIGlzIHN1cmUgdGhleSBhcmVcbiAgcmV0dXJuIFdJTkRPVyAmJiBXSU5ET1cuYWRkRXZlbnRMaXN0ZW5lciAmJiBXSU5ET1cucGVyZm9ybWFuY2U7XG59XG5cbi8qKlxuICogQ29udmVydHMgZnJvbSBtaWxsaXNlY29uZHMgdG8gc2Vjb25kc1xuICogQHBhcmFtIHRpbWUgdGltZSBpbiBtc1xuICovXG5mdW5jdGlvbiBtc1RvU2VjKHRpbWUpIHtcbiAgcmV0dXJuIHRpbWUgLyAxMDAwO1xufVxuXG5leHBvcnQgeyBnZXRCcm93c2VyUGVyZm9ybWFuY2VBUEksIGlzTWVhc3VyZW1lbnRWYWx1ZSwgbXNUb1NlYywgc3RhcnRBbmRFbmRTcGFuIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/utils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getCLS.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getCLS.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CLSThresholds\": function() { return /* binding */ CLSThresholds; },\n/* harmony export */   \"onCLS\": function() { return /* binding */ onCLS; }\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/onHidden.js\");\n/* harmony import */ var _lib_runOnce_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/runOnce.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/runOnce.js\");\n/* harmony import */ var _onFCP_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onFCP.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onFCP.js\");\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for CLS. See https://web.dev/articles/cls#what_is_a_good_cls_score */\nconst CLSThresholds = [0.1, 0.25];\n\n/**\n * Calculates the [CLS](https://web.dev/articles/cls) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/articles/cls#layout_shift_score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport, opts = {}) => {\n  // Start monitoring FCP so we can only report CLS if FCP is also reported.\n  // Note: this is done to match the current behavior of CrUX.\n  (0,_onFCP_js__WEBPACK_IMPORTED_MODULE_0__.onFCP)(\n    (0,_lib_runOnce_js__WEBPACK_IMPORTED_MODULE_1__.runOnce)(() => {\n      const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__.initMetric)('CLS', 0);\n      let report;\n\n      let sessionValue = 0;\n      let sessionEntries = [];\n\n      const handleEntries = (entries) => {\n        entries.forEach(entry => {\n          // Only count layout shifts without recent user input.\n          if (!entry.hadRecentInput) {\n            const firstSessionEntry = sessionEntries[0];\n            const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n            // If the entry occurred less than 1 second after the previous entry\n            // and less than 5 seconds after the first entry in the session,\n            // include the entry in the current session. Otherwise, start a new\n            // session.\n            if (\n              sessionValue &&\n              entry.startTime - lastSessionEntry.startTime < 1000 &&\n              entry.startTime - firstSessionEntry.startTime < 5000\n            ) {\n              sessionValue += entry.value;\n              sessionEntries.push(entry);\n            } else {\n              sessionValue = entry.value;\n              sessionEntries = [entry];\n            }\n          }\n        });\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          report();\n        }\n      };\n\n      const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('layout-shift', handleEntries);\n      if (po) {\n        report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__.bindReporter)(onReport, metric, CLSThresholds, opts.reportAllChanges);\n\n        (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__.onHidden)(() => {\n          handleEntries(po.takeRecords() );\n          report(true);\n        });\n\n        // Queue a task to report (if nothing else triggers a report first).\n        // This allows CLS to be reported as soon as FCP fires when\n        // `reportAllChanges` is true.\n        setTimeout(report, 0);\n      }\n    }),\n  );\n};\n\n\n//# sourceMappingURL=getCLS.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvZ2V0Q0xTLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXFEO0FBQ0o7QUFDTjtBQUNFO0FBQ0Y7QUFDUjs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0EsRUFBRSxnREFBSztBQUNQLElBQUksd0RBQU87QUFDWCxxQkFBcUIsOERBQVU7QUFDL0I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsd0RBQU87QUFDeEI7QUFDQSxpQkFBaUIsa0VBQVk7O0FBRTdCLFFBQVEsMERBQVE7QUFDaEI7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvZ2V0Q0xTLmpzPzQ2ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmluZFJlcG9ydGVyIH0gZnJvbSAnLi9saWIvYmluZFJlcG9ydGVyLmpzJztcbmltcG9ydCB7IGluaXRNZXRyaWMgfSBmcm9tICcuL2xpYi9pbml0TWV0cmljLmpzJztcbmltcG9ydCB7IG9ic2VydmUgfSBmcm9tICcuL2xpYi9vYnNlcnZlLmpzJztcbmltcG9ydCB7IG9uSGlkZGVuIH0gZnJvbSAnLi9saWIvb25IaWRkZW4uanMnO1xuaW1wb3J0IHsgcnVuT25jZSB9IGZyb20gJy4vbGliL3J1bk9uY2UuanMnO1xuaW1wb3J0IHsgb25GQ1AgfSBmcm9tICcuL29uRkNQLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cblxuLyoqIFRocmVzaG9sZHMgZm9yIENMUy4gU2VlIGh0dHBzOi8vd2ViLmRldi9hcnRpY2xlcy9jbHMjd2hhdF9pc19hX2dvb2RfY2xzX3Njb3JlICovXG5jb25zdCBDTFNUaHJlc2hvbGRzID0gWzAuMSwgMC4yNV07XG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgW0NMU10oaHR0cHM6Ly93ZWIuZGV2L2FydGljbGVzL2NscykgdmFsdWUgZm9yIHRoZSBjdXJyZW50IHBhZ2UgYW5kXG4gKiBjYWxscyB0aGUgYGNhbGxiYWNrYCBmdW5jdGlvbiBvbmNlIHRoZSB2YWx1ZSBpcyByZWFkeSB0byBiZSByZXBvcnRlZCwgYWxvbmdcbiAqIHdpdGggYWxsIGBsYXlvdXQtc2hpZnRgIHBlcmZvcm1hbmNlIGVudHJpZXMgdGhhdCB3ZXJlIHVzZWQgaW4gdGhlIG1ldHJpY1xuICogdmFsdWUgY2FsY3VsYXRpb24uIFRoZSByZXBvcnRlZCB2YWx1ZSBpcyBhIGBkb3VibGVgIChjb3JyZXNwb25kaW5nIHRvIGFcbiAqIFtsYXlvdXQgc2hpZnQgc2NvcmVdKGh0dHBzOi8vd2ViLmRldi9hcnRpY2xlcy9jbHMjbGF5b3V0X3NoaWZ0X3Njb3JlKSkuXG4gKlxuICogSWYgdGhlIGByZXBvcnRBbGxDaGFuZ2VzYCBjb25maWd1cmF0aW9uIG9wdGlvbiBpcyBzZXQgdG8gYHRydWVgLCB0aGVcbiAqIGBjYWxsYmFja2AgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgYXMgc29vbiBhcyB0aGUgdmFsdWUgaXMgaW5pdGlhbGx5XG4gKiBkZXRlcm1pbmVkIGFzIHdlbGwgYXMgYW55IHRpbWUgdGhlIHZhbHVlIGNoYW5nZXMgdGhyb3VnaG91dCB0aGUgcGFnZVxuICogbGlmZXNwYW4uXG4gKlxuICogXyoqSW1wb3J0YW50OioqIENMUyBzaG91bGQgYmUgY29udGludWFsbHkgbW9uaXRvcmVkIGZvciBjaGFuZ2VzIHRocm91Z2hvdXRcbiAqIHRoZSBlbnRpcmUgbGlmZXNwYW4gb2YgYSBwYWdl4oCUaW5jbHVkaW5nIGlmIHRoZSB1c2VyIHJldHVybnMgdG8gdGhlIHBhZ2UgYWZ0ZXJcbiAqIGl0J3MgYmVlbiBoaWRkZW4vYmFja2dyb3VuZGVkLiBIb3dldmVyLCBzaW5jZSBicm93c2VycyBvZnRlbiBbd2lsbCBub3QgZmlyZVxuICogYWRkaXRpb25hbCBjYWxsYmFja3Mgb25jZSB0aGUgdXNlciBoYXMgYmFja2dyb3VuZGVkIGFcbiAqIHBhZ2VdKGh0dHBzOi8vZGV2ZWxvcGVyLmNocm9tZS5jb20vYmxvZy9wYWdlLWxpZmVjeWNsZS1hcGkvI2FkdmljZS1oaWRkZW4pLFxuICogYGNhbGxiYWNrYCBpcyBhbHdheXMgY2FsbGVkIHdoZW4gdGhlIHBhZ2UncyB2aXNpYmlsaXR5IHN0YXRlIGNoYW5nZXMgdG9cbiAqIGhpZGRlbi4gQXMgYSByZXN1bHQsIHRoZSBgY2FsbGJhY2tgIGZ1bmN0aW9uIG1pZ2h0IGJlIGNhbGxlZCBtdWx0aXBsZSB0aW1lc1xuICogZHVyaW5nIHRoZSBzYW1lIHBhZ2UgbG9hZC5fXG4gKi9cbmNvbnN0IG9uQ0xTID0gKG9uUmVwb3J0LCBvcHRzID0ge30pID0+IHtcbiAgLy8gU3RhcnQgbW9uaXRvcmluZyBGQ1Agc28gd2UgY2FuIG9ubHkgcmVwb3J0IENMUyBpZiBGQ1AgaXMgYWxzbyByZXBvcnRlZC5cbiAgLy8gTm90ZTogdGhpcyBpcyBkb25lIHRvIG1hdGNoIHRoZSBjdXJyZW50IGJlaGF2aW9yIG9mIENyVVguXG4gIG9uRkNQKFxuICAgIHJ1bk9uY2UoKCkgPT4ge1xuICAgICAgY29uc3QgbWV0cmljID0gaW5pdE1ldHJpYygnQ0xTJywgMCk7XG4gICAgICBsZXQgcmVwb3J0O1xuXG4gICAgICBsZXQgc2Vzc2lvblZhbHVlID0gMDtcbiAgICAgIGxldCBzZXNzaW9uRW50cmllcyA9IFtdO1xuXG4gICAgICBjb25zdCBoYW5kbGVFbnRyaWVzID0gKGVudHJpZXMpID0+IHtcbiAgICAgICAgZW50cmllcy5mb3JFYWNoKGVudHJ5ID0+IHtcbiAgICAgICAgICAvLyBPbmx5IGNvdW50IGxheW91dCBzaGlmdHMgd2l0aG91dCByZWNlbnQgdXNlciBpbnB1dC5cbiAgICAgICAgICBpZiAoIWVudHJ5LmhhZFJlY2VudElucHV0KSB7XG4gICAgICAgICAgICBjb25zdCBmaXJzdFNlc3Npb25FbnRyeSA9IHNlc3Npb25FbnRyaWVzWzBdO1xuICAgICAgICAgICAgY29uc3QgbGFzdFNlc3Npb25FbnRyeSA9IHNlc3Npb25FbnRyaWVzW3Nlc3Npb25FbnRyaWVzLmxlbmd0aCAtIDFdO1xuXG4gICAgICAgICAgICAvLyBJZiB0aGUgZW50cnkgb2NjdXJyZWQgbGVzcyB0aGFuIDEgc2Vjb25kIGFmdGVyIHRoZSBwcmV2aW91cyBlbnRyeVxuICAgICAgICAgICAgLy8gYW5kIGxlc3MgdGhhbiA1IHNlY29uZHMgYWZ0ZXIgdGhlIGZpcnN0IGVudHJ5IGluIHRoZSBzZXNzaW9uLFxuICAgICAgICAgICAgLy8gaW5jbHVkZSB0aGUgZW50cnkgaW4gdGhlIGN1cnJlbnQgc2Vzc2lvbi4gT3RoZXJ3aXNlLCBzdGFydCBhIG5ld1xuICAgICAgICAgICAgLy8gc2Vzc2lvbi5cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgc2Vzc2lvblZhbHVlICYmXG4gICAgICAgICAgICAgIGVudHJ5LnN0YXJ0VGltZSAtIGxhc3RTZXNzaW9uRW50cnkuc3RhcnRUaW1lIDwgMTAwMCAmJlxuICAgICAgICAgICAgICBlbnRyeS5zdGFydFRpbWUgLSBmaXJzdFNlc3Npb25FbnRyeS5zdGFydFRpbWUgPCA1MDAwXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgc2Vzc2lvblZhbHVlICs9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgICAgICBzZXNzaW9uRW50cmllcy5wdXNoKGVudHJ5KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHNlc3Npb25WYWx1ZSA9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgICAgICBzZXNzaW9uRW50cmllcyA9IFtlbnRyeV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBJZiB0aGUgY3VycmVudCBzZXNzaW9uIHZhbHVlIGlzIGxhcmdlciB0aGFuIHRoZSBjdXJyZW50IENMUyB2YWx1ZSxcbiAgICAgICAgLy8gdXBkYXRlIENMUyBhbmQgdGhlIGVudHJpZXMgY29udHJpYnV0aW5nIHRvIGl0LlxuICAgICAgICBpZiAoc2Vzc2lvblZhbHVlID4gbWV0cmljLnZhbHVlKSB7XG4gICAgICAgICAgbWV0cmljLnZhbHVlID0gc2Vzc2lvblZhbHVlO1xuICAgICAgICAgIG1ldHJpYy5lbnRyaWVzID0gc2Vzc2lvbkVudHJpZXM7XG4gICAgICAgICAgcmVwb3J0KCk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IHBvID0gb2JzZXJ2ZSgnbGF5b3V0LXNoaWZ0JywgaGFuZGxlRW50cmllcyk7XG4gICAgICBpZiAocG8pIHtcbiAgICAgICAgcmVwb3J0ID0gYmluZFJlcG9ydGVyKG9uUmVwb3J0LCBtZXRyaWMsIENMU1RocmVzaG9sZHMsIG9wdHMucmVwb3J0QWxsQ2hhbmdlcyk7XG5cbiAgICAgICAgb25IaWRkZW4oKCkgPT4ge1xuICAgICAgICAgIGhhbmRsZUVudHJpZXMocG8udGFrZVJlY29yZHMoKSApO1xuICAgICAgICAgIHJlcG9ydCh0cnVlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gUXVldWUgYSB0YXNrIHRvIHJlcG9ydCAoaWYgbm90aGluZyBlbHNlIHRyaWdnZXJzIGEgcmVwb3J0IGZpcnN0KS5cbiAgICAgICAgLy8gVGhpcyBhbGxvd3MgQ0xTIHRvIGJlIHJlcG9ydGVkIGFzIHNvb24gYXMgRkNQIGZpcmVzIHdoZW5cbiAgICAgICAgLy8gYHJlcG9ydEFsbENoYW5nZXNgIGlzIHRydWUuXG4gICAgICAgIHNldFRpbWVvdXQocmVwb3J0LCAwKTtcbiAgICAgIH1cbiAgICB9KSxcbiAgKTtcbn07XG5cbmV4cG9ydCB7IENMU1RocmVzaG9sZHMsIG9uQ0xTIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDTFMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getCLS.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getFID.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getFID.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FIDThresholds\": function() { return /* binding */ FIDThresholds; },\n/* harmony export */   \"onFID\": function() { return /* binding */ onFID; }\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/onHidden.js\");\n/* harmony import */ var _lib_runOnce_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/runOnce.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/runOnce.js\");\n/* harmony import */ var _lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/whenActivated.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/whenActivated.js\");\n\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FID. See https://web.dev/articles/fid#what_is_a_good_fid_score */\nconst FIDThresholds = [100, 300];\n\n/**\n * Calculates the [FID](https://web.dev/articles/fid) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport, opts = {}) => {\n  (0,_lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_0__.whenActivated)(() => {\n    const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_1__.getVisibilityWatcher)();\n    const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__.initMetric)('FID');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntry = (entry) => {\n      // Only report if the page wasn't hidden prior to the first input.\n      if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n        metric.value = entry.processingStart - entry.startTime;\n        metric.entries.push(entry);\n        report(true);\n      }\n    };\n\n    const handleEntries = (entries) => {\n      (entries ).forEach(handleEntry);\n    };\n\n    const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('first-input', handleEntries);\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__.bindReporter)(onReport, metric, FIDThresholds, opts.reportAllChanges);\n\n    if (po) {\n      (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__.onHidden)(\n        (0,_lib_runOnce_js__WEBPACK_IMPORTED_MODULE_6__.runOnce)(() => {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n        }),\n      );\n    }\n  });\n};\n\n\n//# sourceMappingURL=getFID.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvZ2V0RklELmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFxRDtBQUNnQjtBQUNwQjtBQUNOO0FBQ0U7QUFDRjtBQUNZOztBQUV2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLEVBQUUsb0VBQWE7QUFDZiw4QkFBOEIsa0ZBQW9CO0FBQ2xELG1CQUFtQiw4REFBVTtBQUM3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGVBQWUsd0RBQU87QUFDdEIsYUFBYSxrRUFBWTs7QUFFekI7QUFDQSxNQUFNLDBEQUFRO0FBQ2QsUUFBUSx3REFBTztBQUNmO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vbWV0cmljcy93ZWItdml0YWxzL2dldEZJRC5qcz8xYWZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJpbmRSZXBvcnRlciB9IGZyb20gJy4vbGliL2JpbmRSZXBvcnRlci5qcyc7XG5pbXBvcnQgeyBnZXRWaXNpYmlsaXR5V2F0Y2hlciB9IGZyb20gJy4vbGliL2dldFZpc2liaWxpdHlXYXRjaGVyLmpzJztcbmltcG9ydCB7IGluaXRNZXRyaWMgfSBmcm9tICcuL2xpYi9pbml0TWV0cmljLmpzJztcbmltcG9ydCB7IG9ic2VydmUgfSBmcm9tICcuL2xpYi9vYnNlcnZlLmpzJztcbmltcG9ydCB7IG9uSGlkZGVuIH0gZnJvbSAnLi9saWIvb25IaWRkZW4uanMnO1xuaW1wb3J0IHsgcnVuT25jZSB9IGZyb20gJy4vbGliL3J1bk9uY2UuanMnO1xuaW1wb3J0IHsgd2hlbkFjdGl2YXRlZCB9IGZyb20gJy4vbGliL3doZW5BY3RpdmF0ZWQuanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG4vKiogVGhyZXNob2xkcyBmb3IgRklELiBTZWUgaHR0cHM6Ly93ZWIuZGV2L2FydGljbGVzL2ZpZCN3aGF0X2lzX2FfZ29vZF9maWRfc2NvcmUgKi9cbmNvbnN0IEZJRFRocmVzaG9sZHMgPSBbMTAwLCAzMDBdO1xuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIFtGSURdKGh0dHBzOi8vd2ViLmRldi9hcnRpY2xlcy9maWQpIHZhbHVlIGZvciB0aGUgY3VycmVudCBwYWdlIGFuZFxuICogY2FsbHMgdGhlIGBjYWxsYmFja2AgZnVuY3Rpb24gb25jZSB0aGUgdmFsdWUgaXMgcmVhZHksIGFsb25nIHdpdGggdGhlXG4gKiByZWxldmFudCBgZmlyc3QtaW5wdXRgIHBlcmZvcm1hbmNlIGVudHJ5IHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSB2YWx1ZS4gVGhlXG4gKiByZXBvcnRlZCB2YWx1ZSBpcyBhIGBET01IaWdoUmVzVGltZVN0YW1wYC5cbiAqXG4gKiBfKipJbXBvcnRhbnQ6Kiogc2luY2UgRklEIGlzIG9ubHkgcmVwb3J0ZWQgYWZ0ZXIgdGhlIHVzZXIgaW50ZXJhY3RzIHdpdGggdGhlXG4gKiBwYWdlLCBpdCdzIHBvc3NpYmxlIHRoYXQgaXQgd2lsbCBub3QgYmUgcmVwb3J0ZWQgZm9yIHNvbWUgcGFnZSBsb2Fkcy5fXG4gKi9cbmNvbnN0IG9uRklEID0gKG9uUmVwb3J0LCBvcHRzID0ge30pID0+IHtcbiAgd2hlbkFjdGl2YXRlZCgoKSA9PiB7XG4gICAgY29uc3QgdmlzaWJpbGl0eVdhdGNoZXIgPSBnZXRWaXNpYmlsaXR5V2F0Y2hlcigpO1xuICAgIGNvbnN0IG1ldHJpYyA9IGluaXRNZXRyaWMoJ0ZJRCcpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItY29uc3RcbiAgICBsZXQgcmVwb3J0O1xuXG4gICAgY29uc3QgaGFuZGxlRW50cnkgPSAoZW50cnkpID0+IHtcbiAgICAgIC8vIE9ubHkgcmVwb3J0IGlmIHRoZSBwYWdlIHdhc24ndCBoaWRkZW4gcHJpb3IgdG8gdGhlIGZpcnN0IGlucHV0LlxuICAgICAgaWYgKGVudHJ5LnN0YXJ0VGltZSA8IHZpc2liaWxpdHlXYXRjaGVyLmZpcnN0SGlkZGVuVGltZSkge1xuICAgICAgICBtZXRyaWMudmFsdWUgPSBlbnRyeS5wcm9jZXNzaW5nU3RhcnQgLSBlbnRyeS5zdGFydFRpbWU7XG4gICAgICAgIG1ldHJpYy5lbnRyaWVzLnB1c2goZW50cnkpO1xuICAgICAgICByZXBvcnQodHJ1ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGhhbmRsZUVudHJpZXMgPSAoZW50cmllcykgPT4ge1xuICAgICAgKGVudHJpZXMgKS5mb3JFYWNoKGhhbmRsZUVudHJ5KTtcbiAgICB9O1xuXG4gICAgY29uc3QgcG8gPSBvYnNlcnZlKCdmaXJzdC1pbnB1dCcsIGhhbmRsZUVudHJpZXMpO1xuICAgIHJlcG9ydCA9IGJpbmRSZXBvcnRlcihvblJlcG9ydCwgbWV0cmljLCBGSURUaHJlc2hvbGRzLCBvcHRzLnJlcG9ydEFsbENoYW5nZXMpO1xuXG4gICAgaWYgKHBvKSB7XG4gICAgICBvbkhpZGRlbihcbiAgICAgICAgcnVuT25jZSgoKSA9PiB7XG4gICAgICAgICAgaGFuZGxlRW50cmllcyhwby50YWtlUmVjb3JkcygpICk7XG4gICAgICAgICAgcG8uZGlzY29ubmVjdCgpO1xuICAgICAgICB9KSxcbiAgICAgICk7XG4gICAgfVxuICB9KTtcbn07XG5cbmV4cG9ydCB7IEZJRFRocmVzaG9sZHMsIG9uRklEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRGSUQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getFID.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getINP.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getINP.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"INPThresholds\": function() { return /* binding */ INPThresholds; },\n/* harmony export */   \"onINP\": function() { return /* binding */ onINP; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/onHidden.js\");\n/* harmony import */ var _lib_polyfills_interactionCountPolyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/polyfills/interactionCountPolyfill.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js\");\n/* harmony import */ var _lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/whenActivated.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/whenActivated.js\");\n\n\n\n\n\n\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for INP. See https://web.dev/articles/inp#what_is_a_good_inp_score */\nconst INPThresholds = [200, 500];\n\n// Used to store the interaction count after a bfcache restore, since p98\n// interaction latencies should only consider the current navigation.\nconst prevInteractionCount = 0;\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = () => {\n  return (0,_lib_polyfills_interactionCountPolyfill_js__WEBPACK_IMPORTED_MODULE_0__.getInteractionCount)() - prevInteractionCount;\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is as most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap = {};\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processEntry = (entry) => {\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const existingInteraction = longestInteractionMap[entry.interactionId];\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    entry.duration > minLongestInteraction.latency\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      existingInteraction.entries.push(entry);\n      existingInteraction.latency = Math.max(existingInteraction.latency, entry.duration);\n    } else {\n      const interaction = {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        id: entry.interactionId,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap[interaction.id] = interaction;\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete longestInteractionMap[i.id];\n    });\n  }\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = () => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n/**\n * Calculates the [INP](https://web.dev/articles/inp) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/articles/inp#what_is_a_good_inp_score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onINP = (onReport, opts = {}) => {\n  (0,_lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_1__.whenActivated)(() => {\n    // TODO(philipwalton): remove once the polyfill is no longer needed.\n    (0,_lib_polyfills_interactionCountPolyfill_js__WEBPACK_IMPORTED_MODULE_0__.initInteractionCountPolyfill)();\n\n    const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__.initMetric)('INP');\n    // eslint-disable-next-line prefer-const\n    let report;\n\n    const handleEntries = (entries) => {\n      entries.forEach(entry => {\n        if (entry.interactionId) {\n          processEntry(entry);\n        }\n\n        // Entries of type `first-input` don't currently have an `interactionId`,\n        // so to consider them in INP we have to first check that an existing\n        // entry doesn't match the `duration` and `startTime`.\n        // Note that this logic assumes that `event` entries are dispatched\n        // before `first-input` entries. This is true in Chrome (the only browser\n        // that currently supports INP).\n        // TODO(philipwalton): remove once crbug.com/1325826 is fixed.\n        if (entry.entryType === 'first-input') {\n          const noMatchingEntry = !longestInteractionList.some(interaction => {\n            return interaction.entries.some(prevEntry => {\n              return entry.duration === prevEntry.duration && entry.startTime === prevEntry.startTime;\n            });\n          });\n          if (noMatchingEntry) {\n            processEntry(entry);\n          }\n        }\n      });\n\n      const inp = estimateP98LongestInteraction();\n\n      if (inp && inp.latency !== metric.value) {\n        metric.value = inp.latency;\n        metric.entries = inp.entries;\n        report();\n      }\n    };\n\n    const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('event', handleEntries, {\n      // Event Timing entries have their durations rounded to the nearest 8ms,\n      // so a duration of 40ms would be any event that spans 2.5 or more frames\n      // at 60Hz. This threshold is chosen to strike a balance between usefulness\n      // and performance. Running this callback for any interaction that spans\n      // just one or two frames is likely not worth the insight that could be\n      // gained.\n      durationThreshold: opts.durationThreshold != null ? opts.durationThreshold : 40,\n    } );\n\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__.bindReporter)(onReport, metric, INPThresholds, opts.reportAllChanges);\n\n    if (po) {\n      // If browser supports interactionId (and so supports INP), also\n      // observe entries of type `first-input`. This is useful in cases\n      // where the first interaction is less than the `durationThreshold`.\n      if (\"PerformanceEventTiming\" in _types_js__WEBPACK_IMPORTED_MODULE_5__.WINDOW && 'interactionId' in PerformanceEventTiming.prototype) {\n        po.observe({ type: 'first-input', buffered: true });\n      }\n\n      (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_6__.onHidden)(() => {\n        handleEntries(po.takeRecords() );\n\n        // If the interaction count shows that there were interactions but\n        // none were captured by the PerformanceObserver, report a latency of 0.\n        if (metric.value < 0 && getInteractionCountForNavigation() > 0) {\n          metric.value = 0;\n          metric.entries = [];\n        }\n\n        report(true);\n      });\n    }\n  });\n};\n\n\n//# sourceMappingURL=getINP.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getINP.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getLCP.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getLCP.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LCPThresholds\": function() { return /* binding */ LCPThresholds; },\n/* harmony export */   \"onLCP\": function() { return /* binding */ onLCP; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/getActivationStart.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/onHidden.js\");\n/* harmony import */ var _lib_runOnce_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/runOnce.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/runOnce.js\");\n/* harmony import */ var _lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/whenActivated.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/whenActivated.js\");\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for LCP. See https://web.dev/articles/lcp#what_is_a_good_lcp_score */\nconst LCPThresholds = [2500, 4000];\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/articles/lcp) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called any time a new `largest-contentful-paint`\n * performance entry is dispatched, or once the final value of the metric has\n * been determined.\n */\nconst onLCP = (onReport, opts = {}) => {\n  (0,_lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_0__.whenActivated)(() => {\n    const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_1__.getVisibilityWatcher)();\n    const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__.initMetric)('LCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      const lastEntry = entries[entries.length - 1] ;\n      if (lastEntry) {\n        // Only report if the page wasn't hidden prior to LCP.\n        if (lastEntry.startTime < visibilityWatcher.firstHiddenTime) {\n          // The startTime attribute returns the value of the renderTime if it is\n          // not 0, and the value of the loadTime otherwise. The activationStart\n          // reference is used because LCP should be relative to page activation\n          // rather than navigation start if the page was prerendered. But in cases\n          // where `activationStart` occurs after the LCP, this time should be\n          // clamped at 0.\n          metric.value = Math.max(lastEntry.startTime - (0,_lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_3__.getActivationStart)(), 0);\n          metric.entries = [lastEntry];\n          report();\n        }\n      }\n    };\n\n    const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_4__.observe)('largest-contentful-paint', handleEntries);\n\n    if (po) {\n      report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_5__.bindReporter)(onReport, metric, LCPThresholds, opts.reportAllChanges);\n\n      const stopListening = (0,_lib_runOnce_js__WEBPACK_IMPORTED_MODULE_6__.runOnce)(() => {\n        if (!reportedMetricIDs[metric.id]) {\n          handleEntries(po.takeRecords() );\n          po.disconnect();\n          reportedMetricIDs[metric.id] = true;\n          report(true);\n        }\n      });\n\n      // Stop listening after input. Note: while scrolling is an input that\n      // stops LCP observation, it's unreliable since it can be programmatically\n      // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n      ['keydown', 'click'].forEach(type => {\n        if (_types_js__WEBPACK_IMPORTED_MODULE_7__.WINDOW.document) {\n          // Wrap in a setTimeout so the callback is run in a separate task\n          // to avoid extending the keyboard/click handler to reduce INP impact\n          // https://github.com/GoogleChrome/web-vitals/issues/383\n          addEventListener(type, () => setTimeout(stopListening, 0), true);\n        }\n      });\n\n      (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_8__.onHidden)(stopListening);\n    }\n  });\n};\n\n\n//# sourceMappingURL=getLCP.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvZ2V0TENQLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ2E7QUFDWTtBQUNJO0FBQ3BCO0FBQ047QUFDRTtBQUNGO0FBQ1k7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLEVBQUUsb0VBQWE7QUFDZiw4QkFBOEIsa0ZBQW9CO0FBQ2xELG1CQUFtQiw4REFBVTtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELDhFQUFrQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWUsd0RBQU87O0FBRXRCO0FBQ0EsZUFBZSxrRUFBWTs7QUFFM0IsNEJBQTRCLHdEQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHNEQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQLE1BQU0sMERBQVE7QUFDZDtBQUNBLEdBQUc7QUFDSDs7QUFFZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vbWV0cmljcy93ZWItdml0YWxzL2dldExDUC5qcz80NjM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uL3R5cGVzLmpzJztcbmltcG9ydCB7IGJpbmRSZXBvcnRlciB9IGZyb20gJy4vbGliL2JpbmRSZXBvcnRlci5qcyc7XG5pbXBvcnQgeyBnZXRBY3RpdmF0aW9uU3RhcnQgfSBmcm9tICcuL2xpYi9nZXRBY3RpdmF0aW9uU3RhcnQuanMnO1xuaW1wb3J0IHsgZ2V0VmlzaWJpbGl0eVdhdGNoZXIgfSBmcm9tICcuL2xpYi9nZXRWaXNpYmlsaXR5V2F0Y2hlci5qcyc7XG5pbXBvcnQgeyBpbml0TWV0cmljIH0gZnJvbSAnLi9saWIvaW5pdE1ldHJpYy5qcyc7XG5pbXBvcnQgeyBvYnNlcnZlIH0gZnJvbSAnLi9saWIvb2JzZXJ2ZS5qcyc7XG5pbXBvcnQgeyBvbkhpZGRlbiB9IGZyb20gJy4vbGliL29uSGlkZGVuLmpzJztcbmltcG9ydCB7IHJ1bk9uY2UgfSBmcm9tICcuL2xpYi9ydW5PbmNlLmpzJztcbmltcG9ydCB7IHdoZW5BY3RpdmF0ZWQgfSBmcm9tICcuL2xpYi93aGVuQWN0aXZhdGVkLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cblxuLyoqIFRocmVzaG9sZHMgZm9yIExDUC4gU2VlIGh0dHBzOi8vd2ViLmRldi9hcnRpY2xlcy9sY3Ajd2hhdF9pc19hX2dvb2RfbGNwX3Njb3JlICovXG5jb25zdCBMQ1BUaHJlc2hvbGRzID0gWzI1MDAsIDQwMDBdO1xuXG5jb25zdCByZXBvcnRlZE1ldHJpY0lEcyA9IHt9O1xuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIFtMQ1BdKGh0dHBzOi8vd2ViLmRldi9hcnRpY2xlcy9sY3ApIHZhbHVlIGZvciB0aGUgY3VycmVudCBwYWdlIGFuZFxuICogY2FsbHMgdGhlIGBjYWxsYmFja2AgZnVuY3Rpb24gb25jZSB0aGUgdmFsdWUgaXMgcmVhZHkgKGFsb25nIHdpdGggdGhlXG4gKiByZWxldmFudCBgbGFyZ2VzdC1jb250ZW50ZnVsLXBhaW50YCBwZXJmb3JtYW5jZSBlbnRyeSB1c2VkIHRvIGRldGVybWluZSB0aGVcbiAqIHZhbHVlKS4gVGhlIHJlcG9ydGVkIHZhbHVlIGlzIGEgYERPTUhpZ2hSZXNUaW1lU3RhbXBgLlxuICpcbiAqIElmIHRoZSBgcmVwb3J0QWxsQ2hhbmdlc2AgY29uZmlndXJhdGlvbiBvcHRpb24gaXMgc2V0IHRvIGB0cnVlYCwgdGhlXG4gKiBgY2FsbGJhY2tgIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGFueSB0aW1lIGEgbmV3IGBsYXJnZXN0LWNvbnRlbnRmdWwtcGFpbnRgXG4gKiBwZXJmb3JtYW5jZSBlbnRyeSBpcyBkaXNwYXRjaGVkLCBvciBvbmNlIHRoZSBmaW5hbCB2YWx1ZSBvZiB0aGUgbWV0cmljIGhhc1xuICogYmVlbiBkZXRlcm1pbmVkLlxuICovXG5jb25zdCBvbkxDUCA9IChvblJlcG9ydCwgb3B0cyA9IHt9KSA9PiB7XG4gIHdoZW5BY3RpdmF0ZWQoKCkgPT4ge1xuICAgIGNvbnN0IHZpc2liaWxpdHlXYXRjaGVyID0gZ2V0VmlzaWJpbGl0eVdhdGNoZXIoKTtcbiAgICBjb25zdCBtZXRyaWMgPSBpbml0TWV0cmljKCdMQ1AnKTtcbiAgICBsZXQgcmVwb3J0O1xuXG4gICAgY29uc3QgaGFuZGxlRW50cmllcyA9IChlbnRyaWVzKSA9PiB7XG4gICAgICBjb25zdCBsYXN0RW50cnkgPSBlbnRyaWVzW2VudHJpZXMubGVuZ3RoIC0gMV0gO1xuICAgICAgaWYgKGxhc3RFbnRyeSkge1xuICAgICAgICAvLyBPbmx5IHJlcG9ydCBpZiB0aGUgcGFnZSB3YXNuJ3QgaGlkZGVuIHByaW9yIHRvIExDUC5cbiAgICAgICAgaWYgKGxhc3RFbnRyeS5zdGFydFRpbWUgPCB2aXNpYmlsaXR5V2F0Y2hlci5maXJzdEhpZGRlblRpbWUpIHtcbiAgICAgICAgICAvLyBUaGUgc3RhcnRUaW1lIGF0dHJpYnV0ZSByZXR1cm5zIHRoZSB2YWx1ZSBvZiB0aGUgcmVuZGVyVGltZSBpZiBpdCBpc1xuICAgICAgICAgIC8vIG5vdCAwLCBhbmQgdGhlIHZhbHVlIG9mIHRoZSBsb2FkVGltZSBvdGhlcndpc2UuIFRoZSBhY3RpdmF0aW9uU3RhcnRcbiAgICAgICAgICAvLyByZWZlcmVuY2UgaXMgdXNlZCBiZWNhdXNlIExDUCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gcGFnZSBhY3RpdmF0aW9uXG4gICAgICAgICAgLy8gcmF0aGVyIHRoYW4gbmF2aWdhdGlvbiBzdGFydCBpZiB0aGUgcGFnZSB3YXMgcHJlcmVuZGVyZWQuIEJ1dCBpbiBjYXNlc1xuICAgICAgICAgIC8vIHdoZXJlIGBhY3RpdmF0aW9uU3RhcnRgIG9jY3VycyBhZnRlciB0aGUgTENQLCB0aGlzIHRpbWUgc2hvdWxkIGJlXG4gICAgICAgICAgLy8gY2xhbXBlZCBhdCAwLlxuICAgICAgICAgIG1ldHJpYy52YWx1ZSA9IE1hdGgubWF4KGxhc3RFbnRyeS5zdGFydFRpbWUgLSBnZXRBY3RpdmF0aW9uU3RhcnQoKSwgMCk7XG4gICAgICAgICAgbWV0cmljLmVudHJpZXMgPSBbbGFzdEVudHJ5XTtcbiAgICAgICAgICByZXBvcnQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBwbyA9IG9ic2VydmUoJ2xhcmdlc3QtY29udGVudGZ1bC1wYWludCcsIGhhbmRsZUVudHJpZXMpO1xuXG4gICAgaWYgKHBvKSB7XG4gICAgICByZXBvcnQgPSBiaW5kUmVwb3J0ZXIob25SZXBvcnQsIG1ldHJpYywgTENQVGhyZXNob2xkcywgb3B0cy5yZXBvcnRBbGxDaGFuZ2VzKTtcblxuICAgICAgY29uc3Qgc3RvcExpc3RlbmluZyA9IHJ1bk9uY2UoKCkgPT4ge1xuICAgICAgICBpZiAoIXJlcG9ydGVkTWV0cmljSURzW21ldHJpYy5pZF0pIHtcbiAgICAgICAgICBoYW5kbGVFbnRyaWVzKHBvLnRha2VSZWNvcmRzKCkgKTtcbiAgICAgICAgICBwby5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgcmVwb3J0ZWRNZXRyaWNJRHNbbWV0cmljLmlkXSA9IHRydWU7XG4gICAgICAgICAgcmVwb3J0KHRydWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgLy8gU3RvcCBsaXN0ZW5pbmcgYWZ0ZXIgaW5wdXQuIE5vdGU6IHdoaWxlIHNjcm9sbGluZyBpcyBhbiBpbnB1dCB0aGF0XG4gICAgICAvLyBzdG9wcyBMQ1Agb2JzZXJ2YXRpb24sIGl0J3MgdW5yZWxpYWJsZSBzaW5jZSBpdCBjYW4gYmUgcHJvZ3JhbW1hdGljYWxseVxuICAgICAgLy8gZ2VuZXJhdGVkLiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDaHJvbWUvd2ViLXZpdGFscy9pc3N1ZXMvNzVcbiAgICAgIFsna2V5ZG93bicsICdjbGljayddLmZvckVhY2godHlwZSA9PiB7XG4gICAgICAgIGlmIChXSU5ET1cuZG9jdW1lbnQpIHtcbiAgICAgICAgICAvLyBXcmFwIGluIGEgc2V0VGltZW91dCBzbyB0aGUgY2FsbGJhY2sgaXMgcnVuIGluIGEgc2VwYXJhdGUgdGFza1xuICAgICAgICAgIC8vIHRvIGF2b2lkIGV4dGVuZGluZyB0aGUga2V5Ym9hcmQvY2xpY2sgaGFuZGxlciB0byByZWR1Y2UgSU5QIGltcGFjdFxuICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDaHJvbWUvd2ViLXZpdGFscy9pc3N1ZXMvMzgzXG4gICAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCAoKSA9PiBzZXRUaW1lb3V0KHN0b3BMaXN0ZW5pbmcsIDApLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIG9uSGlkZGVuKHN0b3BMaXN0ZW5pbmcpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5leHBvcnQgeyBMQ1BUaHJlc2hvbGRzLCBvbkxDUCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TENQLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/getLCP.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bindReporter\": function() { return /* binding */ bindReporter; }\n/* harmony export */ });\nconst getRating = (value, thresholds) => {\n  if (value > thresholds[1]) {\n    return 'poor';\n  }\n  if (value > thresholds[0]) {\n    return 'needs-improvement';\n  }\n  return 'good';\n};\n\nconst bindReporter = (\n  callback,\n  metric,\n  thresholds,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          metric.rating = getRating(metric.value, thresholds);\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\n\n//# sourceMappingURL=bindReporter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL2JpbmRSZXBvcnRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL2JpbmRSZXBvcnRlci5qcz8wNTYxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldFJhdGluZyA9ICh2YWx1ZSwgdGhyZXNob2xkcykgPT4ge1xuICBpZiAodmFsdWUgPiB0aHJlc2hvbGRzWzFdKSB7XG4gICAgcmV0dXJuICdwb29yJztcbiAgfVxuICBpZiAodmFsdWUgPiB0aHJlc2hvbGRzWzBdKSB7XG4gICAgcmV0dXJuICduZWVkcy1pbXByb3ZlbWVudCc7XG4gIH1cbiAgcmV0dXJuICdnb29kJztcbn07XG5cbmNvbnN0IGJpbmRSZXBvcnRlciA9IChcbiAgY2FsbGJhY2ssXG4gIG1ldHJpYyxcbiAgdGhyZXNob2xkcyxcbiAgcmVwb3J0QWxsQ2hhbmdlcyxcbikgPT4ge1xuICBsZXQgcHJldlZhbHVlO1xuICBsZXQgZGVsdGE7XG4gIHJldHVybiAoZm9yY2VSZXBvcnQpID0+IHtcbiAgICBpZiAobWV0cmljLnZhbHVlID49IDApIHtcbiAgICAgIGlmIChmb3JjZVJlcG9ydCB8fCByZXBvcnRBbGxDaGFuZ2VzKSB7XG4gICAgICAgIGRlbHRhID0gbWV0cmljLnZhbHVlIC0gKHByZXZWYWx1ZSB8fCAwKTtcblxuICAgICAgICAvLyBSZXBvcnQgdGhlIG1ldHJpYyBpZiB0aGVyZSdzIGEgbm9uLXplcm8gZGVsdGEgb3IgaWYgbm8gcHJldmlvdXNcbiAgICAgICAgLy8gdmFsdWUgZXhpc3RzICh3aGljaCBjYW4gaGFwcGVuIGluIHRoZSBjYXNlIG9mIHRoZSBkb2N1bWVudCBiZWNvbWluZ1xuICAgICAgICAvLyBoaWRkZW4gd2hlbiB0aGUgbWV0cmljIHZhbHVlIGlzIDApLlxuICAgICAgICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDaHJvbWUvd2ViLXZpdGFscy9pc3N1ZXMvMTRcbiAgICAgICAgaWYgKGRlbHRhIHx8IHByZXZWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcHJldlZhbHVlID0gbWV0cmljLnZhbHVlO1xuICAgICAgICAgIG1ldHJpYy5kZWx0YSA9IGRlbHRhO1xuICAgICAgICAgIG1ldHJpYy5yYXRpbmcgPSBnZXRSYXRpbmcobWV0cmljLnZhbHVlLCB0aHJlc2hvbGRzKTtcbiAgICAgICAgICBjYWxsYmFjayhtZXRyaWMpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcblxuZXhwb3J0IHsgYmluZFJlcG9ydGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iaW5kUmVwb3J0ZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/generateUniqueID.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/generateUniqueID.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateUniqueID\": function() { return /* binding */ generateUniqueID; }\n/* harmony export */ });\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\n\n//# sourceMappingURL=generateUniqueID.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL2dlbmVyYXRlVW5pcXVlSUQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGVBQWUsV0FBVyxHQUFHLDhDQUE4QztBQUMzRTs7QUFFNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vbWV0cmljcy93ZWItdml0YWxzL2xpYi9nZW5lcmF0ZVVuaXF1ZUlELmpzP2QxZDUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKlxuICogUGVyZm9ybWFudGx5IGdlbmVyYXRlIGEgdW5pcXVlLCAzMC1jaGFyIHN0cmluZyBieSBjb21iaW5pbmcgYSB2ZXJzaW9uXG4gKiBudW1iZXIsIHRoZSBjdXJyZW50IHRpbWVzdGFtcCB3aXRoIGEgMTMtZGlnaXQgbnVtYmVyIGludGVnZXIuXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmNvbnN0IGdlbmVyYXRlVW5pcXVlSUQgPSAoKSA9PiB7XG4gIHJldHVybiBgdjMtJHtEYXRlLm5vdygpfS0ke01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICg5ZTEyIC0gMSkpICsgMWUxMn1gO1xufTtcblxuZXhwb3J0IHsgZ2VuZXJhdGVVbmlxdWVJRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2VuZXJhdGVVbmlxdWVJRC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/generateUniqueID.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getActivationStart.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getActivationStart.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getActivationStart\": function() { return /* binding */ getActivationStart; }\n/* harmony export */ });\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getNavigationEntry.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst getActivationStart = () => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\n\n//# sourceMappingURL=getActivationStart.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL2dldEFjdGl2YXRpb25TdGFydC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2RDs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBLG1CQUFtQiwwRUFBa0I7QUFDckM7QUFDQTs7QUFFOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vbWV0cmljcy93ZWItdml0YWxzL2xpYi9nZXRBY3RpdmF0aW9uU3RhcnQuanM/NmY4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYXZpZ2F0aW9uRW50cnkgfSBmcm9tICcuL2dldE5hdmlnYXRpb25FbnRyeS5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbmNvbnN0IGdldEFjdGl2YXRpb25TdGFydCA9ICgpID0+IHtcbiAgY29uc3QgbmF2RW50cnkgPSBnZXROYXZpZ2F0aW9uRW50cnkoKTtcbiAgcmV0dXJuIChuYXZFbnRyeSAmJiBuYXZFbnRyeS5hY3RpdmF0aW9uU3RhcnQpIHx8IDA7XG59O1xuXG5leHBvcnQgeyBnZXRBY3RpdmF0aW9uU3RhcnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEFjdGl2YXRpb25TdGFydC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getActivationStart.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getNavigationEntry.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getNavigationEntry.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNavigationEntry\": function() { return /* binding */ getNavigationEntry; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst getNavigationEntry = () => {\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n};\n\n\n//# sourceMappingURL=getNavigationEntry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL2dldE5hdmlnYXRpb25FbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQzs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBLFNBQVMseURBQWtCO0FBQzNCOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL2dldE5hdmlnYXRpb25FbnRyeS5qcz9iMTEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uLy4uL3R5cGVzLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cblxuY29uc3QgZ2V0TmF2aWdhdGlvbkVudHJ5ID0gKCkgPT4ge1xuICByZXR1cm4gV0lORE9XLnBlcmZvcm1hbmNlICYmIHBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUgJiYgcGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5VHlwZSgnbmF2aWdhdGlvbicpWzBdO1xufTtcblxuZXhwb3J0IHsgZ2V0TmF2aWdhdGlvbkVudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXROYXZpZ2F0aW9uRW50cnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getNavigationEntry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getVisibilityWatcher.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getVisibilityWatcher.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getVisibilityWatcher\": function() { return /* binding */ getVisibilityWatcher; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden when this code runs, assume it was always\n  // hidden and the page was loaded in the background, with the one exception\n  // that visibility state is always 'hidden' during prerendering, so we have\n  // to ignore that case until prerendering finishes (see: `prerenderingchange`\n  // event logic below).\n  firstHiddenTime = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden' && !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst onVisibilityUpdate = (event) => {\n  // If the document is 'hidden' and no previous hidden timestamp has been\n  // set, update it based on the current event data.\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden' && firstHiddenTime > -1) {\n    // If the event is a 'visibilitychange' event, it means the page was\n    // visible prior to this change, so the event timestamp is the first\n    // hidden time.\n    // However, if the event is not a 'visibilitychange' event, then it must\n    // be a 'prerenderingchange' event, and the fact that the document is\n    // still 'hidden' from the above check means the tab was activated\n    // in a background state and so has always been hidden.\n    firstHiddenTime = event.type === 'visibilitychange' ? event.timeStamp : 0;\n\n    // Remove all listeners now that a `firstHiddenTime` value has been set.\n    removeEventListener('visibilitychange', onVisibilityUpdate, true);\n    removeEventListener('prerenderingchange', onVisibilityUpdate, true);\n  }\n};\n\nconst addChangeListeners = () => {\n  addEventListener('visibilitychange', onVisibilityUpdate, true);\n  // IMPORTANT: when a page is prerendering, its `visibilityState` is\n  // 'hidden', so in order to account for cases where this module checks for\n  // visibility during prerendering, an additional check after prerendering\n  // completes is also required.\n  addEventListener('prerenderingchange', onVisibilityUpdate, true);\n};\n\nconst getVisibilityWatcher = () => {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document && firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    addChangeListeners();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\n\n//# sourceMappingURL=getVisibilityWatcher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL2dldFZpc2liaWxpdHlXYXRjaGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzRUFBK0Isa0JBQWtCLG1FQUE0QjtBQUNqRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHNFQUErQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0sc0RBQWU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vbWV0cmljcy93ZWItdml0YWxzL2xpYi9nZXRWaXNpYmlsaXR5V2F0Y2hlci5qcz84ZWQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uLy4uL3R5cGVzLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cblxubGV0IGZpcnN0SGlkZGVuVGltZSA9IC0xO1xuXG5jb25zdCBpbml0SGlkZGVuVGltZSA9ICgpID0+IHtcbiAgLy8gSWYgdGhlIGRvY3VtZW50IGlzIGhpZGRlbiB3aGVuIHRoaXMgY29kZSBydW5zLCBhc3N1bWUgaXQgd2FzIGFsd2F5c1xuICAvLyBoaWRkZW4gYW5kIHRoZSBwYWdlIHdhcyBsb2FkZWQgaW4gdGhlIGJhY2tncm91bmQsIHdpdGggdGhlIG9uZSBleGNlcHRpb25cbiAgLy8gdGhhdCB2aXNpYmlsaXR5IHN0YXRlIGlzIGFsd2F5cyAnaGlkZGVuJyBkdXJpbmcgcHJlcmVuZGVyaW5nLCBzbyB3ZSBoYXZlXG4gIC8vIHRvIGlnbm9yZSB0aGF0IGNhc2UgdW50aWwgcHJlcmVuZGVyaW5nIGZpbmlzaGVzIChzZWU6IGBwcmVyZW5kZXJpbmdjaGFuZ2VgXG4gIC8vIGV2ZW50IGxvZ2ljIGJlbG93KS5cbiAgZmlyc3RIaWRkZW5UaW1lID0gV0lORE9XLmRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSA9PT0gJ2hpZGRlbicgJiYgIVdJTkRPVy5kb2N1bWVudC5wcmVyZW5kZXJpbmcgPyAwIDogSW5maW5pdHk7XG59O1xuXG5jb25zdCBvblZpc2liaWxpdHlVcGRhdGUgPSAoZXZlbnQpID0+IHtcbiAgLy8gSWYgdGhlIGRvY3VtZW50IGlzICdoaWRkZW4nIGFuZCBubyBwcmV2aW91cyBoaWRkZW4gdGltZXN0YW1wIGhhcyBiZWVuXG4gIC8vIHNldCwgdXBkYXRlIGl0IGJhc2VkIG9uIHRoZSBjdXJyZW50IGV2ZW50IGRhdGEuXG4gIGlmIChXSU5ET1cuZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlID09PSAnaGlkZGVuJyAmJiBmaXJzdEhpZGRlblRpbWUgPiAtMSkge1xuICAgIC8vIElmIHRoZSBldmVudCBpcyBhICd2aXNpYmlsaXR5Y2hhbmdlJyBldmVudCwgaXQgbWVhbnMgdGhlIHBhZ2Ugd2FzXG4gICAgLy8gdmlzaWJsZSBwcmlvciB0byB0aGlzIGNoYW5nZSwgc28gdGhlIGV2ZW50IHRpbWVzdGFtcCBpcyB0aGUgZmlyc3RcbiAgICAvLyBoaWRkZW4gdGltZS5cbiAgICAvLyBIb3dldmVyLCBpZiB0aGUgZXZlbnQgaXMgbm90IGEgJ3Zpc2liaWxpdHljaGFuZ2UnIGV2ZW50LCB0aGVuIGl0IG11c3RcbiAgICAvLyBiZSBhICdwcmVyZW5kZXJpbmdjaGFuZ2UnIGV2ZW50LCBhbmQgdGhlIGZhY3QgdGhhdCB0aGUgZG9jdW1lbnQgaXNcbiAgICAvLyBzdGlsbCAnaGlkZGVuJyBmcm9tIHRoZSBhYm92ZSBjaGVjayBtZWFucyB0aGUgdGFiIHdhcyBhY3RpdmF0ZWRcbiAgICAvLyBpbiBhIGJhY2tncm91bmQgc3RhdGUgYW5kIHNvIGhhcyBhbHdheXMgYmVlbiBoaWRkZW4uXG4gICAgZmlyc3RIaWRkZW5UaW1lID0gZXZlbnQudHlwZSA9PT0gJ3Zpc2liaWxpdHljaGFuZ2UnID8gZXZlbnQudGltZVN0YW1wIDogMDtcblxuICAgIC8vIFJlbW92ZSBhbGwgbGlzdGVuZXJzIG5vdyB0aGF0IGEgYGZpcnN0SGlkZGVuVGltZWAgdmFsdWUgaGFzIGJlZW4gc2V0LlxuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBvblZpc2liaWxpdHlVcGRhdGUsIHRydWUpO1xuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoJ3ByZXJlbmRlcmluZ2NoYW5nZScsIG9uVmlzaWJpbGl0eVVwZGF0ZSwgdHJ1ZSk7XG4gIH1cbn07XG5cbmNvbnN0IGFkZENoYW5nZUxpc3RlbmVycyA9ICgpID0+IHtcbiAgYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIG9uVmlzaWJpbGl0eVVwZGF0ZSwgdHJ1ZSk7XG4gIC8vIElNUE9SVEFOVDogd2hlbiBhIHBhZ2UgaXMgcHJlcmVuZGVyaW5nLCBpdHMgYHZpc2liaWxpdHlTdGF0ZWAgaXNcbiAgLy8gJ2hpZGRlbicsIHNvIGluIG9yZGVyIHRvIGFjY291bnQgZm9yIGNhc2VzIHdoZXJlIHRoaXMgbW9kdWxlIGNoZWNrcyBmb3JcbiAgLy8gdmlzaWJpbGl0eSBkdXJpbmcgcHJlcmVuZGVyaW5nLCBhbiBhZGRpdGlvbmFsIGNoZWNrIGFmdGVyIHByZXJlbmRlcmluZ1xuICAvLyBjb21wbGV0ZXMgaXMgYWxzbyByZXF1aXJlZC5cbiAgYWRkRXZlbnRMaXN0ZW5lcigncHJlcmVuZGVyaW5nY2hhbmdlJywgb25WaXNpYmlsaXR5VXBkYXRlLCB0cnVlKTtcbn07XG5cbmNvbnN0IGdldFZpc2liaWxpdHlXYXRjaGVyID0gKCkgPT4ge1xuICBpZiAoV0lORE9XLmRvY3VtZW50ICYmIGZpcnN0SGlkZGVuVGltZSA8IDApIHtcbiAgICAvLyBJZiB0aGUgZG9jdW1lbnQgaXMgaGlkZGVuIHdoZW4gdGhpcyBjb2RlIHJ1bnMsIGFzc3VtZSBpdCB3YXMgaGlkZGVuXG4gICAgLy8gc2luY2UgbmF2aWdhdGlvbiBzdGFydC4gVGhpcyBpc24ndCBhIHBlcmZlY3QgaGV1cmlzdGljLCBidXQgaXQncyB0aGVcbiAgICAvLyBiZXN0IHdlIGNhbiBkbyB1bnRpbCBhbiBBUEkgaXMgYXZhaWxhYmxlIHRvIHN1cHBvcnQgcXVlcnlpbmcgcGFzdFxuICAgIC8vIHZpc2liaWxpdHlTdGF0ZS5cbiAgICBpbml0SGlkZGVuVGltZSgpO1xuICAgIGFkZENoYW5nZUxpc3RlbmVycygpO1xuICB9XG4gIHJldHVybiB7XG4gICAgZ2V0IGZpcnN0SGlkZGVuVGltZSgpIHtcbiAgICAgIHJldHVybiBmaXJzdEhpZGRlblRpbWU7XG4gICAgfSxcbiAgfTtcbn07XG5cbmV4cG9ydCB7IGdldFZpc2liaWxpdHlXYXRjaGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRWaXNpYmlsaXR5V2F0Y2hlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getVisibilityWatcher.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initMetric\": function() { return /* binding */ initMetric; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n/* harmony import */ var _generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generateUniqueID.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/generateUniqueID.js\");\n/* harmony import */ var _getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getActivationStart.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getNavigationEntry.js\");\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst initMetric = (name, value) => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if ((_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document && _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.prerendering) || (0,_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__.getActivationStart)() > 0) {\n      navigationType = 'prerender';\n    } else if (_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document && _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.wasDiscarded) {\n      navigationType = 'restore';\n    } else if (navEntry.type) {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  // Use `entries` type specific for the metric.\n  const entries = [];\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good' , // If needed, will be updated when reported. `const` to keep the type from widening to `string`.\n    delta: 0,\n    entries,\n    id: (0,_generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__.generateUniqueID)(),\n    navigationType,\n  };\n};\n\n\n//# sourceMappingURL=initMetric.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL2luaXRNZXRyaWMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMkM7QUFDYztBQUNJO0FBQ0E7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQSxtQkFBbUIsMEVBQWtCO0FBQ3JDOztBQUVBO0FBQ0EsU0FBUyxzREFBZSxJQUFJLG1FQUE0QixLQUFLLDBFQUFrQjtBQUMvRTtBQUNBLE1BQU0sU0FBUyxzREFBZSxJQUFJLG1FQUE0QjtBQUM5RDtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNFQUFnQjtBQUN4QjtBQUNBO0FBQ0E7O0FBRXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL2Jyb3dzZXItdXRpbHMvZXNtL21ldHJpY3Mvd2ViLXZpdGFscy9saWIvaW5pdE1ldHJpYy5qcz83MjQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uLy4uL3R5cGVzLmpzJztcbmltcG9ydCB7IGdlbmVyYXRlVW5pcXVlSUQgfSBmcm9tICcuL2dlbmVyYXRlVW5pcXVlSUQuanMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZhdGlvblN0YXJ0IH0gZnJvbSAnLi9nZXRBY3RpdmF0aW9uU3RhcnQuanMnO1xuaW1wb3J0IHsgZ2V0TmF2aWdhdGlvbkVudHJ5IH0gZnJvbSAnLi9nZXROYXZpZ2F0aW9uRW50cnkuanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5jb25zdCBpbml0TWV0cmljID0gKG5hbWUsIHZhbHVlKSA9PiB7XG4gIGNvbnN0IG5hdkVudHJ5ID0gZ2V0TmF2aWdhdGlvbkVudHJ5KCk7XG4gIGxldCBuYXZpZ2F0aW9uVHlwZSA9ICduYXZpZ2F0ZSc7XG5cbiAgaWYgKG5hdkVudHJ5KSB7XG4gICAgaWYgKChXSU5ET1cuZG9jdW1lbnQgJiYgV0lORE9XLmRvY3VtZW50LnByZXJlbmRlcmluZykgfHwgZ2V0QWN0aXZhdGlvblN0YXJ0KCkgPiAwKSB7XG4gICAgICBuYXZpZ2F0aW9uVHlwZSA9ICdwcmVyZW5kZXInO1xuICAgIH0gZWxzZSBpZiAoV0lORE9XLmRvY3VtZW50ICYmIFdJTkRPVy5kb2N1bWVudC53YXNEaXNjYXJkZWQpIHtcbiAgICAgIG5hdmlnYXRpb25UeXBlID0gJ3Jlc3RvcmUnO1xuICAgIH0gZWxzZSBpZiAobmF2RW50cnkudHlwZSkge1xuICAgICAgbmF2aWdhdGlvblR5cGUgPSBuYXZFbnRyeS50eXBlLnJlcGxhY2UoL18vZywgJy0nKSA7XG4gICAgfVxuICB9XG5cbiAgLy8gVXNlIGBlbnRyaWVzYCB0eXBlIHNwZWNpZmljIGZvciB0aGUgbWV0cmljLlxuICBjb25zdCBlbnRyaWVzID0gW107XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIHZhbHVlOiB0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnID8gLTEgOiB2YWx1ZSxcbiAgICByYXRpbmc6ICdnb29kJyAsIC8vIElmIG5lZWRlZCwgd2lsbCBiZSB1cGRhdGVkIHdoZW4gcmVwb3J0ZWQuIGBjb25zdGAgdG8ga2VlcCB0aGUgdHlwZSBmcm9tIHdpZGVuaW5nIHRvIGBzdHJpbmdgLlxuICAgIGRlbHRhOiAwLFxuICAgIGVudHJpZXMsXG4gICAgaWQ6IGdlbmVyYXRlVW5pcXVlSUQoKSxcbiAgICBuYXZpZ2F0aW9uVHlwZSxcbiAgfTtcbn07XG5cbmV4cG9ydCB7IGluaXRNZXRyaWMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluaXRNZXRyaWMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"observe\": function() { return /* binding */ observe; }\n/* harmony export */ });\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        // Delay by a microtask to workaround a bug in Safari where the\n        // callback is invoked immediately, rather than in a separate task.\n        // See: https://github.com/GoogleChrome/web-vitals/issues/277\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        Promise.resolve().then(() => {\n          callback(list.getEntries() );\n        });\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\n\n//# sourceMappingURL=observe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL29ic2VydmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vbWV0cmljcy93ZWItdml0YWxzL2xpYi9vYnNlcnZlLmpzPzdhZjEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWtlcyBhIHBlcmZvcm1hbmNlIGVudHJ5IHR5cGUgYW5kIGEgY2FsbGJhY2sgZnVuY3Rpb24sIGFuZCBjcmVhdGVzIGFcbiAqIGBQZXJmb3JtYW5jZU9ic2VydmVyYCBpbnN0YW5jZSB0aGF0IHdpbGwgb2JzZXJ2ZSB0aGUgc3BlY2lmaWVkIGVudHJ5IHR5cGVcbiAqIHdpdGggYnVmZmVyaW5nIGVuYWJsZWQgYW5kIGNhbGwgdGhlIGNhbGxiYWNrIF9mb3IgZWFjaCBlbnRyeV8uXG4gKlxuICogVGhpcyBmdW5jdGlvbiBhbHNvIGZlYXR1cmUtZGV0ZWN0cyBlbnRyeSBzdXBwb3J0IGFuZCB3cmFwcyB0aGUgbG9naWMgaW4gYVxuICogdHJ5L2NhdGNoIHRvIGF2b2lkIGVycm9ycyBpbiB1bnN1cHBvcnRpbmcgYnJvd3NlcnMuXG4gKi9cbmNvbnN0IG9ic2VydmUgPSAoXG4gIHR5cGUsXG4gIGNhbGxiYWNrLFxuICBvcHRzLFxuKSA9PiB7XG4gIHRyeSB7XG4gICAgaWYgKFBlcmZvcm1hbmNlT2JzZXJ2ZXIuc3VwcG9ydGVkRW50cnlUeXBlcy5pbmNsdWRlcyh0eXBlKSkge1xuICAgICAgY29uc3QgcG8gPSBuZXcgUGVyZm9ybWFuY2VPYnNlcnZlcihsaXN0ID0+IHtcbiAgICAgICAgLy8gRGVsYXkgYnkgYSBtaWNyb3Rhc2sgdG8gd29ya2Fyb3VuZCBhIGJ1ZyBpbiBTYWZhcmkgd2hlcmUgdGhlXG4gICAgICAgIC8vIGNhbGxiYWNrIGlzIGludm9rZWQgaW1tZWRpYXRlbHksIHJhdGhlciB0aGFuIGluIGEgc2VwYXJhdGUgdGFzay5cbiAgICAgICAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ2hyb21lL3dlYi12aXRhbHMvaXNzdWVzLzI3N1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXG4gICAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGNhbGxiYWNrKGxpc3QuZ2V0RW50cmllcygpICk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICBwby5vYnNlcnZlKFxuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICBidWZmZXJlZDogdHJ1ZSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9wdHMgfHwge30sXG4gICAgICAgICkgLFxuICAgICAgKTtcbiAgICAgIHJldHVybiBwbztcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBEbyBub3RoaW5nLlxuICB9XG4gIHJldHVybjtcbn07XG5cbmV4cG9ydCB7IG9ic2VydmUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9ic2VydmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/onHidden.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/onHidden.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onHidden\": function() { return /* binding */ onHidden; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst onHidden = (cb) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden')) {\n      cb(event);\n    }\n  };\n\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n\n\n//# sourceMappingURL=onHidden.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL29uSGlkZGVuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQSxzQ0FBc0Msc0RBQWUsSUFBSSxzRUFBK0I7QUFDeEY7QUFDQTtBQUNBOztBQUVBLE1BQU0sc0RBQWU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL29uSGlkZGVuLmpzPzMyYWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vLi4vLi4vdHlwZXMuanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5jb25zdCBvbkhpZGRlbiA9IChjYikgPT4ge1xuICBjb25zdCBvbkhpZGRlbk9yUGFnZUhpZGUgPSAoZXZlbnQpID0+IHtcbiAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ3BhZ2VoaWRlJyB8fCAoV0lORE9XLmRvY3VtZW50ICYmIFdJTkRPVy5kb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICdoaWRkZW4nKSkge1xuICAgICAgY2IoZXZlbnQpO1xuICAgIH1cbiAgfTtcblxuICBpZiAoV0lORE9XLmRvY3VtZW50KSB7XG4gICAgYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIG9uSGlkZGVuT3JQYWdlSGlkZSwgdHJ1ZSk7XG4gICAgLy8gU29tZSBicm93c2VycyBoYXZlIGJ1Z2d5IGltcGxlbWVudGF0aW9ucyBvZiB2aXNpYmlsaXR5Y2hhbmdlLFxuICAgIC8vIHNvIHdlIHVzZSBwYWdlaGlkZSBpbiBhZGRpdGlvbiwganVzdCB0byBiZSBzYWZlLlxuICAgIGFkZEV2ZW50TGlzdGVuZXIoJ3BhZ2VoaWRlJywgb25IaWRkZW5PclBhZ2VIaWRlLCB0cnVlKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgb25IaWRkZW4gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9uSGlkZGVuLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/onHidden.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getInteractionCount\": function() { return /* binding */ getInteractionCount; },\n/* harmony export */   \"initInteractionCountPolyfill\": function() { return /* binding */ initInteractionCountPolyfill; }\n/* harmony export */ });\n/* harmony import */ var _observe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observe.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js\");\n\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries) => {\n  (entries ).forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nconst getInteractionCount = () => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nconst initInteractionCountPolyfill = () => {\n  if ('interactionCount' in performance || po) return;\n\n  po = (0,_observe_js__WEBPACK_IMPORTED_MODULE_0__.observe)('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } );\n};\n\n\n//# sourceMappingURL=interactionCountPolyfill.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL3BvbHlmaWxscy9pbnRlcmFjdGlvbkNvdW50UG9seWZpbGwuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdDOztBQUV4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTyxvREFBTztBQUNkO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjs7QUFFNkQ7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vbWV0cmljcy93ZWItdml0YWxzL2xpYi9wb2x5ZmlsbHMvaW50ZXJhY3Rpb25Db3VudFBvbHlmaWxsLmpzPzFmMTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgb2JzZXJ2ZSB9IGZyb20gJy4uL29ic2VydmUuanMnO1xuXG5sZXQgaW50ZXJhY3Rpb25Db3VudEVzdGltYXRlID0gMDtcbmxldCBtaW5Lbm93bkludGVyYWN0aW9uSWQgPSBJbmZpbml0eTtcbmxldCBtYXhLbm93bkludGVyYWN0aW9uSWQgPSAwO1xuXG5jb25zdCB1cGRhdGVFc3RpbWF0ZSA9IChlbnRyaWVzKSA9PiB7XG4gIChlbnRyaWVzICkuZm9yRWFjaChlID0+IHtcbiAgICBpZiAoZS5pbnRlcmFjdGlvbklkKSB7XG4gICAgICBtaW5Lbm93bkludGVyYWN0aW9uSWQgPSBNYXRoLm1pbihtaW5Lbm93bkludGVyYWN0aW9uSWQsIGUuaW50ZXJhY3Rpb25JZCk7XG4gICAgICBtYXhLbm93bkludGVyYWN0aW9uSWQgPSBNYXRoLm1heChtYXhLbm93bkludGVyYWN0aW9uSWQsIGUuaW50ZXJhY3Rpb25JZCk7XG5cbiAgICAgIGludGVyYWN0aW9uQ291bnRFc3RpbWF0ZSA9IG1heEtub3duSW50ZXJhY3Rpb25JZCA/IChtYXhLbm93bkludGVyYWN0aW9uSWQgLSBtaW5Lbm93bkludGVyYWN0aW9uSWQpIC8gNyArIDEgOiAwO1xuICAgIH1cbiAgfSk7XG59O1xuXG5sZXQgcG87XG5cbi8qKlxuICogUmV0dXJucyB0aGUgYGludGVyYWN0aW9uQ291bnRgIHZhbHVlIHVzaW5nIHRoZSBuYXRpdmUgQVBJIChpZiBhdmFpbGFibGUpXG4gKiBvciB0aGUgcG9seWZpbGwgZXN0aW1hdGUgaW4gdGhpcyBtb2R1bGUuXG4gKi9cbmNvbnN0IGdldEludGVyYWN0aW9uQ291bnQgPSAoKSA9PiB7XG4gIHJldHVybiBwbyA/IGludGVyYWN0aW9uQ291bnRFc3RpbWF0ZSA6IHBlcmZvcm1hbmNlLmludGVyYWN0aW9uQ291bnQgfHwgMDtcbn07XG5cbi8qKlxuICogRmVhdHVyZSBkZXRlY3RzIG5hdGl2ZSBzdXBwb3J0IG9yIGluaXRpYWxpemVzIHRoZSBwb2x5ZmlsbCBpZiBuZWVkZWQuXG4gKi9cbmNvbnN0IGluaXRJbnRlcmFjdGlvbkNvdW50UG9seWZpbGwgPSAoKSA9PiB7XG4gIGlmICgnaW50ZXJhY3Rpb25Db3VudCcgaW4gcGVyZm9ybWFuY2UgfHwgcG8pIHJldHVybjtcblxuICBwbyA9IG9ic2VydmUoJ2V2ZW50JywgdXBkYXRlRXN0aW1hdGUsIHtcbiAgICB0eXBlOiAnZXZlbnQnLFxuICAgIGJ1ZmZlcmVkOiB0cnVlLFxuICAgIGR1cmF0aW9uVGhyZXNob2xkOiAwLFxuICB9ICk7XG59O1xuXG5leHBvcnQgeyBnZXRJbnRlcmFjdGlvbkNvdW50LCBpbml0SW50ZXJhY3Rpb25Db3VudFBvbHlmaWxsIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmFjdGlvbkNvdW50UG9seWZpbGwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/polyfills/interactionCountPolyfill.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/runOnce.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/runOnce.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"runOnce\": function() { return /* binding */ runOnce; }\n/* harmony export */ });\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst runOnce = (cb) => {\n  let called = false;\n  return (arg) => {\n    if (!called) {\n      cb(arg);\n      called = true;\n    }\n  };\n};\n\n\n//# sourceMappingURL=runOnce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL3J1bk9uY2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL2Jyb3dzZXItdXRpbHMvZXNtL21ldHJpY3Mvd2ViLXZpdGFscy9saWIvcnVuT25jZS5qcz9hOTAwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAyMiBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5jb25zdCBydW5PbmNlID0gKGNiKSA9PiB7XG4gIGxldCBjYWxsZWQgPSBmYWxzZTtcbiAgcmV0dXJuIChhcmcpID0+IHtcbiAgICBpZiAoIWNhbGxlZCkge1xuICAgICAgY2IoYXJnKTtcbiAgICAgIGNhbGxlZCA9IHRydWU7XG4gICAgfVxuICB9O1xufTtcblxuZXhwb3J0IHsgcnVuT25jZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cnVuT25jZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/runOnce.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/whenActivated.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/whenActivated.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"whenActivated\": function() { return /* binding */ whenActivated; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst whenActivated = (callback) => {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => callback(), true);\n  } else {\n    callback();\n  }\n};\n\n\n//# sourceMappingURL=whenActivated.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvbGliL3doZW5BY3RpdmF0ZWQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkM7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQSxNQUFNLHNEQUFlLElBQUksbUVBQTRCO0FBQ3JEO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvYnJvd3Nlci11dGlscy9lc20vbWV0cmljcy93ZWItdml0YWxzL2xpYi93aGVuQWN0aXZhdGVkLmpzPzhjMWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vLi4vLi4vdHlwZXMuanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG5jb25zdCB3aGVuQWN0aXZhdGVkID0gKGNhbGxiYWNrKSA9PiB7XG4gIGlmIChXSU5ET1cuZG9jdW1lbnQgJiYgV0lORE9XLmRvY3VtZW50LnByZXJlbmRlcmluZykge1xuICAgIGFkZEV2ZW50TGlzdGVuZXIoJ3ByZXJlbmRlcmluZ2NoYW5nZScsICgpID0+IGNhbGxiYWNrKCksIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIGNhbGxiYWNrKCk7XG4gIH1cbn07XG5cbmV4cG9ydCB7IHdoZW5BY3RpdmF0ZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdoZW5BY3RpdmF0ZWQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/whenActivated.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onFCP.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onFCP.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FCPThresholds\": function() { return /* binding */ FCPThresholds; },\n/* harmony export */   \"onFCP\": function() { return /* binding */ onFCP; }\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/getActivationStart.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/whenActivated.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/whenActivated.js\");\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for FCP. See https://web.dev/articles/fcp#what_is_a_good_fcp_score */\nconst FCPThresholds = [1800, 3000];\n\n/**\n * Calculates the [FCP](https://web.dev/articles/fcp) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `paint` performance entry used to determine the value. The reported\n * value is a `DOMHighResTimeStamp`.\n */\nconst onFCP = (onReport, opts = {}) => {\n  (0,_lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_0__.whenActivated)(() => {\n    const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_1__.getVisibilityWatcher)();\n    const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__.initMetric)('FCP');\n    let report;\n\n    const handleEntries = (entries) => {\n      (entries ).forEach(entry => {\n        if (entry.name === 'first-contentful-paint') {\n          po.disconnect();\n\n          // Only report if the page wasn't hidden prior to the first paint.\n          if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n            // The activationStart reference is used because FCP should be\n            // relative to page activation rather than navigation start if the\n            // page was prerendered. But in cases where `activationStart` occurs\n            // after the FCP, this time should be clamped at 0.\n            metric.value = Math.max(entry.startTime - (0,_lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_3__.getActivationStart)(), 0);\n            metric.entries.push(entry);\n            report(true);\n          }\n        }\n      });\n    };\n\n    const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_4__.observe)('paint', handleEntries);\n\n    if (po) {\n      report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_5__.bindReporter)(onReport, metric, FCPThresholds, opts.reportAllChanges);\n    }\n  });\n};\n\n\n//# sourceMappingURL=onFCP.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvb25GQ1AuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBcUQ7QUFDWTtBQUNJO0FBQ3BCO0FBQ047QUFDWTs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQyxFQUFFLG9FQUFhO0FBQ2YsOEJBQThCLGtGQUFvQjtBQUNsRCxtQkFBbUIsOERBQVU7QUFDN0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELDhFQUFrQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQSxlQUFlLHdEQUFPOztBQUV0QjtBQUNBLGVBQWUsa0VBQVk7QUFDM0I7QUFDQSxHQUFHO0FBQ0g7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL2Jyb3dzZXItdXRpbHMvZXNtL21ldHJpY3Mvd2ViLXZpdGFscy9vbkZDUC5qcz80NmJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJpbmRSZXBvcnRlciB9IGZyb20gJy4vbGliL2JpbmRSZXBvcnRlci5qcyc7XG5pbXBvcnQgeyBnZXRBY3RpdmF0aW9uU3RhcnQgfSBmcm9tICcuL2xpYi9nZXRBY3RpdmF0aW9uU3RhcnQuanMnO1xuaW1wb3J0IHsgZ2V0VmlzaWJpbGl0eVdhdGNoZXIgfSBmcm9tICcuL2xpYi9nZXRWaXNpYmlsaXR5V2F0Y2hlci5qcyc7XG5pbXBvcnQgeyBpbml0TWV0cmljIH0gZnJvbSAnLi9saWIvaW5pdE1ldHJpYy5qcyc7XG5pbXBvcnQgeyBvYnNlcnZlIH0gZnJvbSAnLi9saWIvb2JzZXJ2ZS5qcyc7XG5pbXBvcnQgeyB3aGVuQWN0aXZhdGVkIH0gZnJvbSAnLi9saWIvd2hlbkFjdGl2YXRlZC5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbi8qKiBUaHJlc2hvbGRzIGZvciBGQ1AuIFNlZSBodHRwczovL3dlYi5kZXYvYXJ0aWNsZXMvZmNwI3doYXRfaXNfYV9nb29kX2ZjcF9zY29yZSAqL1xuY29uc3QgRkNQVGhyZXNob2xkcyA9IFsxODAwLCAzMDAwXTtcblxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBbRkNQXShodHRwczovL3dlYi5kZXYvYXJ0aWNsZXMvZmNwKSB2YWx1ZSBmb3IgdGhlIGN1cnJlbnQgcGFnZSBhbmRcbiAqIGNhbGxzIHRoZSBgY2FsbGJhY2tgIGZ1bmN0aW9uIG9uY2UgdGhlIHZhbHVlIGlzIHJlYWR5LCBhbG9uZyB3aXRoIHRoZVxuICogcmVsZXZhbnQgYHBhaW50YCBwZXJmb3JtYW5jZSBlbnRyeSB1c2VkIHRvIGRldGVybWluZSB0aGUgdmFsdWUuIFRoZSByZXBvcnRlZFxuICogdmFsdWUgaXMgYSBgRE9NSGlnaFJlc1RpbWVTdGFtcGAuXG4gKi9cbmNvbnN0IG9uRkNQID0gKG9uUmVwb3J0LCBvcHRzID0ge30pID0+IHtcbiAgd2hlbkFjdGl2YXRlZCgoKSA9PiB7XG4gICAgY29uc3QgdmlzaWJpbGl0eVdhdGNoZXIgPSBnZXRWaXNpYmlsaXR5V2F0Y2hlcigpO1xuICAgIGNvbnN0IG1ldHJpYyA9IGluaXRNZXRyaWMoJ0ZDUCcpO1xuICAgIGxldCByZXBvcnQ7XG5cbiAgICBjb25zdCBoYW5kbGVFbnRyaWVzID0gKGVudHJpZXMpID0+IHtcbiAgICAgIChlbnRyaWVzICkuZm9yRWFjaChlbnRyeSA9PiB7XG4gICAgICAgIGlmIChlbnRyeS5uYW1lID09PSAnZmlyc3QtY29udGVudGZ1bC1wYWludCcpIHtcbiAgICAgICAgICBwby5kaXNjb25uZWN0KCk7XG5cbiAgICAgICAgICAvLyBPbmx5IHJlcG9ydCBpZiB0aGUgcGFnZSB3YXNuJ3QgaGlkZGVuIHByaW9yIHRvIHRoZSBmaXJzdCBwYWludC5cbiAgICAgICAgICBpZiAoZW50cnkuc3RhcnRUaW1lIDwgdmlzaWJpbGl0eVdhdGNoZXIuZmlyc3RIaWRkZW5UaW1lKSB7XG4gICAgICAgICAgICAvLyBUaGUgYWN0aXZhdGlvblN0YXJ0IHJlZmVyZW5jZSBpcyB1c2VkIGJlY2F1c2UgRkNQIHNob3VsZCBiZVxuICAgICAgICAgICAgLy8gcmVsYXRpdmUgdG8gcGFnZSBhY3RpdmF0aW9uIHJhdGhlciB0aGFuIG5hdmlnYXRpb24gc3RhcnQgaWYgdGhlXG4gICAgICAgICAgICAvLyBwYWdlIHdhcyBwcmVyZW5kZXJlZC4gQnV0IGluIGNhc2VzIHdoZXJlIGBhY3RpdmF0aW9uU3RhcnRgIG9jY3Vyc1xuICAgICAgICAgICAgLy8gYWZ0ZXIgdGhlIEZDUCwgdGhpcyB0aW1lIHNob3VsZCBiZSBjbGFtcGVkIGF0IDAuXG4gICAgICAgICAgICBtZXRyaWMudmFsdWUgPSBNYXRoLm1heChlbnRyeS5zdGFydFRpbWUgLSBnZXRBY3RpdmF0aW9uU3RhcnQoKSwgMCk7XG4gICAgICAgICAgICBtZXRyaWMuZW50cmllcy5wdXNoKGVudHJ5KTtcbiAgICAgICAgICAgIHJlcG9ydCh0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBwbyA9IG9ic2VydmUoJ3BhaW50JywgaGFuZGxlRW50cmllcyk7XG5cbiAgICBpZiAocG8pIHtcbiAgICAgIHJlcG9ydCA9IGJpbmRSZXBvcnRlcihvblJlcG9ydCwgbWV0cmljLCBGQ1BUaHJlc2hvbGRzLCBvcHRzLnJlcG9ydEFsbENoYW5nZXMpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5leHBvcnQgeyBGQ1BUaHJlc2hvbGRzLCBvbkZDUCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b25GQ1AuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onFCP.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onTTFB.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onTTFB.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TTFBThresholds\": function() { return /* binding */ TTFBThresholds; },\n/* harmony export */   \"onTTFB\": function() { return /* binding */ onTTFB; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry-internal/browser-utils/esm/types.js\");\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/getActivationStart.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _lib_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/getNavigationEntry.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/getNavigationEntry.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/whenActivated.js */ \"./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/lib/whenActivated.js\");\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/** Thresholds for TTFB. See https://web.dev/articles/ttfb#what_is_a_good_ttfb_score */\nconst TTFBThresholds = [800, 1800];\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback) => {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.prerendering) {\n    (0,_lib_whenActivated_js__WEBPACK_IMPORTED_MODULE_1__.whenActivated)(() => whenReady(callback));\n  } else if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/articles/ttfb) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nconst onTTFB = (onReport, opts = {}) => {\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_2__.initMetric)('TTFB');\n  const report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__.bindReporter)(onReport, metric, TTFBThresholds, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navEntry = (0,_lib_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_4__.getNavigationEntry)();\n\n    if (navEntry) {\n      const responseStart = navEntry.responseStart;\n\n      // In some cases no value is reported by the browser (for\n      // privacy/security reasons), and in other cases (bugs) the value is\n      // negative or is larger than the current page time. Ignore these cases:\n      // https://github.com/GoogleChrome/web-vitals/issues/137\n      // https://github.com/GoogleChrome/web-vitals/issues/162\n      // https://github.com/GoogleChrome/web-vitals/issues/275\n      if (responseStart <= 0 || responseStart > performance.now()) return;\n\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(responseStart - (0,_lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_5__.getActivationStart)(), 0);\n\n      metric.entries = [navEntry];\n      report(true);\n    }\n  });\n};\n\n\n//# sourceMappingURL=onTTFB.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvb25UVEZCLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ2E7QUFDWTtBQUNBO0FBQ2hCO0FBQ007O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxzREFBZSxJQUFJLG1FQUE0QjtBQUNyRCxJQUFJLG9FQUFhO0FBQ2pCLElBQUksU0FBUyxzREFBZSxJQUFJLGlFQUEwQjtBQUMxRDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMsaUJBQWlCLDhEQUFVO0FBQzNCLGlCQUFpQixrRUFBWTs7QUFFN0I7QUFDQSxxQkFBcUIsOEVBQWtCOztBQUV2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDhFQUFrQjs7QUFFaEU7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS9tZXRyaWNzL3dlYi12aXRhbHMvb25UVEZCLmpzP2JkY2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vLi4vdHlwZXMuanMnO1xuaW1wb3J0IHsgYmluZFJlcG9ydGVyIH0gZnJvbSAnLi9saWIvYmluZFJlcG9ydGVyLmpzJztcbmltcG9ydCB7IGdldEFjdGl2YXRpb25TdGFydCB9IGZyb20gJy4vbGliL2dldEFjdGl2YXRpb25TdGFydC5qcyc7XG5pbXBvcnQgeyBnZXROYXZpZ2F0aW9uRW50cnkgfSBmcm9tICcuL2xpYi9nZXROYXZpZ2F0aW9uRW50cnkuanMnO1xuaW1wb3J0IHsgaW5pdE1ldHJpYyB9IGZyb20gJy4vbGliL2luaXRNZXRyaWMuanMnO1xuaW1wb3J0IHsgd2hlbkFjdGl2YXRlZCB9IGZyb20gJy4vbGliL3doZW5BY3RpdmF0ZWQuanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG4vKiogVGhyZXNob2xkcyBmb3IgVFRGQi4gU2VlIGh0dHBzOi8vd2ViLmRldi9hcnRpY2xlcy90dGZiI3doYXRfaXNfYV9nb29kX3R0ZmJfc2NvcmUgKi9cbmNvbnN0IFRURkJUaHJlc2hvbGRzID0gWzgwMCwgMTgwMF07XG5cbi8qKlxuICogUnVucyBpbiB0aGUgbmV4dCB0YXNrIGFmdGVyIHRoZSBwYWdlIGlzIGRvbmUgbG9hZGluZyBhbmQvb3IgcHJlcmVuZGVyaW5nLlxuICogQHBhcmFtIGNhbGxiYWNrXG4gKi9cbmNvbnN0IHdoZW5SZWFkeSA9IChjYWxsYmFjaykgPT4ge1xuICBpZiAoV0lORE9XLmRvY3VtZW50ICYmIFdJTkRPVy5kb2N1bWVudC5wcmVyZW5kZXJpbmcpIHtcbiAgICB3aGVuQWN0aXZhdGVkKCgpID0+IHdoZW5SZWFkeShjYWxsYmFjaykpO1xuICB9IGVsc2UgaWYgKFdJTkRPVy5kb2N1bWVudCAmJiBXSU5ET1cuZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gJ2NvbXBsZXRlJykge1xuICAgIGFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB3aGVuUmVhZHkoY2FsbGJhY2spLCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBRdWV1ZSBhIHRhc2sgc28gdGhlIGNhbGxiYWNrIHJ1bnMgYWZ0ZXIgYGxvYWRFdmVudEVuZGAuXG4gICAgc2V0VGltZW91dChjYWxsYmFjaywgMCk7XG4gIH1cbn07XG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgW1RURkJdKGh0dHBzOi8vd2ViLmRldi9hcnRpY2xlcy90dGZiKSB2YWx1ZSBmb3IgdGhlXG4gKiBjdXJyZW50IHBhZ2UgYW5kIGNhbGxzIHRoZSBgY2FsbGJhY2tgIGZ1bmN0aW9uIG9uY2UgdGhlIHBhZ2UgaGFzIGxvYWRlZCxcbiAqIGFsb25nIHdpdGggdGhlIHJlbGV2YW50IGBuYXZpZ2F0aW9uYCBwZXJmb3JtYW5jZSBlbnRyeSB1c2VkIHRvIGRldGVybWluZSB0aGVcbiAqIHZhbHVlLiBUaGUgcmVwb3J0ZWQgdmFsdWUgaXMgYSBgRE9NSGlnaFJlc1RpbWVTdGFtcGAuXG4gKlxuICogTm90ZSwgdGhpcyBmdW5jdGlvbiB3YWl0cyB1bnRpbCBhZnRlciB0aGUgcGFnZSBpcyBsb2FkZWQgdG8gY2FsbCBgY2FsbGJhY2tgXG4gKiBpbiBvcmRlciB0byBlbnN1cmUgYWxsIHByb3BlcnRpZXMgb2YgdGhlIGBuYXZpZ2F0aW9uYCBlbnRyeSBhcmUgcG9wdWxhdGVkLlxuICogVGhpcyBpcyB1c2VmdWwgaWYgeW91IHdhbnQgdG8gcmVwb3J0IG9uIG90aGVyIG1ldHJpY3MgZXhwb3NlZCBieSB0aGVcbiAqIFtOYXZpZ2F0aW9uIFRpbWluZyBBUEldKGh0dHBzOi8vdzNjLmdpdGh1Yi5pby9uYXZpZ2F0aW9uLXRpbWluZy8pLiBGb3JcbiAqIGV4YW1wbGUsIHRoZSBUVEZCIG1ldHJpYyBzdGFydHMgZnJvbSB0aGUgcGFnZSdzIFt0aW1lXG4gKiBvcmlnaW5dKGh0dHBzOi8vd3d3LnczLm9yZy9UUi9oci10aW1lLTIvI3NlYy10aW1lLW9yaWdpbiksIHdoaWNoIG1lYW5zIGl0XG4gKiBpbmNsdWRlcyB0aW1lIHNwZW50IG9uIEROUyBsb29rdXAsIGNvbm5lY3Rpb24gbmVnb3RpYXRpb24sIG5ldHdvcmsgbGF0ZW5jeSxcbiAqIGFuZCBzZXJ2ZXIgcHJvY2Vzc2luZyB0aW1lLlxuICovXG5jb25zdCBvblRURkIgPSAob25SZXBvcnQsIG9wdHMgPSB7fSkgPT4ge1xuICBjb25zdCBtZXRyaWMgPSBpbml0TWV0cmljKCdUVEZCJyk7XG4gIGNvbnN0IHJlcG9ydCA9IGJpbmRSZXBvcnRlcihvblJlcG9ydCwgbWV0cmljLCBUVEZCVGhyZXNob2xkcywgb3B0cy5yZXBvcnRBbGxDaGFuZ2VzKTtcblxuICB3aGVuUmVhZHkoKCkgPT4ge1xuICAgIGNvbnN0IG5hdkVudHJ5ID0gZ2V0TmF2aWdhdGlvbkVudHJ5KCk7XG5cbiAgICBpZiAobmF2RW50cnkpIHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlU3RhcnQgPSBuYXZFbnRyeS5yZXNwb25zZVN0YXJ0O1xuXG4gICAgICAvLyBJbiBzb21lIGNhc2VzIG5vIHZhbHVlIGlzIHJlcG9ydGVkIGJ5IHRoZSBicm93c2VyIChmb3JcbiAgICAgIC8vIHByaXZhY3kvc2VjdXJpdHkgcmVhc29ucyksIGFuZCBpbiBvdGhlciBjYXNlcyAoYnVncykgdGhlIHZhbHVlIGlzXG4gICAgICAvLyBuZWdhdGl2ZSBvciBpcyBsYXJnZXIgdGhhbiB0aGUgY3VycmVudCBwYWdlIHRpbWUuIElnbm9yZSB0aGVzZSBjYXNlczpcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDaHJvbWUvd2ViLXZpdGFscy9pc3N1ZXMvMTM3XG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ2hyb21lL3dlYi12aXRhbHMvaXNzdWVzLzE2MlxuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZS93ZWItdml0YWxzL2lzc3Vlcy8yNzVcbiAgICAgIGlmIChyZXNwb25zZVN0YXJ0IDw9IDAgfHwgcmVzcG9uc2VTdGFydCA+IHBlcmZvcm1hbmNlLm5vdygpKSByZXR1cm47XG5cbiAgICAgIC8vIFRoZSBhY3RpdmF0aW9uU3RhcnQgcmVmZXJlbmNlIGlzIHVzZWQgYmVjYXVzZSBUVEZCIHNob3VsZCBiZVxuICAgICAgLy8gcmVsYXRpdmUgdG8gcGFnZSBhY3RpdmF0aW9uIHJhdGhlciB0aGFuIG5hdmlnYXRpb24gc3RhcnQgaWYgdGhlXG4gICAgICAvLyBwYWdlIHdhcyBwcmVyZW5kZXJlZC4gQnV0IGluIGNhc2VzIHdoZXJlIGBhY3RpdmF0aW9uU3RhcnRgIG9jY3Vyc1xuICAgICAgLy8gYWZ0ZXIgdGhlIGZpcnN0IGJ5dGUgaXMgcmVjZWl2ZWQsIHRoaXMgdGltZSBzaG91bGQgYmUgY2xhbXBlZCBhdCAwLlxuICAgICAgbWV0cmljLnZhbHVlID0gTWF0aC5tYXgocmVzcG9uc2VTdGFydCAtIGdldEFjdGl2YXRpb25TdGFydCgpLCAwKTtcblxuICAgICAgbWV0cmljLmVudHJpZXMgPSBbbmF2RW50cnldO1xuICAgICAgcmVwb3J0KHRydWUpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5leHBvcnQgeyBUVEZCVGhyZXNob2xkcywgb25UVEZCIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vblRURkIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/metrics/web-vitals/onTTFB.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/browser-utils/esm/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry-internal/browser-utils/esm/types.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WINDOW\": function() { return /* binding */ WINDOW; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ\n\n;\n\n\n//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzL2VzbS90eXBlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQzs7QUFFM0MsZUFBZSxxREFBVTs7QUFFekI7O0FBRWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL2Jyb3dzZXItdXRpbHMvZXNtL3R5cGVzLmpzPzg3ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR0xPQkFMX09CSiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG5jb25zdCBXSU5ET1cgPSBHTE9CQUxfT0JKXG5cbjtcblxuZXhwb3J0IHsgV0lORE9XIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/browser-utils/esm/types.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/feedback/esm/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry-internal/feedback/esm/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buildFeedbackIntegration\": function() { return /* binding */ buildFeedbackIntegration; },\n/* harmony export */   \"feedbackModalIntegration\": function() { return /* binding */ feedbackModalIntegration; },\n/* harmony export */   \"feedbackScreenshotIntegration\": function() { return /* binding */ feedbackScreenshotIntegration; },\n/* harmony export */   \"getFeedback\": function() { return /* binding */ getFeedback; },\n/* harmony export */   \"sendFeedback\": function() { return /* binding */ sendFeedback; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and feedback packages\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\nconst DOCUMENT = WINDOW.document;\nconst NAVIGATOR = WINDOW.navigator;\n\nconst TRIGGER_LABEL = 'Report a Bug';\nconst CANCEL_BUTTON_LABEL = 'Cancel';\nconst SUBMIT_BUTTON_LABEL = 'Send Bug Report';\nconst CONFIRM_BUTTON_LABEL = 'Confirm';\nconst FORM_TITLE = 'Report a Bug';\nconst EMAIL_PLACEHOLDER = 'your.email@example.org';\nconst EMAIL_LABEL = 'Email';\nconst MESSAGE_PLACEHOLDER = \"What's the bug? What did you expect?\";\nconst MESSAGE_LABEL = 'Description';\nconst NAME_PLACEHOLDER = 'Your Name';\nconst NAME_LABEL = 'Name';\nconst SUCCESS_MESSAGE_TEXT = 'Thank you for your report!';\nconst IS_REQUIRED_LABEL = '(required)';\nconst ADD_SCREENSHOT_LABEL = 'Add a screenshot';\nconst REMOVE_SCREENSHOT_LABEL = 'Remove screenshot';\n\nconst FEEDBACK_WIDGET_SOURCE = 'widget';\nconst FEEDBACK_API_SOURCE = 'api';\n\nconst SUCCESS_MESSAGE_TIMEOUT = 5000;\n\n/**\n * Public API to send a Feedback item to Sentry\n */\nconst sendFeedback = (\n  options,\n  hint = { includeReplay: true },\n) => {\n  if (!options.message) {\n    throw new Error('Unable to submit feedback with empty message');\n  }\n\n  // We want to wait for the feedback to be sent (or not)\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n\n  if (!client) {\n    throw new Error('No client setup, cannot send feedback.');\n  }\n\n  const eventId = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureFeedback)(\n    {\n      source: FEEDBACK_API_SOURCE,\n      url: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getLocationHref)(),\n      ...options,\n    },\n    hint,\n  );\n\n  // We want to wait for the feedback to be sent (or not)\n  return new Promise((resolve, reject) => {\n    // After 5s, we want to clear anyhow\n    const timeout = setTimeout(() => reject('Unable to determine if Feedback was correctly sent.'), 5000);\n\n    client.on('afterSendEvent', (event, response) => {\n      if (event.event_id !== eventId) {\n        return;\n      }\n\n      clearTimeout(timeout);\n\n      // Require valid status codes, otherwise can assume feedback was not sent successfully\n      if (\n        response &&\n        typeof response.statusCode === 'number' &&\n        (response.statusCode < 200 || response.statusCode >= 300)\n      ) {\n        if (response.statusCode === 0) {\n          return reject(\n            'Unable to send Feedback. This is because of network issues, or because you are using an ad-blocker.',\n          );\n        }\n        return reject('Unable to send Feedback. Invalid response from server.');\n      }\n\n      resolve(eventId);\n    });\n  });\n};\n\n/*\n * For reference, the fully built event looks something like this:\n * {\n *     \"type\": \"feedback\",\n *     \"event_id\": \"d2132d31b39445f1938d7e21b6bf0ec4\",\n *     \"timestamp\": 1597977777.6189718,\n *     \"dist\": \"1.12\",\n *     \"platform\": \"javascript\",\n *     \"environment\": \"production\",\n *     \"release\": 42,\n *     \"tags\": {\"transaction\": \"/organizations/:orgId/performance/:eventSlug/\"},\n *     \"sdk\": {\"name\": \"name\", \"version\": \"version\"},\n *     \"user\": {\n *         \"id\": \"123\",\n *         \"username\": \"user\",\n *         \"email\": \"user@site.com\",\n *         \"ip_address\": \"192.168.11.12\",\n *     },\n *     \"request\": {\n *         \"url\": None,\n *         \"headers\": {\n *             \"user-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Safari/605.1.15\"\n *         },\n *     },\n *     \"contexts\": {\n *         \"feedback\": {\n *             \"message\": \"test message\",\n *             \"contact_email\": \"test@example.com\",\n *             \"type\": \"feedback\",\n *         },\n *         \"trace\": {\n *             \"trace_id\": \"4C79F60C11214EB38604F4AE0781BFB2\",\n *             \"span_id\": \"FA90FDEAD5F74052\",\n *             \"type\": \"trace\",\n *         },\n *         \"replay\": {\n *             \"replay_id\": \"e2d42047b1c5431c8cba85ee2a8ab25d\",\n *         },\n *     },\n *   }\n */\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n/**\n * Mobile browsers do not support `mediaDevices.getDisplayMedia` even though they have the api implemented\n * Instead they return things like `NotAllowedError` when called.\n *\n * It's simpler for us to browser sniff first, and avoid loading the integration if we can.\n *\n * https://stackoverflow.com/a/58879212\n * https://stackoverflow.com/a/3540295\n *\n * `mediaDevices.getDisplayMedia` is also only supported in secure contexts, and return a `mediaDevices is not supported` error, so we should also avoid loading the integration if we can.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia\n */\nfunction isScreenshotSupported() {\n  if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(NAVIGATOR.userAgent)) {\n    return false;\n  }\n  if (!isSecureContext) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Quick and dirty deep merge for the Feedback integration options\n */\nfunction mergeOptions(\n  defaultOptions,\n  optionOverrides,\n) {\n  return {\n    ...defaultOptions,\n    ...optionOverrides,\n    onFormOpen: () => {\n      optionOverrides.onFormOpen && optionOverrides.onFormOpen();\n      defaultOptions.onFormOpen && defaultOptions.onFormOpen();\n    },\n    onFormClose: () => {\n      optionOverrides.onFormClose && optionOverrides.onFormClose();\n      defaultOptions.onFormClose && defaultOptions.onFormClose();\n    },\n    onSubmitSuccess: (data) => {\n      optionOverrides.onSubmitSuccess && optionOverrides.onSubmitSuccess(data);\n      defaultOptions.onSubmitSuccess && defaultOptions.onSubmitSuccess(data);\n    },\n    onSubmitError: (error) => {\n      optionOverrides.onSubmitError && optionOverrides.onSubmitError(error);\n      defaultOptions.onSubmitError && defaultOptions.onSubmitError(error);\n    },\n    onFormSubmitted: () => {\n      optionOverrides.onFormSubmitted && optionOverrides.onFormSubmitted();\n      defaultOptions.onFormSubmitted && defaultOptions.onFormSubmitted();\n    },\n    themeDark: {\n      ...defaultOptions.themeDark,\n      ...optionOverrides.themeDark,\n    },\n    themeLight: {\n      ...defaultOptions.themeLight,\n      ...optionOverrides.themeLight,\n    },\n  };\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nfunction createActorStyles() {\n  const style = DOCUMENT.createElement('style');\n  style.textContent = `\n.widget__actor {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: var(--page-margin);\n  inset: var(--actor-inset);\n\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  line-height: 1.14em;\n  text-decoration: none;\n\n  background: var(--actor-background, var(--background));\n  border-radius: var(--actor-border-radius, 1.7em/50%);\n  border: var(--actor-border, var(--border));\n  box-shadow: var(--actor-box-shadow, var(--box-shadow));\n  color: var(--actor-color, var(--foreground));\n  fill: var(--actor-color, var(--foreground));\n  cursor: pointer;\n  opacity: 1;\n  transition: transform 0.2s ease-in-out;\n  transform: translate(0, 0) scale(1);\n}\n.widget__actor[aria-hidden=\"true\"] {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n  transform: translate(0, 16px) scale(0.98);\n}\n\n.widget__actor:hover {\n  background: var(--actor-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n\n.widget__actor svg {\n  width: 1.14em;\n  height: 1.14em;\n}\n\n@media (max-width: 600px) {\n  .widget__actor span {\n    display: none;\n  }\n}\n`;\n\n  return style;\n}\n\n/**\n * Helper function to set a dict of attributes on element (w/ specified namespace)\n */\nfunction setAttributesNS(el, attributes) {\n  Object.entries(attributes).forEach(([key, val]) => {\n    el.setAttributeNS(null, key, val);\n  });\n  return el;\n}\n\nconst SIZE = 20;\nconst XMLNS$2 = 'http://www.w3.org/2000/svg';\n\n/**\n * Feedback Icon\n */\nfunction FeedbackIcon() {\n  const createElementNS = (tagName) =>\n    WINDOW.document.createElementNS(XMLNS$2, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    viewBox: `0 0 ${SIZE} ${SIZE}`,\n    fill: 'var(--foreground)',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_80)',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z',\n  });\n  svg.appendChild(g).appendChild(path);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_80',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    fill: 'white',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return svg;\n}\n\n/**\n * The sentry-provided button to open the feedback modal\n */\nfunction Actor({ triggerLabel, shadow }) {\n  const el = DOCUMENT.createElement('button');\n  el.type = 'button';\n  el.className = 'widget__actor';\n  el.ariaHidden = 'false';\n  el.ariaLabel = triggerLabel;\n  el.appendChild(FeedbackIcon());\n  if (triggerLabel) {\n    const label = DOCUMENT.createElement('span');\n    label.appendChild(DOCUMENT.createTextNode(triggerLabel));\n    el.appendChild(label);\n  }\n\n  const style = createActorStyles();\n\n  return {\n    el,\n    appendToDom() {\n      shadow.appendChild(style);\n      shadow.appendChild(el);\n    },\n    removeFromDom() {\n      shadow.removeChild(el);\n      shadow.removeChild(style);\n    },\n    show() {\n      el.ariaHidden = 'false';\n    },\n    hide() {\n      el.ariaHidden = 'true';\n    },\n  };\n}\n\nconst PURPLE = 'rgba(88, 74, 192, 1)';\n\nconst DEFAULT_LIGHT = {\n  foreground: '#2b2233',\n  background: '#ffffff',\n  accentForeground: 'white',\n  accentBackground: PURPLE,\n  successColor: '#268d75',\n  errorColor: '#df3338',\n  border: '1.5px solid rgba(41, 35, 47, 0.13)',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n  outline: '1px auto var(--accent-background)',\n  interactiveFilter: 'brightness(95%)',\n};\nconst DEFAULT_DARK = {\n  foreground: '#ebe6ef',\n  background: '#29232f',\n  accentForeground: 'white',\n  accentBackground: PURPLE,\n  successColor: '#2da98c',\n  errorColor: '#f55459',\n  border: '1.5px solid rgba(235, 230, 239, 0.15)',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n  outline: '1px auto var(--accent-background)',\n  interactiveFilter: 'brightness(150%)',\n};\n\nfunction getThemedCssVariables(theme) {\n  return `\n  --foreground: ${theme.foreground};\n  --background: ${theme.background};\n  --accent-foreground: ${theme.accentForeground};\n  --accent-background: ${theme.accentBackground};\n  --success-color: ${theme.successColor};\n  --error-color: ${theme.errorColor};\n  --border: ${theme.border};\n  --box-shadow: ${theme.boxShadow};\n  --outline: ${theme.outline};\n  --interactive-filter: ${theme.interactiveFilter};\n  `;\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nfunction createMainStyles({ colorScheme, themeDark, themeLight }) {\n  const style = DOCUMENT.createElement('style');\n  style.textContent = `\n:host {\n  --font-family: system-ui, 'Helvetica Neue', Arial, sans-serif;\n  --font-size: 14px;\n  --z-index: 100000;\n\n  --page-margin: 16px;\n  --inset: auto 0 0 auto;\n  --actor-inset: var(--inset);\n\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n\n  ${colorScheme !== 'system' ? 'color-scheme: only light;' : ''}\n\n  ${getThemedCssVariables(\n    colorScheme === 'dark' ? { ...DEFAULT_DARK, ...themeDark } : { ...DEFAULT_LIGHT, ...themeLight },\n  )}\n}\n\n${\n  colorScheme === 'system'\n    ? `\n@media (prefers-color-scheme: dark) {\n  :host {\n    ${getThemedCssVariables({ ...DEFAULT_DARK, ...themeDark })}\n  }\n}`\n    : ''\n}\n}\n`;\n\n  return style;\n}\n\nconst buildFeedbackIntegration = ({\n  lazyLoadIntegration,\n  getModalIntegration,\n  getScreenshotIntegration,\n}\n\n) => {\n  const feedbackIntegration = (({\n    // FeedbackGeneralConfiguration\n    id = 'sentry-feedback',\n    showBranding = true,\n    autoInject = true,\n    showEmail = true,\n    showName = true,\n    enableScreenshot = true,\n    useSentryUser = {\n      email: 'email',\n      name: 'username',\n    },\n    isNameRequired = false,\n    isEmailRequired = false,\n\n    // FeedbackThemeConfiguration\n    colorScheme = 'system',\n    themeLight = {},\n    themeDark = {},\n\n    // FeedbackTextConfiguration\n    addScreenshotButtonLabel = ADD_SCREENSHOT_LABEL,\n    cancelButtonLabel = CANCEL_BUTTON_LABEL,\n    confirmButtonLabel = CONFIRM_BUTTON_LABEL,\n    emailLabel = EMAIL_LABEL,\n    emailPlaceholder = EMAIL_PLACEHOLDER,\n    formTitle = FORM_TITLE,\n    isRequiredLabel = IS_REQUIRED_LABEL,\n    messageLabel = MESSAGE_LABEL,\n    messagePlaceholder = MESSAGE_PLACEHOLDER,\n    nameLabel = NAME_LABEL,\n    namePlaceholder = NAME_PLACEHOLDER,\n    removeScreenshotButtonLabel = REMOVE_SCREENSHOT_LABEL,\n    submitButtonLabel = SUBMIT_BUTTON_LABEL,\n    successMessageText = SUCCESS_MESSAGE_TEXT,\n    triggerLabel = TRIGGER_LABEL,\n\n    // FeedbackCallbacks\n    onFormOpen,\n    onFormClose,\n    onSubmitSuccess,\n    onSubmitError,\n    onFormSubmitted,\n  } = {}) => {\n    const _options = {\n      id,\n      autoInject,\n      showBranding,\n      isEmailRequired,\n      isNameRequired,\n      showEmail,\n      showName,\n      enableScreenshot,\n      useSentryUser,\n\n      colorScheme,\n      themeDark,\n      themeLight,\n\n      triggerLabel,\n      cancelButtonLabel,\n      submitButtonLabel,\n      confirmButtonLabel,\n      formTitle,\n      emailLabel,\n      emailPlaceholder,\n      messageLabel,\n      messagePlaceholder,\n      nameLabel,\n      namePlaceholder,\n      successMessageText,\n      isRequiredLabel,\n      addScreenshotButtonLabel,\n      removeScreenshotButtonLabel,\n\n      onFormClose,\n      onFormOpen,\n      onSubmitError,\n      onSubmitSuccess,\n      onFormSubmitted,\n    };\n\n    let _shadow = null;\n    let _subscriptions = [];\n\n    /**\n     * Get the shadow root where we will append css\n     */\n    const _createShadow = (options) => {\n      if (!_shadow) {\n        const host = DOCUMENT.createElement('div');\n        host.id = String(options.id);\n        DOCUMENT.body.appendChild(host);\n\n        _shadow = host.attachShadow({ mode: 'open' });\n        _shadow.appendChild(createMainStyles(options));\n      }\n      return _shadow ;\n    };\n\n    const _findIntegration = async (\n      integrationName,\n      getter,\n      functionMethodName,\n    ) => {\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n      const existing = client && client.getIntegrationByName(integrationName);\n      if (existing) {\n        return existing ;\n      }\n      const integrationFn = (getter && getter()) || (await lazyLoadIntegration(functionMethodName));\n      const integration = integrationFn();\n      client && client.addIntegration(integration);\n      return integration ;\n    };\n\n    const _loadAndRenderDialog = async (options) => {\n      const screenshotRequired = options.enableScreenshot && isScreenshotSupported();\n      const [modalIntegration, screenshotIntegration] = await Promise.all([\n        _findIntegration('FeedbackModal', getModalIntegration, 'feedbackModalIntegration'),\n        screenshotRequired\n          ? _findIntegration(\n              'FeedbackScreenshot',\n              getScreenshotIntegration,\n              'feedbackScreenshotIntegration',\n            )\n          : undefined,\n      ]);\n      if (!modalIntegration) {\n        // TODO: Let the end-user retry async loading\n        DEBUG_BUILD &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(\n            '[Feedback] Missing feedback modal integration. Try using `feedbackSyncIntegration` in your `Sentry.init`.',\n          );\n        throw new Error('[Feedback] Missing feedback modal integration!');\n      }\n      if (screenshotRequired && !screenshotIntegration) {\n        DEBUG_BUILD &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Feedback] Missing feedback screenshot integration. Proceeding without screenshots.');\n      }\n\n      return modalIntegration.createDialog({\n        options,\n        screenshotIntegration: screenshotRequired ? screenshotIntegration : undefined,\n        sendFeedback,\n        shadow: _createShadow(options),\n      });\n    };\n\n    const _attachTo = (el, optionOverrides = {}) => {\n      const mergedOptions = mergeOptions(_options, optionOverrides);\n\n      const targetEl =\n        typeof el === 'string' ? DOCUMENT.querySelector(el) : typeof el.addEventListener === 'function' ? el : null;\n\n      if (!targetEl) {\n        DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Feedback] Unable to attach to target element');\n        throw new Error('Unable to attach to target element');\n      }\n\n      let dialog = null;\n      const handleClick = async () => {\n        if (!dialog) {\n          dialog = await _loadAndRenderDialog({\n            ...mergedOptions,\n            onFormClose: () => {\n              dialog && dialog.close();\n              mergedOptions.onFormClose && mergedOptions.onFormClose();\n            },\n            onFormSubmitted: () => {\n              dialog && dialog.removeFromDom();\n              mergedOptions.onFormSubmitted && mergedOptions.onFormSubmitted();\n            },\n          });\n        }\n        dialog.appendToDom();\n        dialog.open();\n      };\n      targetEl.addEventListener('click', handleClick);\n      const unsubscribe = () => {\n        _subscriptions = _subscriptions.filter(sub => sub !== unsubscribe);\n        dialog && dialog.removeFromDom();\n        dialog = null;\n        targetEl.removeEventListener('click', handleClick);\n      };\n      _subscriptions.push(unsubscribe);\n      return unsubscribe;\n    };\n\n    const _createActor = (optionOverrides = {}) => {\n      const mergedOptions = mergeOptions(_options, optionOverrides);\n      const shadow = _createShadow(mergedOptions);\n      const actor = Actor({ triggerLabel: mergedOptions.triggerLabel, shadow });\n      _attachTo(actor.el, {\n        ...mergedOptions,\n        onFormOpen() {\n          actor.hide();\n        },\n        onFormClose() {\n          actor.show();\n        },\n        onFormSubmitted() {\n          actor.show();\n        },\n      });\n      return actor;\n    };\n\n    return {\n      name: 'Feedback',\n      setupOnce() {\n        if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isBrowser)() || !_options.autoInject) {\n          return;\n        }\n\n        if (DOCUMENT.readyState === 'loading') {\n          DOCUMENT.addEventListener('DOMContentLoaded', () => _createActor().appendToDom);\n        } else {\n          _createActor().appendToDom();\n        }\n      },\n\n      /**\n       * Adds click listener to the element to open a feedback dialog\n       *\n       * The returned function can be used to remove the click listener\n       */\n      attachTo: _attachTo,\n\n      /**\n       * Creates a new widget which is composed of a Button which triggers a Dialog.\n       * Accepts partial options to override any options passed to constructor.\n       */\n      createWidget(optionOverrides = {}) {\n        const actor = _createActor(mergeOptions(_options, optionOverrides));\n        actor.appendToDom();\n        return actor;\n      },\n\n      /**\n       * Creates a new Form which you can\n       * Accepts partial options to override any options passed to constructor.\n       */\n      async createForm(optionOverrides = {}) {\n        return _loadAndRenderDialog(mergeOptions(_options, optionOverrides));\n      },\n\n      /**\n       * Removes the Feedback integration (including host, shadow DOM, and all widgets)\n       */\n      remove() {\n        if (_shadow) {\n          _shadow.parentElement && _shadow.parentElement.remove();\n          _shadow = null;\n        }\n        // Remove any lingering subscriptions\n        _subscriptions.forEach(sub => sub());\n        _subscriptions = [];\n      },\n    };\n  }) ;\n\n  return feedbackIntegration;\n};\n\n/**\n * This is a small utility to get a type-safe instance of the Feedback integration.\n */\nfunction getFeedback() {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n  return client && client.getIntegrationByName('Feedback');\n}\n\nvar n,l$1,u$1,i$1,o$1,r$1,f$1,c$1={},s$1=[],a$1=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,h$1=Array.isArray;function v$1(n,l){for(var u in l)n[u]=l[u];return n}function p$1(n){var l=n.parentNode;l&&l.removeChild(n);}function y$1(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return d$1(l,f,i,o,null)}function d$1(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u$1:r,__i:-1,__u:0};return null==r&&null!=l$1.vnode&&l$1.vnode(f),f}function g(n){return n.children}function b(n,l){this.props=n,this.context=l;}function m$1(n,l){if(null==l)return n.__?m$1(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return \"function\"==typeof n.type?m$1(n):null}function w$1(n,u,t){var i,o=n.__v,r=o.__e,f=n.__P;if(f)return (i=v$1({},o)).__v=o.__v+1,l$1.vnode&&l$1.vnode(i),M(f,i,o,n.__n,void 0!==f.ownerSVGElement,32&o.__u?[r]:null,u,null==r?m$1(o):r,!!(32&o.__u),t),i.__.__k[i.__i]=i,i.__d=void 0,i.__e!=r&&k$1(i),i}function k$1(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k$1(n)}}function x$1(n){(!n.__d&&(n.__d=!0)&&i$1.push(n)&&!C$1.__r++||o$1!==l$1.debounceRendering)&&((o$1=l$1.debounceRendering)||r$1)(C$1);}function C$1(){var n,u,t,o=[],r=[];for(i$1.sort(f$1);n=i$1.shift();)n.__d&&(t=i$1.length,u=w$1(n,o,r)||u,0===t||i$1.length>t?(j$1(o,u,r),r.length=o.length=0,u=void 0,i$1.sort(f$1)):u&&l$1.__c&&l$1.__c(u,s$1));u&&j$1(o,u,r),C$1.__r=0;}function P(n,l,u,t,i,o,r,f,e,a,h){var v,p,y,d,_,g=t&&t.__k||s$1,b=l.length;for(u.__d=e,S(u,l,g),e=u.__d,v=0;v<b;v++)null!=(y=u.__k[v])&&\"boolean\"!=typeof y&&\"function\"!=typeof y&&(p=-1===y.__i?c$1:g[y.__i]||c$1,y.__i=v,M(n,y,p,i,o,r,f,e,a,h),d=y.__e,y.ref&&p.ref!=y.ref&&(p.ref&&N(p.ref,null,y),h.push(y.ref,y.__c||d,y)),null==_&&null!=d&&(_=d),65536&y.__u||p.__k===y.__k?e=$(y,e,n):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=_;}function S(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)null!=(i=n.__k[t]=null==(i=l[t])||\"boolean\"==typeof i||\"function\"==typeof i?null:\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?d$1(null,i,null,null,i):h$1(i)?d$1(g,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?d$1(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i)?(i.__=n,i.__b=n.__b+1,f=I(i,u,r=t+a,s),i.__i=f,o=null,-1!==f&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f===r+1?a++:f>r?s>e-r?a+=f-r:a--:a=f<r&&f==r-1?f-r:0,f!==t+a&&(i.__u|=65536))):(o=u[t])&&null==o.key&&o.__e&&(o.__e==n.__d&&(n.__d=m$1(o)),O(o,o,!1),u[t]=null,s--);if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=m$1(o)),O(o,o));}function $(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=$(t[i],l,u));return l}n.__e!=l&&(u.insertBefore(n.__e,l||null),l=n.__e);do{l=l&&l.nextSibling;}while(null!=l&&8===l.nodeType);return l}function I(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type)return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--;}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++;}}return -1}function T(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||a$1.test(l)?u:u+\"px\";}function A(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else {if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||T(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||T(n.style,l,u[l]);}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/i,\"$1\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=Date.now(),n.addEventListener(l,o?L:D$1,o)):n.removeEventListener(l,o?L:D$1,o);else {if(i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!==l&&\"height\"!==l&&\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&\"rowSpan\"!==l&&\"colSpan\"!==l&&\"role\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,u));}}function D$1(n){if(this.l){var u=this.l[n.type+!1];if(n.t){if(n.t<=u.u)return}else n.t=Date.now();return u(l$1.event?l$1.event(n):n)}}function L(n){if(this.l)return this.l[n.type+!0](l$1.event?l$1.event(n):n)}function M(n,u,t,i,o,r,f,e,c,s){var a,p,y,d,_,m,w,k,x,C,S,$,H,I,T,A=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l$1.__b)&&a(u);n:if(\"function\"==typeof A)try{if(k=u.props,x=(a=A.contextType)&&i[a.__c],C=a?x?x.props.value:a.__:i,t.__c?w=(p=u.__c=t.__c).__=p.__E:(\"prototype\"in A&&A.prototype.render?u.__c=p=new A(k,C):(u.__c=p=new b(k,C),p.constructor=A,p.render=q$1),x&&x.sub(p),p.props=k,p.state||(p.state={}),p.context=C,p.__n=i,y=p.__d=!0,p.__h=[],p._sb=[]),null==p.__s&&(p.__s=p.state),null!=A.getDerivedStateFromProps&&(p.__s==p.state&&(p.__s=v$1({},p.__s)),v$1(p.__s,A.getDerivedStateFromProps(k,p.__s))),d=p.props,_=p.state,p.__v=u,y)null==A.getDerivedStateFromProps&&null!=p.componentWillMount&&p.componentWillMount(),null!=p.componentDidMount&&p.__h.push(p.componentDidMount);else {if(null==A.getDerivedStateFromProps&&k!==d&&null!=p.componentWillReceiveProps&&p.componentWillReceiveProps(k,C),!p.__e&&(null!=p.shouldComponentUpdate&&!1===p.shouldComponentUpdate(k,p.__s,C)||u.__v===t.__v)){for(u.__v!==t.__v&&(p.props=k,p.state=p.__s,p.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.forEach(function(n){n&&(n.__=u);}),S=0;S<p._sb.length;S++)p.__h.push(p._sb[S]);p._sb=[],p.__h.length&&f.push(p);break n}null!=p.componentWillUpdate&&p.componentWillUpdate(k,p.__s,C),null!=p.componentDidUpdate&&p.__h.push(function(){p.componentDidUpdate(d,_,m);});}if(p.context=C,p.props=k,p.__P=n,p.__e=!1,$=l$1.__r,H=0,\"prototype\"in A&&A.prototype.render){for(p.state=p.__s,p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),I=0;I<p._sb.length;I++)p.__h.push(p._sb[I]);p._sb=[];}else do{p.__d=!1,$&&$(u),a=p.render(p.props,p.state,p.context),p.state=p.__s;}while(p.__d&&++H<25);p.state=p.__s,null!=p.getChildContext&&(i=v$1(v$1({},i),p.getChildContext())),y||null==p.getSnapshotBeforeUpdate||(m=p.getSnapshotBeforeUpdate(d,_)),P(n,h$1(T=null!=a&&a.type===g&&null==a.key?a.props.children:a)?T:[T],u,t,i,o,r,f,e,c,s),p.base=u.__e,u.__u&=-161,p.__h.length&&f.push(p),w&&(p.__E=p.__=null);}catch(n){u.__v=null,c||null!=r?(u.__e=e,u.__u|=c?160:32,r[r.indexOf(e)]=null):(u.__e=t.__e,u.__k=t.__k),l$1.__e(n,u,t);}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=z$1(t.__e,u,t,i,o,r,f,c,s);(a=l$1.diffed)&&a(u);}function j$1(n,u,t){for(var i=0;i<t.length;i++)N(t[i],t[++i],t[++i]);l$1.__c&&l$1.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u);});}catch(n){l$1.__e(n,u.__v);}});}function z$1(l,u,t,i,o,r,f,e,s){var a,v,y,d,_,g,b,w=t.props,k=u.props,x=u.type;if(\"svg\"===x&&(o=!0),null!=r)for(a=0;a<r.length;a++)if((_=r[a])&&\"setAttribute\"in _==!!x&&(x?_.localName===x:3===_.nodeType)){l=_,r[a]=null;break}if(null==l){if(null===x)return document.createTextNode(k);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",x):document.createElement(x,k.is&&k),r=null,e=!1;}if(null===x)w===k||e&&l.data===k||(l.data=k);else {if(r=r&&n.call(l.childNodes),w=t.props||c$1,!e&&null!=r)for(w={},a=0;a<l.attributes.length;a++)w[(_=l.attributes[a]).name]=_.value;for(a in w)_=w[a],\"children\"==a||(\"dangerouslySetInnerHTML\"==a?y=_:\"key\"===a||a in k||A(l,a,null,_,o));for(a in k)_=k[a],\"children\"==a?d=_:\"dangerouslySetInnerHTML\"==a?v=_:\"value\"==a?g=_:\"checked\"==a?b=_:\"key\"===a||e&&\"function\"!=typeof _||w[a]===_||A(l,a,_,w[a],o);if(v)e||y&&(v.__html===y.__html||v.__html===l.innerHTML)||(l.innerHTML=v.__html),u.__k=[];else if(y&&(l.innerHTML=\"\"),P(l,h$1(d)?d:[d],u,t,i,o&&\"foreignObject\"!==x,r,f,r?r[0]:t.__k&&m$1(t,0),e,s),null!=r)for(a=r.length;a--;)null!=r[a]&&p$1(r[a]);e||(a=\"value\",void 0!==g&&(g!==l[a]||\"progress\"===x&&!g||\"option\"===x&&g!==w[a])&&A(l,a,g,w[a],!1),a=\"checked\",void 0!==b&&b!==l[a]&&A(l,a,b,w[a],!1));}return l}function N(n,u,t){try{\"function\"==typeof n?n(u):n.current=u;}catch(n){l$1.__e(n,t);}}function O(n,u,t){var i,o;if(l$1.unmount&&l$1.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||N(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount();}catch(n){l$1.__e(n,u);}i.base=i.__P=null,n.__c=void 0;}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&O(i[o],u,t||\"function\"!=typeof n.type);t||null==n.__e||p$1(n.__e),n.__=n.__e=n.__d=void 0;}function q$1(n,l,u){return this.constructor(n,u)}function B$1(u,t,i){var o,r,f,e;l$1.__&&l$1.__(u,t),r=(o=\"function\"==typeof i)?null:i&&i.__k||t.__k,f=[],e=[],M(t,u=(!o&&i||t).__k=y$1(g,null,[u]),r||c$1,c$1,void 0!==t.ownerSVGElement,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),u.__d=void 0,j$1(f,u,e);}n=s$1.slice,l$1={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l;}throw n}},u$1=0,b.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=v$1({},this.state),\"function\"==typeof n&&(n=n(v$1({},u),this.props)),n&&v$1(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),x$1(this));},b.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),x$1(this));},b.prototype.render=g,i$1=[],r$1=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f$1=function(n,l){return n.__v.__b-l.__v.__b},C$1.__r=0;\n\nvar t,r,u,i,o=0,f=[],c=[],e=l$1,a=e.__b,v=e.__r,l=e.diffed,m=e.__c,s=e.unmount,d=e.__;function h(n,t){e.__h&&e.__h(r,n,o||t),o=0;var u=r.__H||(r.__H={__:[],__h:[]});return n>=u.__.length&&u.__.push({__V:c}),u.__[n]}function p(n){return o=1,y(D,n)}function y(n,u,i){var o=h(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):D(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}));}],o.__c=r,!r.u)){var f=function(n,t,r){if(!o.__c.__H)return !0;var u=o.__c.__H.__.filter(function(n){return !!n.__c});if(u.every(function(n){return !n.__N}))return !c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0);}}),!(!i&&o.__c.props===n)&&(!c||c.call(this,n,t,r))};r.u=!0;var c=r.shouldComponentUpdate,e=r.componentWillUpdate;r.componentWillUpdate=function(n,t,r){if(this.__e){var u=c;c=void 0,f(n,t,r),c=u;}e&&e.call(this,n,t,r);},r.shouldComponentUpdate=f;}return o.__N||o.__}function _(n,u){var i=h(t++,3);!e.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__H.__h.push(i));}function F(n){return o=5,q(function(){return {current:n}},[])}function q(n,r){var u=h(t++,7);return C(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function x(n,t){return o=8,q(function(){return n},t)}function j(){for(var n;n=f.shift();)if(n.__P&&n.__H)try{n.__H.__h.forEach(z),n.__H.__h.forEach(B),n.__H.__h=[];}catch(t){n.__H.__h=[],e.__e(t,n.__v);}}e.__b=function(n){r=null,a&&a(n);},e.__=function(n,t){t.__k&&t.__k.__m&&(n.__m=t.__k.__m),d&&d(n,t);},e.__r=function(n){v&&v(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0;})):(i.__h.forEach(z),i.__h.forEach(B),i.__h=[],t=0)),u=r;},e.diffed=function(n){l&&l(n);var t=n.__c;t&&t.__H&&(t.__H.__h.length&&(1!==f.push(t)&&i===e.requestAnimationFrame||((i=e.requestAnimationFrame)||w)(j)),t.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c;})),u=r=null;},e.__c=function(n,t){t.some(function(n){try{n.__h.forEach(z),n.__h=n.__h.filter(function(n){return !n.__||B(n)});}catch(r){t.some(function(n){n.__h&&(n.__h=[]);}),t=[],e.__e(r,n.__v);}}),m&&m(n,t);},e.unmount=function(n){s&&s(n);var t,r=n.__c;r&&r.__H&&(r.__H.__.forEach(function(n){try{z(n);}catch(n){t=n;}}),r.__H=void 0,t&&e.__e(t,r.__v));};var k=\"function\"==typeof requestAnimationFrame;function w(n){var t,r=function(){clearTimeout(u),k&&cancelAnimationFrame(t),setTimeout(n);},u=setTimeout(r,100);k&&(t=requestAnimationFrame(r));}function z(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t;}function B(n){var t=r;n.__c=n.__(),r=t;}function C(n,t){return !n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function D(n,t){return \"function\"==typeof t?t(n):t}\n\nconst XMLNS$1 = 'http://www.w3.org/2000/svg';\n\n/**\n * Sentry Logo\n */\nfunction SentryLogo() {\n  const createElementNS = (tagName) =>\n    DOCUMENT.createElementNS(XMLNS$1, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: '32',\n    height: '30',\n    viewBox: '0 0 72 66',\n    fill: 'inherit',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    transform: 'translate(11, 11)',\n    d: 'M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z',\n  });\n  svg.appendChild(path);\n\n  return svg;\n}\n\nconst _jsxFileName$4 = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/components/DialogHeader.tsx\";\n\nfunction DialogHeader({ options }) {\n  const logoHtml = q(() => ({ __html: SentryLogo().outerHTML }), []);\n\n  return (\n    y$1('h2', { class: \"dialog__header\", __self: this, __source: {fileName: _jsxFileName$4, lineNumber: 16}}\n      , options.formTitle\n      , options.showBranding ? (\n        y$1('a', {\n          class: \"brand-link\",\n          target: \"_blank\",\n          href: \"https://sentry.io/welcome/\",\n          title: \"Powered by Sentry\"  ,\n          rel: \"noopener noreferrer\" ,\n          dangerouslySetInnerHTML: logoHtml, __self: this, __source: {fileName: _jsxFileName$4, lineNumber: 19}}\n        )\n      ) : null\n    )\n  );\n}\n\n/**\n * Validate that a given feedback submission has the required fields\n */\nfunction getMissingFields(feedback, props) {\n  const emptyFields = [];\n  if (props.isNameRequired && !feedback.name) {\n    emptyFields.push(props.nameLabel);\n  }\n  if (props.isEmailRequired && !feedback.email) {\n    emptyFields.push(props.emailLabel);\n  }\n  if (!feedback.message) {\n    emptyFields.push(props.messageLabel);\n  }\n\n  return emptyFields;\n}\n\nconst _jsxFileName$3 = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/components/Form.tsx\";\n\nfunction retrieveStringValue(formData, key) {\n  const value = formData.get(key);\n  if (typeof value === 'string') {\n    return value.trim();\n  }\n  return '';\n}\n\nfunction Form({\n  options,\n  defaultEmail,\n  defaultName,\n\n  onFormClose,\n  onSubmit,\n  onSubmitSuccess,\n  onSubmitError,\n  showEmail,\n  showName,\n  screenshotInput,\n}) {\n  const {\n    addScreenshotButtonLabel,\n    removeScreenshotButtonLabel,\n    cancelButtonLabel,\n    emailLabel,\n    emailPlaceholder,\n    isEmailRequired,\n    isNameRequired,\n    messageLabel,\n    messagePlaceholder,\n    nameLabel,\n    namePlaceholder,\n    submitButtonLabel,\n    isRequiredLabel,\n  } = options;\n  // TODO: set a ref on the form, and whenever an input changes call proceessForm() and setError()\n  const [error, setError] = p(null);\n\n  const [showScreenshotInput, setShowScreenshotInput] = p(false);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ScreenshotInputComponent = screenshotInput && screenshotInput.input;\n\n  const [screenshotError, setScreenshotError] = p(null);\n  const onScreenshotError = x((error) => {\n    setScreenshotError(error);\n    setShowScreenshotInput(false);\n  }, []);\n\n  const hasAllRequiredFields = x(\n    (data) => {\n      const missingFields = getMissingFields(data, {\n        emailLabel,\n        isEmailRequired,\n        isNameRequired,\n        messageLabel,\n        nameLabel,\n      });\n\n      if (missingFields.length > 0) {\n        setError(`Please enter in the following required fields: ${missingFields.join(', ')}`);\n      } else {\n        setError(null);\n      }\n\n      return missingFields.length === 0;\n    },\n    [emailLabel, isEmailRequired, isNameRequired, messageLabel, nameLabel],\n  );\n\n  const handleSubmit = x(\n    async (e) => {\n      try {\n        e.preventDefault();\n        if (!(e.target instanceof HTMLFormElement)) {\n          return;\n        }\n        const formData = new FormData(e.target);\n        const attachment = await (screenshotInput && showScreenshotInput ? screenshotInput.value() : undefined);\n\n        const data = {\n          name: retrieveStringValue(formData, 'name'),\n          email: retrieveStringValue(formData, 'email'),\n          message: retrieveStringValue(formData, 'message'),\n          attachments: attachment ? [attachment] : undefined,\n        };\n\n        if (!hasAllRequiredFields(data)) {\n          return;\n        }\n\n        try {\n          await onSubmit(\n            {\n              name: data.name,\n              email: data.email,\n              message: data.message,\n              source: FEEDBACK_WIDGET_SOURCE,\n            },\n            { attachments: data.attachments },\n          );\n          onSubmitSuccess(data);\n        } catch (error) {\n          DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(error);\n          setError('There was a problem submitting feedback, please wait and try again.');\n          onSubmitError(error );\n        }\n      } catch (e2) {\n        // pass\n      }\n    },\n    [screenshotInput && showScreenshotInput, onSubmitSuccess, onSubmitError],\n  );\n\n  return (\n    y$1('form', { class: \"form\", onSubmit: handleSubmit, __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 142}}\n      , ScreenshotInputComponent && showScreenshotInput ? (\n        y$1(ScreenshotInputComponent, { onError: onScreenshotError, __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 144}} )\n      ) : null\n\n      , y$1('div', { class: \"form__right\", 'data-sentry-feedback': true, __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 147}}\n        , y$1('div', { class: \"form__top\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 148}}\n          , error ? y$1('div', { class: \"form__error-container\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 149}}, error) : null\n\n          , showName ? (\n            y$1('label', { for: \"name\", class: \"form__label\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 152}}\n              , y$1(LabelText, { label: nameLabel, isRequiredLabel: isRequiredLabel, isRequired: isNameRequired, __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 153}} )\n              , y$1('input', {\n                class: \"form__input\",\n                defaultValue: defaultName,\n                id: \"name\",\n                name: \"name\",\n                placeholder: namePlaceholder,\n                required: isNameRequired,\n                type: \"text\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 154}}\n              )\n            )\n          ) : (\n            y$1('input', { 'aria-hidden': true, value: defaultName, name: \"name\", type: \"hidden\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 165}} )\n          )\n\n          , showEmail ? (\n            y$1('label', { for: \"email\", class: \"form__label\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 169}}\n              , y$1(LabelText, { label: emailLabel, isRequiredLabel: isRequiredLabel, isRequired: isEmailRequired, __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 170}} )\n              , y$1('input', {\n                class: \"form__input\",\n                defaultValue: defaultEmail,\n                id: \"email\",\n                name: \"email\",\n                placeholder: emailPlaceholder,\n                required: isEmailRequired,\n                type: \"email\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 171}}\n)\n            )\n          ) : (\n            y$1('input', { 'aria-hidden': true, value: defaultEmail, name: \"email\", type: \"hidden\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 182}} )\n          )\n\n          , y$1('label', { for: \"message\", class: \"form__label\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 185}}\n            , y$1(LabelText, { label: messageLabel, isRequiredLabel: isRequiredLabel, isRequired: true, __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 186}} )\n            , y$1('textarea', {\n              autoFocus: true,\n              class: \"form__input form__input--textarea\" ,\n              id: \"message\",\n              name: \"message\",\n              placeholder: messagePlaceholder,\n              required: true,\n              rows: 5, __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 187}}\n            )\n          )\n\n          , ScreenshotInputComponent ? (\n            y$1('label', { for: \"screenshot\", class: \"form__label\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 199}}\n              , y$1('button', {\n                class: \"btn btn--default\" ,\n                type: \"button\",\n                onClick: () => {\n                  setScreenshotError(null);\n                  setShowScreenshotInput(prev => !prev);\n                }, __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 200}}\n\n                , showScreenshotInput ? removeScreenshotButtonLabel : addScreenshotButtonLabel\n              )\n              , screenshotError ? y$1('div', { class: \"form__error-container\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 210}}, screenshotError.message) : null\n            )\n          ) : null\n        )\n        , y$1('div', { class: \"btn-group\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 214}}\n          , y$1('button', { class: \"btn btn--primary\" , type: \"submit\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 215}}\n            , submitButtonLabel\n          )\n          , y$1('button', { class: \"btn btn--default\" , type: \"button\", onClick: onFormClose, __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 218}}\n            , cancelButtonLabel\n          )\n        )\n      )\n    )\n  );\n}\n\nfunction LabelText({\n  label,\n  isRequired,\n  isRequiredLabel,\n}) {\n  return (\n    y$1('span', { class: \"form__label__text\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 233}}\n      , label\n      , isRequired && y$1('span', { class: \"form__label__text--required\", __self: this, __source: {fileName: _jsxFileName$3, lineNumber: 235}}, isRequiredLabel)\n    )\n  );\n}\n\nconst WIDTH = 16;\nconst HEIGHT = 17;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Success Icon (checkmark)\n */\nfunction SuccessIcon() {\n  const createElementNS = (tagName) =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    width: `${WIDTH}`,\n    height: `${HEIGHT}`,\n    viewBox: `0 0 ${WIDTH} ${HEIGHT}`,\n    fill: 'inherit',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_156)',\n  });\n\n  const path2 = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z',\n  });\n  const path = setAttributesNS(createElementNS('path'), {\n    d: 'M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z',\n  });\n\n  svg.appendChild(g).append(path, path2);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_156',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${WIDTH}`,\n    height: `${WIDTH}`,\n    fill: 'white',\n    transform: 'translate(0 0.5)',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return svg;\n}\n\nconst _jsxFileName$2 = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/components/Dialog.tsx\";\n\nfunction Dialog({ open, onFormSubmitted, ...props }) {\n  const options = props.options;\n  const successIconHtml = q(() => ({ __html: SuccessIcon().outerHTML }), []);\n\n  const [timeoutId, setTimeoutId] = p(null);\n\n  const handleOnSuccessClick = x(() => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      setTimeoutId(null);\n    }\n    onFormSubmitted();\n  }, [timeoutId]);\n\n  const onSubmitSuccess = x(\n    (data) => {\n      props.onSubmitSuccess(data);\n      setTimeoutId(\n        setTimeout(() => {\n          onFormSubmitted();\n          setTimeoutId(null);\n        }, SUCCESS_MESSAGE_TIMEOUT),\n      );\n    },\n    [onFormSubmitted],\n  );\n\n  return (\n    y$1(g, {__self: this, __source: {fileName: _jsxFileName$2, lineNumber: 47}}\n      , timeoutId ? (\n        y$1('div', { class: \"success__position\", onClick: handleOnSuccessClick, __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 49}}\n          , y$1('div', { class: \"success__content\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 50}}\n            , options.successMessageText\n            , y$1('span', { class: \"success__icon\", dangerouslySetInnerHTML: successIconHtml, __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 52}} )\n          )\n        )\n      ) : (\n        y$1('dialog', { class: \"dialog\", onClick: options.onFormClose, open: open, __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 56}}\n          , y$1('div', { class: \"dialog__position\", __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 57}}\n            , y$1('div', {\n              class: \"dialog__content\",\n              onClick: e => {\n                // Stop event propagation so clicks on content modal do not propagate to dialog (which will close dialog)\n                e.stopPropagation();\n              }, __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 58}}\n\n              , y$1(DialogHeader, { options: options, __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 65}} )\n              , y$1(Form, { ...props, onSubmitSuccess: onSubmitSuccess, __self: this, __source: {fileName: _jsxFileName$2, lineNumber: 66}} )\n            )\n          )\n        )\n      )\n    )\n  );\n}\n\nconst DIALOG = `\n.dialog {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: 0;\n  inset: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  height: 100vh;\n  width: 100vw;\n\n  color: var(--dialog-color, var(--foreground));\n  fill: var(--dialog-color, var(--foreground));\n  line-height: 1.75em;\n\n  background-color: rgba(0, 0, 0, 0.05);\n  border: none;\n  inset: 0;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out;\n}\n\n.dialog__position {\n  position: fixed;\n  z-index: var(--z-index);\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  display: flex;\n  max-height: calc(100vh - (2 * var(--page-margin)));\n}\n@media (max-width: 600px) {\n  .dialog__position {\n    inset: var(--page-margin);\n    padding: 0;\n  }\n}\n\n.dialog__position:has(.editor) {\n  inset: var(--page-margin);\n  padding: 0;\n}\n\n.dialog:not([open]) {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n.dialog:not([open]) .dialog__content {\n  transform: translate(0, -16px) scale(0.98);\n}\n\n.dialog__content {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: var(--dialog-padding, 24px);\n  max-width: 100%;\n  width: 100%;\n  max-height: 100%;\n  overflow: auto;\n\n  background: var(--dialog-background, var(--background));\n  border-radius: var(--dialog-border-radius, 20px);\n  border: var(--dialog-border, var(--border));\n  box-shadow: var(--dialog-box-shadow, var(--box-shadow));\n  transform: translate(0, 0) scale(1);\n  transition: transform 0.2s ease-in-out;\n}\n`;\n\nconst DIALOG_HEADER = `\n.dialog__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: var(--dialog-header-weight, 600);\n  margin: 0;\n}\n\n.brand-link {\n  display: inline-flex;\n}\n.brand-link:focus-visible {\n  outline: var(--outline);\n}\n`;\n\nconst FORM = `\n.form {\n  display: flex;\n  overflow: auto;\n  flex-direction: row;\n  gap: 16px;\n  flex: 1 0;\n}\n\n.form__right {\n  width: var(--form-width, 272px);\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n  flex: 1 0 auto;\n}\n\n@media (max-width: 600px) {\n  .form__right {\n    width: auto;\n  }\n}\n\n.form__top {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form__error-container {\n  color: var(--error-foreground);\n  fill: var(--error-foreground);\n}\n\n.form__label {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0px;\n}\n\n.form__label__text {\n  display: flex;\n  gap: 4px;\n  align-items: center;\n}\n\n.form__label__text--required {\n  font-size: 0.85em;\n}\n\n.form__input {\n  font-family: inherit;\n  line-height: inherit;\n  background: transparent;\n  box-sizing: border-box;\n  border: var(--input-border, var(--border));\n  border-radius: var(--input-border-radius, 6px);\n  color: var(--input-color, inherit);\n  fill: var(--input-color, inherit);\n  font-size: var(--input-font-size, inherit);\n  font-weight: var(--input-font-weight, 500);\n  padding: 6px 12px;\n}\n\n.form__input::placeholder {\n  opacity: 0.65;\n  color: var(--input-placeholder-color, inherit);\n  filter: var(--interactive-filter);\n}\n\n.form__input:focus-visible {\n  outline: var(--input-focus-outline, var(--outline));\n}\n\n.form__input--textarea {\n  font-family: inherit;\n  resize: vertical;\n}\n\n.error {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n`;\n\nconst BUTTON = `\n.btn-group {\n  display: grid;\n  gap: 8px;\n}\n\n.btn {\n  line-height: inherit;\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--button-font-size, inherit);\n  font-weight: var(--button-font-weight, 600);\n  padding: var(--button-padding, 6px 16px);\n}\n.btn[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.btn--primary {\n  color: var(--button-primary-color, var(--accent-foreground));\n  fill: var(--button-primary-color, var(--accent-foreground));\n  background: var(--button-primary-background, var(--accent-background));\n  border: var(--button-primary-border, var(--border));\n  border-radius: var(--button-primary-border-radius, 6px);\n  font-weight: var(--button-primary-font-weight, 500);\n}\n.btn--primary:hover {\n  color: var(--button-primary-hover-color, var(--accent-foreground));\n  fill: var(--button-primary-hover-color, var(--accent-foreground));\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n}\n.btn--primary:focus-visible {\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n  outline: var(--button-primary-focus-outline, var(--outline));\n}\n\n.btn--default {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-background, var(--background));\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  font-weight: var(--button-font-weight, 500);\n}\n.btn--default:hover {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n.btn--default:focus-visible {\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n  outline: var(--button-focus-outline, var(--outline));\n}\n`;\n\nconst SUCCESS = `\n.success__position {\n  position: fixed;\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  z-index: var(--z-index);\n}\n.success__content {\n  background: var(--success-background, var(--background));\n  border: var(--success-border, var(--border));\n  border-radius: var(--success-border-radius, 1.7em/50%);\n  box-shadow: var(--success-box-shadow, var(--box-shadow));\n  font-weight: var(--success-font-weight, 600);\n  color: var(--success-color);\n  fill: var(--success-color);\n  padding: 12px 24px;\n  line-height: 1.75em;\n\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: 6px;\n  cursor: default;\n}\n\n.success__icon {\n  display: flex;\n}\n`;\n\n/**\n * Creates <style> element for widget dialog\n */\nfunction createDialogStyles() {\n  const style = DOCUMENT.createElement('style');\n\n  style.textContent = `\n:host {\n  --dialog-inset: var(--inset);\n}\n\n${DIALOG}\n${DIALOG_HEADER}\n${FORM}\n${BUTTON}\n${SUCCESS}\n`;\n\n  return style;\n}\n\nconst _jsxFileName$1 = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/integration.tsx\";\nfunction getUser() {\n  const currentUser = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)().getUser();\n  const isolationUser = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getIsolationScope)().getUser();\n  const globalUser = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getGlobalScope)().getUser();\n  if (currentUser && Object.keys(currentUser).length) {\n    return currentUser;\n  }\n  if (isolationUser && Object.keys(isolationUser).length) {\n    return isolationUser;\n  }\n  return globalUser;\n}\n\nconst feedbackModalIntegration = (() => {\n  return {\n    name: 'FeedbackModal',\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce() {},\n    createDialog: ({ options, screenshotIntegration, sendFeedback, shadow }) => {\n      const shadowRoot = shadow ;\n      const userKey = options.useSentryUser;\n      const user = getUser();\n\n      const el = DOCUMENT.createElement('div');\n      const style = createDialogStyles();\n\n      let originalOverflow = '';\n      const dialog = {\n        get el() {\n          return el;\n        },\n        appendToDom() {\n          if (!shadowRoot.contains(style) && !shadowRoot.contains(el)) {\n            shadowRoot.appendChild(style);\n            shadowRoot.appendChild(el);\n          }\n        },\n        removeFromDom() {\n          shadowRoot.removeChild(el);\n          shadowRoot.removeChild(style);\n        },\n        open() {\n          renderContent(true);\n          options.onFormOpen && options.onFormOpen();\n          originalOverflow = DOCUMENT.body.style.overflow;\n          DOCUMENT.body.style.overflow = 'hidden';\n        },\n        close() {\n          renderContent(false);\n          DOCUMENT.body.style.overflow = originalOverflow;\n        },\n      };\n\n      const screenshotInput = screenshotIntegration && screenshotIntegration.createInput(y$1, dialog, options);\n\n      const renderContent = (open) => {\n        B$1(\n          y$1(Dialog, {\n            options: options,\n            screenshotInput: screenshotInput,\n            showName: options.showName || options.isNameRequired,\n            showEmail: options.showEmail || options.isEmailRequired,\n            defaultName: (userKey && user && user[userKey.name]) || '',\n            defaultEmail: (userKey && user && user[userKey.email]) || '',\n            onFormClose: () => {\n              renderContent(false);\n              options.onFormClose && options.onFormClose();\n            },\n            onSubmit: sendFeedback,\n            onSubmitSuccess: (data) => {\n              renderContent(false);\n              options.onSubmitSuccess && options.onSubmitSuccess(data);\n            },\n            onSubmitError: (error) => {\n              options.onSubmitError && options.onSubmitError(error);\n            },\n            onFormSubmitted: () => {\n              options.onFormSubmitted && options.onFormSubmitted();\n            },\n            open: open, __self: undefined, __source: {fileName: _jsxFileName$1, lineNumber: 72}}\n          ),\n          el,\n        );\n      };\n\n      return dialog;\n    },\n  };\n}) ;\n\n/**\n * Creates <style> element for widget dialog\n */\nfunction createScreenshotInputStyles() {\n  const style = DOCUMENT.createElement('style');\n\n  const surface200 = '#1A141F';\n  const gray100 = '#302735';\n\n  style.textContent = `\n.editor {\n  padding: 10px;\n  padding-top: 65px;\n  padding-bottom: 65px;\n  flex-grow: 1;\n\n  background-color: ${surface200};\n  background-image: repeating-linear-gradient(\n      -145deg,\n      transparent,\n      transparent 8px,\n      ${surface200} 8px,\n      ${surface200} 11px\n    ),\n    repeating-linear-gradient(\n      -45deg,\n      transparent,\n      transparent 15px,\n      ${gray100} 15px,\n      ${gray100} 16px\n    );\n}\n\n.editor__canvas-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n\n.editor__canvas-container canvas {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n\n.editor__crop-btn-group {\n  padding: 8px;\n  gap: 8px;\n  border-radius: var(--menu-border-radius, 6px);\n  background: var(--button-primary-background, var(--background));\n  width: 175px;\n  position: absolute;\n}\n\n.editor__crop-corner {\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  background: none;\n  border: 3px solid #ffffff;\n}\n\n.editor__crop-corner--top-left {\n  cursor: nwse-resize;\n  border-right: none;\n  border-bottom: none;\n}\n.editor__crop-corner--top-right {\n  cursor: nesw-resize;\n  border-left: none;\n  border-bottom: none;\n}\n.editor__crop-corner--bottom-left {\n  cursor: nesw-resize;\n  border-right: none;\n  border-top: none;\n}\n.editor__crop-corner--bottom-right {\n  cursor: nwse-resize;\n  border-left: none;\n  border-top: none;\n}\n`;\n\n  return style;\n}\n\nconst useTakeScreenshot = ({ onBeforeScreenshot, onScreenshot, onAfterScreenshot, onError }) => {\n  _(() => {\n    const takeScreenshot = async () => {\n      onBeforeScreenshot();\n      const stream = await NAVIGATOR.mediaDevices.getDisplayMedia({\n        video: {\n          width: WINDOW.innerWidth * WINDOW.devicePixelRatio,\n          height: WINDOW.innerHeight * WINDOW.devicePixelRatio,\n        },\n        audio: false,\n        // @ts-expect-error experimental flags: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia#prefercurrenttab\n        monitorTypeSurfaces: 'exclude',\n        preferCurrentTab: true,\n        selfBrowserSurface: 'include',\n        surfaceSwitching: 'exclude',\n      });\n\n      const video = DOCUMENT.createElement('video');\n      await new Promise((resolve, reject) => {\n        video.srcObject = stream;\n        video.onloadedmetadata = () => {\n          onScreenshot(video);\n          stream.getTracks().forEach(track => track.stop());\n          resolve();\n        };\n        video.play().catch(reject);\n      });\n      onAfterScreenshot();\n    };\n\n    takeScreenshot().catch(onError);\n  }, []);\n};\n\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/screenshot/components/ScreenshotEditor.tsx\";\n\nconst CROP_BUTTON_SIZE = 30;\nconst CROP_BUTTON_BORDER = 3;\nconst CROP_BUTTON_OFFSET = CROP_BUTTON_SIZE + CROP_BUTTON_BORDER;\nconst DPI = WINDOW.devicePixelRatio;\n\nconst constructRect = (box) => {\n  return {\n    x: Math.min(box.startX, box.endX),\n    y: Math.min(box.startY, box.endY),\n    width: Math.abs(box.startX - box.endX),\n    height: Math.abs(box.startY - box.endY),\n  };\n};\n\nconst getContainedSize = (img) => {\n  const imgClientHeight = img.clientHeight;\n  const imgClientWidth = img.clientWidth;\n  const ratio = img.width / img.height;\n  let width = imgClientHeight * ratio;\n  let height = imgClientHeight;\n  if (width > imgClientWidth) {\n    width = imgClientWidth;\n    height = imgClientWidth / ratio;\n  }\n  const x = (imgClientWidth - width) / 2;\n  const y = (imgClientHeight - height) / 2;\n  return { startX: x, startY: y, endX: width + x, endY: height + y };\n};\n\nfunction makeScreenshotEditorComponent({ imageBuffer, dialog, options }) {\n  return function ScreenshotEditor({ onError }) {\n    const styles = q(() => ({ __html: createScreenshotInputStyles().innerText }), []);\n\n    const canvasContainerRef = F(null);\n    const cropContainerRef = F(null);\n    const croppingRef = F(null);\n    const [croppingRect, setCroppingRect] = p({ startX: 0, startY: 0, endX: 0, endY: 0 });\n    const [confirmCrop, setConfirmCrop] = p(false);\n\n    _(() => {\n      WINDOW.addEventListener('resize', resizeCropper, false);\n    }, []);\n\n    function resizeCropper() {\n      const cropper = croppingRef.current;\n      const imageDimensions = constructRect(getContainedSize(imageBuffer));\n      if (cropper) {\n        cropper.width = imageDimensions.width * DPI;\n        cropper.height = imageDimensions.height * DPI;\n        cropper.style.width = `${imageDimensions.width}px`;\n        cropper.style.height = `${imageDimensions.height}px`;\n        const ctx = cropper.getContext('2d');\n        if (ctx) {\n          ctx.scale(DPI, DPI);\n        }\n      }\n\n      const cropButton = cropContainerRef.current;\n      if (cropButton) {\n        cropButton.style.width = `${imageDimensions.width}px`;\n        cropButton.style.height = `${imageDimensions.height}px`;\n        cropButton.style.left = `${imageDimensions.x}px`;\n        cropButton.style.top = `${imageDimensions.y}px`;\n      }\n\n      setCroppingRect({ startX: 0, startY: 0, endX: imageDimensions.width, endY: imageDimensions.height });\n    }\n\n    _(() => {\n      const cropper = croppingRef.current;\n      if (!cropper) {\n        return;\n      }\n\n      const ctx = cropper.getContext('2d');\n      if (!ctx) {\n        return;\n      }\n\n      const imageDimensions = constructRect(getContainedSize(imageBuffer));\n      const croppingBox = constructRect(croppingRect);\n      ctx.clearRect(0, 0, imageDimensions.width, imageDimensions.height);\n\n      // draw gray overlay around the selection\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n      ctx.fillRect(0, 0, imageDimensions.width, imageDimensions.height);\n      ctx.clearRect(croppingBox.x, croppingBox.y, croppingBox.width, croppingBox.height);\n\n      // draw selection border\n      ctx.strokeStyle = '#ffffff';\n      ctx.lineWidth = 3;\n      ctx.strokeRect(croppingBox.x + 1, croppingBox.y + 1, croppingBox.width - 2, croppingBox.height - 2);\n      ctx.strokeStyle = '#000000';\n      ctx.lineWidth = 1;\n      ctx.strokeRect(croppingBox.x + 3, croppingBox.y + 3, croppingBox.width - 6, croppingBox.height - 6);\n    }, [croppingRect]);\n\n    function onGrabButton(e, corner) {\n      setConfirmCrop(false);\n      const handleMouseMove = makeHandleMouseMove(corner);\n      const handleMouseUp = () => {\n        DOCUMENT.removeEventListener('mousemove', handleMouseMove);\n        DOCUMENT.removeEventListener('mouseup', handleMouseUp);\n        setConfirmCrop(true);\n      };\n\n      DOCUMENT.addEventListener('mouseup', handleMouseUp);\n      DOCUMENT.addEventListener('mousemove', handleMouseMove);\n    }\n\n    const makeHandleMouseMove = x((corner) => {\n      return function (e) {\n        if (!croppingRef.current) {\n          return;\n        }\n        const cropCanvas = croppingRef.current;\n        const cropBoundingRect = cropCanvas.getBoundingClientRect();\n        const mouseX = e.clientX - cropBoundingRect.x;\n        const mouseY = e.clientY - cropBoundingRect.y;\n        switch (corner) {\n          case 'top-left':\n            setCroppingRect(prev => ({\n              ...prev,\n              startX: Math.min(Math.max(0, mouseX), prev.endX - CROP_BUTTON_OFFSET),\n              startY: Math.min(Math.max(0, mouseY), prev.endY - CROP_BUTTON_OFFSET),\n            }));\n            break;\n          case 'top-right':\n            setCroppingRect(prev => ({\n              ...prev,\n              endX: Math.max(Math.min(mouseX, cropCanvas.width / DPI), prev.startX + CROP_BUTTON_OFFSET),\n              startY: Math.min(Math.max(0, mouseY), prev.endY - CROP_BUTTON_OFFSET),\n            }));\n            break;\n          case 'bottom-left':\n            setCroppingRect(prev => ({\n              ...prev,\n              startX: Math.min(Math.max(0, mouseX), prev.endX - CROP_BUTTON_OFFSET),\n              endY: Math.max(Math.min(mouseY, cropCanvas.height / DPI), prev.startY + CROP_BUTTON_OFFSET),\n            }));\n            break;\n          case 'bottom-right':\n            setCroppingRect(prev => ({\n              ...prev,\n              endX: Math.max(Math.min(mouseX, cropCanvas.width / DPI), prev.startX + CROP_BUTTON_OFFSET),\n              endY: Math.max(Math.min(mouseY, cropCanvas.height / DPI), prev.startY + CROP_BUTTON_OFFSET),\n            }));\n            break;\n        }\n      };\n    }, []);\n\n    function submit() {\n      const cutoutCanvas = DOCUMENT.createElement('canvas');\n      const imageBox = constructRect(getContainedSize(imageBuffer));\n      const croppingBox = constructRect(croppingRect);\n      cutoutCanvas.width = croppingBox.width;\n      cutoutCanvas.height = croppingBox.height;\n\n      const cutoutCtx = cutoutCanvas.getContext('2d');\n      if (cutoutCtx && imageBuffer) {\n        cutoutCtx.drawImage(\n          imageBuffer,\n          (croppingBox.x / imageBox.width) * imageBuffer.width,\n          (croppingBox.y / imageBox.height) * imageBuffer.height,\n          (croppingBox.width / imageBox.width) * imageBuffer.width,\n          (croppingBox.height / imageBox.height) * imageBuffer.height,\n          0,\n          0,\n          croppingBox.width,\n          croppingBox.height,\n        );\n      }\n\n      const ctx = imageBuffer.getContext('2d');\n      if (ctx) {\n        ctx.clearRect(0, 0, imageBuffer.width, imageBuffer.height);\n        imageBuffer.width = cutoutCanvas.width;\n        imageBuffer.height = cutoutCanvas.height;\n        ctx.drawImage(cutoutCanvas, 0, 0);\n        resizeCropper();\n      }\n    }\n\n    useTakeScreenshot({\n      onBeforeScreenshot: x(() => {\n        (dialog.el ).style.display = 'none';\n      }, []),\n      onScreenshot: x(\n        (imageSource) => {\n          const context = imageBuffer.getContext('2d');\n          if (!context) {\n            throw new Error('Could not get canvas context');\n          }\n          imageBuffer.width = imageSource.videoWidth;\n          imageBuffer.height = imageSource.videoHeight;\n          context.drawImage(imageSource, 0, 0);\n        },\n        [imageBuffer],\n      ),\n      onAfterScreenshot: x(() => {\n        (dialog.el ).style.display = 'block';\n        const container = canvasContainerRef.current;\n        container && container.appendChild(imageBuffer);\n        resizeCropper();\n      }, []),\n      onError: x(error => {\n        (dialog.el ).style.display = 'block';\n        onError(error);\n      }, []),\n    });\n\n    return (\n      y$1('div', { class: \"editor\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 249}}\n        , y$1('style', { dangerouslySetInnerHTML: styles, __self: this, __source: {fileName: _jsxFileName, lineNumber: 250}} )\n        , y$1('div', { class: \"editor__canvas-container\", ref: canvasContainerRef, __self: this, __source: {fileName: _jsxFileName, lineNumber: 251}}\n          , y$1('div', { class: \"editor__crop-container\", style: { position: 'absolute' }, ref: cropContainerRef, __self: this, __source: {fileName: _jsxFileName, lineNumber: 252}}\n            , y$1('canvas', { style: { position: 'absolute' }, ref: croppingRef, __self: this, __source: {fileName: _jsxFileName, lineNumber: 253}})\n            , y$1(CropCorner, {\n              left: croppingRect.startX - CROP_BUTTON_BORDER,\n              top: croppingRect.startY - CROP_BUTTON_BORDER,\n              onGrabButton: onGrabButton,\n              corner: \"top-left\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 254}}\n)\n            , y$1(CropCorner, {\n              left: croppingRect.endX - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER,\n              top: croppingRect.startY - CROP_BUTTON_BORDER,\n              onGrabButton: onGrabButton,\n              corner: \"top-right\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 260}}\n)\n            , y$1(CropCorner, {\n              left: croppingRect.startX - CROP_BUTTON_BORDER,\n              top: croppingRect.endY - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER,\n              onGrabButton: onGrabButton,\n              corner: \"bottom-left\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 266}}\n)\n            , y$1(CropCorner, {\n              left: croppingRect.endX - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER,\n              top: croppingRect.endY - CROP_BUTTON_SIZE + CROP_BUTTON_BORDER,\n              onGrabButton: onGrabButton,\n              corner: \"bottom-right\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 272}}\n)\n            , y$1('div', {\n              style: {\n                left: Math.max(0, croppingRect.endX - 191),\n                top: Math.max(0, croppingRect.endY + 8),\n                display: confirmCrop ? 'flex' : 'none',\n              },\n              class: \"editor__crop-btn-group\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 278}}\n\n              , y$1('button', {\n                onClick: e => {\n                  e.preventDefault();\n                  if (croppingRef.current) {\n                    setCroppingRect({\n                      startX: 0,\n                      startY: 0,\n                      endX: croppingRef.current.width / DPI,\n                      endY: croppingRef.current.height / DPI,\n                    });\n                  }\n                  setConfirmCrop(false);\n                },\n                class: \"btn btn--default\" , __self: this, __source: {fileName: _jsxFileName, lineNumber: 286}}\n\n                , options.cancelButtonLabel\n              )\n              , y$1('button', {\n                onClick: e => {\n                  e.preventDefault();\n                  submit();\n                  setConfirmCrop(false);\n                },\n                class: \"btn btn--primary\" , __self: this, __source: {fileName: _jsxFileName, lineNumber: 303}}\n\n                , options.confirmButtonLabel\n              )\n            )\n          )\n        )\n      )\n    );\n  };\n}\n\nfunction CropCorner({\n  top,\n  left,\n  corner,\n  onGrabButton,\n}\n\n) {\n  return (\n    y$1('button', {\n      class: `editor__crop-corner editor__crop-corner--${corner} `,\n      style: {\n        top: top,\n        left: left,\n      },\n      onMouseDown: e => {\n        e.preventDefault();\n        onGrabButton(e, corner);\n      },\n      onClick: e => {\n        e.preventDefault();\n      }, __self: this, __source: {fileName: _jsxFileName, lineNumber: 333}}\n)\n  );\n}\n\nconst feedbackScreenshotIntegration = (() => {\n  return {\n    name: 'FeedbackScreenshot',\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce() {},\n    createInput: (h, dialog, options) => {\n      const imageBuffer = DOCUMENT.createElement('canvas');\n\n      return {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        input: makeScreenshotEditorComponent({ h: h , imageBuffer, dialog, options }) ,\n\n        value: async () => {\n          const blob = await new Promise(resolve => {\n            imageBuffer.toBlob(resolve, 'image/png');\n          });\n          if (blob) {\n            const data = new Uint8Array(await blob.arrayBuffer());\n            const attachment = {\n              data,\n              filename: 'screenshot.png',\n              contentType: 'application/png',\n              // attachmentType?: string;\n            };\n            return attachment;\n          }\n          return undefined;\n        },\n      };\n    },\n  };\n}) ;\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/feedback/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/replay-canvas/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry-internal/replay-canvas/esm/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"replayCanvasIntegration\": function() { return /* binding */ replayCanvasIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n\n\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        try {\n            if (className) {\n                if (typeof className === 'string') {\n                    if (el.matches(`.${className}`))\n                        return true;\n                }\n                else if (elementClassMatchesRegex(el, className)) {\n                    return true;\n                }\n            }\n            if (selector && el.matches(selector))\n                return true;\n            return false;\n        }\n        catch (e2) {\n            return false;\n        }\n    };\n}\n\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (e2) {\n        return () => {\n        };\n    }\n}\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) ;\nfunction closestElementOfNode(node) {\n    if (!node) {\n        return null;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    return el;\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = closestElementOfNode(node);\n    if (!el) {\n        return false;\n    }\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    if (!checkAncestors) {\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\n        return blockedPredicate(el) && !isUnblocked;\n    }\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n    const cached = cachedImplementations[name];\n    if (cached) {\n        return cached;\n    }\n    const document = window.document;\n    let impl = window[name];\n    if (document && typeof document.createElement === 'function') {\n        try {\n            const sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            const contentWindow = sandbox.contentWindow;\n            if (contentWindow && contentWindow[name]) {\n                impl =\n                    contentWindow[name];\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n        }\n    }\n    return (cachedImplementations[name] = impl.bind(window));\n}\nfunction onRequestAnimationFrame(...rest) {\n    return getImplementation('requestAnimationFrame')(...rest);\n}\nfunction setTimeout(...rest) {\n    return getImplementation('setTimeout')(...rest);\n}\n\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\n/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\n\nconst canvasVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    let contextMap = canvasVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        canvasVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nconst saveWebGLVar = (value, win, ctx) => {\n    if (!value ||\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\n        return;\n    const name = value.constructor.name;\n    const list = variableListFor(ctx, name);\n    let index = list.indexOf(value);\n    if (index === -1) {\n        index = list.length;\n        list.push(value);\n    }\n    return index;\n};\nfunction serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n        return value.map((arg) => serializeArg(arg, win, ctx));\n    }\n    else if (value === null) {\n        return value;\n    }\n    else if (value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int16Array ||\n        value instanceof Int8Array ||\n        value instanceof Uint8ClampedArray) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [Object.values(value)],\n        };\n    }\n    else if (value instanceof ArrayBuffer) {\n        const name = value.constructor.name;\n        const base64 = encode(value);\n        return {\n            rr_type: name,\n            base64,\n        };\n    }\n    else if (value instanceof DataView) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [\n                serializeArg(value.buffer, win, ctx),\n                value.byteOffset,\n                value.byteLength,\n            ],\n        };\n    }\n    else if (value instanceof HTMLImageElement) {\n        const name = value.constructor.name;\n        const { src } = value;\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof HTMLCanvasElement) {\n        const name = 'HTMLImageElement';\n        const src = value.toDataURL();\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof ImageData) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\n        };\n    }\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n        const name = value.constructor.name;\n        const index = saveWebGLVar(value, win, ctx);\n        return {\n            rr_type: name,\n            index: index,\n        };\n    }\n    return value;\n}\nconst serializeArgs = (args, win, ctx) => {\n    return args.map((arg) => serializeArg(arg, win, ctx));\n};\nconst isInstanceOfWebGLObject = (value, win) => {\n    const webGLConstructorNames = [\n        'WebGLActiveInfo',\n        'WebGLBuffer',\n        'WebGLFramebuffer',\n        'WebGLProgram',\n        'WebGLRenderbuffer',\n        'WebGLShader',\n        'WebGLShaderPrecisionFormat',\n        'WebGLTexture',\n        'WebGLUniformLocation',\n        'WebGLVertexArrayObject',\n        'WebGLVertexArrayObjectOES',\n    ];\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\n};\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, blockSelector, unblockSelector) {\n    const handlers = [];\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n    for (const prop of props2D) {\n        try {\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n                return function (...args) {\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n                        setTimeout(() => {\n                            const recordArgs = serializeArgs(args, win, this);\n                            cb(this.canvas, {\n                                type: CanvasContext['2D'],\n                                property: prop,\n                                args: recordArgs,\n                            });\n                        }, 0);\n                    }\n                    return original.apply(this, args);\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (e) {\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type: CanvasContext['2D'],\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction getNormalizedContextName(contextType) {\n    return contextType === 'experimental-webgl' ? 'webgl' : contextType;\n}\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\n    const handlers = [];\n    try {\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n            return function (contextType, ...args) {\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\n                    const ctxName = getNormalizedContextName(contextType);\n                    if (!('__context' in this))\n                        this.__context = ctxName;\n                    if (setPreserveDrawingBufferToTrue &&\n                        ['webgl', 'webgl2'].includes(ctxName)) {\n                        if (args[0] && typeof args[0] === 'object') {\n                            const contextAttributes = args[0];\n                            if (!contextAttributes.preserveDrawingBuffer) {\n                                contextAttributes.preserveDrawingBuffer = true;\n                            }\n                        }\n                        else {\n                            args.splice(0, 1, {\n                                preserveDrawingBuffer: true,\n                            });\n                        }\n                    }\n                }\n                return original.apply(this, [contextType, ...args]);\n            };\n        });\n        handlers.push(restoreHandler);\n    }\n    catch (e) {\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, blockSelector, unblockSelector, mirror, win) {\n    const handlers = [];\n    const props = Object.getOwnPropertyNames(prototype);\n    for (const prop of props) {\n        if ([\n            'isContextLost',\n            'canvas',\n            'drawingBufferWidth',\n            'drawingBufferHeight',\n        ].includes(prop)) {\n            continue;\n        }\n        try {\n            if (typeof prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(prototype, prop, function (original) {\n                return function (...args) {\n                    const result = original.apply(this, args);\n                    saveWebGLVar(result, win, this);\n                    if ('tagName' in this.canvas &&\n                        !isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n                        const recordArgs = serializeArgs(args, win, this);\n                        const mutation = {\n                            type,\n                            property: prop,\n                            args: recordArgs,\n                        };\n                        cb(this.canvas, mutation);\n                    }\n                    return result;\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (e) {\n            const hookHandler = hookSetter(prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type,\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\n    const handlers = [];\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nvar r = `for(var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",t=\"undefined\"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s=\"\";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+\"=\":r%3==1&&(s=s.substring(0,s.length-2)+\"==\"),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!(\"OffscreenCanvas\"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+\"-\"+t;if(\"OffscreenCanvas\"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext(\"2d\");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return\"\"}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext(\"bitmaprenderer\"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:\"low\"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};`;\n\nfunction t(){const t=new Blob([r]);return URL.createObjectURL(t)}\n\nclass CanvasManager {\n    reset() {\n        this.pendingCanvasMutations.clear();\n        this.resetObservers && this.resetObservers();\n    }\n    freeze() {\n        this.frozen = true;\n    }\n    unfreeze() {\n        this.frozen = false;\n    }\n    lock() {\n        this.locked = true;\n    }\n    unlock() {\n        this.locked = false;\n    }\n    constructor(options) {\n        this.pendingCanvasMutations = new Map();\n        this.rafStamps = { latestId: 0, invokeId: null };\n        this.frozen = false;\n        this.locked = false;\n        this.processMutation = (target, mutation) => {\n            const newFrame = this.rafStamps.invokeId &&\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\n            if (newFrame || !this.rafStamps.invokeId)\n                this.rafStamps.invokeId = this.rafStamps.latestId;\n            if (!this.pendingCanvasMutations.has(target)) {\n                this.pendingCanvasMutations.set(target, []);\n            }\n            this.pendingCanvasMutations.get(target).push(mutation);\n        };\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\n        this.mutationCb = options.mutationCb;\n        this.mirror = options.mirror;\n        this.options = options;\n        if (errorHandler) {\n            registerErrorHandler(errorHandler);\n        }\n        if (options.enableManualSnapshot) {\n            return;\n        }\n        callbackWrapper(() => {\n            if (recordCanvas && sampling === 'all')\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\n            if (recordCanvas && typeof sampling === 'number')\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\n                    dataURLOptions,\n                });\n        })();\n    }\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\n        this.resetObservers = () => {\n            canvasContextReset();\n            cancelAnimationFrame(rafId);\n        };\n    }\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        this.resetObservers = () => {\n            canvasContextReset();\n            canvas2DReset();\n            canvasWebGL1and2Reset();\n        };\n    }\n    snapshot(canvasElement) {\n        const { options } = this;\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\n        this.resetObservers = () => {\n            cancelAnimationFrame(rafId);\n        };\n    }\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\n        const snapshotInProgressMap = new Map();\n        const worker = new Worker(t());\n        worker.onmessage = (e) => {\n            const data = e.data;\n            const { id } = data;\n            snapshotInProgressMap.set(id, false);\n            if (!('base64' in data))\n                return;\n            const { base64, type, width, height } = data;\n            this.mutationCb({\n                id,\n                type: CanvasContext['2D'],\n                commands: [\n                    {\n                        property: 'clearRect',\n                        args: [0, 0, width, height],\n                    },\n                    {\n                        property: 'drawImage',\n                        args: [\n                            {\n                                rr_type: 'ImageBitmap',\n                                args: [\n                                    {\n                                        rr_type: 'Blob',\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\n                                        type,\n                                    },\n                                ],\n                            },\n                            0,\n                            0,\n                            width,\n                            height,\n                        ],\n                    },\n                ],\n            });\n        };\n        const timeBetweenSnapshots = 1000 / fps;\n        let lastSnapshotTime = 0;\n        let rafId;\n        const getCanvas = (canvasElement) => {\n            if (canvasElement) {\n                return [canvasElement];\n            }\n            const matchedCanvas = [];\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\n                    matchedCanvas.push(canvas);\n                }\n            });\n            return matchedCanvas;\n        };\n        const takeCanvasSnapshots = (timestamp) => {\n            if (lastSnapshotTime &&\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n                return;\n            }\n            lastSnapshotTime = timestamp;\n            getCanvas(canvasElement).forEach((canvas) => {\n                const id = this.mirror.getId(canvas);\n                if (snapshotInProgressMap.get(id))\n                    return;\n                if (!canvas.width || !canvas.height)\n                    return;\n                snapshotInProgressMap.set(id, true);\n                if (!isManualSnapshot &&\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\n                    const context = canvas.getContext(canvas.__context);\n                    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([context, 'optionalAccess', _ => _.getContextAttributes, 'call', _2 => _2(), 'optionalAccess', _3 => _3.preserveDrawingBuffer]) === false) {\n                        context.clear(context.COLOR_BUFFER_BIT);\n                    }\n                }\n                createImageBitmap(canvas)\n                    .then((bitmap) => {\n                    worker.postMessage({\n                        id,\n                        bitmap,\n                        width: canvas.width,\n                        height: canvas.height,\n                        dataURLOptions,\n                        maxCanvasSize,\n                    }, [bitmap]);\n                })\n                    .catch((error) => {\n                    callbackWrapper(() => {\n                        throw error;\n                    })();\n                });\n            });\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n        };\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n        return rafId;\n    }\n    startPendingCanvasMutationFlusher() {\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    startRAFTimestamping() {\n        const setLatestRAFTimestamp = (timestamp) => {\n            this.rafStamps.latestId = timestamp;\n            onRequestAnimationFrame(setLatestRAFTimestamp);\n        };\n        onRequestAnimationFrame(setLatestRAFTimestamp);\n    }\n    flushPendingCanvasMutations() {\n        this.pendingCanvasMutations.forEach((values, canvas) => {\n            const id = this.mirror.getId(canvas);\n            this.flushPendingCanvasMutationFor(canvas, id);\n        });\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    flushPendingCanvasMutationFor(canvas, id) {\n        if (this.frozen || this.locked) {\n            return;\n        }\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\n        if (!valuesWithType || id === -1)\n            return;\n        const values = valuesWithType.map((value) => {\n            const { type, ...rest } = value;\n            return rest;\n        });\n        const { type } = valuesWithType[0];\n        this.mutationCb({ id, type, commands: values });\n        this.pendingCanvasMutations.delete(canvas);\n    }\n}\n\nconst CANVAS_QUALITY = {\n  low: {\n    sampling: {\n      canvas: 1,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.25,\n    },\n  },\n  medium: {\n    sampling: {\n      canvas: 2,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.4,\n    },\n  },\n  high: {\n    sampling: {\n      canvas: 4,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.5,\n    },\n  },\n};\n\nconst INTEGRATION_NAME = 'ReplayCanvas';\nconst DEFAULT_MAX_CANVAS_SIZE = 1280;\n\n/** Exported only for type safe tests. */\nconst _replayCanvasIntegration = ((options = {}) => {\n  const [maxCanvasWidth, maxCanvasHeight] = options.maxCanvasSize || [];\n  const _canvasOptions = {\n    quality: options.quality || 'medium',\n    enableManualSnapshot: options.enableManualSnapshot,\n    maxCanvasSize: [\n      maxCanvasWidth ? Math.min(maxCanvasWidth, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n      maxCanvasHeight ? Math.min(maxCanvasHeight, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n    ] ,\n  };\n\n  let canvasManagerResolve;\n  const _canvasManager = new Promise(resolve => (canvasManagerResolve = resolve));\n\n  return {\n    name: INTEGRATION_NAME,\n    getOptions() {\n      const { quality, enableManualSnapshot, maxCanvasSize } = _canvasOptions;\n\n      return {\n        enableManualSnapshot,\n        recordCanvas: true,\n        getCanvasManager: (getCanvasManagerOptions) => {\n          const manager = new CanvasManager({\n            ...getCanvasManagerOptions,\n            enableManualSnapshot,\n            maxCanvasSize,\n            errorHandler: (err) => {\n              try {\n                if (typeof err === 'object') {\n                  (err ).__rrweb__ = true;\n                }\n              } catch (error) {\n                // ignore errors here\n                // this can happen if the error is frozen or does not allow mutation for other reasons\n              }\n            },\n          });\n          canvasManagerResolve(manager);\n          return manager;\n        },\n        ...(CANVAS_QUALITY[quality || 'medium'] || CANVAS_QUALITY.medium),\n      };\n    },\n    async snapshot(canvasElement) {\n      const canvasManager = await _canvasManager;\n      canvasManager.snapshot(canvasElement);\n    },\n  };\n}) ;\n\n/**\n * Add this in addition to `replayIntegration()` to enable canvas recording.\n */\nconst replayCanvasIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(\n  _replayCanvasIntegration,\n) ;\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/replay-canvas/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry-internal/replay/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry-internal/replay/esm/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getReplay\": function() { return /* binding */ getReplay; },\n/* harmony export */   \"replayIntegration\": function() { return /* binding */ replayIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry-internal/browser-utils */ \"./node_modules/@sentry-internal/browser-utils/esm/index.js\");\n\n\n\n\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nconst SESSION_IDLE_PAUSE_DURATION = 300000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nconst SESSION_IDLE_EXPIRE_DURATION = 900000; // 15 minutes in ms\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst BUFFER_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nconst NETWORK_BODY_MAX_SIZE = 150000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nconst CONSOLE_ARG_MAX_SIZE = 5000;\n\n/* Min. time to wait before we consider something a slow click. */\nconst SLOW_CLICK_THRESHOLD = 3000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nconst SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nconst REPLAY_MAX_EVENT_BUFFER_SIZE = 20000000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nconst MIN_REPLAY_DURATION = 4999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nconst MIN_REPLAY_DURATION_LIMIT = 15000;\n\n/** The max. length of a replay. */\nconst MAX_REPLAY_DURATION = 3600000; // 60 minutes in ms;\n\nfunction _nullishCoalesce$1(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }function _optionalChain$5(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var NodeType$1;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType$1 || (NodeType$1 = {}));\n\nfunction isElement$1(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = _optionalChain$5([n, 'optionalAccess', _ => _.host]);\n    return Boolean(_optionalChain$5([host, 'optionalAccess', _2 => _2.shadowRoot]) === n);\n}\nfunction isNativeShadowDom(shadowRoot) {\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\n}\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\n    if (cssText.includes(' background-clip: text;') &&\n        !cssText.includes(' -webkit-background-clip: text;')) {\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\n    }\n    return cssText;\n}\nfunction escapeImportStatement(rule) {\n    const { cssText } = rule;\n    if (cssText.split('\"').length < 3)\n        return cssText;\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\n    if (rule.layerName === '') {\n        statement.push(`layer`);\n    }\n    else if (rule.layerName) {\n        statement.push(`layer(${rule.layerName})`);\n    }\n    if (rule.supportsText) {\n        statement.push(`supports(${rule.supportsText})`);\n    }\n    if (rule.media.length) {\n        statement.push(rule.media.mediaText);\n    }\n    return statement.join(' ') + ';';\n}\nfunction stringifyStylesheet(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\n            : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction stringifyRule(rule) {\n    let importStringified;\n    if (isCSSImportRule(rule)) {\n        try {\n            importStringified =\n                stringifyStylesheet(rule.styleSheet) ||\n                    escapeImportStatement(rule);\n        }\n        catch (error) {\n        }\n    }\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\n        return fixSafariColons(rule.cssText);\n    }\n    return importStringified || rule.cssText;\n}\nfunction fixSafariColons(cssStringified) {\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\n    return cssStringified.replace(regex, '$1\\\\$2');\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction isCSSStyleRule(rule) {\n    return 'selectorText' in rule;\n}\nclass Mirror {\n    constructor() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n    getId(n) {\n        if (!n)\n            return -1;\n        const id = _optionalChain$5([this, 'access', _3 => _3.getMeta, 'call', _4 => _4(n), 'optionalAccess', _5 => _5.id]);\n        return _nullishCoalesce$1(id, () => ( -1));\n    }\n    getNode(id) {\n        return this.idNodeMap.get(id) || null;\n    }\n    getIds() {\n        return Array.from(this.idNodeMap.keys());\n    }\n    getMeta(n) {\n        return this.nodeMetaMap.get(n) || null;\n    }\n    removeNodeFromMap(n) {\n        const id = this.getId(n);\n        this.idNodeMap.delete(id);\n        if (n.childNodes) {\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\n        }\n    }\n    has(id) {\n        return this.idNodeMap.has(id);\n    }\n    hasNode(node) {\n        return this.nodeMetaMap.has(node);\n    }\n    add(n, meta) {\n        const id = meta.id;\n        this.idNodeMap.set(id, n);\n        this.nodeMetaMap.set(n, meta);\n    }\n    replace(id, n) {\n        const oldNode = this.getNode(id);\n        if (oldNode) {\n            const meta = this.nodeMetaMap.get(oldNode);\n            if (meta)\n                this.nodeMetaMap.set(n, meta);\n        }\n        this.idNodeMap.set(id, n);\n    }\n    reset() {\n        this.idNodeMap = new Map();\n        this.nodeMetaMap = new WeakMap();\n    }\n}\nfunction createMirror() {\n    return new Mirror();\n}\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\n    if (tagName === 'OPTION') {\n        tagName = 'SELECT';\n    }\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\n        (type && maskInputOptions[type]) ||\n        type === 'password' ||\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\n}\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\n    let text = value || '';\n    if (!isMasked) {\n        return text;\n    }\n    if (maskInputFn) {\n        text = maskInputFn(text, element);\n    }\n    return '*'.repeat(text.length);\n}\nfunction toLowerCase(str) {\n    return str.toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\nfunction getInputType(element) {\n    const type = element.type;\n    return element.hasAttribute('data-rr-is-password')\n        ? 'password'\n        : type\n            ?\n                toLowerCase(type)\n            : null;\n}\nfunction getInputValue(el, tagName, type) {\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\n        return el.getAttribute('value') || '';\n    }\n    return el.value;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = toLowerCase(element.tagName);\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\nconst URL_WWW_MATCH = /^www\\..*/i;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        const match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    const output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                const c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\n    if (!value) {\n        return value;\n    }\n    if (name === 'src' ||\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    if (typeof maskAttributeFn === 'function') {\n        return maskAttributeFn(name, value, element);\n    }\n    return value;\n}\nfunction ignoreAttribute(tagName, name, _value) {\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    try {\n        if (unblockSelector && element.matches(unblockSelector)) {\n            return false;\n        }\n        if (typeof blockClass === 'string') {\n            if (element.classList.contains(blockClass)) {\n                return true;\n            }\n        }\n        else {\n            for (let eIndex = element.classList.length; eIndex--;) {\n                const className = element.classList[eIndex];\n                if (blockClass.test(className)) {\n                    return true;\n                }\n            }\n        }\n        if (blockSelector) {\n            return element.matches(blockSelector);\n        }\n    }\n    catch (e) {\n    }\n    return false;\n}\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        try {\n            if (className) {\n                if (typeof className === 'string') {\n                    if (el.matches(`.${className}`))\n                        return true;\n                }\n                else if (elementClassMatchesRegex(el, className)) {\n                    return true;\n                }\n            }\n            if (selector && el.matches(selector))\n                return true;\n            return false;\n        }\n        catch (e2) {\n            return false;\n        }\n    };\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\n    try {\n        const el = node.nodeType === node.ELEMENT_NODE\n            ? node\n            : node.parentElement;\n        if (el === null)\n            return false;\n        if (el.tagName === 'INPUT') {\n            const autocomplete = el.getAttribute('autocomplete');\n            const disallowedAutocompleteValues = [\n                'current-password',\n                'new-password',\n                'cc-number',\n                'cc-exp',\n                'cc-exp-month',\n                'cc-exp-year',\n                'cc-csc',\n            ];\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\n                return true;\n            }\n        }\n        let maskDistance = -1;\n        let unmaskDistance = -1;\n        if (maskAllText) {\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\n            if (unmaskDistance < 0) {\n                return true;\n            }\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\n        }\n        else {\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\n            if (maskDistance < 0) {\n                return false;\n            }\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\n        }\n        return maskDistance >= 0\n            ? unmaskDistance >= 0\n                ? maskDistance <= unmaskDistance\n                : true\n            : unmaskDistance >= 0\n                ? false\n                : !!maskAllText;\n    }\n    catch (e) {\n    }\n    return !!maskAllText;\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return iframeEl.addEventListener('load', listener);\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\n    let fired = false;\n    let styleSheetLoaded;\n    try {\n        styleSheetLoaded = link.sheet;\n    }\n    catch (error) {\n        return;\n    }\n    if (styleSheetLoaded)\n        return;\n    const timer = setTimeout(() => {\n        if (!fired) {\n            listener();\n            fired = true;\n        }\n    }, styleSheetLoadTimeout);\n    link.addEventListener('load', () => {\n        clearTimeout(timer);\n        fired = true;\n        listener();\n    });\n}\nfunction serializeNode(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\n    const rootId = getRootId(doc, mirror);\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                };\n            }\n            else {\n                return {\n                    type: NodeType$1.Document,\n                    childNodes: [],\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType$1.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            return serializeElementNode(n, {\n                doc,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                inlineStylesheet,\n                maskAttributeFn,\n                maskInputOptions,\n                maskInputFn,\n                dataURLOptions,\n                inlineImages,\n                recordCanvas,\n                keepIframeSrcFn,\n                newlyAddedElement,\n                rootId,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n            });\n        case n.TEXT_NODE:\n            return serializeTextNode(n, {\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskTextFn,\n                maskInputOptions,\n                maskInputFn,\n                rootId,\n            });\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType$1.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType$1.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction getRootId(doc, mirror) {\n    if (!mirror.hasNode(doc))\n        return undefined;\n    const docId = mirror.getId(doc);\n    return docId === 1 ? undefined : docId;\n}\nfunction serializeTextNode(n, options) {\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\n    const parentTagName = n.parentNode && n.parentNode.tagName;\n    let textContent = n.textContent;\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\n    if (isStyle && textContent) {\n        try {\n            if (n.nextSibling || n.previousSibling) {\n            }\n            else if (_optionalChain$5([n, 'access', _6 => _6.parentNode, 'access', _7 => _7.sheet, 'optionalAccess', _8 => _8.cssRules])) {\n                textContent = stringifyStylesheet(n.parentNode.sheet);\n            }\n        }\n        catch (err) {\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n        }\n        textContent = absoluteToStylesheet(textContent, getHref());\n    }\n    if (isScript) {\n        textContent = 'SCRIPT_PLACEHOLDER';\n    }\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\n        textContent = maskTextFn\n            ? maskTextFn(textContent, n.parentElement)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\n        textContent = maskInputFn\n            ? maskInputFn(textContent, n.parentNode)\n            : textContent.replace(/[\\S]/g, '*');\n    }\n    if (parentTagName === 'OPTION' && textContent) {\n        const isInputMasked = shouldMaskInput({\n            type: null,\n            tagName: parentTagName,\n            maskInputOptions,\n        });\n        textContent = maskInputValue({\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\n            element: n,\n            value: textContent,\n            maskInputFn,\n        });\n    }\n    return {\n        type: NodeType$1.Text,\n        textContent: textContent || '',\n        isStyle,\n        rootId,\n    };\n}\nfunction serializeElementNode(n, options) {\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n    const tagName = getValidTagName(n);\n    let attributes = {};\n    const len = n.attributes.length;\n    for (let i = 0; i < len; i++) {\n        const attr = n.attributes[i];\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\n        }\n    }\n    if (tagName === 'link' && inlineStylesheet) {\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\n            return s.href === n.href;\n        });\n        let cssText = null;\n        if (stylesheet) {\n            cssText = stringifyStylesheet(stylesheet);\n        }\n        if (cssText) {\n            delete attributes.rel;\n            delete attributes.href;\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n        }\n    }\n    if (tagName === 'style' &&\n        n.sheet &&\n        !(n.innerText || n.textContent || '').trim().length) {\n        const cssText = stringifyStylesheet(n.sheet);\n        if (cssText) {\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\n        }\n    }\n    if (tagName === 'input' ||\n        tagName === 'textarea' ||\n        tagName === 'select' ||\n        tagName === 'option') {\n        const el = n;\n        const type = getInputType(el);\n        const value = getInputValue(el, toUpperCase(tagName), type);\n        const checked = el.checked;\n        if (type !== 'submit' && type !== 'button' && value) {\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\n                type,\n                tagName: toUpperCase(tagName),\n                maskInputOptions,\n            }));\n            attributes.value = maskInputValue({\n                isMasked: forceMask,\n                element: el,\n                value,\n                maskInputFn,\n            });\n        }\n        if (checked) {\n            attributes.checked = checked;\n        }\n    }\n    if (tagName === 'option') {\n        if (n.selected && !maskInputOptions['select']) {\n            attributes.selected = true;\n        }\n        else {\n            delete attributes.selected;\n        }\n    }\n    if (tagName === 'canvas' && recordCanvas) {\n        if (n.__context === '2d') {\n            if (!is2DCanvasBlank(n)) {\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n        }\n        else if (!('__context' in n)) {\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            const blankCanvas = document.createElement('canvas');\n            blankCanvas.width = n.width;\n            blankCanvas.height = n.height;\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            if (canvasDataURL !== blankCanvasDataURL) {\n                attributes.rr_dataURL = canvasDataURL;\n            }\n        }\n    }\n    if (tagName === 'img' && inlineImages) {\n        if (!canvasService) {\n            canvasService = doc.createElement('canvas');\n            canvasCtx = canvasService.getContext('2d');\n        }\n        const image = n;\n        const oldValue = image.crossOrigin;\n        image.crossOrigin = 'anonymous';\n        const recordInlineImage = () => {\n            image.removeEventListener('load', recordInlineImage);\n            try {\n                canvasService.width = image.naturalWidth;\n                canvasService.height = image.naturalHeight;\n                canvasCtx.drawImage(image, 0, 0);\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n            }\n            catch (err) {\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n            }\n            oldValue\n                ? (attributes.crossOrigin = oldValue)\n                : image.removeAttribute('crossorigin');\n        };\n        if (image.complete && image.naturalWidth !== 0)\n            recordInlineImage();\n        else\n            image.addEventListener('load', recordInlineImage);\n    }\n    if (tagName === 'audio' || tagName === 'video') {\n        attributes.rr_mediaState = n.paused\n            ? 'paused'\n            : 'played';\n        attributes.rr_mediaCurrentTime = n.currentTime;\n    }\n    if (!newlyAddedElement) {\n        if (n.scrollLeft) {\n            attributes.rr_scrollLeft = n.scrollLeft;\n        }\n        if (n.scrollTop) {\n            attributes.rr_scrollTop = n.scrollTop;\n        }\n    }\n    if (needBlock) {\n        const { width, height } = n.getBoundingClientRect();\n        attributes = {\n            class: attributes.class,\n            rr_width: `${width}px`,\n            rr_height: `${height}px`,\n        };\n    }\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n        if (!n.contentDocument) {\n            attributes.rr_src = attributes.src;\n        }\n        delete attributes.src;\n    }\n    let isCustomElement;\n    try {\n        if (customElements.get(tagName))\n            isCustomElement = true;\n    }\n    catch (e) {\n    }\n    return {\n        type: NodeType$1.Element,\n        tagName,\n        attributes,\n        childNodes: [],\n        isSVG: isSVGElement(n) || undefined,\n        needBlock,\n        rootId,\n        isCustom: isCustomElement,\n    };\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType$1.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType$1.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        mirror,\n        blockClass,\n        blockSelector,\n        maskAllText,\n        unblockSelector,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n        newlyAddedElement,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if (mirror.hasNode(n)) {\n        id = mirror.getId(n);\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType$1.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    mirror.add(n, serializedNode);\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType$1.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        const shadowRoot = n.shadowRoot;\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType$1.Document ||\n        serializedNode.type === NodeType$1.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            serializedNode.type === NodeType$1.Element &&\n            serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            mirror,\n            blockClass,\n            blockSelector,\n            maskAllText,\n            unblockSelector,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputOptions,\n            maskAttributeFn,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            onStylesheetLoad,\n            stylesheetLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement$1(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    isNativeShadowDom(n.shadowRoot) &&\n                        (serializedChildNode.isShadow = true);\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode &&\n        isShadowRoot(n.parentNode) &&\n        isNativeShadowDom(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    if (serializedNode.type === NodeType$1.Element &&\n        serializedNode.tagName === 'link' &&\n        serializedNode.attributes.rel === 'stylesheet') {\n        onceStylesheetLoaded(n, () => {\n            if (onStylesheetLoad) {\n                const serializedLinkNode = serializeNodeWithId(n, {\n                    doc,\n                    mirror,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskAllText,\n                    maskTextClass,\n                    unmaskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputOptions,\n                    maskAttributeFn,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    onStylesheetLoad,\n                    stylesheetLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedLinkNode) {\n                    onStylesheetLoad(n, serializedLinkNode);\n                }\n            }\n        }, stylesheetLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n        }\n        : maskAllInputs === false\n            ? {}\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return serializeNodeWithId(n, {\n        doc: n,\n        mirror,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskAllText,\n        maskTextClass,\n        unmaskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        skipChild: false,\n        inlineStylesheet,\n        maskInputOptions,\n        maskAttributeFn,\n        maskTextFn,\n        maskInputFn,\n        slimDOMOptions,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        preserveWhiteSpace,\n        onSerialize,\n        onIframeLoad,\n        iframeLoadTimeout,\n        onStylesheetLoad,\n        stylesheetLoadTimeout,\n        keepIframeSrcFn,\n        newlyAddedElement: false,\n    });\n}\n\nfunction _optionalChain$4(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle$1(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (...args) {\n        const now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        const context = this;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout$1(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout$1(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout$1(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (e2) {\n        return () => {\n        };\n    }\n}\nlet nowTimestamp = Date.now;\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\n    nowTimestamp = () => new Date().getTime();\n}\nfunction getWindowScroll(win) {\n    const doc = win.document;\n    return {\n        left: doc.scrollingElement\n            ? doc.scrollingElement.scrollLeft\n            : win.pageXOffset !== undefined\n                ? win.pageXOffset\n                : _optionalChain$4([doc, 'optionalAccess', _ => _.documentElement, 'access', _2 => _2.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _3 => _3.body, 'optionalAccess', _4 => _4.parentElement, 'optionalAccess', _5 => _5.scrollLeft]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _6 => _6.body, 'optionalAccess', _7 => _7.scrollLeft]) ||\n                    0,\n        top: doc.scrollingElement\n            ? doc.scrollingElement.scrollTop\n            : win.pageYOffset !== undefined\n                ? win.pageYOffset\n                : _optionalChain$4([doc, 'optionalAccess', _8 => _8.documentElement, 'access', _9 => _9.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _10 => _10.body, 'optionalAccess', _11 => _11.parentElement, 'optionalAccess', _12 => _12.scrollTop]) ||\n                    _optionalChain$4([doc, 'optionalAccess', _13 => _13.body, 'optionalAccess', _14 => _14.scrollTop]) ||\n                    0,\n    };\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction closestElementOfNode(node) {\n    if (!node) {\n        return null;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    return el;\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = closestElementOfNode(node);\n    if (!el) {\n        return false;\n    }\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    if (!checkAncestors) {\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\n        return blockedPredicate(el) && !isUnblocked;\n    }\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nfunction isSerialized(n, mirror) {\n    return mirror.getId(n) !== -1;\n}\nfunction isIgnored(n, mirror) {\n    return mirror.getId(n) === IGNORED_NODE;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction legacy_isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = (...args) => {\n            let node = args[0];\n            if (!(0 in args)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isSerializedIframe(n, mirror) {\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\n}\nfunction isSerializedStylesheet(n, mirror) {\n    return Boolean(n.nodeName === 'LINK' &&\n        n.nodeType === n.ELEMENT_NODE &&\n        n.getAttribute &&\n        n.getAttribute('rel') === 'stylesheet' &&\n        mirror.getMeta(n));\n}\nfunction hasShadowRoot(n) {\n    return Boolean(_optionalChain$4([n, 'optionalAccess', _18 => _18.shadowRoot]));\n}\nclass StyleSheetMirror {\n    constructor() {\n        this.id = 1;\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n    }\n    getId(stylesheet) {\n        return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._nullishCoalesce)(this.styleIDMap.get(stylesheet), () => ( -1));\n    }\n    has(stylesheet) {\n        return this.styleIDMap.has(stylesheet);\n    }\n    add(stylesheet, id) {\n        if (this.has(stylesheet))\n            return this.getId(stylesheet);\n        let newId;\n        if (id === undefined) {\n            newId = this.id++;\n        }\n        else\n            newId = id;\n        this.styleIDMap.set(stylesheet, newId);\n        this.idStyleMap.set(newId, stylesheet);\n        return newId;\n    }\n    getStyle(id) {\n        return this.idStyleMap.get(id) || null;\n    }\n    reset() {\n        this.styleIDMap = new WeakMap();\n        this.idStyleMap = new Map();\n        this.id = 1;\n    }\n    generateId() {\n        return this.id++;\n    }\n}\nfunction getShadowHost(n) {\n    let shadowHost = null;\n    if (_optionalChain$4([n, 'access', _19 => _19.getRootNode, 'optionalCall', _20 => _20(), 'optionalAccess', _21 => _21.nodeType]) === Node.DOCUMENT_FRAGMENT_NODE &&\n        n.getRootNode().host)\n        shadowHost = n.getRootNode().host;\n    return shadowHost;\n}\nfunction getRootShadowHost(n) {\n    let rootShadowHost = n;\n    let shadowHost;\n    while ((shadowHost = getShadowHost(rootShadowHost)))\n        rootShadowHost = shadowHost;\n    return rootShadowHost;\n}\nfunction shadowHostInDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    const shadowHost = getRootShadowHost(n);\n    return doc.contains(shadowHost);\n}\nfunction inDom(n) {\n    const doc = n.ownerDocument;\n    if (!doc)\n        return false;\n    return doc.contains(n) || shadowHostInDom(n);\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n    const cached = cachedImplementations[name];\n    if (cached) {\n        return cached;\n    }\n    const document = window.document;\n    let impl = window[name];\n    if (document && typeof document.createElement === 'function') {\n        try {\n            const sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            const contentWindow = sandbox.contentWindow;\n            if (contentWindow && contentWindow[name]) {\n                impl =\n                    contentWindow[name];\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n        }\n    }\n    return (cachedImplementations[name] = impl.bind(window));\n}\nfunction onRequestAnimationFrame(...rest) {\n    return getImplementation('requestAnimationFrame')(...rest);\n}\nfunction setTimeout$1(...rest) {\n    return getImplementation('setTimeout')(...rest);\n}\nfunction clearTimeout$1(...rest) {\n    return getImplementation('clearTimeout')(...rest);\n}\n\nvar EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\n\nfunction _optionalChain$3(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n        this.tail = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = _optionalChain$3([current, 'optionalAccess', _ => _.next]) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        if (node.next === null) {\n            this.tail = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n            else {\n                this.tail = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n            else {\n                this.tail = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.attributeMap = new WeakMap();\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addedIds = new Set();\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                if (!n.parentNode || !inDom(n)) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(getShadowHost(n))\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                const sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    mirror: this.mirror,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    maskAllText: this.maskAllText,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    unmaskTextClass: this.unmaskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    skipChild: true,\n                    newlyAddedElement: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskInputOptions: this.maskInputOptions,\n                    maskAttributeFn: this.maskAttributeFn,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    dataURLOptions: this.dataURLOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isSerializedIframe(currentN, this.mirror)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\n                            this.stylesheetManager.trackLinkElement(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                    onStylesheetLoad: (link, childSn) => {\n                        this.stylesheetManager.attachLinkElement(link, childSn);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                    addedIds.add(sn.id);\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    let tailNode = addList.tail;\n                    while (tailNode) {\n                        const _node = tailNode;\n                        tailNode = tailNode.previous;\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (nextId === -1)\n                                continue;\n                            else if (parentId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                            else {\n                                const unhandledNode = _node.value;\n                                if (unhandledNode.parentNode &&\n                                    unhandledNode.parentNode.nodeType ===\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\n                                    const shadowHost = unhandledNode.parentNode\n                                        .host;\n                                    const parentId = this.mirror.getId(shadowHost);\n                                    if (parentId !== -1) {\n                                        node = _node;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => !addedIds.has(text.id))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => {\n                    const { attributes } = attribute;\n                    if (typeof attributes.style === 'string') {\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\n                        if (diffAsStr.length < attributes.style.length) {\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\n                                attributes.style.split('var(').length) {\n                                attributes.style = attribute.styleDiff;\n                            }\n                        }\n                    }\n                    return {\n                        id: this.mirror.getId(attribute.node),\n                        attributes: attributes,\n                    };\n                })\n                    .filter((attribute) => !addedIds.has(attribute.id))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.attributeMap = new WeakMap();\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target, this.mirror)) {\n                return;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\n                        value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let attributeName = m.attributeName;\n                    let value = m.target.getAttribute(attributeName);\n                    if (attributeName === 'value') {\n                        const type = getInputType(target);\n                        const tagName = target.tagName;\n                        value = getInputValue(target, tagName, type);\n                        const isInputMasked = shouldMaskInput({\n                            maskInputOptions: this.maskInputOptions,\n                            tagName,\n                            type,\n                        });\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\n                        value = maskInputValue({\n                            isMasked: forceMask,\n                            element: target,\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                        value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributeMap.get(m.target);\n                    if (target.tagName === 'IFRAME' &&\n                        attributeName === 'src' &&\n                        !this.keepIframeSrcFn(value)) {\n                        if (!target.contentDocument) {\n                            attributeName = 'rr_src';\n                        }\n                        else {\n                            return;\n                        }\n                    }\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                            styleDiff: {},\n                            _unchangedStyles: {},\n                        };\n                        this.attributes.push(item);\n                        this.attributeMap.set(m.target, item);\n                    }\n                    if (attributeName === 'type' &&\n                        target.tagName === 'INPUT' &&\n                        (m.oldValue || '').toLowerCase() === 'password') {\n                        target.setAttribute('data-rr-is-password', 'true');\n                    }\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\n                        if (attributeName === 'style') {\n                            if (!this.unattachedDoc) {\n                                try {\n                                    this.unattachedDoc =\n                                        document.implementation.createHTMLDocument();\n                                }\n                                catch (e) {\n                                    this.unattachedDoc = this.doc;\n                                }\n                            }\n                            const old = this.unattachedDoc.createElement('span');\n                            if (m.oldValue) {\n                                old.setAttribute('style', m.oldValue);\n                            }\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        item.styleDiff[pname] = newValue;\n                                    }\n                                    else {\n                                        item.styleDiff[pname] = [newValue, newPriority];\n                                    }\n                                }\n                                else {\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    item.styleDiff[pname] = false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                }\n                case 'childList': {\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\n                        return;\n                    }\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\n                            isIgnored(n, this.mirror) ||\n                            !isSerialized(n, this.mirror)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\n                                    ? true\n                                    : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (this.processedNodeManager.inOtherBuffer(n, this))\n                return;\n            if (this.addedSet.has(n) || this.movedSet.has(n))\n                return;\n            if (this.mirror.hasNode(n)) {\n                if (isIgnored(n, this.mirror)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && this.mirror.hasNode(target)) {\n                    targetId = this.mirror.getId(target);\n                }\n                if (targetId && targetId !== -1) {\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n                if (hasShadowRoot(n)) {\n                    n.shadowRoot.childNodes.forEach((childN) => {\n                        this.processedNodeManager.add(childN, this);\n                        this.genAdds(childN, n);\n                    });\n                }\n            }\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskAllText',\n            'maskTextClass',\n            'unmaskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'inlineStylesheet',\n            'maskInputOptions',\n            'maskAttributeFn',\n            'maskTextFn',\n            'maskInputFn',\n            'keepIframeSrcFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'dataURLOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'stylesheetManager',\n            'shadowDomManager',\n            'canvasManager',\n            'processedNodeManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    if (removes.length === 0)\n        return false;\n    return _isParentRemoved(removes, n, mirror);\n}\nfunction _isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return _isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    if (set.size === 0)\n        return false;\n    return _isAncestorInSet(set, n);\n}\nfunction _isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return _isAncestorInSet(set, parentNode);\n}\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nfunction unregisterErrorHandler() {\n    errorHandler = undefined;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\nfunction _optionalChain$2(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (e2) {\n    }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = _optionalChain$2([window, 'optionalAccess', _ => _.Zone, 'optionalAccess', _2 => _2.__symbol__, 'optionalCall', _3 => _3('MutationObserver')]);\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => {\n        };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle$1(callbackWrapper((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        mousemoveCb(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }), callbackThreshold);\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = nowTimestamp();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: nowTimestamp() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }), threshold, {\n        trailing: false,\n    }));\n    const handlers = [\n        on('mousemove', updatePosition, doc),\n        on('touchmove', updatePosition, doc),\n        on('drag', updatePosition, doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => {\n        };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    let currentPointerType = null;\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n                return;\n            }\n            let pointerType = null;\n            let thisEventKey = eventKey;\n            if ('pointerType' in event) {\n                switch (event.pointerType) {\n                    case 'mouse':\n                        pointerType = PointerTypes.Mouse;\n                        break;\n                    case 'touch':\n                        pointerType = PointerTypes.Touch;\n                        break;\n                    case 'pen':\n                        pointerType = PointerTypes.Pen;\n                        break;\n                }\n                if (pointerType === PointerTypes.Touch) {\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\n                        thisEventKey = 'TouchStart';\n                    }\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\n                        thisEventKey = 'TouchEnd';\n                    }\n                }\n                else if (pointerType === PointerTypes.Pen) ;\n            }\n            else if (legacy_isTouchEvent(event)) {\n                pointerType = PointerTypes.Touch;\n            }\n            if (pointerType !== null) {\n                currentPointerType = pointerType;\n                if ((thisEventKey.startsWith('Touch') &&\n                    pointerType === PointerTypes.Touch) ||\n                    (thisEventKey.startsWith('Mouse') &&\n                        pointerType === PointerTypes.Mouse)) {\n                    pointerType = null;\n                }\n            }\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\n                pointerType = currentPointerType;\n                currentPointerType = null;\n            }\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)({\n                type: MouseInteractions[thisEventKey],\n                id,\n                x: clientX,\n                y: clientY,\n                ...(pointerType !== null && { pointerType }),\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        let eventName = toLowerCase(eventKey);\n        const handler = getHandler(eventKey);\n        if (window.PointerEvent) {\n            switch (MouseInteractions[eventKey]) {\n                case MouseInteractions.MouseDown:\n                case MouseInteractions.MouseUp:\n                    eventName = eventName.replace('mouse', 'pointer');\n                    break;\n                case MouseInteractions.TouchStart:\n                case MouseInteractions.TouchEnd:\n                    return;\n            }\n        }\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = callbackWrapper(throttle$1(callbackWrapper((evt) => {\n        const target = getEventTarget(evt);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc && doc.defaultView) {\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\n            scrollCb({\n                id,\n                x: scrollLeftTop.left,\n                y: scrollLeftTop.top,\n            });\n        }\n        else {\n            scrollCb({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }), sampling.scroll || 100));\n    return on('scroll', updatePosition, doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = callbackWrapper(throttle$1(callbackWrapper(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            viewportResizeCb({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }), 200));\n    return on('resize', updateDimension, win);\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const userTriggered = event.isTrusted;\n        const tagName = target && toUpperCase(target.tagName);\n        if (tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !tagName ||\n            INPUT_TAGS.indexOf(tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const el = target;\n        if (el.classList.contains(ignoreClass) ||\n            (ignoreSelector && el.matches(ignoreSelector))) {\n            return;\n        }\n        const type = getInputType(target);\n        let text = getInputValue(el, tagName, type);\n        let isChecked = false;\n        const isInputMasked = shouldMaskInput({\n            maskInputOptions,\n            tagName,\n            type,\n        });\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        text = maskInputValue({\n            isMasked: forceMask,\n            element: target,\n            value: text,\n            maskInputFn,\n        });\n        cbWithDedup(target, userTriggeredOnInput\n            ? { text, isChecked, userTriggered }\n            : { text, isChecked });\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    const text = maskInputValue({\n                        isMasked: forceMask,\n                        element: el,\n                        value: getInputValue(el, tagName, type),\n                        maskInputFn,\n                    });\n                    cbWithDedup(el, userTriggeredOnInput\n                        ? { text, isChecked: !isChecked, userTriggered: false }\n                        : { text, isChecked: !isChecked });\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            callbackWrapper(inputCb)({\n                ...v,\n                id,\n            });\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const currentWindow = doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [currentWindow.HTMLInputElement.prototype, 'value'],\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({\n                    target: this,\n                    isTrusted: false,\n                });\n            },\n        }, false, currentWindow)));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else if (childRule.parentStyleSheet) {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\n    let id, styleId;\n    if (!sheet)\n        return {};\n    if (sheet.ownerNode)\n        id = mirror.getId(sheet.ownerNode);\n    else\n        styleId = styleMirror.getId(sheet);\n    return {\n        styleId,\n        id,\n    };\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => {\n        };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleSheetRuleCb({\n                    id,\n                    styleId,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    let replace;\n    if (win.CSSStyleSheet.prototype.replace) {\n        replace = win.CSSStyleSheet.prototype.replace;\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replace: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    let replaceSync;\n    if (win.CSSStyleSheet.prototype.replaceSync) {\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [text] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        replaceSync: text,\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    }\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                    styleSheetRuleCb({\n                        id,\n                        styleId,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\n    let hostId = null;\n    if (host.nodeName === '#document')\n        hostId = mirror.getId(host);\n    else\n        hostId = mirror.getId(host.host);\n    const patchTarget = host.nodeName === '#document'\n        ? _optionalChain$2([host, 'access', _4 => _4.defaultView, 'optionalAccess', _5 => _5.Document])\n        : _optionalChain$2([host, 'access', _6 => _6.ownerDocument, 'optionalAccess', _7 => _7.defaultView, 'optionalAccess', _8 => _8.ShadowRoot]);\n    const originalPropertyDescriptor = _optionalChain$2([patchTarget, 'optionalAccess', _9 => _9.prototype])\n        ? Object.getOwnPropertyDescriptor(_optionalChain$2([patchTarget, 'optionalAccess', _10 => _10.prototype]), 'adoptedStyleSheets')\n        : undefined;\n    if (hostId === null ||\n        hostId === -1 ||\n        !patchTarget ||\n        !originalPropertyDescriptor)\n        return () => {\n        };\n    Object.defineProperty(host, 'adoptedStyleSheets', {\n        configurable: originalPropertyDescriptor.configurable,\n        enumerable: originalPropertyDescriptor.enumerable,\n        get() {\n            return _optionalChain$2([originalPropertyDescriptor, 'access', _11 => _11.get, 'optionalAccess', _12 => _12.call, 'call', _13 => _13(this)]);\n        },\n        set(sheets) {\n            const result = _optionalChain$2([originalPropertyDescriptor, 'access', _14 => _14.set, 'optionalAccess', _15 => _15.call, 'call', _16 => _16(this, sheets)]);\n            if (hostId !== null && hostId !== -1) {\n                try {\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\n                }\n                catch (e) {\n                }\n            }\n            return result;\n        },\n    });\n    return callbackWrapper(() => {\n        Object.defineProperty(host, 'adoptedStyleSheets', {\n            configurable: originalPropertyDescriptor.configurable,\n            enumerable: originalPropertyDescriptor.enumerable,\n            get: originalPropertyDescriptor.get,\n            set: originalPropertyDescriptor.set,\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property, value, priority] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return setProperty.apply(thisArg, [property, value, priority]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _17 => _17.parentRule, 'optionalAccess', _18 => _18.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [property] = argumentsList;\n            if (ignoreCSSAttributes.has(property)) {\n                return removeProperty.apply(thisArg, [property]);\n            }\n            const { id, styleId } = getIdAndStyleId(_optionalChain$2([thisArg, 'access', _19 => _19.parentRule, 'optionalAccess', _20 => _20.parentStyleSheet]), mirror, stylesheetManager.styleMirror);\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\n                styleDeclarationCb({\n                    id,\n                    styleId,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\n    const handler = callbackWrapper((type) => throttle$1(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\n            return;\n        }\n        const { currentTime, volume, muted, playbackRate } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n            playbackRate,\n        });\n    }), sampling.media || 500));\n    const handlers = [\n        on('play', handler(0), doc),\n        on('pause', handler(1), doc),\n        on('seeked', handler(2), doc),\n        on('volumechange', handler(3), doc),\n        on('ratechange', handler(4), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => {\n        };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                : JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout$1(callbackWrapper(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }), 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initSelectionObserver(param) {\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\n    let collapsed = true;\n    const updateSelection = callbackWrapper(() => {\n        const selection = doc.getSelection();\n        if (!selection || (collapsed && _optionalChain$2([selection, 'optionalAccess', _21 => _21.isCollapsed])))\n            return;\n        collapsed = selection.isCollapsed || false;\n        const ranges = [];\n        const count = selection.rangeCount || 0;\n        for (let i = 0; i < count; i++) {\n            const range = selection.getRangeAt(i);\n            const { startContainer, startOffset, endContainer, endOffset } = range;\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\n            if (blocked)\n                continue;\n            ranges.push({\n                start: mirror.getId(startContainer),\n                startOffset,\n                end: mirror.getId(endContainer),\n                endOffset,\n            });\n        }\n        selectionCb({ ranges });\n    });\n    updateSelection();\n    return on('selectionchange', updateSelection);\n}\nfunction initCustomElementObserver({ doc, customElementCb, }) {\n    const win = doc.defaultView;\n    if (!win || !win.customElements)\n        return () => { };\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\n        return function (name, constructor, options) {\n            try {\n                customElementCb({\n                    define: {\n                        name,\n                    },\n                });\n            }\n            catch (e) {\n            }\n            return original.apply(this, [name, constructor, options]);\n        };\n    });\n    return restoreHandler;\n}\nfunction initObservers(o, _hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => {\n        };\n    }\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o, {\n        win: currentWindow,\n    });\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts\n        ? initFontObserver(o)\n        : () => {\n        };\n    const selectionObserver = initSelectionObserver(o);\n    const customElementObserver = initCustomElementObserver(o);\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        styleSheetObserver();\n        adoptedStyleSheetObserver();\n        styleDeclarationObserver();\n        fontObserver();\n        selectionObserver();\n        customElementObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass CrossOriginIframeMirror {\n    constructor(generateIdFn) {\n        this.generateIdFn = generateIdFn;\n        this.iframeIdToRemoteIdMap = new WeakMap();\n        this.iframeRemoteIdToIdMap = new WeakMap();\n    }\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\n        let id = idToRemoteIdMap.get(remoteId);\n        if (!id) {\n            id = this.generateIdFn();\n            idToRemoteIdMap.set(remoteId, id);\n            remoteIdToIdMap.set(id, remoteId);\n        }\n        return id;\n    }\n    getIds(iframe, remoteId) {\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\n    }\n    getRemoteId(iframe, id, map) {\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\n        if (typeof id !== 'number')\n            return id;\n        const remoteId = remoteIdToIdMap.get(id);\n        if (!remoteId)\n            return -1;\n        return remoteId;\n    }\n    getRemoteIds(iframe, ids) {\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\n    }\n    reset(iframe) {\n        if (!iframe) {\n            this.iframeIdToRemoteIdMap = new WeakMap();\n            this.iframeRemoteIdToIdMap = new WeakMap();\n            return;\n        }\n        this.iframeIdToRemoteIdMap.delete(iframe);\n        this.iframeRemoteIdToIdMap.delete(iframe);\n    }\n    getIdToRemoteIdMap(iframe) {\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\n        if (!idToRemoteIdMap) {\n            idToRemoteIdMap = new Map();\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\n        }\n        return idToRemoteIdMap;\n    }\n    getRemoteIdToIdMap(iframe) {\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\n        if (!remoteIdToIdMap) {\n            remoteIdToIdMap = new Map();\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\n        }\n        return remoteIdToIdMap;\n    }\n}\n\nfunction _optionalChain$1(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\nclass IframeManagerNoop {\n    constructor() {\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n    }\n    addIframe() {\n    }\n    addLoadListener() {\n    }\n    attachIframe() {\n    }\n}\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.crossOriginIframeMap = new WeakMap();\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\n        this.crossOriginIframeRootIdMap = new WeakMap();\n        this.mutationCb = options.mutationCb;\n        this.wrappedEmit = options.wrappedEmit;\n        this.stylesheetManager = options.stylesheetManager;\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\n        this.mirror = options.mirror;\n        if (this.recordCrossOriginIframes) {\n            window.addEventListener('message', this.handleMessage.bind(this));\n        }\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n        if (iframeEl.contentWindow)\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: this.mirror.getId(iframeEl),\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        _optionalChain$1([this, 'access', _ => _.loadListener, 'optionalCall', _2 => _2(iframeEl)]);\n        if (iframeEl.contentDocument &&\n            iframeEl.contentDocument.adoptedStyleSheets &&\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\n    }\n    handleMessage(message) {\n        const crossOriginMessageEvent = message;\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\n            return;\n        const iframeSourceWindow = message.source;\n        if (!iframeSourceWindow)\n            return;\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\n        if (!iframeEl)\n            return;\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\n        if (transformedEvent)\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\n    }\n    transformCrossOriginEvent(iframeEl, e) {\n        switch (e.type) {\n            case EventType.FullSnapshot: {\n                this.crossOriginIframeMirror.reset(iframeEl);\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\n                this.replaceIdOnNode(e.data.node, iframeEl);\n                const rootId = e.data.node.id;\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\n                this.patchRootIdOnNode(e.data.node, rootId);\n                return {\n                    timestamp: e.timestamp,\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Mutation,\n                        adds: [\n                            {\n                                parentId: this.mirror.getId(iframeEl),\n                                nextId: null,\n                                node: e.data.node,\n                            },\n                        ],\n                        removes: [],\n                        texts: [],\n                        attributes: [],\n                        isAttachIframe: true,\n                    },\n                };\n            }\n            case EventType.Meta:\n            case EventType.Load:\n            case EventType.DomContentLoaded: {\n                return false;\n            }\n            case EventType.Plugin: {\n                return e;\n            }\n            case EventType.Custom: {\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\n                return e;\n            }\n            case EventType.IncrementalSnapshot: {\n                switch (e.data.source) {\n                    case IncrementalSource.Mutation: {\n                        e.data.adds.forEach((n) => {\n                            this.replaceIds(n, iframeEl, [\n                                'parentId',\n                                'nextId',\n                                'previousId',\n                            ]);\n                            this.replaceIdOnNode(n.node, iframeEl);\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\n                        });\n                        e.data.removes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\n                        });\n                        e.data.attributes.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        e.data.texts.forEach((n) => {\n                            this.replaceIds(n, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.Drag:\n                    case IncrementalSource.TouchMove:\n                    case IncrementalSource.MouseMove: {\n                        e.data.positions.forEach((p) => {\n                            this.replaceIds(p, iframeEl, ['id']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.ViewportResize: {\n                        return false;\n                    }\n                    case IncrementalSource.MediaInteraction:\n                    case IncrementalSource.MouseInteraction:\n                    case IncrementalSource.Scroll:\n                    case IncrementalSource.CanvasMutation:\n                    case IncrementalSource.Input: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        return e;\n                    }\n                    case IncrementalSource.StyleSheetRule:\n                    case IncrementalSource.StyleDeclaration: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\n                        return e;\n                    }\n                    case IncrementalSource.Font: {\n                        return e;\n                    }\n                    case IncrementalSource.Selection: {\n                        e.data.ranges.forEach((range) => {\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\n                        });\n                        return e;\n                    }\n                    case IncrementalSource.AdoptedStyleSheet: {\n                        this.replaceIds(e.data, iframeEl, ['id']);\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\n                        _optionalChain$1([e, 'access', _3 => _3.data, 'access', _4 => _4.styles, 'optionalAccess', _5 => _5.forEach, 'call', _6 => _6((style) => {\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\n                        })]);\n                        return e;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    replace(iframeMirror, obj, iframeEl, keys) {\n        for (const key of keys) {\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\n                continue;\n            if (Array.isArray(obj[key])) {\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\n            }\n            else {\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\n            }\n        }\n        return obj;\n    }\n    replaceIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\n    }\n    replaceStyleIds(obj, iframeEl, keys) {\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\n    }\n    replaceIdOnNode(node, iframeEl) {\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.replaceIdOnNode(child, iframeEl);\n            });\n        }\n    }\n    patchRootIdOnNode(node, rootId) {\n        if (node.type !== NodeType$1.Document && !node.rootId)\n            node.rootId = rootId;\n        if ('childNodes' in node) {\n            node.childNodes.forEach((child) => {\n                this.patchRootIdOnNode(child, rootId);\n            });\n        }\n    }\n}\n\nclass ShadowDomManagerNoop {\n    init() {\n    }\n    addShadowRoot() {\n    }\n    observeAttachShadow() {\n    }\n    reset() {\n    }\n}\nclass ShadowDomManager {\n    constructor(options) {\n        this.shadowDoms = new WeakSet();\n        this.restoreHandlers = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        this.init();\n    }\n    init() {\n        this.reset();\n        this.patchAttachShadow(Element, document);\n    }\n    addShadowRoot(shadowRoot, doc) {\n        if (!isNativeShadowDom(shadowRoot))\n            return;\n        if (this.shadowDoms.has(shadowRoot))\n            return;\n        this.shadowDoms.add(shadowRoot);\n        const observer = initMutationObserver({\n            ...this.bypassOptions,\n            doc,\n            mutationCb: this.mutationCb,\n            mirror: this.mirror,\n            shadowDomManager: this,\n        }, shadowRoot);\n        this.restoreHandlers.push(() => observer.disconnect());\n        this.restoreHandlers.push(initScrollObserver({\n            ...this.bypassOptions,\n            scrollCb: this.scrollCb,\n            doc: shadowRoot,\n            mirror: this.mirror,\n        }));\n        setTimeout$1(() => {\n            if (shadowRoot.adoptedStyleSheets &&\n                shadowRoot.adoptedStyleSheets.length > 0)\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\n                mirror: this.mirror,\n                stylesheetManager: this.bypassOptions.stylesheetManager,\n            }, shadowRoot));\n        }, 0);\n    }\n    observeAttachShadow(iframeElement) {\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\n            return;\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\n    }\n    patchAttachShadow(element, doc) {\n        const manager = this;\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\n            return function (option) {\n                const shadowRoot = original.call(this, option);\n                if (this.shadowRoot && inDom(this))\n                    manager.addShadowRoot(this.shadowRoot, doc);\n                return shadowRoot;\n            };\n        }));\n    }\n    reset() {\n        this.restoreHandlers.forEach((handler) => {\n            try {\n                handler();\n            }\n            catch (e) {\n            }\n        });\n        this.restoreHandlers = [];\n        this.shadowDoms = new WeakSet();\n    }\n}\n\nclass CanvasManagerNoop {\n    reset() {\n    }\n    freeze() {\n    }\n    unfreeze() {\n    }\n    lock() {\n    }\n    unlock() {\n    }\n    snapshot() {\n    }\n}\n\nclass StylesheetManager {\n    constructor(options) {\n        this.trackedLinkElements = new WeakSet();\n        this.styleMirror = new StyleSheetMirror();\n        this.mutationCb = options.mutationCb;\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\n    }\n    attachLinkElement(linkEl, childSn) {\n        if ('_cssText' in childSn.attributes)\n            this.mutationCb({\n                adds: [],\n                removes: [],\n                texts: [],\n                attributes: [\n                    {\n                        id: childSn.id,\n                        attributes: childSn\n                            .attributes,\n                    },\n                ],\n            });\n        this.trackLinkElement(linkEl);\n    }\n    trackLinkElement(linkEl) {\n        if (this.trackedLinkElements.has(linkEl))\n            return;\n        this.trackedLinkElements.add(linkEl);\n        this.trackStylesheetInLinkElement(linkEl);\n    }\n    adoptStyleSheets(sheets, hostId) {\n        if (sheets.length === 0)\n            return;\n        const adoptedStyleSheetData = {\n            id: hostId,\n            styleIds: [],\n        };\n        const styles = [];\n        for (const sheet of sheets) {\n            let styleId;\n            if (!this.styleMirror.has(sheet)) {\n                styleId = this.styleMirror.add(sheet);\n                styles.push({\n                    styleId,\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\n                        rule: stringifyRule(r),\n                        index,\n                    })),\n                });\n            }\n            else\n                styleId = this.styleMirror.getId(sheet);\n            adoptedStyleSheetData.styleIds.push(styleId);\n        }\n        if (styles.length > 0)\n            adoptedStyleSheetData.styles = styles;\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\n    }\n    reset() {\n        this.styleMirror.reset();\n        this.trackedLinkElements = new WeakSet();\n    }\n    trackStylesheetInLinkElement(linkEl) {\n    }\n}\n\nclass ProcessedNodeManager {\n    constructor() {\n        this.nodeMap = new WeakMap();\n        this.loop = true;\n        this.periodicallyClear();\n    }\n    periodicallyClear() {\n        onRequestAnimationFrame(() => {\n            this.clear();\n            if (this.loop)\n                this.periodicallyClear();\n        });\n    }\n    inOtherBuffer(node, thisBuffer) {\n        const buffers = this.nodeMap.get(node);\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\n    }\n    add(node, buffer) {\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\n    }\n    clear() {\n        this.nodeMap = new WeakMap();\n    }\n    destroy() {\n        this.loop = false;\n    }\n}\n\nlet wrappedEmit;\nlet _takeFullSnapshot;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\n        ? options.recordAfter\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\n    registerErrorHandler(errorHandler);\n    const inEmittingFrame = recordCrossOriginIframes\n        ? window.parent === window\n        : true;\n    let passEmitsToParent = false;\n    if (!inEmittingFrame) {\n        try {\n            if (window.parent.document) {\n                passEmitsToParent = false;\n            }\n        }\n        catch (e) {\n            passEmitsToParent = true;\n        }\n    }\n    if (inEmittingFrame && !emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    mirror.reset();\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            radio: true,\n            checkbox: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : {};\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn &&\n            !passEmitsToParent) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    wrappedEmit = (r, isCheckout) => {\n        const e = r;\n        e.timestamp = nowTimestamp();\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([mutationBuffers, 'access', _ => _[0], 'optionalAccess', _2 => _2.isFrozen, 'call', _3 => _3()]) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        if (inEmittingFrame) {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([emit, 'optionalCall', _4 => _4(eventProcessor(e), isCheckout)]);\n        }\n        else if (passEmitsToParent) {\n            const message = {\n                type: 'rrweb',\n                event: eventProcessor(e),\n                origin: window.location.origin,\n                isCheckout,\n            };\n            window.parent.postMessage(message, '*');\n        }\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                lastFullSnapshotEvent &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.Mutation,\n                ...m,\n            },\n        });\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.Scroll,\n            ...p,\n        },\n    });\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.CanvasMutation,\n            ...p,\n        },\n    });\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\n        type: EventType.IncrementalSnapshot,\n        data: {\n            source: IncrementalSource.AdoptedStyleSheet,\n            ...a,\n        },\n    });\n    const stylesheetManager = new StylesheetManager({\n        mutationCb: wrappedMutationEmit,\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\n    });\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\n        ? new IframeManagerNoop()\n        : new IframeManager({\n            mirror,\n            mutationCb: wrappedMutationEmit,\n            stylesheetManager: stylesheetManager,\n            recordCrossOriginIframes,\n            wrappedEmit,\n        });\n    for (const plugin of plugins || []) {\n        if (plugin.getMirror)\n            plugin.getMirror({\n                nodeMirror: mirror,\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\n            });\n    }\n    const processedNodeManager = new ProcessedNodeManager();\n    const canvasManager = _getCanvasManager(getCanvasManager, {\n        mirror,\n        win: window,\n        mutationCb: (p) => wrappedEmit({\n            type: EventType.IncrementalSnapshot,\n            data: {\n                source: IncrementalSource.CanvasMutation,\n                ...p,\n            },\n        }),\n        recordCanvas,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maxCanvasSize,\n        sampling: sampling['canvas'],\n        dataURLOptions,\n        errorHandler,\n    });\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\n        __RRWEB_EXCLUDE_SHADOW_DOM__\n        ? new ShadowDomManagerNoop()\n        : new ShadowDomManager({\n            mutationCb: wrappedMutationEmit,\n            scrollCb: wrappedScrollEmit,\n            bypassOptions: {\n                onMutation,\n                blockClass,\n                blockSelector,\n                unblockSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                inlineStylesheet,\n                maskInputOptions,\n                dataURLOptions,\n                maskAttributeFn,\n                maskTextFn,\n                maskInputFn,\n                recordCanvas,\n                inlineImages,\n                sampling,\n                slimDOMOptions,\n                iframeManager,\n                stylesheetManager,\n                canvasManager,\n                keepIframeSrcFn,\n                processedNodeManager,\n            },\n            mirror,\n        });\n    const takeFullSnapshot = (isCheckout = false) => {\n        wrappedEmit({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }, isCheckout);\n        stylesheetManager.reset();\n        shadowDomManager.init();\n        mutationBuffers.forEach((buf) => buf.lock());\n        const node = snapshot(document, {\n            mirror,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskAllText,\n            maskTextClass,\n            unmaskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            inlineStylesheet,\n            maskAllInputs: maskInputOptions,\n            maskAttributeFn,\n            maskInputFn,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            dataURLOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isSerializedIframe(n, mirror)) {\n                    iframeManager.addIframe(n);\n                }\n                if (isSerializedStylesheet(n, mirror)) {\n                    stylesheetManager.trackLinkElement(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            onStylesheetLoad: (linkEl, childSn) => {\n                stylesheetManager.attachLinkElement(linkEl, childSn);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        wrappedEmit({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: getWindowScroll(window),\n            },\n        });\n        mutationBuffers.forEach((buf) => buf.unlock());\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\n    };\n    _takeFullSnapshot = takeFullSnapshot;\n    try {\n        const handlers = [];\n        const observe = (doc) => {\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                }),\n                mouseInteractionCb: (d) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MouseInteraction,\n                        ...d,\n                    },\n                }),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.ViewportResize,\n                        ...d,\n                    },\n                }),\n                inputCb: (v) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Input,\n                        ...v,\n                    },\n                }),\n                mediaInteractionCb: (p) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.MediaInteraction,\n                        ...p,\n                    },\n                }),\n                styleSheetRuleCb: (r) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleSheetRule,\n                        ...r,\n                    },\n                }),\n                styleDeclarationCb: (r) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.StyleDeclaration,\n                        ...r,\n                    },\n                }),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source: IncrementalSource.Font,\n                        ...p,\n                    },\n                }),\n                selectionCb: (p) => {\n                    wrappedEmit({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.Selection,\n                            ...p,\n                        },\n                    });\n                },\n                customElementCb: (c) => {\n                    wrappedEmit({\n                        type: EventType.IncrementalSnapshot,\n                        data: {\n                            source: IncrementalSource.CustomElement,\n                            ...c,\n                        },\n                    });\n                },\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskAllText,\n                maskTextClass,\n                unmaskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAttributeFn,\n                maskInputFn,\n                maskTextFn,\n                keepIframeSrcFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                dataURLOptions,\n                mirror,\n                iframeManager,\n                stylesheetManager,\n                shadowDomManager,\n                processedNodeManager,\n                canvasManager,\n                ignoreCSSAttributes,\n                plugins: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([plugins\n, 'optionalAccess', _5 => _5.filter, 'call', _6 => _6((p) => p.observer)\n, 'optionalAccess', _7 => _7.map, 'call', _8 => _8((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    }),\n                }))]) || [],\n            }, {});\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('DOMContentLoaded', () => {\n                wrappedEmit({\n                    type: EventType.DomContentLoaded,\n                    data: {},\n                });\n                if (recordAfter === 'DOMContentLoaded')\n                    init();\n            }));\n            handlers.push(on('load', () => {\n                wrappedEmit({\n                    type: EventType.Load,\n                    data: {},\n                });\n                if (recordAfter === 'load')\n                    init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n            processedNodeManager.destroy();\n            _takeFullSnapshot = undefined;\n            unregisterErrorHandler();\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nfunction takeFullSnapshot(isCheckout) {\n    if (!_takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    _takeFullSnapshot(isCheckout);\n}\nrecord.mirror = mirror;\nrecord.takeFullSnapshot = takeFullSnapshot;\nfunction _getCanvasManager(getCanvasManagerFn, options) {\n    try {\n        return getCanvasManagerFn\n            ? getCanvasManagerFn(options)\n            : new CanvasManagerNoop();\n    }\n    catch (e2) {\n        console.warn('Unable to initialize CanvasManager');\n        return new CanvasManagerNoop();\n    }\n}\n\nconst ReplayEventTypeIncrementalSnapshot = 3;\nconst ReplayEventTypeCustom = 5;\n\n/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nfunction timestampToMs(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nfunction timestampToS(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(breadcrumb, 10, 1000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nfunction getClosestInteractive(element) {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nfunction getClickTargetNode(event) {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nfunction getTargetNode(event) {\n  if (isEventWithTarget(event)) {\n    return event.target ;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event) {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n\nlet handlers;\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nfunction onWindowOpen(cb) {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers ).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen() {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(WINDOW, 'open', function (originalWindowOpen) {\n    return function (...args) {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n\n/** Handle a click. */\nfunction handleClick(clickDetector, clickBreadcrumb, node) {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nclass ClickDetector  {\n  // protected for testing\n\n   constructor(\n    replay,\n    slowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n   addListeners() {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n   removeListeners() {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n   handleClick(breadcrumb, node) {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n   registerMutation(timestamp = Date.now()) {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerScroll(timestamp = Date.now()) {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n   registerClick(element) {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node );\n  }\n\n  /** Count multiple clicks on elements. */\n   _handleMultiClick(node) {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n   _getClicks(node) {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n   _checkClicks() {\n    const timedOutClicks = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n   _generateBreadcrumbs(click) {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n   _scheduleCheckClicks() {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.setTimeout)(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nfunction ignoreElement(node, ignoreSelector) {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb) {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds() {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nfunction updateClickDetectorForRecordingEvent(clickDetector, event) {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch (e) {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event) {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event,\n) {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\n// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nfunction getAttributesToRecord(attributes) {\n  const obj = {};\n  if (!attributes['data-sentry-component'] && attributes['data-sentry-element']) {\n    attributes['data-sentry-component'] = attributes['data-sentry-element'];\n  }\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n\nconst handleDomListener = (\n  replay,\n) => {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event ) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result ,\n        getClickTargetNode(handlerData.event ) ,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nfunction getBaseDomBreadcrumb(target, message) {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text ).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nfunction handleDom(handlerData) {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData) {\n  const isClick = handlerData.name === 'click';\n\n  let message;\n  let target = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event ) : getTargetNode(handlerData.event );\n    message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.htmlTreeAsString)(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node) {\n  return node.type === NodeType.Element;\n}\n\n/** Handle keyboard events & create breadcrumbs. */\nfunction handleKeyboardEvent(replay, event) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nfunction getKeyboardBreadcrumb(event) {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target ) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.htmlTreeAsString)(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target , message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target) {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES\n\n = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(\n  entries,\n) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry) {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry,\n) {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nfunction getLargestContentfulPaint(metric\n\n) {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] ;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nfunction setupPerformanceObserver(replay) {\n  function addPerformanceEntry(entry) {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }) {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks = [];\n\n  (['navigation', 'paint', 'resource'] ).forEach(type => {\n    clearCallbacks.push((0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.addPerformanceInstrumentationHandler)(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.addLcpInstrumentationHandler)(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\nconst r = `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J=\"undefined\"!=typeof TextEncoder&&new TextEncoder,K=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(J)return J.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&\"function\"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/**\n * Log a message in debug mode, and add a breadcrumb when _experiment.traceInternals is enabled.\n */\nfunction logInfo(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    addLogBreadcrumb(message);\n  }\n}\n\n/**\n * Log a message, and add a breadcrumb in the next tick.\n * This is necessary when the breadcrumb may be added before the replay is initialized.\n */\nfunction logInfoNextTick(message, shouldAddBreadcrumb) {\n  if (!DEBUG_BUILD) {\n    return;\n  }\n\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.info(message);\n\n  if (shouldAddBreadcrumb) {\n    // Wait a tick here to avoid race conditions for some initial logs\n    // which may be added before replay is initialized\n    (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.setTimeout)(() => {\n      addLogBreadcrumb(message);\n    }, 0);\n  }\n}\n\nfunction addLogBreadcrumb(message) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb)(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level: 'info',\n      message,\n    },\n    { level: 'info' },\n  );\n}\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nclass EventBufferSizeExceededError extends Error {\n   constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n  /** @inheritdoc */\n\n   constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event) {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n  /** @inheritdoc */\n\n   constructor(worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   addEvent(event) {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(data) {\n    return this._worker.postMessage('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n   get type() {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n   get hasCheckout() {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n   set hasCheckout(value) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n   clear() {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n   getEarliestTimestamp() {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event) {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}) {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl) {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl() {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return e();\n  }\n\n  return '';\n}\n\n/** If sessionStorage is available. */\nfunction hasSessionStorage() {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nfunction clearSession(replay) {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession() {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = Date.now();\n  const id = session.id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, allowBuffering) {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false },\n  { previousSessionId } = {},\n) {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession(traceInternals) {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(\n  session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  },\n) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n\n/** If the session should be refreshed or not. */\nfunction shouldRefreshSession(\n  session,\n  { sessionIdleExpire, maxReplayDuration },\n) {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nfunction loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }\n\n,\n  sessionOptions,\n) {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n\nfunction isCustomEvent(event) {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEventSync(replay, event, isCheckout) {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nfunction addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(error);\n    await replay.stop({ reason });\n\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nfunction shouldAddEvent(replay, event) {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfoNextTick(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event,\n  callback,\n) {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n\n/** If the event is an error event */\nfunction isErrorEvent(event) {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nfunction isReplayEvent(event) {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nfunction isFeedbackEvent(event) {\n  return event.type === 'feedback';\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleAfterSendEvent(replay) {\n  return (event, sendResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (!statusCode || statusCode < 200 || statusCode >= 300) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id );\n  }\n}\n\nfunction handleErrorEvent(replay, event) {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.setTimeout)(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nfunction handleBeforeSendEvent(replay) {\n  return (event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay, event) {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    // With newer React versions, the messages changed to a different website https://react.dev/errors/418\n    exceptionValue.match(\n      /(reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=|react\\.dev\\/errors\\/)(418|419|422|423|425)/,\n    ) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n\n/**\n * Handle breadcrumbs that Sentry captures, and make sure to capture relevant breadcrumbs to Replay as well.\n */\nfunction handleBreadcrumbs(replay) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n\n  if (!client) {\n    return;\n  }\n\n  client.on('beforeAddBreadcrumb', breadcrumb => beforeAddBreadcrumb(replay, breadcrumb));\n}\n\nfunction beforeAddBreadcrumb(replay, breadcrumb) {\n  if (!replay.isEnabled() || !isBreadcrumbWithCategory(breadcrumb)) {\n    return;\n  }\n\n  const result = normalizeBreadcrumb(breadcrumb);\n  if (result) {\n    addBreadcrumbEvent(replay, result);\n  }\n}\n\n/** Exported only for tests. */\nfunction normalizeBreadcrumb(breadcrumb) {\n  if (\n    !isBreadcrumbWithCategory(breadcrumb) ||\n    [\n      // fetch & xhr are handled separately,in handleNetworkBreadcrumbs\n      'fetch',\n      'xhr',\n      // These two are breadcrumbs for emitted sentry events, we don't care about them\n      'sentry.event',\n      'sentry.transaction',\n    ].includes(breadcrumb.category) ||\n    // We capture UI breadcrumbs separately\n    breadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (breadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(breadcrumb);\n  }\n\n  return createBreadcrumb(breadcrumb);\n}\n\n/** exported for tests only */\nfunction normalizeConsoleBreadcrumb(\n  breadcrumb,\n) {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch (e) {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\nfunction isBreadcrumbWithCategory(breadcrumb) {\n  return !!breadcrumb.category;\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nfunction addFeedbackBreadcrumb(replay, event) {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } );\n\n    return false;\n  });\n}\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nfunction shouldSampleForBufferEvent(replay, event) {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(replay) {\n  return Object.assign(\n    (event, hint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n\n/**\n * Create a \"span\" for each performance entry.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.isSentryRequestUrl)(url, (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)());\n}\n\n/** Add a performance entry breadcrumb */\nfunction addNetworkBreadcrumb(\n  replay,\n  result,\n) {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n\n/** Get the size of a body. */\nfunction getBodySize(body) {\n  if (!body) {\n    return undefined;\n  }\n\n  const textEncoder = new TextEncoder();\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch (e) {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nfunction parseContentLengthHeader(header) {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nfunction getBodyString(body) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nfunction mergeWarning(\n  info,\n  warning,\n) {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nfunction makeNetworkReplayBreadcrumb(\n  type,\n  data,\n) {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nfunction buildSkippedNetworkRequestOrResponse(bodySize) {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nfunction buildNetworkRequestOrResponse(\n  headers,\n  bodySize,\n  body,\n) {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nfunction getAllowedHeaders(headers, allowedHeaders) {\n  return Object.keys(headers).reduce((filteredHeaders, key) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData) {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body)\n\n {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch (e3) {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str) {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nfunction urlMatches(url, urls) {\n  const fullUrl = getFullUrl(url);\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stringMatchesSomePattern)(fullUrl, urls);\n}\n\n/** exported for tests */\nfunction getFullUrl(url, baseURI = WINDOW.document.baseURI) {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureFetchBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options\n\n,\n) {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichFetchBreadcrumb(\n  breadcrumb,\n  hint,\n) {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders },\n  input,\n  requestBodySize,\n) {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nasync function _getResponseInfo(\n  captureDetails,\n  {\n    networkCaptureBodies,\n    networkResponseHeaders,\n  },\n  response,\n  responseBodySize,\n) {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText,\n  {\n    networkCaptureBodies,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }\n\n,\n) {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined ? getBodySize(bodyText) : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response) {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs = []) {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] ).body;\n}\n\nfunction getAllHeaders(headers, allowedHeaders) {\n  const allHeaders = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) ;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs, allowedHeaders) {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] , allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] , allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input,\n  allowedHeaders,\n) {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response) {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response) {\n  return new Promise((resolve, reject) => {\n    const timeout = (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.setTimeout)(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n}\n\nasync function _getResponseText(response) {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nasync function captureXhrBreadcrumbToReplay(\n  breadcrumb,\n  hint,\n  options,\n) {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nfunction enrichXhrBreadcrumb(\n  breadcrumb,\n  hint,\n) {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb,\n  hint,\n  options,\n) {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr) {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nfunction _parseXhrResponse(\n  body,\n  responseType,\n) {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (e2) {\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body,\n  responseType,\n) {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr);\n  } catch (e3) {\n    return undefined;\n  }\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nfunction handleNetworkBreadcrumbs(replay) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n\n  try {\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options = {\n      replay,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    }\n  } catch (e2) {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nfunction beforeAddNetworkBreadcrumb(\n  options,\n  breadcrumb,\n  hint,\n) {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb) {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint) {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint) {\n  return hint && hint.response;\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n\n  (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.addClickKeypressInstrumentationHandler)(handleDomListener(replay));\n  (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.addHistoryInstrumentationHandler)(handleHistorySpanListener(replay));\n  handleBreadcrumbs(replay);\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay);\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addEventProcessor)(eventProcessor);\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (client) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('spanStart', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We may be missing the initial spanStart due to timing issues,\n    // so we capture it on finish again.\n    client.on('spanEnd', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.setTimeout)(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.setTimeout)(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nfunction createOptionsEvent(replay) {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay, isCheckout) {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEventEnvelopeHeaders)(replayEvent, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint = { event_id, integrations };\n\n  client.emit('preprocessEvent', event, eventHint);\n\n  const preparedEvent = (await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.prepareEvent)(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getIsolationScope)(),\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n  const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)({});\n  }\n\n  const baseEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)({});\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.updateRateLimits)({}, response);\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isRateLimited)(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nclass RateLimitError extends Error {\n\n   constructor(rateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.setContext)('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.setTimeout)(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\nconst THROTTLED = '__THROTTLED';\nconst SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction throttle(\n  fn,\n  maxCount,\n  durationSeconds,\n) {\n  const counter = new Map();\n\n  const _cleanup = (now) => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = () => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest) => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n\n  /**\n   * The current or last active span.\n   * This is only available when performance is enabled.\n   */\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n\n  /** The replay has to be manually started, because no sample rate (neither session or error) was provided. */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n\n  /**\n   * Is the integration currently active?\n   */\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n\n  /**\n   * Function to stop recording\n   */\n\n  /**\n   * Internal use for canvas recording options\n   */\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } ;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._requiresManualStart = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event, isCheckout) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n   isRecordingCanvas() {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n   initializeSampling(previousSessionId) {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    const requiresManualStart = errorSampleRate <= 0 && sessionSampleRate <= 0;\n\n    this._requiresManualStart = requiresManualStart;\n\n    if (requiresManualStart) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n   startBuffering() {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   async stop({ forceFlush = false, reason } = {}) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   async sendBufferedReplayOrFlush({ continueRecording = true } = {}) {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode ) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n   updateUserActivity() {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   conditionalFlush() {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n   flush() {\n    return this._debouncedFlush() ;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n   cancelFlush() {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n   throttledAddEvent(\n    event,\n    isCheckout,\n  ) {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n   getCurrentRoute() {\n    const lastActiveSpan = this.lastActiveSpan || (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveSpan)();\n    const lastRootSpan = lastActiveSpan && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(lastActiveSpan);\n\n    const attributes = (lastRootSpan && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.spanToJSON)(lastRootSpan).data) || {};\n    const source = attributes[_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastRootSpan || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.spanToJSON)(lastRootSpan).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n   _initializeRecording() {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n   _initializeSessionForSampling(previousSessionId) {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n   _checkSession() {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n   async _refreshSession(session) {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init2() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init3() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /** Ensure page remains active when a key is pressed. */\n   __init4() {this._handleKeyboardEvent = (event) => {\n    handleKeyboardEvent(this, event);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = Date.now()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = Date.now()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n   _updateInitialTimestampFromEventBuffer() {\n    const { session, eventBuffer } = this;\n    // If replay was started manually (=no sample rate was given),\n    // We do not want to back-port the initial timestamp\n    if (!session || !eventBuffer || this._requiresManualStart) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init5() {this._flush = async ({\n    force = false,\n  }\n\n = {}) => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n   __init6() {this._onMutationHandler = (mutations) => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };}\n}\n\nfunction getOption(selectors, defaultSelectors) {\n  return [\n    ...selectors,\n    // sentry defaults\n    ...defaultSelectors,\n  ].join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({ mask, unmask, block, unblock, ignore }) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]']);\n  const unmaskSelector = getOption(unmask, []);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(block, ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements]),\n    unblockSelector: getOption(unblock, []),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]']),\n  };\n\n  return options;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nfunction maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}) {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * Sentry integration for [Session Replay](https://sentry.io/for/session-replay/).\n *\n * See the [Replay documentation](https://docs.sentry.io/platforms/javascript/guides/session-replay/) for more information.\n *\n * @example\n *\n * ```\n * Sentry.init({\n *   dsn: '__DSN__',\n *   integrations: [Sentry.replayIntegration()],\n * });\n * ```\n */\nconst replayIntegration = ((options) => {\n  return new Replay(options);\n}) ;\n\n/**\n * Replay integration\n *\n * TODO: Rewrite this to be functional integration\n * Exported for tests.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10000,\n\n    slowClickTimeout = 7000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n  } = {}) {\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key, value, el) =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isBrowser)()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n   setupOnce() {\n    if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isBrowser)()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n   startBuffering() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n   flush(options) {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n   getReplayId() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n   _initialize() {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n   _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n   _maybeLoadFromReplayCanvasIntegration() {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n      const canvasIntegration = client.getIntegrationByName('ReplayCanvas')\n\n;\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay['_canvas'] = canvasIntegration.getOptions();\n    } catch (e) {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n  const opt = client && (client.getOptions() );\n\n  const finalOptions = {\n    sessionSampleRate: 0,\n    errorSampleRate: 0,\n    ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(initialOptions),\n  };\n\n  if (!opt) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  const replaysSessionSampleRate = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.parseSampleRate)(opt.replaysSessionSampleRate);\n  const replaysOnErrorSampleRate = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.parseSampleRate)(opt.replaysOnErrorSampleRate);\n\n  if (replaysSessionSampleRate == null && replaysOnErrorSampleRate == null) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (replaysSessionSampleRate != null) {\n    finalOptions.sessionSampleRate = replaysSessionSampleRate;\n  }\n\n  if (replaysOnErrorSampleRate != null) {\n    finalOptions.errorSampleRate = replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers) {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\nfunction getReplay() {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n  return client && client.getIntegrationByName('Replay');\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry-internal/replay/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/client.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/client.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserClient\": function() { return /* binding */ BrowserClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _userfeedback_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./userfeedback.js */ \"./node_modules/@sentry/browser/esm/userfeedback.js\");\n\n\n\n\n\n\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends _sentry_core__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const opts = {\n      // We default this to true, as it is the safer scenario\n      parentSpanIsAlwaysRootSpan: true,\n      ...options,\n    };\n    const sdkSource = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.SENTRY_SDK_SOURCE || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getSDKSource)();\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.applySdkMetadata)(opts, 'browser', ['browser'], sdkSource);\n\n    super(opts);\n\n    if (opts.sendClientReports && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document) {\n      _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.addEventListener('visibilitychange', () => {\n        if (_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__.eventFromException)(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    level = 'info',\n    hint,\n  ) {\n    return (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__.eventFromMessage)(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   *\n   * @deprecated Use `captureFeedback` instead.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = (0,_userfeedback_js__WEBPACK_IMPORTED_MODULE_5__.createUserFeedbackEnvelope)(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Sending outcomes:', outcomes);\n\n    const envelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.createClientReportEnvelope)(outcomes, this._options.tunnel && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dsnToString)(this._dsn));\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n  }\n}\n\n\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9jbGllbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE0RDtBQUNrQztBQUMvQztBQUMwQjtBQUNuQztBQUN5Qjs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG9EQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaUVBQXdCLElBQUksMkRBQVk7QUFDOUQsSUFBSSw4REFBZ0I7O0FBRXBCOztBQUVBLGtDQUFrQyx3REFBZTtBQUNqRCxNQUFNLHlFQUFnQztBQUN0QyxZQUFZLHdFQUErQjtBQUMzQztBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9FQUFrQjtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrRUFBZ0I7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHdEQUFXLElBQUksc0RBQVc7QUFDaEM7QUFDQTs7QUFFQSxxQkFBcUIsNEVBQTBCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0sd0RBQVcsSUFBSSxxREFBVTtBQUMvQjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNLHdEQUFXLElBQUkscURBQVU7QUFDL0I7QUFDQTs7QUFFQSxJQUFJLHdEQUFXLElBQUkscURBQVU7O0FBRTdCLHFCQUFxQix5RUFBMEIsbUNBQW1DLDBEQUFXOztBQUU3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9jbGllbnQuanM/NDU5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlQ2xpZW50LCBhcHBseVNka01ldGFkYXRhIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGdldFNES1NvdXJjZSwgbG9nZ2VyLCBjcmVhdGVDbGllbnRSZXBvcnRFbnZlbG9wZSwgZHNuVG9TdHJpbmcgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBldmVudEZyb21FeGNlcHRpb24sIGV2ZW50RnJvbU1lc3NhZ2UgfSBmcm9tICcuL2V2ZW50YnVpbGRlci5qcyc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuaW1wb3J0IHsgY3JlYXRlVXNlckZlZWRiYWNrRW52ZWxvcGUgfSBmcm9tICcuL3VzZXJmZWVkYmFjay5qcyc7XG5cbi8qKlxuICogQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciB0aGUgU2VudHJ5IEJyb3dzZXIgU0RLLlxuICogQHNlZSBAc2VudHJ5L3R5cGVzIE9wdGlvbnMgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKi9cblxuLyoqXG4gKiBUaGUgU2VudHJ5IEJyb3dzZXIgU0RLIENsaWVudC5cbiAqXG4gKiBAc2VlIEJyb3dzZXJPcHRpb25zIGZvciBkb2N1bWVudGF0aW9uIG9uIGNvbmZpZ3VyYXRpb24gb3B0aW9ucy5cbiAqIEBzZWUgU2VudHJ5Q2xpZW50IGZvciB1c2FnZSBkb2N1bWVudGF0aW9uLlxuICovXG5jbGFzcyBCcm93c2VyQ2xpZW50IGV4dGVuZHMgQmFzZUNsaWVudCB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IEJyb3dzZXIgU0RLIGluc3RhbmNlLlxuICAgKlxuICAgKiBAcGFyYW0gb3B0aW9ucyBDb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHRoaXMgU0RLLlxuICAgKi9cbiAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBjb25zdCBvcHRzID0ge1xuICAgICAgLy8gV2UgZGVmYXVsdCB0aGlzIHRvIHRydWUsIGFzIGl0IGlzIHRoZSBzYWZlciBzY2VuYXJpb1xuICAgICAgcGFyZW50U3BhbklzQWx3YXlzUm9vdFNwYW46IHRydWUsXG4gICAgICAuLi5vcHRpb25zLFxuICAgIH07XG4gICAgY29uc3Qgc2RrU291cmNlID0gV0lORE9XLlNFTlRSWV9TREtfU09VUkNFIHx8IGdldFNES1NvdXJjZSgpO1xuICAgIGFwcGx5U2RrTWV0YWRhdGEob3B0cywgJ2Jyb3dzZXInLCBbJ2Jyb3dzZXInXSwgc2RrU291cmNlKTtcblxuICAgIHN1cGVyKG9wdHMpO1xuXG4gICAgaWYgKG9wdHMuc2VuZENsaWVudFJlcG9ydHMgJiYgV0lORE9XLmRvY3VtZW50KSB7XG4gICAgICBXSU5ET1cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsICgpID0+IHtcbiAgICAgICAgaWYgKFdJTkRPVy5kb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICdoaWRkZW4nKSB7XG4gICAgICAgICAgdGhpcy5fZmx1c2hPdXRjb21lcygpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBldmVudEZyb21FeGNlcHRpb24oZXhjZXB0aW9uLCBoaW50KSB7XG4gICAgcmV0dXJuIGV2ZW50RnJvbUV4Y2VwdGlvbih0aGlzLl9vcHRpb25zLnN0YWNrUGFyc2VyLCBleGNlcHRpb24sIGhpbnQsIHRoaXMuX29wdGlvbnMuYXR0YWNoU3RhY2t0cmFjZSk7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBldmVudEZyb21NZXNzYWdlKFxuICAgIG1lc3NhZ2UsXG4gICAgbGV2ZWwgPSAnaW5mbycsXG4gICAgaGludCxcbiAgKSB7XG4gICAgcmV0dXJuIGV2ZW50RnJvbU1lc3NhZ2UodGhpcy5fb3B0aW9ucy5zdGFja1BhcnNlciwgbWVzc2FnZSwgbGV2ZWwsIGhpbnQsIHRoaXMuX29wdGlvbnMuYXR0YWNoU3RhY2t0cmFjZSk7XG4gIH1cblxuICAvKipcbiAgICogU2VuZHMgdXNlciBmZWVkYmFjayB0byBTZW50cnkuXG4gICAqXG4gICAqIEBkZXByZWNhdGVkIFVzZSBgY2FwdHVyZUZlZWRiYWNrYCBpbnN0ZWFkLlxuICAgKi9cbiAgIGNhcHR1cmVVc2VyRmVlZGJhY2soZmVlZGJhY2spIHtcbiAgICBpZiAoIXRoaXMuX2lzRW5hYmxlZCgpKSB7XG4gICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIud2FybignU0RLIG5vdCBlbmFibGVkLCB3aWxsIG5vdCBjYXB0dXJlIHVzZXIgZmVlZGJhY2suJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZW52ZWxvcGUgPSBjcmVhdGVVc2VyRmVlZGJhY2tFbnZlbG9wZShmZWVkYmFjaywge1xuICAgICAgbWV0YWRhdGE6IHRoaXMuZ2V0U2RrTWV0YWRhdGEoKSxcbiAgICAgIGRzbjogdGhpcy5nZXREc24oKSxcbiAgICAgIHR1bm5lbDogdGhpcy5nZXRPcHRpb25zKCkudHVubmVsLFxuICAgIH0pO1xuXG4gICAgLy8gc2VuZEVudmVsb3BlIHNob3VsZCBub3QgdGhyb3dcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXG4gICAgdGhpcy5zZW5kRW52ZWxvcGUoZW52ZWxvcGUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgX3ByZXBhcmVFdmVudChldmVudCwgaGludCwgc2NvcGUpIHtcbiAgICBldmVudC5wbGF0Zm9ybSA9IGV2ZW50LnBsYXRmb3JtIHx8ICdqYXZhc2NyaXB0JztcbiAgICByZXR1cm4gc3VwZXIuX3ByZXBhcmVFdmVudChldmVudCwgaGludCwgc2NvcGUpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNlbmRzIGNsaWVudCByZXBvcnRzIGFzIGFuIGVudmVsb3BlLlxuICAgKi9cbiAgIF9mbHVzaE91dGNvbWVzKCkge1xuICAgIGNvbnN0IG91dGNvbWVzID0gdGhpcy5fY2xlYXJPdXRjb21lcygpO1xuXG4gICAgaWYgKG91dGNvbWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmxvZygnTm8gb3V0Y29tZXMgdG8gc2VuZCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFRoaXMgaXMgcmVhbGx5IHRoZSBvbmx5IHBsYWNlIHdoZXJlIHdlIHdhbnQgdG8gY2hlY2sgZm9yIGEgRFNOIGFuZCBvbmx5IHNlbmQgb3V0Y29tZXMgdGhlblxuICAgIGlmICghdGhpcy5fZHNuKSB7XG4gICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIubG9nKCdObyBkc24gcHJvdmlkZWQsIHdpbGwgbm90IHNlbmQgb3V0Y29tZXMnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIubG9nKCdTZW5kaW5nIG91dGNvbWVzOicsIG91dGNvbWVzKTtcblxuICAgIGNvbnN0IGVudmVsb3BlID0gY3JlYXRlQ2xpZW50UmVwb3J0RW52ZWxvcGUob3V0Y29tZXMsIHRoaXMuX29wdGlvbnMudHVubmVsICYmIGRzblRvU3RyaW5nKHRoaXMuX2RzbikpO1xuXG4gICAgLy8gc2VuZEVudmVsb3BlIHNob3VsZCBub3QgdGhyb3dcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXG4gICAgdGhpcy5zZW5kRW52ZWxvcGUoZW52ZWxvcGUpO1xuICB9XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJDbGllbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsaWVudC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/client.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/debug-build.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/debug-build.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEBUG_BUILD\": function() { return /* binding */ DEBUG_BUILD; }\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9kZWJ1Zy1idWlsZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUV6RDtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9kZWJ1Zy1idWlsZC5qcz9lZDZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBzZXJ2ZXMgYXMgYSBidWlsZCB0aW1lIGZsYWcgdGhhdCB3aWxsIGJlIHRydWUgYnkgZGVmYXVsdCwgYnV0IGZhbHNlIGluIG5vbi1kZWJ1ZyBidWlsZHMgb3IgaWYgdXNlcnMgcmVwbGFjZSBgX19TRU5UUllfREVCVUdfX2AgaW4gdGhlaXIgZ2VuZXJhdGVkIGNvZGUuXG4gKlxuICogQVRURU5USU9OOiBUaGlzIGNvbnN0YW50IG11c3QgbmV2ZXIgY3Jvc3MgcGFja2FnZSBib3VuZGFyaWVzIChpLmUuIGJlIGV4cG9ydGVkKSB0byBndWFyYW50ZWUgdGhhdCBpdCBjYW4gYmUgdXNlZCBmb3IgdHJlZSBzaGFraW5nLlxuICovXG5jb25zdCBERUJVR19CVUlMRCA9ICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXyk7XG5cbmV4cG9ydCB7IERFQlVHX0JVSUxEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy1idWlsZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/debug-build.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/eventbuilder.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/eventbuilder.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eventFromException\": function() { return /* binding */ eventFromException; },\n/* harmony export */   \"eventFromMessage\": function() { return /* binding */ eventFromMessage; },\n/* harmony export */   \"eventFromUnknownInput\": function() { return /* binding */ eventFromUnknownInput; },\n/* harmony export */   \"exceptionFromError\": function() { return /* binding */ exceptionFromError; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  // If we can, we extract an exception from the object properties\n  const errorFromProp = getErrorPropertyFromObject(exception);\n\n  const extra = {\n    __serialized__: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeToSize)(exception, normalizeDepth),\n  };\n\n  if (errorFromProp) {\n    return {\n      exception: {\n        values: [exceptionFromError(stackParser, errorFromProp)],\n      },\n      extra,\n    };\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        } ,\n      ],\n    },\n    extra,\n  } ;\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      event.exception.values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const skipLines = getSkipFirstStackStringLines(ex);\n  const framesToPop = getPopFirstTopFrames(ex);\n\n  try {\n    return stackParser(stacktrace, skipLines, framesToPop);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/**\n * Certain known React errors contain links that would be falsely\n * parsed as frames. This function check for these errors and\n * returns number of the stack string lines to skip.\n */\nfunction getSkipFirstStackStringLines(ex) {\n  if (ex && reactMinifiedRegexp.test(ex.message)) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * If error has `framesToPop` property, it means that the\n * creator tells us the first x frames will be useless\n * and should be discarded. Typically error from wrapper function\n * which don't point to the actual location in the developer's code.\n *\n * Example: https://github.com/zertosh/invariant/blob/master/invariant.js#L46\n */\nfunction getPopFirstTopFrames(ex) {\n  if (typeof ex.framesToPop === 'number') {\n    return ex.framesToPop;\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionMechanism)(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.resolvedSyncPromise)(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.resolvedSyncPromise)(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isErrorEvent)(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMError)(exception) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMException)(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMError)(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionTypeValue)(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(exception) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionMechanism)(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionTypeValue)(event, `${exception}`, undefined);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionMechanism)(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\nfunction eventFromString(\n  stackParser,\n  message,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isParameterizedString)(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.extractExceptionKeysForMessage)(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isErrorEvent)(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\n\n//# sourceMappingURL=eventbuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/eventbuilder.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/feedbackAsync.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/feedbackAsync.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"feedbackAsyncIntegration\": function() { return /* binding */ feedbackAsyncIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_feedback__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry-internal/feedback */ \"./node_modules/@sentry-internal/feedback/esm/index.js\");\n/* harmony import */ var _utils_lazyLoadIntegration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/lazyLoadIntegration.js */ \"./node_modules/@sentry/browser/esm/utils/lazyLoadIntegration.js\");\n\n\n\n/**\n * An integration to add user feedback to your application,\n * while loading most of the code lazily only when it's needed.\n */\nconst feedbackAsyncIntegration = (0,_sentry_internal_feedback__WEBPACK_IMPORTED_MODULE_0__.buildFeedbackIntegration)({\n  lazyLoadIntegration: _utils_lazyLoadIntegration_js__WEBPACK_IMPORTED_MODULE_1__.lazyLoadIntegration,\n});\n\n\n//# sourceMappingURL=feedbackAsync.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9mZWVkYmFja0FzeW5jLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRTtBQUNBOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxtRkFBd0I7QUFDekQscUJBQXFCO0FBQ3JCLENBQUM7O0FBRW1DO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL2ZlZWRiYWNrQXN5bmMuanM/YWU1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBidWlsZEZlZWRiYWNrSW50ZWdyYXRpb24gfSBmcm9tICdAc2VudHJ5LWludGVybmFsL2ZlZWRiYWNrJztcbmltcG9ydCB7IGxhenlMb2FkSW50ZWdyYXRpb24gfSBmcm9tICcuL3V0aWxzL2xhenlMb2FkSW50ZWdyYXRpb24uanMnO1xuXG4vKipcbiAqIEFuIGludGVncmF0aW9uIHRvIGFkZCB1c2VyIGZlZWRiYWNrIHRvIHlvdXIgYXBwbGljYXRpb24sXG4gKiB3aGlsZSBsb2FkaW5nIG1vc3Qgb2YgdGhlIGNvZGUgbGF6aWx5IG9ubHkgd2hlbiBpdCdzIG5lZWRlZC5cbiAqL1xuY29uc3QgZmVlZGJhY2tBc3luY0ludGVncmF0aW9uID0gYnVpbGRGZWVkYmFja0ludGVncmF0aW9uKHtcbiAgbGF6eUxvYWRJbnRlZ3JhdGlvbixcbn0pO1xuXG5leHBvcnQgeyBmZWVkYmFja0FzeW5jSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZlZWRiYWNrQXN5bmMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/feedbackAsync.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/feedbackSync.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/feedbackSync.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"feedbackSyncIntegration\": function() { return /* binding */ feedbackSyncIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_feedback__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry-internal/feedback */ \"./node_modules/@sentry-internal/feedback/esm/index.js\");\n/* harmony import */ var _utils_lazyLoadIntegration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/lazyLoadIntegration.js */ \"./node_modules/@sentry/browser/esm/utils/lazyLoadIntegration.js\");\n\n\n\n/** Add a widget to capture user feedback to your application. */\nconst feedbackSyncIntegration = (0,_sentry_internal_feedback__WEBPACK_IMPORTED_MODULE_0__.buildFeedbackIntegration)({\n  lazyLoadIntegration: _utils_lazyLoadIntegration_js__WEBPACK_IMPORTED_MODULE_1__.lazyLoadIntegration,\n  getModalIntegration: () => _sentry_internal_feedback__WEBPACK_IMPORTED_MODULE_0__.feedbackModalIntegration,\n  getScreenshotIntegration: () => _sentry_internal_feedback__WEBPACK_IMPORTED_MODULE_0__.feedbackScreenshotIntegration,\n});\n\n\n//# sourceMappingURL=feedbackSync.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9mZWVkYmFja1N5bmMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThIO0FBQ3pEOztBQUVyRTtBQUNBLGdDQUFnQyxtRkFBd0I7QUFDeEQscUJBQXFCO0FBQ3JCLDZCQUE2QiwrRUFBd0I7QUFDckQsa0NBQWtDLG9GQUE2QjtBQUMvRCxDQUFDOztBQUVrQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9mZWVkYmFja1N5bmMuanM/MWQwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBidWlsZEZlZWRiYWNrSW50ZWdyYXRpb24sIGZlZWRiYWNrTW9kYWxJbnRlZ3JhdGlvbiwgZmVlZGJhY2tTY3JlZW5zaG90SW50ZWdyYXRpb24gfSBmcm9tICdAc2VudHJ5LWludGVybmFsL2ZlZWRiYWNrJztcbmltcG9ydCB7IGxhenlMb2FkSW50ZWdyYXRpb24gfSBmcm9tICcuL3V0aWxzL2xhenlMb2FkSW50ZWdyYXRpb24uanMnO1xuXG4vKiogQWRkIGEgd2lkZ2V0IHRvIGNhcHR1cmUgdXNlciBmZWVkYmFjayB0byB5b3VyIGFwcGxpY2F0aW9uLiAqL1xuY29uc3QgZmVlZGJhY2tTeW5jSW50ZWdyYXRpb24gPSBidWlsZEZlZWRiYWNrSW50ZWdyYXRpb24oe1xuICBsYXp5TG9hZEludGVncmF0aW9uLFxuICBnZXRNb2RhbEludGVncmF0aW9uOiAoKSA9PiBmZWVkYmFja01vZGFsSW50ZWdyYXRpb24sXG4gIGdldFNjcmVlbnNob3RJbnRlZ3JhdGlvbjogKCkgPT4gZmVlZGJhY2tTY3JlZW5zaG90SW50ZWdyYXRpb24sXG59KTtcblxuZXhwb3J0IHsgZmVlZGJhY2tTeW5jSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZlZWRiYWNrU3luYy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/feedbackSync.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/helpers.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/helpers.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WINDOW\": function() { return /* binding */ WINDOW; },\n/* harmony export */   \"ignoreNextOnError\": function() { return /* binding */ ignoreNextOnError; },\n/* harmony export */   \"shouldIgnoreOnError\": function() { return /* binding */ shouldIgnoreOnError; },\n/* harmony export */   \"wrap\": function() { return /* binding */ wrap; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withScope)(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionTypeValue)(event, undefined, undefined);\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.markFunctionWrapped)(sentryWrapped, fn);\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n\n//# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9oZWxwZXJzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyRDtBQUNrRzs7QUFFN0osZUFBZSxxREFBVTs7QUFFekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsUUFBUSxrRUFBbUI7QUFDM0I7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjs7QUFFQSxNQUFNLHVEQUFTO0FBQ2Y7QUFDQTtBQUNBLFlBQVksb0VBQXFCO0FBQ2pDLFlBQVksb0VBQXFCO0FBQ2pDOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUzs7QUFFVCxRQUFRLDhEQUFnQjtBQUN4QixPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGVBQWU7O0FBRW5CO0FBQ0E7QUFDQSxFQUFFLGtFQUFtQjs7QUFFckIsRUFBRSx1RUFBd0I7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBOztBQUVnRTtBQUNoRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9oZWxwZXJzLmpzP2ViZDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2l0aFNjb3BlLCBjYXB0dXJlRXhjZXB0aW9uIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IEdMT0JBTF9PQkosIGdldE9yaWdpbmFsRnVuY3Rpb24sIG1hcmtGdW5jdGlvbldyYXBwZWQsIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eSwgYWRkRXhjZXB0aW9uVHlwZVZhbHVlLCBhZGRFeGNlcHRpb25NZWNoYW5pc20gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuY29uc3QgV0lORE9XID0gR0xPQkFMX09CSiA7XG5cbmxldCBpZ25vcmVPbkVycm9yID0gMDtcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIHNob3VsZElnbm9yZU9uRXJyb3IoKSB7XG4gIHJldHVybiBpZ25vcmVPbkVycm9yID4gMDtcbn1cblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGlnbm9yZU5leHRPbkVycm9yKCkge1xuICAvLyBvbmVycm9yIHNob3VsZCB0cmlnZ2VyIGJlZm9yZSBzZXRUaW1lb3V0XG4gIGlnbm9yZU9uRXJyb3IrKztcbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgaWdub3JlT25FcnJvci0tO1xuICB9KTtcbn1cblxuLyoqXG4gKiBJbnN0cnVtZW50cyB0aGUgZ2l2ZW4gZnVuY3Rpb24gYW5kIHNlbmRzIGFuIGV2ZW50IHRvIFNlbnRyeSBldmVyeSB0aW1lIHRoZVxuICogZnVuY3Rpb24gdGhyb3dzIGFuIGV4Y2VwdGlvbi5cbiAqXG4gKiBAcGFyYW0gZm4gQSBmdW5jdGlvbiB0byB3cmFwLiBJdCBpcyBnZW5lcmFsbHkgc2FmZSB0byBwYXNzIGFuIHVuYm91bmQgZnVuY3Rpb24sIGJlY2F1c2UgdGhlIHJldHVybmVkIHdyYXBwZXIgYWx3YXlzXG4gKiBoYXMgYSBjb3JyZWN0IGB0aGlzYCBjb250ZXh0LlxuICogQHJldHVybnMgVGhlIHdyYXBwZWQgZnVuY3Rpb24uXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIHdyYXAoXG4gIGZuLFxuICBvcHRpb25zXG5cbiA9IHt9LFxuICBiZWZvcmUsXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4pIHtcbiAgLy8gZm9yIGZ1dHVyZSByZWFkZXJzIHdoYXQgdGhpcyBkb2VzIGlzIHdyYXAgYSBmdW5jdGlvbiBhbmQgdGhlbiBjcmVhdGVcbiAgLy8gYSBiaS1kaXJlY3Rpb25hbCB3cmFwcGluZyBiZXR3ZWVuIHRoZW0uXG4gIC8vXG4gIC8vIGV4YW1wbGU6IHdyYXBwZWQgPSB3cmFwKG9yaWdpbmFsKTtcbiAgLy8gIG9yaWdpbmFsLl9fc2VudHJ5X3dyYXBwZWRfXyAtPiB3cmFwcGVkXG4gIC8vICB3cmFwcGVkLl9fc2VudHJ5X29yaWdpbmFsX18gLT4gb3JpZ2luYWxcblxuICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGZuO1xuICB9XG5cbiAgdHJ5IHtcbiAgICAvLyBpZiB3ZSdyZSBkZWFsaW5nIHdpdGggYSBmdW5jdGlvbiB0aGF0IHdhcyBwcmV2aW91c2x5IHdyYXBwZWQsIHJldHVyblxuICAgIC8vIHRoZSBvcmlnaW5hbCB3cmFwcGVyLlxuICAgIGNvbnN0IHdyYXBwZXIgPSBmbi5fX3NlbnRyeV93cmFwcGVkX187XG4gICAgaWYgKHdyYXBwZXIpIHtcbiAgICAgIHJldHVybiB3cmFwcGVyO1xuICAgIH1cblxuICAgIC8vIFdlIGRvbid0IHdhbm5hIHdyYXAgaXQgdHdpY2VcbiAgICBpZiAoZ2V0T3JpZ2luYWxGdW5jdGlvbihmbikpIHtcbiAgICAgIHJldHVybiBmbjtcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBKdXN0IGFjY2Vzc2luZyBjdXN0b20gcHJvcHMgaW4gc29tZSBTZWxlbml1bSBlbnZpcm9ubWVudHNcbiAgICAvLyBjYW4gY2F1c2UgYSBcIlBlcm1pc3Npb24gZGVuaWVkXCIgZXhjZXB0aW9uIChzZWUgcmF2ZW4tanMjNDk1KS5cbiAgICAvLyBCYWlsIG9uIHdyYXBwaW5nIGFuZCByZXR1cm4gdGhlIGZ1bmN0aW9uIGFzLWlzIChkZWZlcnMgdG8gd2luZG93Lm9uZXJyb3IpLlxuICAgIHJldHVybiBmbjtcbiAgfVxuXG4gIC8qIGVzbGludC1kaXNhYmxlIHByZWZlci1yZXN0LXBhcmFtcyAqL1xuICAvLyBJdCBpcyBpbXBvcnRhbnQgdGhhdCBgc2VudHJ5V3JhcHBlZGAgaXMgbm90IGFuIGFycm93IGZ1bmN0aW9uIHRvIHByZXNlcnZlIHRoZSBjb250ZXh0IG9mIGB0aGlzYFxuICBjb25zdCBzZW50cnlXcmFwcGVkID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGlmIChiZWZvcmUgJiYgdHlwZW9mIGJlZm9yZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBiZWZvcmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnksIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgICAgY29uc3Qgd3JhcHBlZEFyZ3VtZW50cyA9IGFyZ3MubWFwKChhcmcpID0+IHdyYXAoYXJnLCBvcHRpb25zKSk7XG5cbiAgICAgIC8vIEF0dGVtcHQgdG8gaW52b2tlIHVzZXItbGFuZCBmdW5jdGlvblxuICAgICAgLy8gTk9URTogSWYgeW91IGFyZSBhIFNlbnRyeSB1c2VyLCBhbmQgeW91IGFyZSBzZWVpbmcgdGhpcyBzdGFjayBmcmFtZSwgaXRcbiAgICAgIC8vICAgICAgIG1lYW5zIHRoZSBzZW50cnkuamF2YXNjcmlwdCBTREsgY2F1Z2h0IGFuIGVycm9yIGludm9raW5nIHlvdXIgYXBwbGljYXRpb24gY29kZS4gVGhpc1xuICAgICAgLy8gICAgICAgaXMgZXhwZWN0ZWQgYmVoYXZpb3IgYW5kIE5PVCBpbmRpY2F0aXZlIG9mIGEgYnVnIHdpdGggc2VudHJ5LmphdmFzY3JpcHQuXG4gICAgICByZXR1cm4gZm4uYXBwbHkodGhpcywgd3JhcHBlZEFyZ3VtZW50cyk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIGlnbm9yZU5leHRPbkVycm9yKCk7XG5cbiAgICAgIHdpdGhTY29wZShzY29wZSA9PiB7XG4gICAgICAgIHNjb3BlLmFkZEV2ZW50UHJvY2Vzc29yKGV2ZW50ID0+IHtcbiAgICAgICAgICBpZiAob3B0aW9ucy5tZWNoYW5pc20pIHtcbiAgICAgICAgICAgIGFkZEV4Y2VwdGlvblR5cGVWYWx1ZShldmVudCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpO1xuICAgICAgICAgICAgYWRkRXhjZXB0aW9uTWVjaGFuaXNtKGV2ZW50LCBvcHRpb25zLm1lY2hhbmlzbSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZXZlbnQuZXh0cmEgPSB7XG4gICAgICAgICAgICAuLi5ldmVudC5leHRyYSxcbiAgICAgICAgICAgIGFyZ3VtZW50czogYXJncyxcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgcmV0dXJuIGV2ZW50O1xuICAgICAgICB9KTtcblxuICAgICAgICBjYXB0dXJlRXhjZXB0aW9uKGV4KTtcbiAgICAgIH0pO1xuXG4gICAgICB0aHJvdyBleDtcbiAgICB9XG4gIH07XG4gIC8qIGVzbGludC1lbmFibGUgcHJlZmVyLXJlc3QtcGFyYW1zICovXG5cbiAgLy8gQWNjZXNzaW5nIHNvbWUgb2JqZWN0cyBtYXkgdGhyb3dcbiAgLy8gcmVmOiBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L2lzc3Vlcy8xMTY4XG4gIHRyeSB7XG4gICAgZm9yIChjb25zdCBwcm9wZXJ0eSBpbiBmbikge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChmbiwgcHJvcGVydHkpKSB7XG4gICAgICAgIHNlbnRyeVdyYXBwZWRbcHJvcGVydHldID0gZm5bcHJvcGVydHldO1xuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoX29PKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG5cbiAgLy8gU2lnbmFsIHRoYXQgdGhpcyBmdW5jdGlvbiBoYXMgYmVlbiB3cmFwcGVkL2ZpbGxlZCBhbHJlYWR5XG4gIC8vIGZvciBib3RoIGRlYnVnZ2luZyBhbmQgdG8gcHJldmVudCBpdCB0byBiZWluZyB3cmFwcGVkL2ZpbGxlZCB0d2ljZVxuICBtYXJrRnVuY3Rpb25XcmFwcGVkKHNlbnRyeVdyYXBwZWQsIGZuKTtcblxuICBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkoZm4sICdfX3NlbnRyeV93cmFwcGVkX18nLCBzZW50cnlXcmFwcGVkKTtcblxuICAvLyBSZXN0b3JlIG9yaWdpbmFsIGZ1bmN0aW9uIG5hbWUgKG5vdCBhbGwgYnJvd3NlcnMgYWxsb3cgdGhhdClcbiAgdHJ5IHtcbiAgICBjb25zdCBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzZW50cnlXcmFwcGVkLCAnbmFtZScpIDtcbiAgICBpZiAoZGVzY3JpcHRvci5jb25maWd1cmFibGUpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzZW50cnlXcmFwcGVkLCAnbmFtZScsIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgIHJldHVybiBmbi5uYW1lO1xuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICB9IGNhdGNoIChfb08pIHt9XG5cbiAgcmV0dXJuIHNlbnRyeVdyYXBwZWQ7XG59XG5cbmV4cG9ydCB7IFdJTkRPVywgaWdub3JlTmV4dE9uRXJyb3IsIHNob3VsZElnbm9yZU9uRXJyb3IsIHdyYXAgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/helpers.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserClient\": function() { return /* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_2__.BrowserClient; },\n/* harmony export */   \"SDK_VERSION\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_OP\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_OP; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE; },\n/* harmony export */   \"Scope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Scope; },\n/* harmony export */   \"WINDOW\": function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW; },\n/* harmony export */   \"addBreadcrumb\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.addBreadcrumb; },\n/* harmony export */   \"addEventProcessor\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.addEventProcessor; },\n/* harmony export */   \"addIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.addIntegration; },\n/* harmony export */   \"addTracingExtensions\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.addTracingExtensions; },\n/* harmony export */   \"breadcrumbsIntegration\": function() { return /* reexport safe */ _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_8__.breadcrumbsIntegration; },\n/* harmony export */   \"browserApiErrorsIntegration\": function() { return /* reexport safe */ _integrations_browserapierrors_js__WEBPACK_IMPORTED_MODULE_12__.browserApiErrorsIntegration; },\n/* harmony export */   \"browserProfilingIntegration\": function() { return /* reexport safe */ _profiling_integration_js__WEBPACK_IMPORTED_MODULE_26__.browserProfilingIntegration; },\n/* harmony export */   \"browserTracingIntegration\": function() { return /* reexport safe */ _tracing_browserTracingIntegration_js__WEBPACK_IMPORTED_MODULE_24__.browserTracingIntegration; },\n/* harmony export */   \"captureConsoleIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureConsoleIntegration; },\n/* harmony export */   \"captureEvent\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureEvent; },\n/* harmony export */   \"captureException\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException; },\n/* harmony export */   \"captureFeedback\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureFeedback; },\n/* harmony export */   \"captureMessage\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureMessage; },\n/* harmony export */   \"captureSession\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureSession; },\n/* harmony export */   \"captureUserFeedback\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.captureUserFeedback; },\n/* harmony export */   \"chromeStackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_4__.chromeStackLineParser; },\n/* harmony export */   \"close\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.close; },\n/* harmony export */   \"contextLinesIntegration\": function() { return /* reexport safe */ _integrations_contextlines_js__WEBPACK_IMPORTED_MODULE_16__.contextLinesIntegration; },\n/* harmony export */   \"continueTrace\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.continueTrace; },\n/* harmony export */   \"createTransport\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.createTransport; },\n/* harmony export */   \"createUserFeedbackEnvelope\": function() { return /* reexport safe */ _userfeedback_js__WEBPACK_IMPORTED_MODULE_6__.createUserFeedbackEnvelope; },\n/* harmony export */   \"debugIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.debugIntegration; },\n/* harmony export */   \"dedupeIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.dedupeIntegration; },\n/* harmony export */   \"defaultRequestInstrumentationOptions\": function() { return /* reexport safe */ _tracing_request_js__WEBPACK_IMPORTED_MODULE_23__.defaultRequestInstrumentationOptions; },\n/* harmony export */   \"defaultStackLineParsers\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_4__.defaultStackLineParsers; },\n/* harmony export */   \"defaultStackParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_4__.defaultStackParser; },\n/* harmony export */   \"endSession\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.endSession; },\n/* harmony export */   \"eventFromException\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_5__.eventFromException; },\n/* harmony export */   \"eventFromMessage\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_5__.eventFromMessage; },\n/* harmony export */   \"exceptionFromError\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_5__.exceptionFromError; },\n/* harmony export */   \"extraErrorDataIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.extraErrorDataIntegration; },\n/* harmony export */   \"feedbackAsyncIntegration\": function() { return /* reexport safe */ _feedbackAsync_js__WEBPACK_IMPORTED_MODULE_19__.feedbackAsyncIntegration; },\n/* harmony export */   \"feedbackIntegration\": function() { return /* reexport safe */ _feedbackSync_js__WEBPACK_IMPORTED_MODULE_20__.feedbackSyncIntegration; },\n/* harmony export */   \"feedbackSyncIntegration\": function() { return /* reexport safe */ _feedbackSync_js__WEBPACK_IMPORTED_MODULE_20__.feedbackSyncIntegration; },\n/* harmony export */   \"flush\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.flush; },\n/* harmony export */   \"forceLoad\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.forceLoad; },\n/* harmony export */   \"functionToStringIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.functionToStringIntegration; },\n/* harmony export */   \"geckoStackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_4__.geckoStackLineParser; },\n/* harmony export */   \"getActiveSpan\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getActiveSpan; },\n/* harmony export */   \"getClient\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient; },\n/* harmony export */   \"getCurrentHub\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub; },\n/* harmony export */   \"getCurrentScope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope; },\n/* harmony export */   \"getDefaultIntegrations\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultIntegrations; },\n/* harmony export */   \"getFeedback\": function() { return /* reexport safe */ _sentry_internal_feedback__WEBPACK_IMPORTED_MODULE_21__.getFeedback; },\n/* harmony export */   \"getGlobalScope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getGlobalScope; },\n/* harmony export */   \"getIsolationScope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope; },\n/* harmony export */   \"getReplay\": function() { return /* reexport safe */ _sentry_internal_replay__WEBPACK_IMPORTED_MODULE_17__.getReplay; },\n/* harmony export */   \"getRootSpan\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getRootSpan; },\n/* harmony export */   \"getSpanDescendants\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getSpanDescendants; },\n/* harmony export */   \"getSpanStatusFromHttpCode\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getSpanStatusFromHttpCode; },\n/* harmony export */   \"globalHandlersIntegration\": function() { return /* reexport safe */ _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_9__.globalHandlersIntegration; },\n/* harmony export */   \"httpClientIntegration\": function() { return /* reexport safe */ _integrations_httpclient_js__WEBPACK_IMPORTED_MODULE_15__.httpClientIntegration; },\n/* harmony export */   \"httpContextIntegration\": function() { return /* reexport safe */ _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_10__.httpContextIntegration; },\n/* harmony export */   \"inboundFiltersIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.inboundFiltersIntegration; },\n/* harmony export */   \"init\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.init; },\n/* harmony export */   \"instrumentOutgoingRequests\": function() { return /* reexport safe */ _tracing_request_js__WEBPACK_IMPORTED_MODULE_23__.instrumentOutgoingRequests; },\n/* harmony export */   \"isInitialized\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.isInitialized; },\n/* harmony export */   \"lastEventId\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.lastEventId; },\n/* harmony export */   \"lazyLoadIntegration\": function() { return /* reexport safe */ _utils_lazyLoadIntegration_js__WEBPACK_IMPORTED_MODULE_13__.lazyLoadIntegration; },\n/* harmony export */   \"linkedErrorsIntegration\": function() { return /* reexport safe */ _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_11__.linkedErrorsIntegration; },\n/* harmony export */   \"makeBrowserOfflineTransport\": function() { return /* reexport safe */ _transports_offline_js__WEBPACK_IMPORTED_MODULE_25__.makeBrowserOfflineTransport; },\n/* harmony export */   \"makeFetchTransport\": function() { return /* reexport safe */ _transports_fetch_js__WEBPACK_IMPORTED_MODULE_3__.makeFetchTransport; },\n/* harmony export */   \"makeMultiplexedTransport\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.makeMultiplexedTransport; },\n/* harmony export */   \"metrics\": function() { return /* reexport safe */ _metrics_js__WEBPACK_IMPORTED_MODULE_22__.metrics; },\n/* harmony export */   \"moduleMetadataIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.moduleMetadataIntegration; },\n/* harmony export */   \"onLoad\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.onLoad; },\n/* harmony export */   \"opera10StackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_4__.opera10StackLineParser; },\n/* harmony export */   \"opera11StackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_4__.opera11StackLineParser; },\n/* harmony export */   \"parameterize\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.parameterize; },\n/* harmony export */   \"registerSpanErrorInstrumentation\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.registerSpanErrorInstrumentation; },\n/* harmony export */   \"replayCanvasIntegration\": function() { return /* reexport safe */ _sentry_internal_replay_canvas__WEBPACK_IMPORTED_MODULE_18__.replayCanvasIntegration; },\n/* harmony export */   \"replayIntegration\": function() { return /* reexport safe */ _sentry_internal_replay__WEBPACK_IMPORTED_MODULE_17__.replayIntegration; },\n/* harmony export */   \"reportingObserverIntegration\": function() { return /* reexport safe */ _integrations_reportingobserver_js__WEBPACK_IMPORTED_MODULE_14__.reportingObserverIntegration; },\n/* harmony export */   \"rewriteFramesIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.rewriteFramesIntegration; },\n/* harmony export */   \"sendFeedback\": function() { return /* reexport safe */ _sentry_internal_feedback__WEBPACK_IMPORTED_MODULE_21__.sendFeedback; },\n/* harmony export */   \"sessionTimingIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.sessionTimingIntegration; },\n/* harmony export */   \"setContext\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setContext; },\n/* harmony export */   \"setCurrentClient\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setCurrentClient; },\n/* harmony export */   \"setExtra\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setExtra; },\n/* harmony export */   \"setExtras\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setExtras; },\n/* harmony export */   \"setHttpStatus\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setHttpStatus; },\n/* harmony export */   \"setMeasurement\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setMeasurement; },\n/* harmony export */   \"setTag\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setTag; },\n/* harmony export */   \"setTags\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setTags; },\n/* harmony export */   \"setUser\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setUser; },\n/* harmony export */   \"showReportDialog\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.showReportDialog; },\n/* harmony export */   \"spanToBaggageHeader\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToBaggageHeader; },\n/* harmony export */   \"spanToJSON\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToJSON; },\n/* harmony export */   \"spanToTraceHeader\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToTraceHeader; },\n/* harmony export */   \"startBrowserTracingNavigationSpan\": function() { return /* reexport safe */ _tracing_browserTracingIntegration_js__WEBPACK_IMPORTED_MODULE_24__.startBrowserTracingNavigationSpan; },\n/* harmony export */   \"startBrowserTracingPageLoadSpan\": function() { return /* reexport safe */ _tracing_browserTracingIntegration_js__WEBPACK_IMPORTED_MODULE_24__.startBrowserTracingPageLoadSpan; },\n/* harmony export */   \"startInactiveSpan\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.startInactiveSpan; },\n/* harmony export */   \"startNewTrace\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.startNewTrace; },\n/* harmony export */   \"startSession\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.startSession; },\n/* harmony export */   \"startSpan\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.startSpan; },\n/* harmony export */   \"startSpanManual\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.startSpanManual; },\n/* harmony export */   \"winjsStackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_4__.winjsStackLineParser; },\n/* harmony export */   \"withActiveSpan\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.withActiveSpan; },\n/* harmony export */   \"withIsolationScope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.withIsolationScope; },\n/* harmony export */   \"withScope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.withScope; },\n/* harmony export */   \"zodErrorsIntegration\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.zodErrorsIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client.js */ \"./node_modules/@sentry/browser/esm/client.js\");\n/* harmony import */ var _transports_fetch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transports/fetch.js */ \"./node_modules/@sentry/browser/esm/transports/fetch.js\");\n/* harmony import */ var _stack_parsers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stack-parsers.js */ \"./node_modules/@sentry/browser/esm/stack-parsers.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n/* harmony import */ var _userfeedback_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./userfeedback.js */ \"./node_modules/@sentry/browser/esm/userfeedback.js\");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sdk.js */ \"./node_modules/@sentry/browser/esm/sdk.js\");\n/* harmony import */ var _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./integrations/breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n/* harmony import */ var _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./integrations/globalhandlers.js */ \"./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\");\n/* harmony import */ var _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./integrations/httpcontext.js */ \"./node_modules/@sentry/browser/esm/integrations/httpcontext.js\");\n/* harmony import */ var _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./integrations/linkederrors.js */ \"./node_modules/@sentry/browser/esm/integrations/linkederrors.js\");\n/* harmony import */ var _integrations_browserapierrors_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./integrations/browserapierrors.js */ \"./node_modules/@sentry/browser/esm/integrations/browserapierrors.js\");\n/* harmony import */ var _utils_lazyLoadIntegration_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/lazyLoadIntegration.js */ \"./node_modules/@sentry/browser/esm/utils/lazyLoadIntegration.js\");\n/* harmony import */ var _integrations_reportingobserver_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./integrations/reportingobserver.js */ \"./node_modules/@sentry/browser/esm/integrations/reportingobserver.js\");\n/* harmony import */ var _integrations_httpclient_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./integrations/httpclient.js */ \"./node_modules/@sentry/browser/esm/integrations/httpclient.js\");\n/* harmony import */ var _integrations_contextlines_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./integrations/contextlines.js */ \"./node_modules/@sentry/browser/esm/integrations/contextlines.js\");\n/* harmony import */ var _sentry_internal_replay__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry-internal/replay */ \"./node_modules/@sentry-internal/replay/esm/index.js\");\n/* harmony import */ var _sentry_internal_replay_canvas__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @sentry-internal/replay-canvas */ \"./node_modules/@sentry-internal/replay-canvas/esm/index.js\");\n/* harmony import */ var _feedbackAsync_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./feedbackAsync.js */ \"./node_modules/@sentry/browser/esm/feedbackAsync.js\");\n/* harmony import */ var _feedbackSync_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./feedbackSync.js */ \"./node_modules/@sentry/browser/esm/feedbackSync.js\");\n/* harmony import */ var _sentry_internal_feedback__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @sentry-internal/feedback */ \"./node_modules/@sentry-internal/feedback/esm/index.js\");\n/* harmony import */ var _metrics_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./metrics.js */ \"./node_modules/@sentry/browser/esm/metrics.js\");\n/* harmony import */ var _tracing_request_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./tracing/request.js */ \"./node_modules/@sentry/browser/esm/tracing/request.js\");\n/* harmony import */ var _tracing_browserTracingIntegration_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./tracing/browserTracingIntegration.js */ \"./node_modules/@sentry/browser/esm/tracing/browserTracingIntegration.js\");\n/* harmony import */ var _transports_offline_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./transports/offline.js */ \"./node_modules/@sentry/browser/esm/transports/offline.js\");\n/* harmony import */ var _profiling_integration_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./profiling/integration.js */ \"./node_modules/@sentry/browser/esm/profiling/integration.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdxQztBQUMxbkM7QUFDTTtBQUNlO0FBQ3lJO0FBQ3ZHO0FBQzlCO0FBQ21EO0FBQzNDO0FBQ007QUFDTjtBQUNFO0FBQ1E7QUFDWjtBQUNjO0FBQ2Q7QUFDSTtBQUNGO0FBQ0U7QUFDWDtBQUM4QztBQUN0QztBQUMvQjtBQUNpRTtBQUMrQztBQUNqRjtBQUNHO0FBQ3pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL2luZGV4LmpzP2U4MjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgU0RLX1ZFUlNJT04sIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1AsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NBTVBMRV9SQVRFLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRSwgU2NvcGUsIGFkZEJyZWFkY3J1bWIsIGFkZEV2ZW50UHJvY2Vzc29yLCBhZGRJbnRlZ3JhdGlvbiwgYWRkVHJhY2luZ0V4dGVuc2lvbnMsIGNhcHR1cmVDb25zb2xlSW50ZWdyYXRpb24sIGNhcHR1cmVFdmVudCwgY2FwdHVyZUV4Y2VwdGlvbiwgY2FwdHVyZUZlZWRiYWNrLCBjYXB0dXJlTWVzc2FnZSwgY2FwdHVyZVNlc3Npb24sIGNsb3NlLCBjb250aW51ZVRyYWNlLCBjcmVhdGVUcmFuc3BvcnQsIGRlYnVnSW50ZWdyYXRpb24sIGRlZHVwZUludGVncmF0aW9uLCBlbmRTZXNzaW9uLCBleHRyYUVycm9yRGF0YUludGVncmF0aW9uLCBmbHVzaCwgZnVuY3Rpb25Ub1N0cmluZ0ludGVncmF0aW9uLCBnZXRBY3RpdmVTcGFuLCBnZXRDbGllbnQsIGdldEN1cnJlbnRIdWIsIGdldEN1cnJlbnRTY29wZSwgZ2V0R2xvYmFsU2NvcGUsIGdldElzb2xhdGlvblNjb3BlLCBnZXRSb290U3BhbiwgZ2V0U3BhbkRlc2NlbmRhbnRzLCBnZXRTcGFuU3RhdHVzRnJvbUh0dHBDb2RlLCBpbmJvdW5kRmlsdGVyc0ludGVncmF0aW9uLCBpc0luaXRpYWxpemVkLCBsYXN0RXZlbnRJZCwgbWFrZU11bHRpcGxleGVkVHJhbnNwb3J0LCBtb2R1bGVNZXRhZGF0YUludGVncmF0aW9uLCBwYXJhbWV0ZXJpemUsIHJlZ2lzdGVyU3BhbkVycm9ySW5zdHJ1bWVudGF0aW9uLCByZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24sIHNlc3Npb25UaW1pbmdJbnRlZ3JhdGlvbiwgc2V0Q29udGV4dCwgc2V0Q3VycmVudENsaWVudCwgc2V0RXh0cmEsIHNldEV4dHJhcywgc2V0SHR0cFN0YXR1cywgc2V0TWVhc3VyZW1lbnQsIHNldFRhZywgc2V0VGFncywgc2V0VXNlciwgc3BhblRvQmFnZ2FnZUhlYWRlciwgc3BhblRvSlNPTiwgc3BhblRvVHJhY2VIZWFkZXIsIHN0YXJ0SW5hY3RpdmVTcGFuLCBzdGFydE5ld1RyYWNlLCBzdGFydFNlc3Npb24sIHN0YXJ0U3Bhbiwgc3RhcnRTcGFuTWFudWFsLCB3aXRoQWN0aXZlU3Bhbiwgd2l0aElzb2xhdGlvblNjb3BlLCB3aXRoU2NvcGUsIHpvZEVycm9yc0ludGVncmF0aW9uIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmV4cG9ydCB7IFdJTkRPVyB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgeyBCcm93c2VyQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQuanMnO1xuZXhwb3J0IHsgbWFrZUZldGNoVHJhbnNwb3J0IH0gZnJvbSAnLi90cmFuc3BvcnRzL2ZldGNoLmpzJztcbmV4cG9ydCB7IGNocm9tZVN0YWNrTGluZVBhcnNlciwgZGVmYXVsdFN0YWNrTGluZVBhcnNlcnMsIGRlZmF1bHRTdGFja1BhcnNlciwgZ2Vja29TdGFja0xpbmVQYXJzZXIsIG9wZXJhMTBTdGFja0xpbmVQYXJzZXIsIG9wZXJhMTFTdGFja0xpbmVQYXJzZXIsIHdpbmpzU3RhY2tMaW5lUGFyc2VyIH0gZnJvbSAnLi9zdGFjay1wYXJzZXJzLmpzJztcbmV4cG9ydCB7IGV2ZW50RnJvbUV4Y2VwdGlvbiwgZXZlbnRGcm9tTWVzc2FnZSwgZXhjZXB0aW9uRnJvbUVycm9yIH0gZnJvbSAnLi9ldmVudGJ1aWxkZXIuanMnO1xuZXhwb3J0IHsgY3JlYXRlVXNlckZlZWRiYWNrRW52ZWxvcGUgfSBmcm9tICcuL3VzZXJmZWVkYmFjay5qcyc7XG5leHBvcnQgeyBjYXB0dXJlVXNlckZlZWRiYWNrLCBmb3JjZUxvYWQsIGdldERlZmF1bHRJbnRlZ3JhdGlvbnMsIGluaXQsIG9uTG9hZCwgc2hvd1JlcG9ydERpYWxvZyB9IGZyb20gJy4vc2RrLmpzJztcbmV4cG9ydCB7IGJyZWFkY3J1bWJzSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9icmVhZGNydW1icy5qcyc7XG5leHBvcnQgeyBnbG9iYWxIYW5kbGVyc0ludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvZ2xvYmFsaGFuZGxlcnMuanMnO1xuZXhwb3J0IHsgaHR0cENvbnRleHRJbnRlZ3JhdGlvbiB9IGZyb20gJy4vaW50ZWdyYXRpb25zL2h0dHBjb250ZXh0LmpzJztcbmV4cG9ydCB7IGxpbmtlZEVycm9yc0ludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzJztcbmV4cG9ydCB7IGJyb3dzZXJBcGlFcnJvcnNJbnRlZ3JhdGlvbiB9IGZyb20gJy4vaW50ZWdyYXRpb25zL2Jyb3dzZXJhcGllcnJvcnMuanMnO1xuZXhwb3J0IHsgbGF6eUxvYWRJbnRlZ3JhdGlvbiB9IGZyb20gJy4vdXRpbHMvbGF6eUxvYWRJbnRlZ3JhdGlvbi5qcyc7XG5leHBvcnQgeyByZXBvcnRpbmdPYnNlcnZlckludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvcmVwb3J0aW5nb2JzZXJ2ZXIuanMnO1xuZXhwb3J0IHsgaHR0cENsaWVudEludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvaHR0cGNsaWVudC5qcyc7XG5leHBvcnQgeyBjb250ZXh0TGluZXNJbnRlZ3JhdGlvbiB9IGZyb20gJy4vaW50ZWdyYXRpb25zL2NvbnRleHRsaW5lcy5qcyc7XG5leHBvcnQgeyBnZXRSZXBsYXksIHJlcGxheUludGVncmF0aW9uIH0gZnJvbSAnQHNlbnRyeS1pbnRlcm5hbC9yZXBsYXknO1xuZXhwb3J0IHsgcmVwbGF5Q2FudmFzSW50ZWdyYXRpb24gfSBmcm9tICdAc2VudHJ5LWludGVybmFsL3JlcGxheS1jYW52YXMnO1xuZXhwb3J0IHsgZmVlZGJhY2tBc3luY0ludGVncmF0aW9uIH0gZnJvbSAnLi9mZWVkYmFja0FzeW5jLmpzJztcbmV4cG9ydCB7IGZlZWRiYWNrU3luY0ludGVncmF0aW9uIGFzIGZlZWRiYWNrSW50ZWdyYXRpb24sIGZlZWRiYWNrU3luY0ludGVncmF0aW9uIH0gZnJvbSAnLi9mZWVkYmFja1N5bmMuanMnO1xuZXhwb3J0IHsgZ2V0RmVlZGJhY2ssIHNlbmRGZWVkYmFjayB9IGZyb20gJ0BzZW50cnktaW50ZXJuYWwvZmVlZGJhY2snO1xuZXhwb3J0IHsgbWV0cmljcyB9IGZyb20gJy4vbWV0cmljcy5qcyc7XG5leHBvcnQgeyBkZWZhdWx0UmVxdWVzdEluc3RydW1lbnRhdGlvbk9wdGlvbnMsIGluc3RydW1lbnRPdXRnb2luZ1JlcXVlc3RzIH0gZnJvbSAnLi90cmFjaW5nL3JlcXVlc3QuanMnO1xuZXhwb3J0IHsgYnJvd3NlclRyYWNpbmdJbnRlZ3JhdGlvbiwgc3RhcnRCcm93c2VyVHJhY2luZ05hdmlnYXRpb25TcGFuLCBzdGFydEJyb3dzZXJUcmFjaW5nUGFnZUxvYWRTcGFuIH0gZnJvbSAnLi90cmFjaW5nL2Jyb3dzZXJUcmFjaW5nSW50ZWdyYXRpb24uanMnO1xuZXhwb3J0IHsgbWFrZUJyb3dzZXJPZmZsaW5lVHJhbnNwb3J0IH0gZnJvbSAnLi90cmFuc3BvcnRzL29mZmxpbmUuanMnO1xuZXhwb3J0IHsgYnJvd3NlclByb2ZpbGluZ0ludGVncmF0aW9uIH0gZnJvbSAnLi9wcm9maWxpbmcvaW50ZWdyYXRpb24uanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"breadcrumbsIntegration\": function() { return /* binding */ breadcrumbsIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry-internal/browser-utils */ \"./node_modules/@sentry-internal/browser-utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (_options.console) {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addConsoleInstrumentationHandler)(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.addClickKeypressInstrumentationHandler)(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.addXhrInstrumentationHandler)(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addFetchInstrumentationHandler)(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.addHistoryInstrumentationHandler)(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) ;\n\nconst breadcrumbsIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_breadcrumbsIntegration);\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client) {\n  return function addSentryBreadcrumb(event) {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() !== client) {\n      return;\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb)(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getEventDescription)(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client,\n  dom,\n) {\n  return function _innerDomBreadcrumb(handlerData) {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.htmlTreeAsString)(element, { keyAttrs, maxStringLength });\n      componentName = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getComponentName)(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb)(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client) {\n  return function _consoleBreadcrumb(handlerData) {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.severityLevelFromString)(handlerData.level),\n      message: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.safeJoin)(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.safeJoin)(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb)(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client) {\n  return function _xhrBreadcrumb(handlerData) {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_1__.SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb)(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client) {\n  return function _fetchBreadcrumb(handlerData) {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data = handlerData.fetchData;\n      const hint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb)(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response ;\n      const data = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb)(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client) {\n  return function _historyBreadcrumb(handlerData) {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() !== client) {\n      return;\n    }\n\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseUrl)(_helpers_js__WEBPACK_IMPORTED_MODULE_4__.WINDOW.location.href);\n    let parsedFrom = from ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseUrl)(from) : undefined;\n    const parsedTo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseUrl)(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb)({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\n\n//# sourceMappingURL=breadcrumbs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/browserapierrors.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/browserapierrors.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"browserApiErrorsIntegration\": function() { return /* binding */ browserApiErrorsIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'BrowserApiErrors';\n\nconst _browserApiErrorsIntegration = ((options = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && \"XMLHttpRequest\" in _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW) {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) ;\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n */\nconst browserApiErrorsIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_browserApiErrorsIntegration);\n\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(originalCallback, {\n      mechanism: {\n        data: { function: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before BrowserApiErrors, get the name of original function\n          const originalFunction = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(proto, 'addEventListener', function (original,)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\n\n//# sourceMappingURL=browserapierrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/browserapierrors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/contextlines.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/contextlines.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applySourceContextToFrame\": function() { return /* binding */ applySourceContextToFrame; },\n/* harmony export */   \"contextLinesIntegration\": function() { return /* binding */ contextLinesIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst DEFAULT_LINES_OF_CONTEXT = 7;\n\nconst INTEGRATION_NAME = 'ContextLines';\n\nconst _contextLinesIntegration = ((options = {}) => {\n  const contextLines = options.frameContextLines != null ? options.frameContextLines : DEFAULT_LINES_OF_CONTEXT;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      return addSourceContext(event, contextLines);\n    },\n  };\n}) ;\n\n/**\n * Collects source context lines around the lines of stackframes pointing to JS embedded in\n * the current page's HTML.\n *\n * This integration DOES NOT work for stack frames pointing to JS files that are loaded by the browser.\n * For frames pointing to files, context lines are added during ingestion and symbolication\n * by attempting to download the JS files to the Sentry backend.\n *\n * Use this integration if you have inline JS code in HTML pages that can't be accessed\n * by our backend (e.g. due to a login-protected page).\n */\nconst contextLinesIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_contextLinesIntegration);\n\n/**\n * Processes an event and adds context lines.\n */\nfunction addSourceContext(event, contextLines) {\n  const doc = WINDOW.document;\n  const htmlFilename = WINDOW.location && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment)(WINDOW.location.href);\n  if (!doc || !htmlFilename) {\n    return event;\n  }\n\n  const exceptions = event.exception && event.exception.values;\n  if (!exceptions || !exceptions.length) {\n    return event;\n  }\n\n  const html = doc.documentElement.innerHTML;\n  if (!html) {\n    return event;\n  }\n\n  const htmlLines = ['<!DOCTYPE html>', '<html>', ...html.split('\\n'), '</html>'];\n\n  exceptions.forEach(exception => {\n    const stacktrace = exception.stacktrace;\n    if (stacktrace && stacktrace.frames) {\n      stacktrace.frames = stacktrace.frames.map(frame =>\n        applySourceContextToFrame(frame, htmlLines, htmlFilename, contextLines),\n      );\n    }\n  });\n\n  return event;\n}\n\n/**\n * Only exported for testing\n */\nfunction applySourceContextToFrame(\n  frame,\n  htmlLines,\n  htmlFilename,\n  linesOfContext,\n) {\n  if (frame.filename !== htmlFilename || !frame.lineno || !htmlLines.length) {\n    return frame;\n  }\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addContextToFrame)(htmlLines, frame, linesOfContext);\n\n  return frame;\n}\n\n\n//# sourceMappingURL=contextlines.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvY29udGV4dGxpbmVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUQ7QUFDdUM7O0FBRXhGLGVBQWUscURBQVU7O0FBRXpCOztBQUVBOztBQUVBLCtDQUErQztBQUMvQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywrREFBaUI7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsdUVBQXdCO0FBQ2xFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxnRUFBaUI7O0FBRW5CO0FBQ0E7O0FBRThEO0FBQzlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL2ludGVncmF0aW9ucy9jb250ZXh0bGluZXMuanM/ZmM2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQsIGFkZENvbnRleHRUb0ZyYW1lLCBHTE9CQUxfT0JKIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IFdJTkRPVyA9IEdMT0JBTF9PQkogO1xuXG5jb25zdCBERUZBVUxUX0xJTkVTX09GX0NPTlRFWFQgPSA3O1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ0NvbnRleHRMaW5lcyc7XG5cbmNvbnN0IF9jb250ZXh0TGluZXNJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IGNvbnRleHRMaW5lcyA9IG9wdGlvbnMuZnJhbWVDb250ZXh0TGluZXMgIT0gbnVsbCA/IG9wdGlvbnMuZnJhbWVDb250ZXh0TGluZXMgOiBERUZBVUxUX0xJTkVTX09GX0NPTlRFWFQ7XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHByb2Nlc3NFdmVudChldmVudCkge1xuICAgICAgcmV0dXJuIGFkZFNvdXJjZUNvbnRleHQoZXZlbnQsIGNvbnRleHRMaW5lcyk7XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuLyoqXG4gKiBDb2xsZWN0cyBzb3VyY2UgY29udGV4dCBsaW5lcyBhcm91bmQgdGhlIGxpbmVzIG9mIHN0YWNrZnJhbWVzIHBvaW50aW5nIHRvIEpTIGVtYmVkZGVkIGluXG4gKiB0aGUgY3VycmVudCBwYWdlJ3MgSFRNTC5cbiAqXG4gKiBUaGlzIGludGVncmF0aW9uIERPRVMgTk9UIHdvcmsgZm9yIHN0YWNrIGZyYW1lcyBwb2ludGluZyB0byBKUyBmaWxlcyB0aGF0IGFyZSBsb2FkZWQgYnkgdGhlIGJyb3dzZXIuXG4gKiBGb3IgZnJhbWVzIHBvaW50aW5nIHRvIGZpbGVzLCBjb250ZXh0IGxpbmVzIGFyZSBhZGRlZCBkdXJpbmcgaW5nZXN0aW9uIGFuZCBzeW1ib2xpY2F0aW9uXG4gKiBieSBhdHRlbXB0aW5nIHRvIGRvd25sb2FkIHRoZSBKUyBmaWxlcyB0byB0aGUgU2VudHJ5IGJhY2tlbmQuXG4gKlxuICogVXNlIHRoaXMgaW50ZWdyYXRpb24gaWYgeW91IGhhdmUgaW5saW5lIEpTIGNvZGUgaW4gSFRNTCBwYWdlcyB0aGF0IGNhbid0IGJlIGFjY2Vzc2VkXG4gKiBieSBvdXIgYmFja2VuZCAoZS5nLiBkdWUgdG8gYSBsb2dpbi1wcm90ZWN0ZWQgcGFnZSkuXG4gKi9cbmNvbnN0IGNvbnRleHRMaW5lc0ludGVncmF0aW9uID0gZGVmaW5lSW50ZWdyYXRpb24oX2NvbnRleHRMaW5lc0ludGVncmF0aW9uKTtcblxuLyoqXG4gKiBQcm9jZXNzZXMgYW4gZXZlbnQgYW5kIGFkZHMgY29udGV4dCBsaW5lcy5cbiAqL1xuZnVuY3Rpb24gYWRkU291cmNlQ29udGV4dChldmVudCwgY29udGV4dExpbmVzKSB7XG4gIGNvbnN0IGRvYyA9IFdJTkRPVy5kb2N1bWVudDtcbiAgY29uc3QgaHRtbEZpbGVuYW1lID0gV0lORE9XLmxvY2F0aW9uICYmIHN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudChXSU5ET1cubG9jYXRpb24uaHJlZik7XG4gIGlmICghZG9jIHx8ICFodG1sRmlsZW5hbWUpIHtcbiAgICByZXR1cm4gZXZlbnQ7XG4gIH1cblxuICBjb25zdCBleGNlcHRpb25zID0gZXZlbnQuZXhjZXB0aW9uICYmIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXM7XG4gIGlmICghZXhjZXB0aW9ucyB8fCAhZXhjZXB0aW9ucy5sZW5ndGgpIHtcbiAgICByZXR1cm4gZXZlbnQ7XG4gIH1cblxuICBjb25zdCBodG1sID0gZG9jLmRvY3VtZW50RWxlbWVudC5pbm5lckhUTUw7XG4gIGlmICghaHRtbCkge1xuICAgIHJldHVybiBldmVudDtcbiAgfVxuXG4gIGNvbnN0IGh0bWxMaW5lcyA9IFsnPCFET0NUWVBFIGh0bWw+JywgJzxodG1sPicsIC4uLmh0bWwuc3BsaXQoJ1xcbicpLCAnPC9odG1sPiddO1xuXG4gIGV4Y2VwdGlvbnMuZm9yRWFjaChleGNlcHRpb24gPT4ge1xuICAgIGNvbnN0IHN0YWNrdHJhY2UgPSBleGNlcHRpb24uc3RhY2t0cmFjZTtcbiAgICBpZiAoc3RhY2t0cmFjZSAmJiBzdGFja3RyYWNlLmZyYW1lcykge1xuICAgICAgc3RhY2t0cmFjZS5mcmFtZXMgPSBzdGFja3RyYWNlLmZyYW1lcy5tYXAoZnJhbWUgPT5cbiAgICAgICAgYXBwbHlTb3VyY2VDb250ZXh0VG9GcmFtZShmcmFtZSwgaHRtbExpbmVzLCBodG1sRmlsZW5hbWUsIGNvbnRleHRMaW5lcyksXG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGV2ZW50O1xufVxuXG4vKipcbiAqIE9ubHkgZXhwb3J0ZWQgZm9yIHRlc3RpbmdcbiAqL1xuZnVuY3Rpb24gYXBwbHlTb3VyY2VDb250ZXh0VG9GcmFtZShcbiAgZnJhbWUsXG4gIGh0bWxMaW5lcyxcbiAgaHRtbEZpbGVuYW1lLFxuICBsaW5lc09mQ29udGV4dCxcbikge1xuICBpZiAoZnJhbWUuZmlsZW5hbWUgIT09IGh0bWxGaWxlbmFtZSB8fCAhZnJhbWUubGluZW5vIHx8ICFodG1sTGluZXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZyYW1lO1xuICB9XG5cbiAgYWRkQ29udGV4dFRvRnJhbWUoaHRtbExpbmVzLCBmcmFtZSwgbGluZXNPZkNvbnRleHQpO1xuXG4gIHJldHVybiBmcmFtZTtcbn1cblxuZXhwb3J0IHsgYXBwbHlTb3VyY2VDb250ZXh0VG9GcmFtZSwgY29udGV4dExpbmVzSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRleHRsaW5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/contextlines.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/globalhandlers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/globalhandlers.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"globalHandlersIntegration\": function() { return /* binding */ globalHandlersIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) ;\n\nconst globalHandlersIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_globalHandlersIntegration);\n\nfunction _installGlobalOnErrorHandler(client) {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addGlobalErrorInstrumentationHandler)(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)() !== client || (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.shouldIgnoreOnError)()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event = _enhanceEventWithInitialFrame(\n      (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__.eventFromUnknownInput)(stackParser, error || msg, undefined, attachStacktrace, false),\n      url,\n      line,\n      column,\n    );\n\n    event.level = 'error';\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureEvent)(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client) {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addGlobalUnhandledRejectionInstrumentationHandler)(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)() !== client || (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.shouldIgnoreOnError)()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e );\n\n    const event = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPrimitive)(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__.eventFromUnknownInput)(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureEvent)(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error) {\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPrimitive)(error)) {\n    return error;\n  }\n\n  // dig the object of the rejection out of known event types\n  try {\n\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in (error )) {\n      return (error ).reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    if ('detail' in (error ) && 'reason' in (error ).detail) {\n      return (error ).detail.reason;\n    }\n  } catch (e2) {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(url) && url.length > 0 ? url : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getLocationHref)();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.UNKNOWN_FUNCTION,\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions() {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n\n\n//# sourceMappingURL=globalhandlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvZ2xvYmFsaGFuZGxlcnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBFO0FBQ2dIO0FBQzFJO0FBQ1c7QUFDUDs7QUFFcEQ7O0FBRUEsaURBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCxrQ0FBa0MsK0RBQWlCOztBQUVuRDtBQUNBLEVBQUUsbUZBQW9DO0FBQ3RDLFlBQVksZ0NBQWdDOztBQUU1QyxRQUFRLHVEQUFTLGlCQUFpQixnRUFBbUI7QUFDckQ7QUFDQTs7QUFFQSxZQUFZLGdDQUFnQzs7QUFFNUM7QUFDQSxNQUFNLHVFQUFxQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxJQUFJLDBEQUFZO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQSxFQUFFLGdHQUFpRDtBQUNuRCxZQUFZLGdDQUFnQzs7QUFFNUMsUUFBUSx1REFBUyxpQkFBaUIsZ0VBQW1CO0FBQ3JEO0FBQ0E7O0FBRUE7O0FBRUEsa0JBQWtCLDBEQUFXO0FBQzdCO0FBQ0EsUUFBUSx1RUFBcUI7O0FBRTdCOztBQUVBLElBQUksMERBQVk7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBLE1BQU0sMERBQVc7QUFDakI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksY0FBYzs7QUFFbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxlQUFlO0FBQ3BGLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUFRLGdDQUFnQyw4REFBZTs7QUFFMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwyREFBZ0I7QUFDaEM7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsRUFBRSx3REFBVyxJQUFJLHFEQUFVLDZCQUE2QixLQUFLO0FBQzdEOztBQUVBO0FBQ0EsaUJBQWlCLHVEQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFcUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vaW50ZWdyYXRpb25zL2dsb2JhbGhhbmRsZXJzLmpzPzZmMTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmaW5lSW50ZWdyYXRpb24sIGdldENsaWVudCwgY2FwdHVyZUV2ZW50IH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGFkZEdsb2JhbEVycm9ySW5zdHJ1bWVudGF0aW9uSGFuZGxlciwgYWRkR2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uSW5zdHJ1bWVudGF0aW9uSGFuZGxlciwgaXNQcmltaXRpdmUsIGlzU3RyaW5nLCBnZXRMb2NhdGlvbkhyZWYsIFVOS05PV05fRlVOQ1RJT04sIGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBldmVudEZyb21Vbmtub3duSW5wdXQgfSBmcm9tICcuLi9ldmVudGJ1aWxkZXIuanMnO1xuaW1wb3J0IHsgc2hvdWxkSWdub3JlT25FcnJvciB9IGZyb20gJy4uL2hlbHBlcnMuanMnO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ0dsb2JhbEhhbmRsZXJzJztcblxuY29uc3QgX2dsb2JhbEhhbmRsZXJzSW50ZWdyYXRpb24gPSAoKG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCBfb3B0aW9ucyA9IHtcbiAgICBvbmVycm9yOiB0cnVlLFxuICAgIG9udW5oYW5kbGVkcmVqZWN0aW9uOiB0cnVlLFxuICAgIC4uLm9wdGlvbnMsXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIEVycm9yLnN0YWNrVHJhY2VMaW1pdCA9IDUwO1xuICAgIH0sXG4gICAgc2V0dXAoY2xpZW50KSB7XG4gICAgICBpZiAoX29wdGlvbnMub25lcnJvcikge1xuICAgICAgICBfaW5zdGFsbEdsb2JhbE9uRXJyb3JIYW5kbGVyKGNsaWVudCk7XG4gICAgICAgIGdsb2JhbEhhbmRsZXJMb2coJ29uZXJyb3InKTtcbiAgICAgIH1cbiAgICAgIGlmIChfb3B0aW9ucy5vbnVuaGFuZGxlZHJlamVjdGlvbikge1xuICAgICAgICBfaW5zdGFsbEdsb2JhbE9uVW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlcihjbGllbnQpO1xuICAgICAgICBnbG9iYWxIYW5kbGVyTG9nKCdvbnVuaGFuZGxlZHJlamVjdGlvbicpO1xuICAgICAgfVxuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IGdsb2JhbEhhbmRsZXJzSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfZ2xvYmFsSGFuZGxlcnNJbnRlZ3JhdGlvbik7XG5cbmZ1bmN0aW9uIF9pbnN0YWxsR2xvYmFsT25FcnJvckhhbmRsZXIoY2xpZW50KSB7XG4gIGFkZEdsb2JhbEVycm9ySW5zdHJ1bWVudGF0aW9uSGFuZGxlcihkYXRhID0+IHtcbiAgICBjb25zdCB7IHN0YWNrUGFyc2VyLCBhdHRhY2hTdGFja3RyYWNlIH0gPSBnZXRPcHRpb25zKCk7XG5cbiAgICBpZiAoZ2V0Q2xpZW50KCkgIT09IGNsaWVudCB8fCBzaG91bGRJZ25vcmVPbkVycm9yKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB7IG1zZywgdXJsLCBsaW5lLCBjb2x1bW4sIGVycm9yIH0gPSBkYXRhO1xuXG4gICAgY29uc3QgZXZlbnQgPSBfZW5oYW5jZUV2ZW50V2l0aEluaXRpYWxGcmFtZShcbiAgICAgIGV2ZW50RnJvbVVua25vd25JbnB1dChzdGFja1BhcnNlciwgZXJyb3IgfHwgbXNnLCB1bmRlZmluZWQsIGF0dGFjaFN0YWNrdHJhY2UsIGZhbHNlKSxcbiAgICAgIHVybCxcbiAgICAgIGxpbmUsXG4gICAgICBjb2x1bW4sXG4gICAgKTtcblxuICAgIGV2ZW50LmxldmVsID0gJ2Vycm9yJztcblxuICAgIGNhcHR1cmVFdmVudChldmVudCwge1xuICAgICAgb3JpZ2luYWxFeGNlcHRpb246IGVycm9yLFxuICAgICAgbWVjaGFuaXNtOiB7XG4gICAgICAgIGhhbmRsZWQ6IGZhbHNlLFxuICAgICAgICB0eXBlOiAnb25lcnJvcicsXG4gICAgICB9LFxuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gX2luc3RhbGxHbG9iYWxPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIoY2xpZW50KSB7XG4gIGFkZEdsb2JhbFVuaGFuZGxlZFJlamVjdGlvbkluc3RydW1lbnRhdGlvbkhhbmRsZXIoZSA9PiB7XG4gICAgY29uc3QgeyBzdGFja1BhcnNlciwgYXR0YWNoU3RhY2t0cmFjZSB9ID0gZ2V0T3B0aW9ucygpO1xuXG4gICAgaWYgKGdldENsaWVudCgpICE9PSBjbGllbnQgfHwgc2hvdWxkSWdub3JlT25FcnJvcigpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZXJyb3IgPSBfZ2V0VW5oYW5kbGVkUmVqZWN0aW9uRXJyb3IoZSApO1xuXG4gICAgY29uc3QgZXZlbnQgPSBpc1ByaW1pdGl2ZShlcnJvcilcbiAgICAgID8gX2V2ZW50RnJvbVJlamVjdGlvbldpdGhQcmltaXRpdmUoZXJyb3IpXG4gICAgICA6IGV2ZW50RnJvbVVua25vd25JbnB1dChzdGFja1BhcnNlciwgZXJyb3IsIHVuZGVmaW5lZCwgYXR0YWNoU3RhY2t0cmFjZSwgdHJ1ZSk7XG5cbiAgICBldmVudC5sZXZlbCA9ICdlcnJvcic7XG5cbiAgICBjYXB0dXJlRXZlbnQoZXZlbnQsIHtcbiAgICAgIG9yaWdpbmFsRXhjZXB0aW9uOiBlcnJvcixcbiAgICAgIG1lY2hhbmlzbToge1xuICAgICAgICBoYW5kbGVkOiBmYWxzZSxcbiAgICAgICAgdHlwZTogJ29udW5oYW5kbGVkcmVqZWN0aW9uJyxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBfZ2V0VW5oYW5kbGVkUmVqZWN0aW9uRXJyb3IoZXJyb3IpIHtcbiAgaWYgKGlzUHJpbWl0aXZlKGVycm9yKSkge1xuICAgIHJldHVybiBlcnJvcjtcbiAgfVxuXG4gIC8vIGRpZyB0aGUgb2JqZWN0IG9mIHRoZSByZWplY3Rpb24gb3V0IG9mIGtub3duIGV2ZW50IHR5cGVzXG4gIHRyeSB7XG5cbiAgICAvLyBQcm9taXNlUmVqZWN0aW9uRXZlbnRzIHN0b3JlIHRoZSBvYmplY3Qgb2YgdGhlIHJlamVjdGlvbiB1bmRlciAncmVhc29uJ1xuICAgIC8vIHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvUHJvbWlzZVJlamVjdGlvbkV2ZW50XG4gICAgaWYgKCdyZWFzb24nIGluIChlcnJvciApKSB7XG4gICAgICByZXR1cm4gKGVycm9yICkucmVhc29uO1xuICAgIH1cblxuICAgIC8vIHNvbWV0aGluZywgc29tZXdoZXJlLCAobGlrZWx5IGEgYnJvd3NlciBleHRlbnNpb24pIGVmZmVjdGl2ZWx5IGNhc3RzIFByb21pc2VSZWplY3Rpb25FdmVudHNcbiAgICAvLyB0byBDdXN0b21FdmVudHMsIG1vdmluZyB0aGUgYHByb21pc2VgIGFuZCBgcmVhc29uYCBhdHRyaWJ1dGVzIG9mIHRoZSBQUkUgaW50b1xuICAgIC8vIHRoZSBDdXN0b21FdmVudCdzIGBkZXRhaWxgIGF0dHJpYnV0ZSwgc2luY2UgdGhleSdyZSBub3QgcGFydCBvZiBDdXN0b21FdmVudCdzIHNwZWNcbiAgICAvLyBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0N1c3RvbUV2ZW50IGFuZFxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzIzODBcbiAgICBpZiAoJ2RldGFpbCcgaW4gKGVycm9yICkgJiYgJ3JlYXNvbicgaW4gKGVycm9yICkuZGV0YWlsKSB7XG4gICAgICByZXR1cm4gKGVycm9yICkuZGV0YWlsLnJlYXNvbjtcbiAgICB9XG4gIH0gY2F0Y2ggKGUyKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG5cbiAgcmV0dXJuIGVycm9yO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBldmVudCBmcm9tIGEgcHJvbWlzZSByZWplY3Rpb24gd2hlcmUgdGhlIGByZWFzb25gIGlzIGEgcHJpbWl0aXZlLlxuICpcbiAqIEBwYXJhbSByZWFzb246IFRoZSBgcmVhc29uYCBwcm9wZXJ0eSBvZiB0aGUgcHJvbWlzZSByZWplY3Rpb25cbiAqIEByZXR1cm5zIEFuIEV2ZW50IG9iamVjdCB3aXRoIGFuIGFwcHJvcHJpYXRlIGBleGNlcHRpb25gIHZhbHVlXG4gKi9cbmZ1bmN0aW9uIF9ldmVudEZyb21SZWplY3Rpb25XaXRoUHJpbWl0aXZlKHJlYXNvbikge1xuICByZXR1cm4ge1xuICAgIGV4Y2VwdGlvbjoge1xuICAgICAgdmFsdWVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICB0eXBlOiAnVW5oYW5kbGVkUmVqZWN0aW9uJyxcbiAgICAgICAgICAvLyBTdHJpbmcoKSBpcyBuZWVkZWQgYmVjYXVzZSB0aGUgUHJpbWl0aXZlIHR5cGUgaW5jbHVkZXMgc3ltYm9scyAod2hpY2ggY2FuJ3QgYmUgYXV0b21hdGljYWxseSBzdHJpbmdpZmllZClcbiAgICAgICAgICB2YWx1ZTogYE5vbi1FcnJvciBwcm9taXNlIHJlamVjdGlvbiBjYXB0dXJlZCB3aXRoIHZhbHVlOiAke1N0cmluZyhyZWFzb24pfWAsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gIH07XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBfZW5oYW5jZUV2ZW50V2l0aEluaXRpYWxGcmFtZShldmVudCwgdXJsLCBsaW5lLCBjb2x1bW4pIHtcbiAgLy8gZXZlbnQuZXhjZXB0aW9uXG4gIGNvbnN0IGUgPSAoZXZlbnQuZXhjZXB0aW9uID0gZXZlbnQuZXhjZXB0aW9uIHx8IHt9KTtcbiAgLy8gZXZlbnQuZXhjZXB0aW9uLnZhbHVlc1xuICBjb25zdCBldiA9IChlLnZhbHVlcyA9IGUudmFsdWVzIHx8IFtdKTtcbiAgLy8gZXZlbnQuZXhjZXB0aW9uLnZhbHVlc1swXVxuICBjb25zdCBldjAgPSAoZXZbMF0gPSBldlswXSB8fCB7fSk7XG4gIC8vIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXNbMF0uc3RhY2t0cmFjZVxuICBjb25zdCBldjBzID0gKGV2MC5zdGFja3RyYWNlID0gZXYwLnN0YWNrdHJhY2UgfHwge30pO1xuICAvLyBldmVudC5leGNlcHRpb24udmFsdWVzWzBdLnN0YWNrdHJhY2UuZnJhbWVzXG4gIGNvbnN0IGV2MHNmID0gKGV2MHMuZnJhbWVzID0gZXYwcy5mcmFtZXMgfHwgW10pO1xuXG4gIGNvbnN0IGNvbG5vID0gaXNOYU4ocGFyc2VJbnQoY29sdW1uLCAxMCkpID8gdW5kZWZpbmVkIDogY29sdW1uO1xuICBjb25zdCBsaW5lbm8gPSBpc05hTihwYXJzZUludChsaW5lLCAxMCkpID8gdW5kZWZpbmVkIDogbGluZTtcbiAgY29uc3QgZmlsZW5hbWUgPSBpc1N0cmluZyh1cmwpICYmIHVybC5sZW5ndGggPiAwID8gdXJsIDogZ2V0TG9jYXRpb25IcmVmKCk7XG5cbiAgLy8gZXZlbnQuZXhjZXB0aW9uLnZhbHVlc1swXS5zdGFja3RyYWNlLmZyYW1lc1xuICBpZiAoZXYwc2YubGVuZ3RoID09PSAwKSB7XG4gICAgZXYwc2YucHVzaCh7XG4gICAgICBjb2xubyxcbiAgICAgIGZpbGVuYW1lLFxuICAgICAgZnVuY3Rpb246IFVOS05PV05fRlVOQ1RJT04sXG4gICAgICBpbl9hcHA6IHRydWUsXG4gICAgICBsaW5lbm8sXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZXZlbnQ7XG59XG5cbmZ1bmN0aW9uIGdsb2JhbEhhbmRsZXJMb2codHlwZSkge1xuICBERUJVR19CVUlMRCAmJiBsb2dnZXIubG9nKGBHbG9iYWwgSGFuZGxlciBhdHRhY2hlZDogJHt0eXBlfWApO1xufVxuXG5mdW5jdGlvbiBnZXRPcHRpb25zKCkge1xuICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoKTtcbiAgY29uc3Qgb3B0aW9ucyA9IChjbGllbnQgJiYgY2xpZW50LmdldE9wdGlvbnMoKSkgfHwge1xuICAgIHN0YWNrUGFyc2VyOiAoKSA9PiBbXSxcbiAgICBhdHRhY2hTdGFja3RyYWNlOiBmYWxzZSxcbiAgfTtcbiAgcmV0dXJuIG9wdGlvbnM7XG59XG5cbmV4cG9ydCB7IGdsb2JhbEhhbmRsZXJzSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbGhhbmRsZXJzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/httpclient.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/httpclient.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"httpClientIntegration\": function() { return /* binding */ httpClientIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry-internal/browser-utils */ \"./node_modules/@sentry-internal/browser-utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n\n\n\n\n\nconst INTEGRATION_NAME = 'HttpClient';\n\nconst _httpClientIntegration = ((options = {}) => {\n  const _options = {\n    failedRequestStatusCodes: [[500, 599]],\n    failedRequestTargets: [/.*/],\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      _wrapFetch(client, _options);\n      _wrapXHR(client, _options);\n    },\n  };\n}) ;\n\n/**\n * Create events for failed client side HTTP requests.\n */\nconst httpClientIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_httpClientIntegration);\n\n/**\n * Interceptor function for fetch requests\n *\n * @param requestInfo The Fetch API request info\n * @param response The Fetch API response\n * @param requestInit The request init object\n */\nfunction _fetchResponseHandler(\n  options,\n  requestInfo,\n  response,\n  requestInit,\n) {\n  if (_shouldCaptureResponse(options, response.status, response.url)) {\n    const request = _getRequest(requestInfo, requestInit);\n\n    let requestHeaders, responseHeaders, requestCookies, responseCookies;\n\n    if (_shouldSendDefaultPii()) {\n      [{ headers: requestHeaders, cookies: requestCookies }, { headers: responseHeaders, cookies: responseCookies }] = [\n        { cookieHeader: 'Cookie', obj: request },\n        { cookieHeader: 'Set-Cookie', obj: response },\n      ].map(({ cookieHeader, obj }) => {\n        const headers = _extractFetchHeaders(obj.headers);\n        let cookies;\n\n        try {\n          const cookieString = headers[cookieHeader] || headers[cookieHeader.toLowerCase()] || undefined;\n\n          if (cookieString) {\n            cookies = _parseCookieString(cookieString);\n          }\n        } catch (e) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Could not extract cookies from header ${cookieHeader}`);\n        }\n\n        return {\n          headers,\n          cookies,\n        };\n      });\n    }\n\n    const event = _createEvent({\n      url: request.url,\n      method: request.method,\n      status: response.status,\n      requestHeaders,\n      responseHeaders,\n      requestCookies,\n      responseCookies,\n    });\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureEvent)(event);\n  }\n}\n\n/**\n * Interceptor function for XHR requests\n *\n * @param xhr The XHR request\n * @param method The HTTP method\n * @param headers The HTTP headers\n */\nfunction _xhrResponseHandler(\n  options,\n  xhr,\n  method,\n  headers,\n) {\n  if (_shouldCaptureResponse(options, xhr.status, xhr.responseURL)) {\n    let requestHeaders, responseCookies, responseHeaders;\n\n    if (_shouldSendDefaultPii()) {\n      try {\n        const cookieString = xhr.getResponseHeader('Set-Cookie') || xhr.getResponseHeader('set-cookie') || undefined;\n\n        if (cookieString) {\n          responseCookies = _parseCookieString(cookieString);\n        }\n      } catch (e) {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Could not extract cookies from response headers');\n      }\n\n      try {\n        responseHeaders = _getXHRResponseHeaders(xhr);\n      } catch (e) {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Could not extract headers from response');\n      }\n\n      requestHeaders = headers;\n    }\n\n    const event = _createEvent({\n      url: xhr.responseURL,\n      method,\n      status: xhr.status,\n      requestHeaders,\n      // Can't access request cookies from XHR\n      responseHeaders,\n      responseCookies,\n    });\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureEvent)(event);\n  }\n}\n\n/**\n * Extracts response size from `Content-Length` header when possible\n *\n * @param headers\n * @returns The response size in bytes or undefined\n */\nfunction _getResponseSizeFromHeaders(headers) {\n  if (headers) {\n    const contentLength = headers['Content-Length'] || headers['content-length'];\n\n    if (contentLength) {\n      return parseInt(contentLength, 10);\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates an object containing cookies from the given cookie string\n *\n * @param cookieString The cookie string to parse\n * @returns The parsed cookies\n */\nfunction _parseCookieString(cookieString) {\n  return cookieString.split('; ').reduce((acc, cookie) => {\n    const [key, value] = cookie.split('=');\n    acc[key] = value;\n    return acc;\n  }, {});\n}\n\n/**\n * Extracts the headers as an object from the given Fetch API request or response object\n *\n * @param headers The headers to extract\n * @returns The extracted headers as an object\n */\nfunction _extractFetchHeaders(headers) {\n  const result = {};\n\n  headers.forEach((value, key) => {\n    result[key] = value;\n  });\n\n  return result;\n}\n\n/**\n * Extracts the response headers as an object from the given XHR object\n *\n * @param xhr The XHR object to extract the response headers from\n * @returns The response headers as an object\n */\nfunction _getXHRResponseHeaders(xhr) {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc, line) => {\n    const [key, value] = line.split(': ');\n    acc[key] = value;\n    return acc;\n  }, {});\n}\n\n/**\n * Checks if the given target url is in the given list of targets\n *\n * @param target The target url to check\n * @returns true if the target url is in the given list of targets, false otherwise\n */\nfunction _isInGivenRequestTargets(\n  failedRequestTargets,\n  target,\n) {\n  return failedRequestTargets.some((givenRequestTarget) => {\n    if (typeof givenRequestTarget === 'string') {\n      return target.includes(givenRequestTarget);\n    }\n\n    return givenRequestTarget.test(target);\n  });\n}\n\n/**\n * Checks if the given status code is in the given range\n *\n * @param status The status code to check\n * @returns true if the status code is in the given range, false otherwise\n */\nfunction _isInGivenStatusRanges(\n  failedRequestStatusCodes,\n  status,\n) {\n  return failedRequestStatusCodes.some((range) => {\n    if (typeof range === 'number') {\n      return range === status;\n    }\n\n    return status >= range[0] && status <= range[1];\n  });\n}\n\n/**\n * Wraps `fetch` function to capture request and response data\n */\nfunction _wrapFetch(client, options) {\n  if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.supportsNativeFetch)()) {\n    return;\n  }\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.addFetchInstrumentationHandler)(handlerData => {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)() !== client) {\n      return;\n    }\n\n    const { response, args } = handlerData;\n    const [requestInfo, requestInit] = args ;\n\n    if (!response) {\n      return;\n    }\n\n    _fetchResponseHandler(options, requestInfo, response , requestInit);\n  });\n}\n\n/**\n * Wraps XMLHttpRequest to capture request and response data\n */\nfunction _wrapXHR(client, options) {\n  if (!(\"XMLHttpRequest\" in _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.GLOBAL_OBJ)) {\n    return;\n  }\n\n  (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_3__.addXhrInstrumentationHandler)(handlerData => {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)() !== client) {\n      return;\n    }\n\n    const xhr = handlerData.xhr ;\n\n    const sentryXhrData = xhr[_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_3__.SENTRY_XHR_DATA_KEY];\n\n    if (!sentryXhrData) {\n      return;\n    }\n\n    const { method, request_headers: headers } = sentryXhrData;\n\n    try {\n      _xhrResponseHandler(options, xhr, method, headers);\n    } catch (e) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Error while extracting response event form XHR response', e);\n    }\n  });\n}\n\n/**\n * Checks whether to capture given response as an event\n *\n * @param status response status code\n * @param url response url\n */\nfunction _shouldCaptureResponse(options, status, url) {\n  return (\n    _isInGivenStatusRanges(options.failedRequestStatusCodes, status) &&\n    _isInGivenRequestTargets(options.failedRequestTargets, url) &&\n    !(0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.isSentryRequestUrl)(url, (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)())\n  );\n}\n\n/**\n * Creates a synthetic Sentry event from given response data\n *\n * @param data response data\n * @returns event\n */\nfunction _createEvent(data\n\n) {\n  const message = `HTTP Client Error with status code: ${data.status}`;\n\n  const event = {\n    message,\n    exception: {\n      values: [\n        {\n          type: 'Error',\n          value: message,\n        },\n      ],\n    },\n    request: {\n      url: data.url,\n      method: data.method,\n      headers: data.requestHeaders,\n      cookies: data.requestCookies,\n    },\n    contexts: {\n      response: {\n        status_code: data.status,\n        headers: data.responseHeaders,\n        cookies: data.responseCookies,\n        body_size: _getResponseSizeFromHeaders(data.responseHeaders),\n      },\n    },\n  };\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.addExceptionMechanism)(event, {\n    type: 'http.client',\n    handled: false,\n  });\n\n  return event;\n}\n\nfunction _getRequest(requestInfo, requestInit) {\n  if (!requestInit && requestInfo instanceof Request) {\n    return requestInfo;\n  }\n\n  // If both are set, we try to construct a new Request with the given arguments\n  // However, if e.g. the original request has a `body`, this will throw an error because it was already accessed\n  // In this case, as a fallback, we just use the original request - using both is rather an edge case\n  if (requestInfo instanceof Request && requestInfo.bodyUsed) {\n    return requestInfo;\n  }\n\n  return new Request(requestInfo, requestInit);\n}\n\nfunction _shouldSendDefaultPii() {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  return client ? Boolean(client.getOptions().sendDefaultPii) : false;\n}\n\n\n//# sourceMappingURL=httpclient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/httpclient.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/httpcontext.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/httpcontext.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"httpContextIntegration\": function() { return /* binding */ httpContextIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n/**\n * Collects information about HTTP request headers and\n * attaches them to the event.\n */\nconst httpContextIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(() => {\n  return {\n    name: 'HttpContext',\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.navigator && !_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.location && !_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.location && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.location.href);\n      const { referrer } = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document || {};\n      const { userAgent } = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n});\n\n\n//# sourceMappingURL=httpcontext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvaHR0cGNvbnRleHQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBQ1Y7O0FBRXZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLCtEQUFpQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcseURBQWdCLEtBQUssd0RBQWUsS0FBSyx3REFBZTtBQUNuRTtBQUNBOztBQUVBO0FBQ0EsMkRBQTJELHdEQUFlLElBQUksNkRBQW9CO0FBQ2xHLGNBQWMsV0FBVyxFQUFFLHdEQUFlO0FBQzFDLGNBQWMsWUFBWSxFQUFFLHlEQUFnQjs7QUFFNUM7QUFDQTtBQUNBLDBCQUEwQixtQkFBbUI7QUFDN0MsMkJBQTJCLHlCQUF5QjtBQUNwRDtBQUNBLHdCQUF3QiwrQkFBK0IsS0FBSzs7QUFFNUQ7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVpQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvaHR0cGNvbnRleHQuanM/MzkwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi9oZWxwZXJzLmpzJztcblxuLyoqXG4gKiBDb2xsZWN0cyBpbmZvcm1hdGlvbiBhYm91dCBIVFRQIHJlcXVlc3QgaGVhZGVycyBhbmRcbiAqIGF0dGFjaGVzIHRoZW0gdG8gdGhlIGV2ZW50LlxuICovXG5jb25zdCBodHRwQ29udGV4dEludGVncmF0aW9uID0gZGVmaW5lSW50ZWdyYXRpb24oKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIG5hbWU6ICdIdHRwQ29udGV4dCcsXG4gICAgcHJlcHJvY2Vzc0V2ZW50KGV2ZW50KSB7XG4gICAgICAvLyBpZiBub25lIG9mIHRoZSBpbmZvcm1hdGlvbiB3ZSB3YW50IGV4aXN0cywgZG9uJ3QgYm90aGVyXG4gICAgICBpZiAoIVdJTkRPVy5uYXZpZ2F0b3IgJiYgIVdJTkRPVy5sb2NhdGlvbiAmJiAhV0lORE9XLmRvY3VtZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gZ3JhYiBhcyBtdWNoIGluZm8gYXMgZXhpc3RzIGFuZCBhZGQgaXQgdG8gdGhlIGV2ZW50XG4gICAgICBjb25zdCB1cmwgPSAoZXZlbnQucmVxdWVzdCAmJiBldmVudC5yZXF1ZXN0LnVybCkgfHwgKFdJTkRPVy5sb2NhdGlvbiAmJiBXSU5ET1cubG9jYXRpb24uaHJlZik7XG4gICAgICBjb25zdCB7IHJlZmVycmVyIH0gPSBXSU5ET1cuZG9jdW1lbnQgfHwge307XG4gICAgICBjb25zdCB7IHVzZXJBZ2VudCB9ID0gV0lORE9XLm5hdmlnYXRvciB8fCB7fTtcblxuICAgICAgY29uc3QgaGVhZGVycyA9IHtcbiAgICAgICAgLi4uKGV2ZW50LnJlcXVlc3QgJiYgZXZlbnQucmVxdWVzdC5oZWFkZXJzKSxcbiAgICAgICAgLi4uKHJlZmVycmVyICYmIHsgUmVmZXJlcjogcmVmZXJyZXIgfSksXG4gICAgICAgIC4uLih1c2VyQWdlbnQgJiYgeyAnVXNlci1BZ2VudCc6IHVzZXJBZ2VudCB9KSxcbiAgICAgIH07XG4gICAgICBjb25zdCByZXF1ZXN0ID0geyAuLi5ldmVudC5yZXF1ZXN0LCAuLi4odXJsICYmIHsgdXJsIH0pLCBoZWFkZXJzIH07XG5cbiAgICAgIGV2ZW50LnJlcXVlc3QgPSByZXF1ZXN0O1xuICAgIH0sXG4gIH07XG59KTtcblxuZXhwb3J0IHsgaHR0cENvbnRleHRJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cGNvbnRleHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/httpcontext.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/linkederrors.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/linkederrors.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"linkedErrorsIntegration\": function() { return /* binding */ linkedErrorsIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n\n\n\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.applyAggregateErrorsToEvent)(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        _eventbuilder_js__WEBPACK_IMPORTED_MODULE_1__.exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\n/**\n * Aggregrate linked errors in an event.\n */\nconst linkedErrorsIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_linkedErrorsIntegration);\n\n\n//# sourceMappingURL=linkederrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUQ7QUFDVztBQUNKOztBQUV4RDtBQUNBOztBQUVBOztBQUVBLCtDQUErQztBQUMvQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0sMEVBQTJCO0FBQ2pDO0FBQ0EsUUFBUSxnRUFBa0I7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywrREFBaUI7O0FBRWQ7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vaW50ZWdyYXRpb25zL2xpbmtlZGVycm9ycy5qcz9iNzk1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmluZUludGVncmF0aW9uIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGFwcGx5QWdncmVnYXRlRXJyb3JzVG9FdmVudCB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZXhjZXB0aW9uRnJvbUVycm9yIH0gZnJvbSAnLi4vZXZlbnRidWlsZGVyLmpzJztcblxuY29uc3QgREVGQVVMVF9LRVkgPSAnY2F1c2UnO1xuY29uc3QgREVGQVVMVF9MSU1JVCA9IDU7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnTGlua2VkRXJyb3JzJztcblxuY29uc3QgX2xpbmtlZEVycm9yc0ludGVncmF0aW9uID0gKChvcHRpb25zID0ge30pID0+IHtcbiAgY29uc3QgbGltaXQgPSBvcHRpb25zLmxpbWl0IHx8IERFRkFVTFRfTElNSVQ7XG4gIGNvbnN0IGtleSA9IG9wdGlvbnMua2V5IHx8IERFRkFVTFRfS0VZO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBwcmVwcm9jZXNzRXZlbnQoZXZlbnQsIGhpbnQsIGNsaWVudCkge1xuICAgICAgY29uc3Qgb3B0aW9ucyA9IGNsaWVudC5nZXRPcHRpb25zKCk7XG5cbiAgICAgIGFwcGx5QWdncmVnYXRlRXJyb3JzVG9FdmVudChcbiAgICAgICAgLy8gVGhpcyBkaWZmZXJzIGZyb20gdGhlIExpbmtlZEVycm9ycyBpbnRlZ3JhdGlvbiBpbiBjb3JlIGJ5IHVzaW5nIGEgZGlmZmVyZW50IGV4Y2VwdGlvbkZyb21FcnJvciBmdW5jdGlvblxuICAgICAgICBleGNlcHRpb25Gcm9tRXJyb3IsXG4gICAgICAgIG9wdGlvbnMuc3RhY2tQYXJzZXIsXG4gICAgICAgIG9wdGlvbnMubWF4VmFsdWVMZW5ndGgsXG4gICAgICAgIGtleSxcbiAgICAgICAgbGltaXQsXG4gICAgICAgIGV2ZW50LFxuICAgICAgICBoaW50LFxuICAgICAgKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFnZ3JlZ3JhdGUgbGlua2VkIGVycm9ycyBpbiBhbiBldmVudC5cbiAqL1xuY29uc3QgbGlua2VkRXJyb3JzSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfbGlua2VkRXJyb3JzSW50ZWdyYXRpb24pO1xuXG5leHBvcnQgeyBsaW5rZWRFcnJvcnNJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlua2VkZXJyb3JzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/reportingobserver.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/reportingobserver.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reportingObserverIntegration\": function() { return /* binding */ reportingObserverIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst INTEGRATION_NAME = 'ReportingObserver';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _reportingObserverIntegration = ((options = {}) => {\n  const types = options.types || ['crash', 'deprecation', 'intervention'];\n\n  /** Handler for the reporting observer. */\n  function handler(reports) {\n    if (!SETUP_CLIENTS.has((0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)() )) {\n      return;\n    }\n\n    for (const report of reports) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withScope)(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inheirted\n          const plainBody\n\n = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === 'crash') {\n            const body = report.body ;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body ;\n            details = body.message || details;\n          }\n        }\n\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureMessage)(`${label}: ${details}`);\n      });\n    }\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.supportsReportingObserver)()) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      const observer = new (WINDOW ).ReportingObserver(handler, {\n        buffered: true,\n        types,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      observer.observe();\n    },\n\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Reporting API integration - https://w3c.github.io/reporting/\n */\nconst reportingObserverIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_reportingObserverIntegration);\n\n\n//# sourceMappingURL=reportingobserver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvcmVwb3J0aW5nb2JzZXJ2ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVGO0FBQ2pCOztBQUV0RSxlQUFlLHFEQUFVOztBQUV6Qjs7QUFFQTs7QUFFQSxvREFBb0Q7QUFDcEQ7O0FBRUE7QUFDQTtBQUNBLDJCQUEyQix1REFBUztBQUNwQztBQUNBOztBQUVBO0FBQ0EsTUFBTSx1REFBUztBQUNmOztBQUVBLDRDQUE0QyxZQUFZO0FBQ3hEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLDREQUFjLElBQUksTUFBTSxJQUFJLFFBQVE7QUFDNUMsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3RUFBeUI7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLCtEQUFpQjs7QUFFZDtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvcmVwb3J0aW5nb2JzZXJ2ZXIuanM/OTU5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiwgZ2V0Q2xpZW50LCB3aXRoU2NvcGUsIGNhcHR1cmVNZXNzYWdlIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IHN1cHBvcnRzUmVwb3J0aW5nT2JzZXJ2ZXIsIEdMT0JBTF9PQkogfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuY29uc3QgV0lORE9XID0gR0xPQkFMX09CSiA7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnUmVwb3J0aW5nT2JzZXJ2ZXInO1xuXG5jb25zdCBTRVRVUF9DTElFTlRTID0gbmV3IFdlYWtNYXAoKTtcblxuY29uc3QgX3JlcG9ydGluZ09ic2VydmVySW50ZWdyYXRpb24gPSAoKG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCB0eXBlcyA9IG9wdGlvbnMudHlwZXMgfHwgWydjcmFzaCcsICdkZXByZWNhdGlvbicsICdpbnRlcnZlbnRpb24nXTtcblxuICAvKiogSGFuZGxlciBmb3IgdGhlIHJlcG9ydGluZyBvYnNlcnZlci4gKi9cbiAgZnVuY3Rpb24gaGFuZGxlcihyZXBvcnRzKSB7XG4gICAgaWYgKCFTRVRVUF9DTElFTlRTLmhhcyhnZXRDbGllbnQoKSApKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yIChjb25zdCByZXBvcnQgb2YgcmVwb3J0cykge1xuICAgICAgd2l0aFNjb3BlKHNjb3BlID0+IHtcbiAgICAgICAgc2NvcGUuc2V0RXh0cmEoJ3VybCcsIHJlcG9ydC51cmwpO1xuXG4gICAgICAgIGNvbnN0IGxhYmVsID0gYFJlcG9ydGluZ09ic2VydmVyIFske3JlcG9ydC50eXBlfV1gO1xuICAgICAgICBsZXQgZGV0YWlscyA9ICdObyBkZXRhaWxzIGF2YWlsYWJsZSc7XG5cbiAgICAgICAgaWYgKHJlcG9ydC5ib2R5KSB7XG4gICAgICAgICAgLy8gT2JqZWN0LmtleXMgZG9lc24ndCB3b3JrIG9uIFJlcG9ydEJvZHksIGFzIGFsbCBwcm9wZXJ0aWVzIGFyZSBpbmhlaXJ0ZWRcbiAgICAgICAgICBjb25zdCBwbGFpbkJvZHlcblxuID0ge307XG5cbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ3VhcmQtZm9yLWluXG4gICAgICAgICAgZm9yIChjb25zdCBwcm9wIGluIHJlcG9ydC5ib2R5KSB7XG4gICAgICAgICAgICBwbGFpbkJvZHlbcHJvcF0gPSByZXBvcnQuYm9keVtwcm9wXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzY29wZS5zZXRFeHRyYSgnYm9keScsIHBsYWluQm9keSk7XG5cbiAgICAgICAgICBpZiAocmVwb3J0LnR5cGUgPT09ICdjcmFzaCcpIHtcbiAgICAgICAgICAgIGNvbnN0IGJvZHkgPSByZXBvcnQuYm9keSA7XG4gICAgICAgICAgICAvLyBBIGZhbmN5IHdheSB0byBjcmVhdGUgYSBtZXNzYWdlIG91dCBvZiBjcmFzaElkIE9SIHJlYXNvbiBPUiBib3RoIE9SIGZhbGxiYWNrXG4gICAgICAgICAgICBkZXRhaWxzID0gW2JvZHkuY3Jhc2hJZCB8fCAnJywgYm9keS5yZWFzb24gfHwgJyddLmpvaW4oJyAnKS50cmltKCkgfHwgZGV0YWlscztcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgYm9keSA9IHJlcG9ydC5ib2R5IDtcbiAgICAgICAgICAgIGRldGFpbHMgPSBib2R5Lm1lc3NhZ2UgfHwgZGV0YWlscztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjYXB0dXJlTWVzc2FnZShgJHtsYWJlbH06ICR7ZGV0YWlsc31gKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBpZiAoIXN1cHBvcnRzUmVwb3J0aW5nT2JzZXJ2ZXIoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IChXSU5ET1cgKS5SZXBvcnRpbmdPYnNlcnZlcihoYW5kbGVyLCB7XG4gICAgICAgIGJ1ZmZlcmVkOiB0cnVlLFxuICAgICAgICB0eXBlcyxcbiAgICAgIH0pO1xuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gICAgICBvYnNlcnZlci5vYnNlcnZlKCk7XG4gICAgfSxcblxuICAgIHNldHVwKGNsaWVudCkge1xuICAgICAgU0VUVVBfQ0xJRU5UUy5zZXQoY2xpZW50LCB0cnVlKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIFJlcG9ydGluZyBBUEkgaW50ZWdyYXRpb24gLSBodHRwczovL3czYy5naXRodWIuaW8vcmVwb3J0aW5nL1xuICovXG5jb25zdCByZXBvcnRpbmdPYnNlcnZlckludGVncmF0aW9uID0gZGVmaW5lSW50ZWdyYXRpb24oX3JlcG9ydGluZ09ic2VydmVySW50ZWdyYXRpb24pO1xuXG5leHBvcnQgeyByZXBvcnRpbmdPYnNlcnZlckludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXBvcnRpbmdvYnNlcnZlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/reportingobserver.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/metrics.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/metrics.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"metrics\": function() { return /* binding */ metrics; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n\n\n/**\n * Adds a value to a counter metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction increment(name, value = 1, data) {\n  _sentry_core__WEBPACK_IMPORTED_MODULE_0__.metrics.increment(_sentry_core__WEBPACK_IMPORTED_MODULE_0__.BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction distribution(name, value, data) {\n  _sentry_core__WEBPACK_IMPORTED_MODULE_0__.metrics.distribution(_sentry_core__WEBPACK_IMPORTED_MODULE_0__.BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction set(name, value, data) {\n  _sentry_core__WEBPACK_IMPORTED_MODULE_0__.metrics.set(_sentry_core__WEBPACK_IMPORTED_MODULE_0__.BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction gauge(name, value, data) {\n  _sentry_core__WEBPACK_IMPORTED_MODULE_0__.metrics.gauge(_sentry_core__WEBPACK_IMPORTED_MODULE_0__.BrowserMetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a timing metric.\n * The metric is added as a distribution metric.\n *\n * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\n\nfunction timing(\n  name,\n  value,\n  unit = 'second',\n  data,\n) {\n  return _sentry_core__WEBPACK_IMPORTED_MODULE_0__.metrics.timing(_sentry_core__WEBPACK_IMPORTED_MODULE_0__.BrowserMetricsAggregator, name, value, unit, data);\n}\n\nconst metrics = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  timing,\n};\n\n\n//# sourceMappingURL=metrics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9tZXRyaWNzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThFOztBQUU5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDJEQUFtQixDQUFDLGtFQUF3QjtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDhEQUFzQixDQUFDLGtFQUF3QjtBQUNqRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHFEQUFhLENBQUMsa0VBQXdCO0FBQ3hDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsdURBQWUsQ0FBQyxrRUFBd0I7QUFDMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsd0RBQWdCLENBQUMsa0VBQXdCO0FBQ2xEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9tZXRyaWNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWV0cmljcyBhcyBtZXRyaWNzJDEsIEJyb3dzZXJNZXRyaWNzQWdncmVnYXRvciB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5cbi8qKlxuICogQWRkcyBhIHZhbHVlIHRvIGEgY291bnRlciBtZXRyaWNcbiAqXG4gKiBAZXhwZXJpbWVudGFsIFRoaXMgQVBJIGlzIGV4cGVyaW1lbnRhbCBhbmQgbWlnaHQgaGF2ZSBicmVha2luZyBjaGFuZ2VzIGluIHRoZSBmdXR1cmUuXG4gKi9cbmZ1bmN0aW9uIGluY3JlbWVudChuYW1lLCB2YWx1ZSA9IDEsIGRhdGEpIHtcbiAgbWV0cmljcyQxLmluY3JlbWVudChCcm93c2VyTWV0cmljc0FnZ3JlZ2F0b3IsIG5hbWUsIHZhbHVlLCBkYXRhKTtcbn1cblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYSBkaXN0cmlidXRpb24gbWV0cmljXG4gKlxuICogQGV4cGVyaW1lbnRhbCBUaGlzIEFQSSBpcyBleHBlcmltZW50YWwgYW5kIG1pZ2h0IGhhdmUgYnJlYWtpbmcgY2hhbmdlcyBpbiB0aGUgZnV0dXJlLlxuICovXG5mdW5jdGlvbiBkaXN0cmlidXRpb24obmFtZSwgdmFsdWUsIGRhdGEpIHtcbiAgbWV0cmljcyQxLmRpc3RyaWJ1dGlvbihCcm93c2VyTWV0cmljc0FnZ3JlZ2F0b3IsIG5hbWUsIHZhbHVlLCBkYXRhKTtcbn1cblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYSBzZXQgbWV0cmljLiBWYWx1ZSBtdXN0IGJlIGEgc3RyaW5nIG9yIGludGVnZXIuXG4gKlxuICogQGV4cGVyaW1lbnRhbCBUaGlzIEFQSSBpcyBleHBlcmltZW50YWwgYW5kIG1pZ2h0IGhhdmUgYnJlYWtpbmcgY2hhbmdlcyBpbiB0aGUgZnV0dXJlLlxuICovXG5mdW5jdGlvbiBzZXQobmFtZSwgdmFsdWUsIGRhdGEpIHtcbiAgbWV0cmljcyQxLnNldChCcm93c2VyTWV0cmljc0FnZ3JlZ2F0b3IsIG5hbWUsIHZhbHVlLCBkYXRhKTtcbn1cblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYSBnYXVnZSBtZXRyaWNcbiAqXG4gKiBAZXhwZXJpbWVudGFsIFRoaXMgQVBJIGlzIGV4cGVyaW1lbnRhbCBhbmQgbWlnaHQgaGF2ZSBicmVha2luZyBjaGFuZ2VzIGluIHRoZSBmdXR1cmUuXG4gKi9cbmZ1bmN0aW9uIGdhdWdlKG5hbWUsIHZhbHVlLCBkYXRhKSB7XG4gIG1ldHJpY3MkMS5nYXVnZShCcm93c2VyTWV0cmljc0FnZ3JlZ2F0b3IsIG5hbWUsIHZhbHVlLCBkYXRhKTtcbn1cblxuLyoqXG4gKiBBZGRzIGEgdGltaW5nIG1ldHJpYy5cbiAqIFRoZSBtZXRyaWMgaXMgYWRkZWQgYXMgYSBkaXN0cmlidXRpb24gbWV0cmljLlxuICpcbiAqIFlvdSBjYW4gZWl0aGVyIGRpcmVjdGx5IGNhcHR1cmUgYSBudW1lcmljIGB2YWx1ZWAsIG9yIHdyYXAgYSBjYWxsYmFjayBmdW5jdGlvbiBpbiBgdGltaW5nYC5cbiAqIEluIHRoZSBsYXR0ZXIgY2FzZSwgdGhlIGR1cmF0aW9uIG9mIHRoZSBjYWxsYmFjayBleGVjdXRpb24gd2lsbCBiZSBjYXB0dXJlZCBhcyBhIHNwYW4gJiBhIG1ldHJpYy5cbiAqXG4gKiBAZXhwZXJpbWVudGFsIFRoaXMgQVBJIGlzIGV4cGVyaW1lbnRhbCBhbmQgbWlnaHQgaGF2ZSBicmVha2luZyBjaGFuZ2VzIGluIHRoZSBmdXR1cmUuXG4gKi9cblxuZnVuY3Rpb24gdGltaW5nKFxuICBuYW1lLFxuICB2YWx1ZSxcbiAgdW5pdCA9ICdzZWNvbmQnLFxuICBkYXRhLFxuKSB7XG4gIHJldHVybiBtZXRyaWNzJDEudGltaW5nKEJyb3dzZXJNZXRyaWNzQWdncmVnYXRvciwgbmFtZSwgdmFsdWUsIHVuaXQsIGRhdGEpO1xufVxuXG5jb25zdCBtZXRyaWNzID0ge1xuICBpbmNyZW1lbnQsXG4gIGRpc3RyaWJ1dGlvbixcbiAgc2V0LFxuICBnYXVnZSxcbiAgdGltaW5nLFxufTtcblxuZXhwb3J0IHsgbWV0cmljcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0cmljcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/metrics.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/integration.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/integration.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"browserProfilingIntegration\": function() { return /* binding */ browserProfilingIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n/* harmony import */ var _startProfileForSpan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./startProfileForSpan.js */ \"./node_modules/@sentry/browser/esm/profiling/startProfileForSpan.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/browser/esm/profiling/utils.js\");\n\n\n\n\n\n\nconst INTEGRATION_NAME = 'BrowserProfiling';\n\nconst _browserProfilingIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getActiveSpan)();\n      const rootSpan = activeSpan && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getRootSpan)(activeSpan);\n\n      if (rootSpan && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAutomatedPageLoadSpan)(rootSpan)) {\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldProfileSpan)(rootSpan)) {\n          (0,_startProfileForSpan_js__WEBPACK_IMPORTED_MODULE_2__.startProfileForSpan)(rootSpan);\n        }\n      }\n\n      client.on('spanStart', (span) => {\n        if (span === (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getRootSpan)(span) && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldProfileSpan)(span)) {\n          (0,_startProfileForSpan_js__WEBPACK_IMPORTED_MODULE_2__.startProfileForSpan)(span);\n        }\n      });\n\n      client.on('beforeEnvelope', (envelope) => {\n        // if not profiles are in queue, there is nothing to add to the envelope.\n        if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getActiveProfilesCount)()) {\n          return;\n        }\n\n        const profiledTransactionEvents = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.findProfiledTransactionsFromEnvelope)(envelope);\n        if (!profiledTransactionEvents.length) {\n          return;\n        }\n\n        const profilesToAddToEnvelope = [];\n\n        for (const profiledTransaction of profiledTransactionEvents) {\n          const context = profiledTransaction && profiledTransaction.contexts;\n          const profile_id = context && context['profile'] && context['profile']['profile_id'];\n          const start_timestamp = context && context['profile'] && context['profile']['start_timestamp'];\n\n          if (typeof profile_id !== 'string') {\n            _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          if (!profile_id) {\n            _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Profiling] cannot find profile for a span without a profile context');\n            continue;\n          }\n\n          // Remove the profile from the span context before sending, relay will take care of the rest.\n          if (context && context['profile']) {\n            delete context.profile;\n          }\n\n          const profile = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.takeProfileFromGlobalCache)(profile_id);\n          if (!profile) {\n            _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Profiling] Could not retrieve profile for span: ${profile_id}`);\n            continue;\n          }\n\n          const profileEvent = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.createProfilingEvent)(\n            profile_id,\n            start_timestamp ,\n            profile,\n            profiledTransaction ,\n          );\n          if (profileEvent) {\n            profilesToAddToEnvelope.push(profileEvent);\n          }\n        }\n\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.addProfilesToEnvelope)(envelope , profilesToAddToEnvelope);\n      });\n    },\n  };\n}) ;\n\nconst browserProfilingIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_browserProfilingIntegration);\n\n\n//# sourceMappingURL=integration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvaW50ZWdyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZFO0FBQ3RDO0FBQ1M7QUFDZTtBQUNnSjs7QUFFL007O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQWE7QUFDdEMscUNBQXFDLHlEQUFXOztBQUVoRCxzQkFBc0Isa0VBQXVCO0FBQzdDLFlBQVksNERBQWlCO0FBQzdCLFVBQVUsNEVBQW1CO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIseURBQVcsVUFBVSw0REFBaUI7QUFDM0QsVUFBVSw0RUFBbUI7QUFDN0I7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxhQUFhLGlFQUFzQjtBQUNuQztBQUNBOztBQUVBLDBDQUEwQywrRUFBb0M7QUFDOUU7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSx3REFBVyxJQUFJLHFEQUFVO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQSxZQUFZLHdEQUFXLElBQUkscURBQVU7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEIscUVBQTBCO0FBQ3BEO0FBQ0EsWUFBWSx3REFBVyxJQUFJLHFEQUFVLHFEQUFxRCxXQUFXO0FBQ3JHO0FBQ0E7O0FBRUEsK0JBQStCLCtEQUFvQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxnRUFBcUI7QUFDN0IsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsb0NBQW9DLCtEQUFpQjs7QUFFZDtBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvaW50ZWdyYXRpb24uanM/NGFlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiwgZ2V0QWN0aXZlU3BhbiwgZ2V0Um9vdFNwYW4gfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4uL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCB7IHN0YXJ0UHJvZmlsZUZvclNwYW4gfSBmcm9tICcuL3N0YXJ0UHJvZmlsZUZvclNwYW4uanMnO1xuaW1wb3J0IHsgaXNBdXRvbWF0ZWRQYWdlTG9hZFNwYW4sIHNob3VsZFByb2ZpbGVTcGFuLCBnZXRBY3RpdmVQcm9maWxlc0NvdW50LCBmaW5kUHJvZmlsZWRUcmFuc2FjdGlvbnNGcm9tRW52ZWxvcGUsIHRha2VQcm9maWxlRnJvbUdsb2JhbENhY2hlLCBjcmVhdGVQcm9maWxpbmdFdmVudCwgYWRkUHJvZmlsZXNUb0VudmVsb3BlIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnQnJvd3NlclByb2ZpbGluZyc7XG5cbmNvbnN0IF9icm93c2VyUHJvZmlsaW5nSW50ZWdyYXRpb24gPSAoKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgc2V0dXAoY2xpZW50KSB7XG4gICAgICBjb25zdCBhY3RpdmVTcGFuID0gZ2V0QWN0aXZlU3BhbigpO1xuICAgICAgY29uc3Qgcm9vdFNwYW4gPSBhY3RpdmVTcGFuICYmIGdldFJvb3RTcGFuKGFjdGl2ZVNwYW4pO1xuXG4gICAgICBpZiAocm9vdFNwYW4gJiYgaXNBdXRvbWF0ZWRQYWdlTG9hZFNwYW4ocm9vdFNwYW4pKSB7XG4gICAgICAgIGlmIChzaG91bGRQcm9maWxlU3Bhbihyb290U3BhbikpIHtcbiAgICAgICAgICBzdGFydFByb2ZpbGVGb3JTcGFuKHJvb3RTcGFuKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjbGllbnQub24oJ3NwYW5TdGFydCcsIChzcGFuKSA9PiB7XG4gICAgICAgIGlmIChzcGFuID09PSBnZXRSb290U3BhbihzcGFuKSAmJiBzaG91bGRQcm9maWxlU3BhbihzcGFuKSkge1xuICAgICAgICAgIHN0YXJ0UHJvZmlsZUZvclNwYW4oc3Bhbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBjbGllbnQub24oJ2JlZm9yZUVudmVsb3BlJywgKGVudmVsb3BlKSA9PiB7XG4gICAgICAgIC8vIGlmIG5vdCBwcm9maWxlcyBhcmUgaW4gcXVldWUsIHRoZXJlIGlzIG5vdGhpbmcgdG8gYWRkIHRvIHRoZSBlbnZlbG9wZS5cbiAgICAgICAgaWYgKCFnZXRBY3RpdmVQcm9maWxlc0NvdW50KCkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBwcm9maWxlZFRyYW5zYWN0aW9uRXZlbnRzID0gZmluZFByb2ZpbGVkVHJhbnNhY3Rpb25zRnJvbUVudmVsb3BlKGVudmVsb3BlKTtcbiAgICAgICAgaWYgKCFwcm9maWxlZFRyYW5zYWN0aW9uRXZlbnRzLmxlbmd0aCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHByb2ZpbGVzVG9BZGRUb0VudmVsb3BlID0gW107XG5cbiAgICAgICAgZm9yIChjb25zdCBwcm9maWxlZFRyYW5zYWN0aW9uIG9mIHByb2ZpbGVkVHJhbnNhY3Rpb25FdmVudHMpIHtcbiAgICAgICAgICBjb25zdCBjb250ZXh0ID0gcHJvZmlsZWRUcmFuc2FjdGlvbiAmJiBwcm9maWxlZFRyYW5zYWN0aW9uLmNvbnRleHRzO1xuICAgICAgICAgIGNvbnN0IHByb2ZpbGVfaWQgPSBjb250ZXh0ICYmIGNvbnRleHRbJ3Byb2ZpbGUnXSAmJiBjb250ZXh0Wydwcm9maWxlJ11bJ3Byb2ZpbGVfaWQnXTtcbiAgICAgICAgICBjb25zdCBzdGFydF90aW1lc3RhbXAgPSBjb250ZXh0ICYmIGNvbnRleHRbJ3Byb2ZpbGUnXSAmJiBjb250ZXh0Wydwcm9maWxlJ11bJ3N0YXJ0X3RpbWVzdGFtcCddO1xuXG4gICAgICAgICAgaWYgKHR5cGVvZiBwcm9maWxlX2lkICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmxvZygnW1Byb2ZpbGluZ10gY2Fubm90IGZpbmQgcHJvZmlsZSBmb3IgYSBzcGFuIHdpdGhvdXQgYSBwcm9maWxlIGNvbnRleHQnKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghcHJvZmlsZV9pZCkge1xuICAgICAgICAgICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmxvZygnW1Byb2ZpbGluZ10gY2Fubm90IGZpbmQgcHJvZmlsZSBmb3IgYSBzcGFuIHdpdGhvdXQgYSBwcm9maWxlIGNvbnRleHQnKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIFJlbW92ZSB0aGUgcHJvZmlsZSBmcm9tIHRoZSBzcGFuIGNvbnRleHQgYmVmb3JlIHNlbmRpbmcsIHJlbGF5IHdpbGwgdGFrZSBjYXJlIG9mIHRoZSByZXN0LlxuICAgICAgICAgIGlmIChjb250ZXh0ICYmIGNvbnRleHRbJ3Byb2ZpbGUnXSkge1xuICAgICAgICAgICAgZGVsZXRlIGNvbnRleHQucHJvZmlsZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCBwcm9maWxlID0gdGFrZVByb2ZpbGVGcm9tR2xvYmFsQ2FjaGUocHJvZmlsZV9pZCk7XG4gICAgICAgICAgaWYgKCFwcm9maWxlKSB7XG4gICAgICAgICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIubG9nKGBbUHJvZmlsaW5nXSBDb3VsZCBub3QgcmV0cmlldmUgcHJvZmlsZSBmb3Igc3BhbjogJHtwcm9maWxlX2lkfWApO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc3QgcHJvZmlsZUV2ZW50ID0gY3JlYXRlUHJvZmlsaW5nRXZlbnQoXG4gICAgICAgICAgICBwcm9maWxlX2lkLFxuICAgICAgICAgICAgc3RhcnRfdGltZXN0YW1wICxcbiAgICAgICAgICAgIHByb2ZpbGUsXG4gICAgICAgICAgICBwcm9maWxlZFRyYW5zYWN0aW9uICxcbiAgICAgICAgICApO1xuICAgICAgICAgIGlmIChwcm9maWxlRXZlbnQpIHtcbiAgICAgICAgICAgIHByb2ZpbGVzVG9BZGRUb0VudmVsb3BlLnB1c2gocHJvZmlsZUV2ZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBhZGRQcm9maWxlc1RvRW52ZWxvcGUoZW52ZWxvcGUgLCBwcm9maWxlc1RvQWRkVG9FbnZlbG9wZSk7XG4gICAgICB9KTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBicm93c2VyUHJvZmlsaW5nSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfYnJvd3NlclByb2ZpbGluZ0ludGVncmF0aW9uKTtcblxuZXhwb3J0IHsgYnJvd3NlclByb2ZpbGluZ0ludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlZ3JhdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/integration.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/startProfileForSpan.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/startProfileForSpan.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startProfileForSpan\": function() { return /* binding */ startProfileForSpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/browser/esm/profiling/utils.js\");\n\n\n\n\n\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfileForTransaction is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nfunction startProfileForSpan(span) {\n  // Start the profiler and get the profiler instance.\n  let startTimestamp;\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAutomatedPageLoadSpan)(span)) {\n    startTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)() * 1000;\n  }\n\n  const profiler = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.startJSSelfProfile)();\n\n  // We failed to construct the profiler, so we skip.\n  // No need to log anything as this has already been logged in startProfile.\n  if (!profiler) {\n    return;\n  }\n\n  if (_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Profiling] started profiling span: ${(0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).description}`);\n  }\n\n  // We create \"unique\" span names to avoid concurrent spans with same names\n  // from being ignored by the profiler. From here on, only this span name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)();\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentScope)().setContext('profile', {\n    profile_id: profileId,\n    start_timestamp: startTimestamp,\n  });\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  async function onProfileHandler() {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call span.finish multiple times.\n    if (!span) {\n      return;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return;\n    }\n\n    return profiler\n      .stop()\n      .then((profile) => {\n        if (maxDurationTimeoutID) {\n          _helpers_js__WEBPACK_IMPORTED_MODULE_4__.WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if (_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Profiling] stopped profiling of span: ${(0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).description}`);\n        }\n\n        // In case of an overlapping span, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!profile) {\n          if (_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD) {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n              `[Profiling] profiler returned null profile for: ${(0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).description}`,\n              'this may indicate an overlapping span or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return;\n        }\n\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.addProfileToGlobalCache)(profileId, profile);\n      })\n      .catch(error => {\n        if (_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Profiling] error while stopping profiler:', error);\n        }\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID = _helpers_js__WEBPACK_IMPORTED_MODULE_4__.WINDOW.setTimeout(() => {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Profiling] max profile duration elapsed, stopping profiling for:', (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).description);\n    }\n    // If the timeout exceeds, we want to stop profiling, but not finish the span\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    onProfileHandler();\n  }, _utils_js__WEBPACK_IMPORTED_MODULE_0__.MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original end call to avoid creating an infinite loop\n  const originalEnd = span.end.bind(span);\n\n  /**\n   * Wraps span `end()` with profiling related logic.\n   * startProfiling is called after the call to spanStart in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to spanEnd.\n   */\n  function profilingWrappedSpanEnd() {\n    if (!span) {\n      return originalEnd();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    void onProfileHandler().then(\n      () => {\n        originalEnd();\n      },\n      () => {\n        // If onProfileHandler fails, we still want to call the original finish method.\n        originalEnd();\n      },\n    );\n\n    return span;\n  }\n\n  span.end = profilingWrappedSpanEnd;\n}\n\n\n//# sourceMappingURL=startProfileForSpan.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvc3RhcnRQcm9maWxlRm9yU3Bhbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkQ7QUFDTztBQUNsQjtBQUNUO0FBQ29GOztBQUUzSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxrRUFBdUI7QUFDN0IscUJBQXFCLGlFQUFrQjtBQUN2Qzs7QUFFQSxtQkFBbUIsNkRBQWtCOztBQUVyQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0sd0RBQVc7QUFDakIsSUFBSSxxREFBVSx3Q0FBd0Msd0RBQVUsbUJBQW1CO0FBQ25GOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixvREFBSzs7QUFFekIsRUFBRSw2REFBZTtBQUNqQjtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDREQUFtQjtBQUM3QjtBQUNBOztBQUVBLFlBQVksd0RBQVc7QUFDdkIsVUFBVSxxREFBVSwyQ0FBMkMsd0RBQVUsbUJBQW1CO0FBQzVGOztBQUVBO0FBQ0E7QUFDQSxjQUFjLHdEQUFXO0FBQ3pCLFlBQVkscURBQVU7QUFDdEIsaUVBQWlFLHdEQUFVLG1CQUFtQjtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsa0VBQXVCO0FBQy9CLE9BQU87QUFDUDtBQUNBLFlBQVksd0RBQVc7QUFDdkIsVUFBVSxxREFBVTtBQUNwQjtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBLDZCQUE2QiwwREFBaUI7QUFDOUMsUUFBUSx3REFBVztBQUNuQixNQUFNLHFEQUFVLHNFQUFzRSx3REFBVTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsRUFBRSw4REFBdUI7O0FBRTVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvc3RhcnRQcm9maWxlRm9yU3Bhbi5qcz83NjdhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNwYW5Ub0pTT04sIGdldEN1cnJlbnRTY29wZSB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyB0aW1lc3RhbXBJblNlY29uZHMsIGxvZ2dlciwgdXVpZDQgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi4vZGVidWctYnVpbGQuanMnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vaGVscGVycy5qcyc7XG5pbXBvcnQgeyBpc0F1dG9tYXRlZFBhZ2VMb2FkU3Bhbiwgc3RhcnRKU1NlbGZQcm9maWxlLCBNQVhfUFJPRklMRV9EVVJBVElPTl9NUywgYWRkUHJvZmlsZVRvR2xvYmFsQ2FjaGUgfSBmcm9tICcuL3V0aWxzLmpzJztcblxuLyoqXG4gKiBXcmFwcyBzdGFydFRyYW5zYWN0aW9uIGFuZCBzdG9wVHJhbnNhY3Rpb24gd2l0aCBwcm9maWxpbmcgcmVsYXRlZCBsb2dpYy5cbiAqIHN0YXJ0UHJvZmlsZUZvclRyYW5zYWN0aW9uIGlzIGNhbGxlZCBhZnRlciB0aGUgY2FsbCB0byBzdGFydFRyYW5zYWN0aW9uIGluIG9yZGVyIHRvIGF2b2lkIG91ciBvd24gY29kZSBmcm9tXG4gKiBiZWluZyBwcm9maWxlZC4gQmVjYXVzZSBvZiB0aGF0IHNhbWUgcmVhc29uLCBzdG9wUHJvZmlsaW5nIGlzIGNhbGxlZCBiZWZvcmUgdGhlIGNhbGwgdG8gc3RvcFRyYW5zYWN0aW9uLlxuICovXG5mdW5jdGlvbiBzdGFydFByb2ZpbGVGb3JTcGFuKHNwYW4pIHtcbiAgLy8gU3RhcnQgdGhlIHByb2ZpbGVyIGFuZCBnZXQgdGhlIHByb2ZpbGVyIGluc3RhbmNlLlxuICBsZXQgc3RhcnRUaW1lc3RhbXA7XG4gIGlmIChpc0F1dG9tYXRlZFBhZ2VMb2FkU3BhbihzcGFuKSkge1xuICAgIHN0YXJ0VGltZXN0YW1wID0gdGltZXN0YW1wSW5TZWNvbmRzKCkgKiAxMDAwO1xuICB9XG5cbiAgY29uc3QgcHJvZmlsZXIgPSBzdGFydEpTU2VsZlByb2ZpbGUoKTtcblxuICAvLyBXZSBmYWlsZWQgdG8gY29uc3RydWN0IHRoZSBwcm9maWxlciwgc28gd2Ugc2tpcC5cbiAgLy8gTm8gbmVlZCB0byBsb2cgYW55dGhpbmcgYXMgdGhpcyBoYXMgYWxyZWFkeSBiZWVuIGxvZ2dlZCBpbiBzdGFydFByb2ZpbGUuXG4gIGlmICghcHJvZmlsZXIpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoREVCVUdfQlVJTEQpIHtcbiAgICBsb2dnZXIubG9nKGBbUHJvZmlsaW5nXSBzdGFydGVkIHByb2ZpbGluZyBzcGFuOiAke3NwYW5Ub0pTT04oc3BhbikuZGVzY3JpcHRpb259YCk7XG4gIH1cblxuICAvLyBXZSBjcmVhdGUgXCJ1bmlxdWVcIiBzcGFuIG5hbWVzIHRvIGF2b2lkIGNvbmN1cnJlbnQgc3BhbnMgd2l0aCBzYW1lIG5hbWVzXG4gIC8vIGZyb20gYmVpbmcgaWdub3JlZCBieSB0aGUgcHJvZmlsZXIuIEZyb20gaGVyZSBvbiwgb25seSB0aGlzIHNwYW4gbmFtZSBzaG91bGQgYmUgdXNlZCB3aGVuXG4gIC8vIGNhbGxpbmcgdGhlIHByb2ZpbGVyIG1ldGhvZHMuIE5vdGU6IHdlIGxvZyB0aGUgb3JpZ2luYWwgbmFtZSB0byB0aGUgdXNlciB0byBhdm9pZCBjb25mdXNpb24uXG4gIGNvbnN0IHByb2ZpbGVJZCA9IHV1aWQ0KCk7XG5cbiAgZ2V0Q3VycmVudFNjb3BlKCkuc2V0Q29udGV4dCgncHJvZmlsZScsIHtcbiAgICBwcm9maWxlX2lkOiBwcm9maWxlSWQsXG4gICAgc3RhcnRfdGltZXN0YW1wOiBzdGFydFRpbWVzdGFtcCxcbiAgfSk7XG5cbiAgLyoqXG4gICAqIElkZW1wb3RlbnQgaGFuZGxlciBmb3IgcHJvZmlsZSBzdG9wXG4gICAqL1xuICBhc3luYyBmdW5jdGlvbiBvblByb2ZpbGVIYW5kbGVyKCkge1xuICAgIC8vIENoZWNrIGlmIHRoZSBwcm9maWxlIGV4aXN0cyBhbmQgcmV0dXJuIGl0IHRoZSBiZWhhdmlvciBoYXMgdG8gYmUgaWRlbXBvdGVudCBhcyB1c2VycyBtYXkgY2FsbCBzcGFuLmZpbmlzaCBtdWx0aXBsZSB0aW1lcy5cbiAgICBpZiAoIXNwYW4pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gU2F0aXNmeSB0aGUgdHlwZSBjaGVja2VyLCBidXQgcHJvZmlsZXIgd2lsbCBhbHdheXMgYmUgZGVmaW5lZCBoZXJlLlxuICAgIGlmICghcHJvZmlsZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvZmlsZXJcbiAgICAgIC5zdG9wKClcbiAgICAgIC50aGVuKChwcm9maWxlKSA9PiB7XG4gICAgICAgIGlmIChtYXhEdXJhdGlvblRpbWVvdXRJRCkge1xuICAgICAgICAgIFdJTkRPVy5jbGVhclRpbWVvdXQobWF4RHVyYXRpb25UaW1lb3V0SUQpO1xuICAgICAgICAgIG1heER1cmF0aW9uVGltZW91dElEID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKERFQlVHX0JVSUxEKSB7XG4gICAgICAgICAgbG9nZ2VyLmxvZyhgW1Byb2ZpbGluZ10gc3RvcHBlZCBwcm9maWxpbmcgb2Ygc3BhbjogJHtzcGFuVG9KU09OKHNwYW4pLmRlc2NyaXB0aW9ufWApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSW4gY2FzZSBvZiBhbiBvdmVybGFwcGluZyBzcGFuLCBzdG9wUHJvZmlsaW5nIG1heSByZXR1cm4gbnVsbCBhbmQgc2lsZW50bHkgaWdub3JlIHRoZSBvdmVybGFwcGluZyBwcm9maWxlLlxuICAgICAgICBpZiAoIXByb2ZpbGUpIHtcbiAgICAgICAgICBpZiAoREVCVUdfQlVJTEQpIHtcbiAgICAgICAgICAgIGxvZ2dlci5sb2coXG4gICAgICAgICAgICAgIGBbUHJvZmlsaW5nXSBwcm9maWxlciByZXR1cm5lZCBudWxsIHByb2ZpbGUgZm9yOiAke3NwYW5Ub0pTT04oc3BhbikuZGVzY3JpcHRpb259YCxcbiAgICAgICAgICAgICAgJ3RoaXMgbWF5IGluZGljYXRlIGFuIG92ZXJsYXBwaW5nIHNwYW4gb3IgYSBjYWxsIHRvIHN0b3BQcm9maWxpbmcgd2l0aCBhIHByb2ZpbGUgdGl0bGUgdGhhdCB3YXMgbmV2ZXIgc3RhcnRlZCcsXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBhZGRQcm9maWxlVG9HbG9iYWxDYWNoZShwcm9maWxlSWQsIHByb2ZpbGUpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgIGlmIChERUJVR19CVUlMRCkge1xuICAgICAgICAgIGxvZ2dlci5sb2coJ1tQcm9maWxpbmddIGVycm9yIHdoaWxlIHN0b3BwaW5nIHByb2ZpbGVyOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH1cblxuICAvLyBFbnF1ZXVlIGEgdGltZW91dCB0byBwcmV2ZW50IHByb2ZpbGVzIGZyb20gcnVubmluZyBvdmVyIG1heCBkdXJhdGlvbi5cbiAgbGV0IG1heER1cmF0aW9uVGltZW91dElEID0gV0lORE9XLnNldFRpbWVvdXQoKCkgPT4ge1xuICAgIGlmIChERUJVR19CVUlMRCkge1xuICAgICAgbG9nZ2VyLmxvZygnW1Byb2ZpbGluZ10gbWF4IHByb2ZpbGUgZHVyYXRpb24gZWxhcHNlZCwgc3RvcHBpbmcgcHJvZmlsaW5nIGZvcjonLCBzcGFuVG9KU09OKHNwYW4pLmRlc2NyaXB0aW9uKTtcbiAgICB9XG4gICAgLy8gSWYgdGhlIHRpbWVvdXQgZXhjZWVkcywgd2Ugd2FudCB0byBzdG9wIHByb2ZpbGluZywgYnV0IG5vdCBmaW5pc2ggdGhlIHNwYW5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXG4gICAgb25Qcm9maWxlSGFuZGxlcigpO1xuICB9LCBNQVhfUFJPRklMRV9EVVJBVElPTl9NUyk7XG5cbiAgLy8gV2UgbmVlZCB0byByZWZlcmVuY2UgdGhlIG9yaWdpbmFsIGVuZCBjYWxsIHRvIGF2b2lkIGNyZWF0aW5nIGFuIGluZmluaXRlIGxvb3BcbiAgY29uc3Qgb3JpZ2luYWxFbmQgPSBzcGFuLmVuZC5iaW5kKHNwYW4pO1xuXG4gIC8qKlxuICAgKiBXcmFwcyBzcGFuIGBlbmQoKWAgd2l0aCBwcm9maWxpbmcgcmVsYXRlZCBsb2dpYy5cbiAgICogc3RhcnRQcm9maWxpbmcgaXMgY2FsbGVkIGFmdGVyIHRoZSBjYWxsIHRvIHNwYW5TdGFydCBpbiBvcmRlciB0byBhdm9pZCBvdXIgb3duIGNvZGUgZnJvbVxuICAgKiBiZWluZyBwcm9maWxlZC4gQmVjYXVzZSBvZiB0aGF0IHNhbWUgcmVhc29uLCBzdG9wUHJvZmlsaW5nIGlzIGNhbGxlZCBiZWZvcmUgdGhlIGNhbGwgdG8gc3BhbkVuZC5cbiAgICovXG4gIGZ1bmN0aW9uIHByb2ZpbGluZ1dyYXBwZWRTcGFuRW5kKCkge1xuICAgIGlmICghc3Bhbikge1xuICAgICAgcmV0dXJuIG9yaWdpbmFsRW5kKCk7XG4gICAgfVxuICAgIC8vIG9uUHJvZmlsZUhhbmRsZXIgc2hvdWxkIGFsd2F5cyByZXR1cm4gdGhlIHNhbWUgcHJvZmlsZSBldmVuIGlmIHRoaXMgaXMgY2FsbGVkIG11bHRpcGxlIHRpbWVzLlxuICAgIC8vIEFsd2F5cyBjYWxsIG9uUHJvZmlsZUhhbmRsZXIgdG8gZW5zdXJlIHN0b3BQcm9maWxpbmcgaXMgY2FsbGVkIGFuZCB0aGUgdGltZW91dCBpcyBjbGVhcmVkLlxuICAgIHZvaWQgb25Qcm9maWxlSGFuZGxlcigpLnRoZW4oXG4gICAgICAoKSA9PiB7XG4gICAgICAgIG9yaWdpbmFsRW5kKCk7XG4gICAgICB9LFxuICAgICAgKCkgPT4ge1xuICAgICAgICAvLyBJZiBvblByb2ZpbGVIYW5kbGVyIGZhaWxzLCB3ZSBzdGlsbCB3YW50IHRvIGNhbGwgdGhlIG9yaWdpbmFsIGZpbmlzaCBtZXRob2QuXG4gICAgICAgIG9yaWdpbmFsRW5kKCk7XG4gICAgICB9LFxuICAgICk7XG5cbiAgICByZXR1cm4gc3BhbjtcbiAgfVxuXG4gIHNwYW4uZW5kID0gcHJvZmlsaW5nV3JhcHBlZFNwYW5FbmQ7XG59XG5cbmV4cG9ydCB7IHN0YXJ0UHJvZmlsZUZvclNwYW4gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXJ0UHJvZmlsZUZvclNwYW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/startProfileForSpan.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/utils.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MAX_PROFILE_DURATION_MS\": function() { return /* binding */ MAX_PROFILE_DURATION_MS; },\n/* harmony export */   \"addProfileToGlobalCache\": function() { return /* binding */ addProfileToGlobalCache; },\n/* harmony export */   \"addProfilesToEnvelope\": function() { return /* binding */ addProfilesToEnvelope; },\n/* harmony export */   \"applyDebugMetadata\": function() { return /* binding */ applyDebugMetadata; },\n/* harmony export */   \"convertJSSelfProfileToSampledFormat\": function() { return /* binding */ convertJSSelfProfileToSampledFormat; },\n/* harmony export */   \"createProfilePayload\": function() { return /* binding */ createProfilePayload; },\n/* harmony export */   \"createProfilingEvent\": function() { return /* binding */ createProfilingEvent; },\n/* harmony export */   \"enrichWithThreadInformation\": function() { return /* binding */ enrichWithThreadInformation; },\n/* harmony export */   \"findProfiledTransactionsFromEnvelope\": function() { return /* binding */ findProfiledTransactionsFromEnvelope; },\n/* harmony export */   \"getActiveProfilesCount\": function() { return /* binding */ getActiveProfilesCount; },\n/* harmony export */   \"isAutomatedPageLoadSpan\": function() { return /* binding */ isAutomatedPageLoadSpan; },\n/* harmony export */   \"isValidSampleRate\": function() { return /* binding */ isValidSampleRate; },\n/* harmony export */   \"shouldProfileSpan\": function() { return /* binding */ shouldProfileSpan; },\n/* harmony export */   \"startJSSelfProfile\": function() { return /* binding */ startJSSelfProfile; },\n/* harmony export */   \"takeProfileFromGlobalCache\": function() { return /* binding */ takeProfileFromGlobalCache; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n\n/* eslint-disable max-lines */\n\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = '';\nlet OS_PLATFORM_VERSION = '';\nlet OS_ARCH = '';\nlet OS_BROWSER = (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.language) ||\n  (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.languages && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.languages[0]) ||\n  '';\n\nfunction isUserAgentData(data) {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-expect-error userAgentData is not part of the navigator interface yet\nconst userAgentData = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1];\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isProcessedJSSelfProfile(profile) {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nfunction enrichWithThreadInformation(profile) {\n  if (!isProcessedJSSelfProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\n\nfunction getTraceId(event) {\n  const traceId = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nfunction createProfilePayload(\n  profile_id,\n  start_timestamp,\n  processed_profile,\n  event,\n) {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  if (processed_profile === undefined || processed_profile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${processed_profile} instead.`,\n    );\n  }\n\n  const traceId = getTraceId(event);\n  const enrichedThreadProfile = enrichWithThreadInformation(processed_profile);\n  const transactionStartMs = start_timestamp\n    ? start_timestamp\n    : typeof event.start_timestamp === 'number'\n      ? event.start_timestamp * 1000\n      : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.timestampInSeconds)() * 1000;\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.timestampInSeconds)() * 1000;\n\n  const profile = {\n    event_id: profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || _sentry_core__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    debug_meta: {\n      images: applyDebugMetadata(processed_profile.resources),\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.uuid4)(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  return profile;\n}\n\n/*\n  See packages/browser-utils/src/browser/router.ts\n*/\n/**\n *\n */\nfunction isAutomatedPageLoadSpan(span) {\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).op === 'pageload';\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nfunction convertJSSelfProfileToSampledFormat(input) {\n  let EMPTY_STACK_ID = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  if (!input.samples.length) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = input.samples[0].timestamp;\n  // The JS SDK might change it's time origin based on some heuristic (see See packages/utils/src/time.ts)\n  // when that happens, we need to ensure we are correcting the profile timings so the two timelines stay in sync.\n  // Since JS self profiling time origin is always initialized to performance.timeOrigin, we need to adjust for\n  // the drift between the SDK selected value and our profile time origin.\n  const origin =\n    typeof performance.timeOrigin === 'number' ? performance.timeOrigin : _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.browserPerformanceTimeOrigin || 0;\n  const adjustForOriginChange = origin - (_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.browserPerformanceTimeOrigin || origin);\n\n  for (let i = 0; i < input.samples.length; i++) {\n    const jsSample = input.samples[i];\n\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      continue;\n    }\n\n    let stackTop = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          abs_path: typeof frame.resourceId === 'number' ? input.resources[frame.resourceId] : undefined,\n          lineno: frame.line,\n          colno: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp + adjustForOriginChange - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  }\n\n  return profile;\n}\n\n/**\n * Adds items to envelope if they are not already present - mutates the envelope.\n * @param envelope\n */\nfunction addProfilesToEnvelope(envelope, profiles) {\n  if (!profiles.length) {\n    return envelope;\n  }\n\n  for (const profile of profiles) {\n    envelope[1].push([{ type: 'profile' }, profile]);\n  }\n  return envelope;\n}\n\n/**\n * Finds transactions with profile_id context in the envelope\n * @param envelope\n * @returns\n */\nfunction findProfiledTransactionsFromEnvelope(envelope) {\n  const events = [];\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.forEachEnvelopeItem)(envelope, (item, type) => {\n    if (type !== 'transaction') {\n      return;\n    }\n\n    for (let j = 1; j < item.length; j++) {\n      const event = item[j] ;\n\n      if (event && event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id']) {\n        events.push(item[j] );\n      }\n    }\n  });\n\n  return events;\n}\n\nconst debugIdStackParserCache = new WeakMap();\n/**\n * Applies debug meta data to an event from a list of paths to resources (sourcemaps)\n */\nfunction applyDebugMetadata(resource_paths) {\n  const debugIdMap = _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return [];\n  }\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)();\n  const options = client && client.getOptions();\n  const stackParser = options && options.stackParser;\n\n  if (!stackParser) {\n    return [];\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      const file = stackFrame && stackFrame.filename;\n\n      if (stackFrame && file) {\n        acc[file] = debugIdMap[debugIdStackTrace] ;\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  const images = [];\n  for (const path of resource_paths) {\n    if (path && filenameDebugIdMap[path]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: path,\n        debug_id: filenameDebugIdMap[path] ,\n      });\n    }\n  }\n\n  return images;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  if ((typeof rate !== 'number' && typeof rate !== 'boolean') || (typeof rate === 'number' && isNaN(rate))) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // Boolean sample rates are always valid\n  if (rate === true || rate === false) {\n    return true;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\nfunction isValidProfile(profile) {\n  if (profile.samples.length < 2) {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return false;\n  }\n\n  if (!profile.frames.length) {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('[Profiling] Discarding profile because it contains no frames');\n    }\n    return false;\n  }\n\n  return true;\n}\n\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED = false;\nconst MAX_PROFILE_DURATION_MS = 30000;\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler) {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Starts the profiler and returns the profiler instance.\n */\nfunction startJSSelfProfile() {\n  // Feature support check first\n  const JSProfilerConstructor = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    return new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  return;\n}\n\n/**\n * Determine if a profile should be profiled.\n */\nfunction shouldProfileSpan(span) {\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return false;\n  }\n\n  if (!span.isRecording()) {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('[Profiling] Discarding profile because transaction was not sampled.');\n    }\n    return false;\n  }\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)();\n  const options = client && client.getOptions();\n  if (!options) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('[Profiling] Profiling disabled, no options found.');\n    return false;\n  }\n\n  // @ts-expect-error profilesSampleRate is not part of the browser options yet\n  const profilesSampleRate = options.profilesSampleRate;\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(profilesSampleRate)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('[Profiling] Discarding profile because of invalid sample rate.');\n    return false;\n  }\n\n  // if the function returned 0 (or false), or if `profileSampleRate` is 0, it's a sign the profile should be dropped\n  if (!profilesSampleRate) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(\n        '[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0',\n      );\n    return false;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const sampled = profilesSampleRate === true ? true : Math.random() < profilesSampleRate;\n  // Check if we should sample this profile\n  if (!sampled) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(\n        `[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(\n          profilesSampleRate,\n        )})`,\n      );\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a profiling envelope item, if the profile does not pass validation, returns null.\n * @param event\n * @returns {Profile | null}\n */\nfunction createProfilingEvent(\n  profile_id,\n  start_timestamp,\n  profile,\n  event,\n) {\n  if (!isValidProfile(profile)) {\n    return null;\n  }\n\n  return createProfilePayload(profile_id, start_timestamp, profile, event);\n}\n\n// TODO (v8): We need to obtain profile ids in @sentry-internal/tracing,\n// but we don't have access to this map because importing this map would\n// cause a circular dependancy. We need to resolve this in v8.\nconst PROFILE_MAP = new Map();\n/**\n *\n */\nfunction getActiveProfilesCount() {\n  return PROFILE_MAP.size;\n}\n\n/**\n * Retrieves profile from global cache and removes it.\n */\nfunction takeProfileFromGlobalCache(profile_id) {\n  const profile = PROFILE_MAP.get(profile_id);\n  if (profile) {\n    PROFILE_MAP.delete(profile_id);\n  }\n  return profile;\n}\n/**\n * Adds profile to global cache and evicts the oldest profile if the cache is full.\n */\nfunction addProfileToGlobalCache(profile_id, profile) {\n  PROFILE_MAP.set(profile_id, profile);\n\n  if (PROFILE_MAP.size > 30) {\n    const last = PROFILE_MAP.keys().next().value;\n    PROFILE_MAP.delete(last);\n  }\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/utils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/sdk.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/sdk.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"captureUserFeedback\": function() { return /* binding */ captureUserFeedback; },\n/* harmony export */   \"forceLoad\": function() { return /* binding */ forceLoad; },\n/* harmony export */   \"getDefaultIntegrations\": function() { return /* binding */ getDefaultIntegrations; },\n/* harmony export */   \"init\": function() { return /* binding */ init; },\n/* harmony export */   \"onLoad\": function() { return /* binding */ onLoad; },\n/* harmony export */   \"showReportDialog\": function() { return /* binding */ showReportDialog; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry-internal/browser-utils */ \"./node_modules/@sentry-internal/browser-utils/esm/index.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./client.js */ \"./node_modules/@sentry/browser/esm/client.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./integrations/breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n/* harmony import */ var _integrations_browserapierrors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./integrations/browserapierrors.js */ \"./node_modules/@sentry/browser/esm/integrations/browserapierrors.js\");\n/* harmony import */ var _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./integrations/globalhandlers.js */ \"./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\");\n/* harmony import */ var _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./integrations/httpcontext.js */ \"./node_modules/@sentry/browser/esm/integrations/httpcontext.js\");\n/* harmony import */ var _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./integrations/linkederrors.js */ \"./node_modules/@sentry/browser/esm/integrations/linkederrors.js\");\n/* harmony import */ var _stack_parsers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./stack-parsers.js */ \"./node_modules/@sentry/browser/esm/stack-parsers.js\");\n/* harmony import */ var _transports_fetch_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./transports/fetch.js */ \"./node_modules/@sentry/browser/esm/transports/fetch.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** Get the default integrations for the browser SDK. */\nfunction getDefaultIntegrations(_options) {\n  /**\n   * Note: Please make sure this stays in sync with Angular SDK, which re-exports\n   * `getDefaultIntegrations` but with an adjusted set of integrations.\n   */\n  return [\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.inboundFiltersIntegration)(),\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.functionToStringIntegration)(),\n    (0,_integrations_browserapierrors_js__WEBPACK_IMPORTED_MODULE_1__.browserApiErrorsIntegration)(),\n    (0,_integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__.breadcrumbsIntegration)(),\n    (0,_integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_3__.globalHandlersIntegration)(),\n    (0,_integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_4__.linkedErrorsIntegration)(),\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.dedupeIntegration)(),\n    (0,_integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_5__.httpContextIntegration)(),\n  ];\n}\n\nfunction applyDefaultOptions(optionsArg = {}) {\n  const defaultOptions = {\n    defaultIntegrations: getDefaultIntegrations(),\n    release:\n      typeof __SENTRY_RELEASE__ === 'string' // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n        ? __SENTRY_RELEASE__\n        : _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.SENTRY_RELEASE && _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.SENTRY_RELEASE.id // This supports the variable that sentry-webpack-plugin injects\n          ? _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.SENTRY_RELEASE.id\n          : undefined,\n    autoSessionTracking: true,\n    sendClientReports: true,\n  };\n\n  return { ...defaultOptions, ...optionsArg };\n}\n\nfunction shouldShowBrowserExtensionError() {\n  const windowWithMaybeExtension = _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW ;\n\n  const extensionKey = windowWithMaybeExtension.chrome ? 'chrome' : 'browser';\n  const extensionObject = windowWithMaybeExtension[extensionKey];\n\n  const runtimeId = extensionObject && extensionObject.runtime && extensionObject.runtime.id;\n  const href = (_helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.location && _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.location.href) || '';\n\n  const extensionProtocols = ['chrome-extension:', 'moz-extension:', 'ms-browser-extension:'];\n\n  // Running the SDK in a dedicated extension page and calling Sentry.init is fine; no risk of data leakage\n  const isDedicatedExtensionPage =\n    !!runtimeId && _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW === _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.top && extensionProtocols.some(protocol => href.startsWith(`${protocol}//`));\n\n  return !!runtimeId && !isDedicatedExtensionPage;\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(browserOptions = {}) {\n  const options = applyDefaultOptions(browserOptions);\n\n  if (shouldShowBrowserExtensionError()) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.consoleSandbox)(() => {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/',\n      );\n    });\n    return;\n  }\n\n  if (_debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD) {\n    if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.supportsFetch)()) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.warn(\n        'No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill.',\n      );\n    }\n  }\n  const clientOptions = {\n    ...options,\n    stackParser: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.stackParserFromStackParserOptions)(options.stackParser || _stack_parsers_js__WEBPACK_IMPORTED_MODULE_9__.defaultStackParser),\n    integrations: (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getIntegrationsToSetup)(options),\n    transport: options.transport || _transports_fetch_js__WEBPACK_IMPORTED_MODULE_10__.makeFetchTransport,\n  };\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.initAndBind)(_client_js__WEBPACK_IMPORTED_MODULE_11__.BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * All properties the report dialog supports\n */\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}) {\n  // doesn't work without a document (React Native)\n  if (!_helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.document) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n  const client = scope.getClient();\n  const dsn = client && client.getDsn();\n\n  if (!dsn) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    const eventId = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.lastEventId)();\n    if (eventId) {\n      options.eventId = eventId;\n    }\n  }\n\n  const script = _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getReportDialogEndpoint)(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event) => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.document.head || _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof _helpers_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW.document === 'undefined') {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startSession)({ ignoreDuration: true });\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureSession)();\n\n  // We want to create a session for every navigation as well\n  (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_12__.addHistoryInstrumentationHandler)(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startSession)({ ignoreDuration: true });\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureSession)();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n *\n * @deprecated Use `captureFeedback` instead.\n */\nfunction captureUserFeedback(feedback) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  if (client) {\n    // eslint-disable-next-line deprecation/deprecation\n    client.captureUserFeedback(feedback);\n  }\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9zZGsuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4TztBQUNySTtBQUN2QjtBQUN0QztBQUNHO0FBQ1Q7QUFDaUM7QUFDVTtBQUNKO0FBQ047QUFDRTtBQUNqQjtBQUNHOztBQUUzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdUVBQXlCO0FBQzdCLElBQUkseUVBQTJCO0FBQy9CLElBQUksOEZBQTJCO0FBQy9CLElBQUksb0ZBQXNCO0FBQzFCLElBQUksMEZBQXlCO0FBQzdCLElBQUksc0ZBQXVCO0FBQzNCLElBQUksK0RBQWlCO0FBQ3JCLElBQUksb0ZBQXNCO0FBQzFCO0FBQ0E7O0FBRUEsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDhEQUFxQixJQUFJLGlFQUF3QjtBQUMzRCxZQUFZLGlFQUF3QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXO0FBQ1g7O0FBRUE7QUFDQSxtQ0FBbUMsK0NBQU07O0FBRXpDO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0Isd0RBQWUsSUFBSSw2REFBb0I7O0FBRXZEOztBQUVBLG9GQUFvRjtBQUNwRjtBQUNBLG1CQUFtQiwrQ0FBTSxLQUFLLG1EQUFVLDJEQUEyRCxTQUFTOztBQUU1RztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsWUFBWTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLFNBQVMsc0JBQXNCO0FBQy9CO0FBQ0EsaUNBQWlDO0FBQ2pDOztBQUVBO0FBQ0EsSUFBSSw2REFBYztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLE1BQU0sd0RBQVc7QUFDakIsU0FBUyw0REFBYTtBQUN0QixNQUFNLHNEQUFXO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixnRkFBaUMsd0JBQXdCLGlFQUFrQjtBQUM1RixrQkFBa0Isb0VBQXNCO0FBQ3hDLG9DQUFvQyxxRUFBa0I7QUFDdEQ7O0FBRUEsRUFBRSx5REFBVyxDQUFDLHNEQUFhOztBQUUzQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBLE9BQU8sd0RBQWU7QUFDdEIsSUFBSSx3REFBVyxJQUFJLHVEQUFZO0FBQy9CO0FBQ0E7O0FBRUEsZ0JBQWdCLDZEQUFlO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLHdEQUFXLElBQUksdURBQVk7QUFDL0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0IseURBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLHNFQUE2QjtBQUM5QztBQUNBO0FBQ0EsZUFBZSxxRUFBdUI7O0FBRXRDO0FBQ0E7QUFDQTs7QUFFQSxVQUFVLFVBQVU7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixVQUFVLG1FQUEwQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSxJQUFJLGdFQUF1QjtBQUMzQjs7QUFFQSx5QkFBeUIsNkRBQW9CLElBQUksNkRBQW9CO0FBQ3JFO0FBQ0E7QUFDQSxJQUFJO0FBQ0osSUFBSSx3REFBVyxJQUFJLHVEQUFZO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHdEQUFlO0FBQzVCLElBQUksd0RBQVcsSUFBSSxzREFBVztBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwwREFBWSxHQUFHLHNCQUFzQjtBQUN2QyxFQUFFLDREQUFjOztBQUVoQjtBQUNBLEVBQUUsaUdBQWdDLElBQUksVUFBVTtBQUNoRDtBQUNBO0FBQ0EsTUFBTSwwREFBWSxHQUFHLHNCQUFzQjtBQUMzQyxNQUFNLDREQUFjO0FBQ3BCO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1REFBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrRztBQUNsRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9zZGsuanM/MWJmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbmJvdW5kRmlsdGVyc0ludGVncmF0aW9uLCBmdW5jdGlvblRvU3RyaW5nSW50ZWdyYXRpb24sIGRlZHVwZUludGVncmF0aW9uLCBnZXRJbnRlZ3JhdGlvbnNUb1NldHVwLCBpbml0QW5kQmluZCwgZ2V0Q3VycmVudFNjb3BlLCBsYXN0RXZlbnRJZCwgZ2V0UmVwb3J0RGlhbG9nRW5kcG9pbnQsIHN0YXJ0U2Vzc2lvbiwgY2FwdHVyZVNlc3Npb24sIGdldENsaWVudCB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBjb25zb2xlU2FuZGJveCwgc3VwcG9ydHNGZXRjaCwgbG9nZ2VyLCBzdGFja1BhcnNlckZyb21TdGFja1BhcnNlck9wdGlvbnMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGFkZEhpc3RvcnlJbnN0cnVtZW50YXRpb25IYW5kbGVyIH0gZnJvbSAnQHNlbnRyeS1pbnRlcm5hbC9icm93c2VyLXV0aWxzJztcbmltcG9ydCB7IEJyb3dzZXJDbGllbnQgfSBmcm9tICcuL2NsaWVudC5qcyc7XG5pbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4vZGVidWctYnVpbGQuanMnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmltcG9ydCB7IGJyZWFkY3J1bWJzSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9icmVhZGNydW1icy5qcyc7XG5pbXBvcnQgeyBicm93c2VyQXBpRXJyb3JzSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9icm93c2VyYXBpZXJyb3JzLmpzJztcbmltcG9ydCB7IGdsb2JhbEhhbmRsZXJzSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9nbG9iYWxoYW5kbGVycy5qcyc7XG5pbXBvcnQgeyBodHRwQ29udGV4dEludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvaHR0cGNvbnRleHQuanMnO1xuaW1wb3J0IHsgbGlua2VkRXJyb3JzSW50ZWdyYXRpb24gfSBmcm9tICcuL2ludGVncmF0aW9ucy9saW5rZWRlcnJvcnMuanMnO1xuaW1wb3J0IHsgZGVmYXVsdFN0YWNrUGFyc2VyIH0gZnJvbSAnLi9zdGFjay1wYXJzZXJzLmpzJztcbmltcG9ydCB7IG1ha2VGZXRjaFRyYW5zcG9ydCB9IGZyb20gJy4vdHJhbnNwb3J0cy9mZXRjaC5qcyc7XG5cbi8qKiBHZXQgdGhlIGRlZmF1bHQgaW50ZWdyYXRpb25zIGZvciB0aGUgYnJvd3NlciBTREsuICovXG5mdW5jdGlvbiBnZXREZWZhdWx0SW50ZWdyYXRpb25zKF9vcHRpb25zKSB7XG4gIC8qKlxuICAgKiBOb3RlOiBQbGVhc2UgbWFrZSBzdXJlIHRoaXMgc3RheXMgaW4gc3luYyB3aXRoIEFuZ3VsYXIgU0RLLCB3aGljaCByZS1leHBvcnRzXG4gICAqIGBnZXREZWZhdWx0SW50ZWdyYXRpb25zYCBidXQgd2l0aCBhbiBhZGp1c3RlZCBzZXQgb2YgaW50ZWdyYXRpb25zLlxuICAgKi9cbiAgcmV0dXJuIFtcbiAgICBpbmJvdW5kRmlsdGVyc0ludGVncmF0aW9uKCksXG4gICAgZnVuY3Rpb25Ub1N0cmluZ0ludGVncmF0aW9uKCksXG4gICAgYnJvd3NlckFwaUVycm9yc0ludGVncmF0aW9uKCksXG4gICAgYnJlYWRjcnVtYnNJbnRlZ3JhdGlvbigpLFxuICAgIGdsb2JhbEhhbmRsZXJzSW50ZWdyYXRpb24oKSxcbiAgICBsaW5rZWRFcnJvcnNJbnRlZ3JhdGlvbigpLFxuICAgIGRlZHVwZUludGVncmF0aW9uKCksXG4gICAgaHR0cENvbnRleHRJbnRlZ3JhdGlvbigpLFxuICBdO1xufVxuXG5mdW5jdGlvbiBhcHBseURlZmF1bHRPcHRpb25zKG9wdGlvbnNBcmcgPSB7fSkge1xuICBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICBkZWZhdWx0SW50ZWdyYXRpb25zOiBnZXREZWZhdWx0SW50ZWdyYXRpb25zKCksXG4gICAgcmVsZWFzZTpcbiAgICAgIHR5cGVvZiBfX1NFTlRSWV9SRUxFQVNFX18gPT09ICdzdHJpbmcnIC8vIFRoaXMgYWxsb3dzIGJ1aWxkIHRvb2xpbmcgdG8gZmluZC1hbmQtcmVwbGFjZSBfX1NFTlRSWV9SRUxFQVNFX18gdG8gaW5qZWN0IGEgcmVsZWFzZSB2YWx1ZVxuICAgICAgICA/IF9fU0VOVFJZX1JFTEVBU0VfX1xuICAgICAgICA6IFdJTkRPVy5TRU5UUllfUkVMRUFTRSAmJiBXSU5ET1cuU0VOVFJZX1JFTEVBU0UuaWQgLy8gVGhpcyBzdXBwb3J0cyB0aGUgdmFyaWFibGUgdGhhdCBzZW50cnktd2VicGFjay1wbHVnaW4gaW5qZWN0c1xuICAgICAgICAgID8gV0lORE9XLlNFTlRSWV9SRUxFQVNFLmlkXG4gICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgYXV0b1Nlc3Npb25UcmFja2luZzogdHJ1ZSxcbiAgICBzZW5kQ2xpZW50UmVwb3J0czogdHJ1ZSxcbiAgfTtcblxuICByZXR1cm4geyAuLi5kZWZhdWx0T3B0aW9ucywgLi4ub3B0aW9uc0FyZyB9O1xufVxuXG5mdW5jdGlvbiBzaG91bGRTaG93QnJvd3NlckV4dGVuc2lvbkVycm9yKCkge1xuICBjb25zdCB3aW5kb3dXaXRoTWF5YmVFeHRlbnNpb24gPSBXSU5ET1cgO1xuXG4gIGNvbnN0IGV4dGVuc2lvbktleSA9IHdpbmRvd1dpdGhNYXliZUV4dGVuc2lvbi5jaHJvbWUgPyAnY2hyb21lJyA6ICdicm93c2VyJztcbiAgY29uc3QgZXh0ZW5zaW9uT2JqZWN0ID0gd2luZG93V2l0aE1heWJlRXh0ZW5zaW9uW2V4dGVuc2lvbktleV07XG5cbiAgY29uc3QgcnVudGltZUlkID0gZXh0ZW5zaW9uT2JqZWN0ICYmIGV4dGVuc2lvbk9iamVjdC5ydW50aW1lICYmIGV4dGVuc2lvbk9iamVjdC5ydW50aW1lLmlkO1xuICBjb25zdCBocmVmID0gKFdJTkRPVy5sb2NhdGlvbiAmJiBXSU5ET1cubG9jYXRpb24uaHJlZikgfHwgJyc7XG5cbiAgY29uc3QgZXh0ZW5zaW9uUHJvdG9jb2xzID0gWydjaHJvbWUtZXh0ZW5zaW9uOicsICdtb3otZXh0ZW5zaW9uOicsICdtcy1icm93c2VyLWV4dGVuc2lvbjonXTtcblxuICAvLyBSdW5uaW5nIHRoZSBTREsgaW4gYSBkZWRpY2F0ZWQgZXh0ZW5zaW9uIHBhZ2UgYW5kIGNhbGxpbmcgU2VudHJ5LmluaXQgaXMgZmluZTsgbm8gcmlzayBvZiBkYXRhIGxlYWthZ2VcbiAgY29uc3QgaXNEZWRpY2F0ZWRFeHRlbnNpb25QYWdlID1cbiAgICAhIXJ1bnRpbWVJZCAmJiBXSU5ET1cgPT09IFdJTkRPVy50b3AgJiYgZXh0ZW5zaW9uUHJvdG9jb2xzLnNvbWUocHJvdG9jb2wgPT4gaHJlZi5zdGFydHNXaXRoKGAke3Byb3RvY29sfS8vYCkpO1xuXG4gIHJldHVybiAhIXJ1bnRpbWVJZCAmJiAhaXNEZWRpY2F0ZWRFeHRlbnNpb25QYWdlO1xufVxuXG4vKipcbiAqIEEgbWFnaWMgc3RyaW5nIHRoYXQgYnVpbGQgdG9vbGluZyBjYW4gbGV2ZXJhZ2UgaW4gb3JkZXIgdG8gaW5qZWN0IGEgcmVsZWFzZSB2YWx1ZSBpbnRvIHRoZSBTREsuXG4gKi9cblxuLyoqXG4gKiBUaGUgU2VudHJ5IEJyb3dzZXIgU0RLIENsaWVudC5cbiAqXG4gKiBUbyB1c2UgdGhpcyBTREssIGNhbGwgdGhlIHtAbGluayBpbml0fSBmdW5jdGlvbiBhcyBlYXJseSBhcyBwb3NzaWJsZSB3aGVuXG4gKiBsb2FkaW5nIHRoZSB3ZWIgcGFnZS4gVG8gc2V0IGNvbnRleHQgaW5mb3JtYXRpb24gb3Igc2VuZCBtYW51YWwgZXZlbnRzLCB1c2VcbiAqIHRoZSBwcm92aWRlZCBtZXRob2RzLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgXG4gKlxuICogaW1wb3J0IHsgaW5pdCB9IGZyb20gJ0BzZW50cnkvYnJvd3Nlcic7XG4gKlxuICogaW5pdCh7XG4gKiAgIGRzbjogJ19fRFNOX18nLFxuICogICAvLyAuLi5cbiAqIH0pO1xuICogYGBgXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYFxuICpcbiAqIGltcG9ydCB7IGFkZEJyZWFkY3J1bWIgfSBmcm9tICdAc2VudHJ5L2Jyb3dzZXInO1xuICogYWRkQnJlYWRjcnVtYih7XG4gKiAgIG1lc3NhZ2U6ICdNeSBCcmVhZGNydW1iJyxcbiAqICAgLy8gLi4uXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgXG4gKlxuICogaW1wb3J0ICogYXMgU2VudHJ5IGZyb20gJ0BzZW50cnkvYnJvd3Nlcic7XG4gKiBTZW50cnkuY2FwdHVyZU1lc3NhZ2UoJ0hlbGxvLCB3b3JsZCEnKTtcbiAqIFNlbnRyeS5jYXB0dXJlRXhjZXB0aW9uKG5ldyBFcnJvcignR29vZCBieWUnKSk7XG4gKiBTZW50cnkuY2FwdHVyZUV2ZW50KHtcbiAqICAgbWVzc2FnZTogJ01hbnVhbCcsXG4gKiAgIHN0YWNrdHJhY2U6IFtcbiAqICAgICAvLyAuLi5cbiAqICAgXSxcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQHNlZSB7QGxpbmsgQnJvd3Nlck9wdGlvbnN9IGZvciBkb2N1bWVudGF0aW9uIG9uIGNvbmZpZ3VyYXRpb24gb3B0aW9ucy5cbiAqL1xuZnVuY3Rpb24gaW5pdChicm93c2VyT3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IG9wdGlvbnMgPSBhcHBseURlZmF1bHRPcHRpb25zKGJyb3dzZXJPcHRpb25zKTtcblxuICBpZiAoc2hvdWxkU2hvd0Jyb3dzZXJFeHRlbnNpb25FcnJvcigpKSB7XG4gICAgY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICdbU2VudHJ5XSBZb3UgY2Fubm90IHJ1biBTZW50cnkgdGhpcyB3YXkgaW4gYSBicm93c2VyIGV4dGVuc2lvbiwgY2hlY2s6IGh0dHBzOi8vZG9jcy5zZW50cnkuaW8vcGxhdGZvcm1zL2phdmFzY3JpcHQvYmVzdC1wcmFjdGljZXMvYnJvd3Nlci1leHRlbnNpb25zLycsXG4gICAgICApO1xuICAgIH0pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChERUJVR19CVUlMRCkge1xuICAgIGlmICghc3VwcG9ydHNGZXRjaCgpKSB7XG4gICAgICBsb2dnZXIud2FybihcbiAgICAgICAgJ05vIEZldGNoIEFQSSBkZXRlY3RlZC4gVGhlIFNlbnRyeSBTREsgcmVxdWlyZXMgYSBGZXRjaCBBUEkgY29tcGF0aWJsZSBlbnZpcm9ubWVudCB0byBzZW5kIGV2ZW50cy4gUGxlYXNlIGFkZCBhIEZldGNoIEFQSSBwb2x5ZmlsbC4nLFxuICAgICAgKTtcbiAgICB9XG4gIH1cbiAgY29uc3QgY2xpZW50T3B0aW9ucyA9IHtcbiAgICAuLi5vcHRpb25zLFxuICAgIHN0YWNrUGFyc2VyOiBzdGFja1BhcnNlckZyb21TdGFja1BhcnNlck9wdGlvbnMob3B0aW9ucy5zdGFja1BhcnNlciB8fCBkZWZhdWx0U3RhY2tQYXJzZXIpLFxuICAgIGludGVncmF0aW9uczogZ2V0SW50ZWdyYXRpb25zVG9TZXR1cChvcHRpb25zKSxcbiAgICB0cmFuc3BvcnQ6IG9wdGlvbnMudHJhbnNwb3J0IHx8IG1ha2VGZXRjaFRyYW5zcG9ydCxcbiAgfTtcblxuICBpbml0QW5kQmluZChCcm93c2VyQ2xpZW50LCBjbGllbnRPcHRpb25zKTtcblxuICBpZiAob3B0aW9ucy5hdXRvU2Vzc2lvblRyYWNraW5nKSB7XG4gICAgc3RhcnRTZXNzaW9uVHJhY2tpbmcoKTtcbiAgfVxufVxuXG4vKipcbiAqIEFsbCBwcm9wZXJ0aWVzIHRoZSByZXBvcnQgZGlhbG9nIHN1cHBvcnRzXG4gKi9cblxuLyoqXG4gKiBQcmVzZW50IHRoZSB1c2VyIHdpdGggYSByZXBvcnQgZGlhbG9nLlxuICpcbiAqIEBwYXJhbSBvcHRpb25zIEV2ZXJ5dGhpbmcgaXMgb3B0aW9uYWwsIHdlIHRyeSB0byBmZXRjaCBhbGwgaW5mbyBuZWVkIGZyb20gdGhlIGdsb2JhbCBzY29wZS5cbiAqL1xuZnVuY3Rpb24gc2hvd1JlcG9ydERpYWxvZyhvcHRpb25zID0ge30pIHtcbiAgLy8gZG9lc24ndCB3b3JrIHdpdGhvdXQgYSBkb2N1bWVudCAoUmVhY3QgTmF0aXZlKVxuICBpZiAoIVdJTkRPVy5kb2N1bWVudCkge1xuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5lcnJvcignR2xvYmFsIGRvY3VtZW50IG5vdCBkZWZpbmVkIGluIHNob3dSZXBvcnREaWFsb2cgY2FsbCcpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IHNjb3BlID0gZ2V0Q3VycmVudFNjb3BlKCk7XG4gIGNvbnN0IGNsaWVudCA9IHNjb3BlLmdldENsaWVudCgpO1xuICBjb25zdCBkc24gPSBjbGllbnQgJiYgY2xpZW50LmdldERzbigpO1xuXG4gIGlmICghZHNuKSB7XG4gICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmVycm9yKCdEU04gbm90IGNvbmZpZ3VyZWQgZm9yIHNob3dSZXBvcnREaWFsb2cgY2FsbCcpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChzY29wZSkge1xuICAgIG9wdGlvbnMudXNlciA9IHtcbiAgICAgIC4uLnNjb3BlLmdldFVzZXIoKSxcbiAgICAgIC4uLm9wdGlvbnMudXNlcixcbiAgICB9O1xuICB9XG5cbiAgaWYgKCFvcHRpb25zLmV2ZW50SWQpIHtcbiAgICBjb25zdCBldmVudElkID0gbGFzdEV2ZW50SWQoKTtcbiAgICBpZiAoZXZlbnRJZCkge1xuICAgICAgb3B0aW9ucy5ldmVudElkID0gZXZlbnRJZDtcbiAgICB9XG4gIH1cblxuICBjb25zdCBzY3JpcHQgPSBXSU5ET1cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gIHNjcmlwdC5hc3luYyA9IHRydWU7XG4gIHNjcmlwdC5jcm9zc09yaWdpbiA9ICdhbm9ueW1vdXMnO1xuICBzY3JpcHQuc3JjID0gZ2V0UmVwb3J0RGlhbG9nRW5kcG9pbnQoZHNuLCBvcHRpb25zKTtcblxuICBpZiAob3B0aW9ucy5vbkxvYWQpIHtcbiAgICBzY3JpcHQub25sb2FkID0gb3B0aW9ucy5vbkxvYWQ7XG4gIH1cblxuICBjb25zdCB7IG9uQ2xvc2UgfSA9IG9wdGlvbnM7XG4gIGlmIChvbkNsb3NlKSB7XG4gICAgY29uc3QgcmVwb3J0RGlhbG9nQ2xvc2VkTWVzc2FnZUhhbmRsZXIgPSAoZXZlbnQpID0+IHtcbiAgICAgIGlmIChldmVudC5kYXRhID09PSAnX19zZW50cnlfcmVwb3J0ZGlhbG9nX2Nsb3NlZF9fJykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIG9uQ2xvc2UoKTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBXSU5ET1cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIHJlcG9ydERpYWxvZ0Nsb3NlZE1lc3NhZ2VIYW5kbGVyKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gICAgV0lORE9XLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCByZXBvcnREaWFsb2dDbG9zZWRNZXNzYWdlSGFuZGxlcik7XG4gIH1cblxuICBjb25zdCBpbmplY3Rpb25Qb2ludCA9IFdJTkRPVy5kb2N1bWVudC5oZWFkIHx8IFdJTkRPVy5kb2N1bWVudC5ib2R5O1xuICBpZiAoaW5qZWN0aW9uUG9pbnQpIHtcbiAgICBpbmplY3Rpb25Qb2ludC5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICB9IGVsc2Uge1xuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5lcnJvcignTm90IGluamVjdGluZyByZXBvcnQgZGlhbG9nLiBObyBpbmplY3Rpb24gcG9pbnQgZm91bmQgaW4gSFRNTCcpO1xuICB9XG59XG5cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBpcyBoZXJlIHRvIGJlIEFQSSBjb21wYXRpYmxlIHdpdGggdGhlIGxvYWRlci5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gZm9yY2VMb2FkKCkge1xuICAvLyBOb29wXG59XG5cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBpcyBoZXJlIHRvIGJlIEFQSSBjb21wYXRpYmxlIHdpdGggdGhlIGxvYWRlci5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gb25Mb2FkKGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKCk7XG59XG5cbi8qKlxuICogRW5hYmxlIGF1dG9tYXRpYyBTZXNzaW9uIFRyYWNraW5nIGZvciB0aGUgaW5pdGlhbCBwYWdlIGxvYWQuXG4gKi9cbmZ1bmN0aW9uIHN0YXJ0U2Vzc2lvblRyYWNraW5nKCkge1xuICBpZiAodHlwZW9mIFdJTkRPVy5kb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIud2FybignU2Vzc2lvbiB0cmFja2luZyBpbiBub24tYnJvd3NlciBlbnZpcm9ubWVudCB3aXRoIEBzZW50cnkvYnJvd3NlciBpcyBub3Qgc3VwcG9ydGVkLicpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIFRoZSBzZXNzaW9uIGR1cmF0aW9uIGZvciBicm93c2VyIHNlc3Npb25zIGRvZXMgbm90IHRyYWNrIGEgbWVhbmluZ2Z1bFxuICAvLyBjb25jZXB0IHRoYXQgY2FuIGJlIHVzZWQgYXMgYSBtZXRyaWMuXG4gIC8vIEF1dG9tYXRpY2FsbHkgY2FwdHVyZWQgc2Vzc2lvbnMgYXJlIGFraW4gdG8gcGFnZSB2aWV3cywgYW5kIHRodXMgd2VcbiAgLy8gZGlzY2FyZCB0aGVpciBkdXJhdGlvbi5cbiAgc3RhcnRTZXNzaW9uKHsgaWdub3JlRHVyYXRpb246IHRydWUgfSk7XG4gIGNhcHR1cmVTZXNzaW9uKCk7XG5cbiAgLy8gV2Ugd2FudCB0byBjcmVhdGUgYSBzZXNzaW9uIGZvciBldmVyeSBuYXZpZ2F0aW9uIGFzIHdlbGxcbiAgYWRkSGlzdG9yeUluc3RydW1lbnRhdGlvbkhhbmRsZXIoKHsgZnJvbSwgdG8gfSkgPT4ge1xuICAgIC8vIERvbid0IGNyZWF0ZSBhbiBhZGRpdGlvbmFsIHNlc3Npb24gZm9yIHRoZSBpbml0aWFsIHJvdXRlIG9yIGlmIHRoZSBsb2NhdGlvbiBkaWQgbm90IGNoYW5nZVxuICAgIGlmIChmcm9tICE9PSB1bmRlZmluZWQgJiYgZnJvbSAhPT0gdG8pIHtcbiAgICAgIHN0YXJ0U2Vzc2lvbih7IGlnbm9yZUR1cmF0aW9uOiB0cnVlIH0pO1xuICAgICAgY2FwdHVyZVNlc3Npb24oKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vKipcbiAqIENhcHR1cmVzIHVzZXIgZmVlZGJhY2sgYW5kIHNlbmRzIGl0IHRvIFNlbnRyeS5cbiAqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYGNhcHR1cmVGZWVkYmFja2AgaW5zdGVhZC5cbiAqL1xuZnVuY3Rpb24gY2FwdHVyZVVzZXJGZWVkYmFjayhmZWVkYmFjaykge1xuICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoKTtcbiAgaWYgKGNsaWVudCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgIGNsaWVudC5jYXB0dXJlVXNlckZlZWRiYWNrKGZlZWRiYWNrKTtcbiAgfVxufVxuXG5leHBvcnQgeyBjYXB0dXJlVXNlckZlZWRiYWNrLCBmb3JjZUxvYWQsIGdldERlZmF1bHRJbnRlZ3JhdGlvbnMsIGluaXQsIG9uTG9hZCwgc2hvd1JlcG9ydERpYWxvZyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/sdk.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/stack-parsers.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/stack-parsers.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"chromeStackLineParser\": function() { return /* binding */ chromeStackLineParser; },\n/* harmony export */   \"defaultStackLineParsers\": function() { return /* binding */ defaultStackLineParsers; },\n/* harmony export */   \"defaultStackParser\": function() { return /* binding */ defaultStackParser; },\n/* harmony export */   \"geckoStackLineParser\": function() { return /* binding */ geckoStackLineParser; },\n/* harmony export */   \"opera10StackLineParser\": function() { return /* binding */ opera10StackLineParser; },\n/* harmony export */   \"opera11StackLineParser\": function() { return /* binding */ opera11StackLineParser; },\n/* harmony export */   \"winjsStackLineParser\": function() { return /* binding */ winjsStackLineParser; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func === '<anonymous>' ? _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.UNKNOWN_FUNCTION : func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// This regex matches frames that have no function name (ie. are at the top level of a module).\n// For example \"at http://localhost:5000//script.js:1:126\"\n// Frames _with_ function names usually look as follows: \"at commitLayoutEffects (react-dom.development.js:23426:1)\"\nconst chromeRegexNoFnName = /^\\s*at (\\S+?)(?::(\\d+))(?::(\\d+))\\s*$/i;\n\n// This regex matches all the frames that have a function name.\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn = line => {\n  // If the stack line has no function name, we need to parse it differently\n  const noFnParts = chromeRegexNoFnName.exec(line);\n\n  if (noFnParts) {\n    const [, filename, line, col] = noFnParts;\n    return createFrame(filename, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.UNKNOWN_FUNCTION, +line, +col);\n  }\n\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser];\n\nconst defaultStackParser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createStackParser)(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\n\n//# sourceMappingURL=stack-parsers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/stack-parsers.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/tracing/backgroundtab.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/tracing/backgroundtab.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerBackgroundTabDetection\": function() { return /* binding */ registerBackgroundTabDetection; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document) {\n    _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getActiveSpan)();\n      if (!activeSpan) {\n        return;\n      }\n\n      const rootSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getRootSpan)(activeSpan);\n\n      if (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.hidden && rootSpan) {\n        const cancelledStatus = 'cancelled';\n\n        const { op, status } = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(rootSpan);\n\n        if (_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`[Tracing] Transaction: ${cancelledStatus} -> since tab moved to the background, op: ${op}`);\n        }\n\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          rootSpan.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_ERROR, message: cancelledStatus });\n        }\n\n        rootSpan.setAttribute('sentry.cancellation_reason', 'document.hidden');\n        rootSpan.end();\n      }\n    });\n  } else {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\n\n//# sourceMappingURL=backgroundtab.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFjaW5nL2JhY2tncm91bmR0YWIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUY7QUFDbEQ7QUFDUztBQUNUOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSwrQ0FBTSxJQUFJLHdEQUFlO0FBQy9CLElBQUkseUVBQWdDO0FBQ3BDLHlCQUF5QiwyREFBYTtBQUN0QztBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLHlEQUFXOztBQUVsQyxVQUFVLCtEQUFzQjtBQUNoQzs7QUFFQSxnQkFBZ0IsYUFBYSxFQUFFLHdEQUFVOztBQUV6QyxZQUFZLHdEQUFXO0FBQ3ZCLFVBQVUscURBQVUsMkJBQTJCLGlCQUFpQiw0Q0FBNEMsR0FBRztBQUMvRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsTUFBTSwyREFBaUIsNEJBQTRCO0FBQ2xGOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0osSUFBSSx3REFBVyxJQUFJLHNEQUFXO0FBQzlCO0FBQ0E7O0FBRTBDO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL3RyYWNpbmcvYmFja2dyb3VuZHRhYi5qcz82YTUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEFjdGl2ZVNwYW4sIGdldFJvb3RTcGFuLCBzcGFuVG9KU09OLCBTUEFOX1NUQVRVU19FUlJPUiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi4vZGVidWctYnVpbGQuanMnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vaGVscGVycy5qcyc7XG5cbi8qKlxuICogQWRkIGEgbGlzdGVuZXIgdGhhdCBjYW5jZWxzIGFuZCBmaW5pc2hlcyBhIHRyYW5zYWN0aW9uIHdoZW4gdGhlIGdsb2JhbFxuICogZG9jdW1lbnQgaXMgaGlkZGVuLlxuICovXG5mdW5jdGlvbiByZWdpc3RlckJhY2tncm91bmRUYWJEZXRlY3Rpb24oKSB7XG4gIGlmIChXSU5ET1cgJiYgV0lORE9XLmRvY3VtZW50KSB7XG4gICAgV0lORE9XLmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCAoKSA9PiB7XG4gICAgICBjb25zdCBhY3RpdmVTcGFuID0gZ2V0QWN0aXZlU3BhbigpO1xuICAgICAgaWYgKCFhY3RpdmVTcGFuKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgcm9vdFNwYW4gPSBnZXRSb290U3BhbihhY3RpdmVTcGFuKTtcblxuICAgICAgaWYgKFdJTkRPVy5kb2N1bWVudC5oaWRkZW4gJiYgcm9vdFNwYW4pIHtcbiAgICAgICAgY29uc3QgY2FuY2VsbGVkU3RhdHVzID0gJ2NhbmNlbGxlZCc7XG5cbiAgICAgICAgY29uc3QgeyBvcCwgc3RhdHVzIH0gPSBzcGFuVG9KU09OKHJvb3RTcGFuKTtcblxuICAgICAgICBpZiAoREVCVUdfQlVJTEQpIHtcbiAgICAgICAgICBsb2dnZXIubG9nKGBbVHJhY2luZ10gVHJhbnNhY3Rpb246ICR7Y2FuY2VsbGVkU3RhdHVzfSAtPiBzaW5jZSB0YWIgbW92ZWQgdG8gdGhlIGJhY2tncm91bmQsIG9wOiAke29wfWApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gV2Ugc2hvdWxkIG5vdCBzZXQgc3RhdHVzIGlmIGl0IGlzIGFscmVhZHkgc2V0LCB0aGlzIHByZXZlbnQgaW1wb3J0YW50IHN0YXR1c2VzIGxpa2VcbiAgICAgICAgLy8gZXJyb3Igb3IgZGF0YSBsb3NzIGZyb20gYmVpbmcgb3ZlcndyaXR0ZW4gb24gdHJhbnNhY3Rpb24uXG4gICAgICAgIGlmICghc3RhdHVzKSB7XG4gICAgICAgICAgcm9vdFNwYW4uc2V0U3RhdHVzKHsgY29kZTogU1BBTl9TVEFUVVNfRVJST1IsIG1lc3NhZ2U6IGNhbmNlbGxlZFN0YXR1cyB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJvb3RTcGFuLnNldEF0dHJpYnV0ZSgnc2VudHJ5LmNhbmNlbGxhdGlvbl9yZWFzb24nLCAnZG9jdW1lbnQuaGlkZGVuJyk7XG4gICAgICAgIHJvb3RTcGFuLmVuZCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci53YXJuKCdbVHJhY2luZ10gQ291bGQgbm90IHNldCB1cCBiYWNrZ3JvdW5kIHRhYiBkZXRlY3Rpb24gZHVlIHRvIGxhY2sgb2YgZ2xvYmFsIGRvY3VtZW50Jyk7XG4gIH1cbn1cblxuZXhwb3J0IHsgcmVnaXN0ZXJCYWNrZ3JvdW5kVGFiRGV0ZWN0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYWNrZ3JvdW5kdGFiLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/tracing/backgroundtab.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/tracing/browserTracingIntegration.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/tracing/browserTracingIntegration.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BROWSER_TRACING_INTEGRATION_ID\": function() { return /* binding */ BROWSER_TRACING_INTEGRATION_ID; },\n/* harmony export */   \"browserTracingIntegration\": function() { return /* binding */ browserTracingIntegration; },\n/* harmony export */   \"getMetaContent\": function() { return /* binding */ getMetaContent; },\n/* harmony export */   \"startBrowserTracingNavigationSpan\": function() { return /* binding */ startBrowserTracingNavigationSpan; },\n/* harmony export */   \"startBrowserTracingPageLoadSpan\": function() { return /* binding */ startBrowserTracingPageLoadSpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry-internal/browser-utils */ \"./node_modules/@sentry-internal/browser-utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/browser/esm/debug-build.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _backgroundtab_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./backgroundtab.js */ \"./node_modules/@sentry/browser/esm/tracing/backgroundtab.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./request.js */ \"./node_modules/@sentry/browser/esm/tracing/request.js\");\n\n\n\n\n\n\n\n\n/* eslint-disable max-lines */\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_0__.TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableInp: true,\n  _experiments: {},\n  ..._request_js__WEBPACK_IMPORTED_MODULE_1__.defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nconst browserTracingIntegration = ((_options = {}) => {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.registerSpanErrorInstrumentation)();\n\n  const {\n    enableInp,\n    enableLongTask,\n    _experiments: { enableInteractions },\n    beforeStartSpan,\n    idleTimeout,\n    finalTimeout,\n    childSpanTimeout,\n    markBackgroundSpan,\n    traceFetch,\n    traceXHR,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n    instrumentPageLoad,\n    instrumentNavigation,\n  } = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  const _collectWebVitals = (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__.startTrackingWebVitals)();\n\n  if (enableInp) {\n    (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__.startTrackingINP)();\n  }\n\n  if (enableLongTask) {\n    (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__.startTrackingLongTasks)();\n  }\n  if (enableInteractions) {\n    (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__.startTrackingInteractions)();\n  }\n\n  const latestRoute = {\n    name: undefined,\n    source: undefined,\n  };\n\n  /** Create routing idle transaction. */\n  function _createRouteSpan(client, startSpanOptions) {\n    const isPageloadTransaction = startSpanOptions.op === 'pageload';\n\n    const finalStartSpanOptions = beforeStartSpan\n      ? beforeStartSpan(startSpanOptions)\n      : startSpanOptions;\n\n    const attributes = finalStartSpanOptions.attributes || {};\n\n    // If `finalStartSpanOptions.name` is different than `startSpanOptions.name`\n    // it is because `beforeStartSpan` set a custom name. Therefore we set the source to 'custom'.\n    if (startSpanOptions.name !== finalStartSpanOptions.name) {\n      attributes[_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] = 'custom';\n      finalStartSpanOptions.attributes = attributes;\n    }\n\n    latestRoute.name = finalStartSpanOptions.name;\n    latestRoute.source = attributes[_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n    const idleSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startIdleSpan)(finalStartSpanOptions, {\n      idleTimeout,\n      finalTimeout,\n      childSpanTimeout,\n      // should wait for finish signal if it's a pageload transaction\n      disableAutoFinish: isPageloadTransaction,\n      beforeSpanEnd: span => {\n        _collectWebVitals();\n        (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__.addPerformanceEntries)(span);\n      },\n    });\n\n    function emitFinish() {\n      if (['interactive', 'complete'].includes(_helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.document.readyState)) {\n        client.emit('idleSpanEnableAutoFinish', idleSpan);\n      }\n    }\n\n    if (isPageloadTransaction && _helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.document) {\n      _helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.document.addEventListener('readystatechange', () => {\n        emitFinish();\n      });\n\n      emitFinish();\n    }\n\n    return idleSpan;\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    afterAllSetup(client) {\n      let activeSpan;\n      let startingUrl = _helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location && _helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location.href;\n\n      client.on('startNavigationSpan', startSpanOptions => {\n        if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)() !== client) {\n          return;\n        }\n\n        if (activeSpan) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`[Tracing] Finishing current root span with op: ${(0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToJSON)(activeSpan).op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeSpan.end();\n        }\n        activeSpan = _createRouteSpan(client, {\n          op: 'navigation',\n          ...startSpanOptions,\n        });\n      });\n\n      client.on('startPageLoadSpan', (startSpanOptions, traceOptions = {}) => {\n        if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)() !== client) {\n          return;\n        }\n\n        if (activeSpan) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`[Tracing] Finishing current root span with op: ${(0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToJSON)(activeSpan).op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeSpan.end();\n        }\n\n        const sentryTrace = traceOptions.sentryTrace || getMetaContent('sentry-trace');\n        const baggage = traceOptions.baggage || getMetaContent('baggage');\n\n        const propagationContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.propagationContextFromHeaders)(sentryTrace, baggage);\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().setPropagationContext(propagationContext);\n\n        activeSpan = _createRouteSpan(client, {\n          op: 'pageload',\n          ...startSpanOptions,\n        });\n      });\n\n      // A trace should to stay the consistent over the entire time span of one route.\n      // Therefore, when the initial pageload or navigation root span ends, we update the\n      // scope's propagation context to keep span-specific attributes like the `sampled` decision and\n      // the dynamic sampling context valid, even after the root span has ended.\n      // This ensures that the trace data is consistent for the entire duration of the route.\n      client.on('spanEnd', span => {\n        const op = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToJSON)(span).op;\n        if (span !== (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getRootSpan)(span) || (op !== 'navigation' && op !== 'pageload')) {\n          return;\n        }\n\n        const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n        const oldPropagationContext = scope.getPropagationContext();\n\n        scope.setPropagationContext({\n          ...oldPropagationContext,\n          sampled: oldPropagationContext.sampled !== undefined ? oldPropagationContext.sampled : (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanIsSampled)(span),\n          dsc: oldPropagationContext.dsc || (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getDynamicSamplingContextFromSpan)(span),\n        });\n      });\n\n      if (_helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location) {\n        if (instrumentPageLoad) {\n          startBrowserTracingPageLoadSpan(client, {\n            name: _helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location.pathname,\n            // pageload should always start at timeOrigin (and needs to be in s, not ms)\n            startTime: _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.browserPerformanceTimeOrigin ? _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.browserPerformanceTimeOrigin / 1000 : undefined,\n            attributes: {\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.browser',\n            },\n          });\n        }\n\n        if (instrumentNavigation) {\n          (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__.addHistoryInstrumentationHandler)(({ to, from }) => {\n            /**\n             * This early return is there to account for some cases where a navigation transaction starts right after\n             * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n             * create an uneccessary navigation transaction.\n             *\n             * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n             * only be caused in certain development environments where the usage of a hot module reloader is causing\n             * errors.\n             */\n            if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n              startingUrl = undefined;\n              return;\n            }\n\n            if (from !== to) {\n              startingUrl = undefined;\n              startBrowserTracingNavigationSpan(client, {\n                name: _helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location.pathname,\n                attributes: {\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.browser',\n                },\n              });\n            }\n          });\n        }\n      }\n\n      if (markBackgroundSpan) {\n        (0,_backgroundtab_js__WEBPACK_IMPORTED_MODULE_6__.registerBackgroundTabDetection)();\n      }\n\n      if (enableInteractions) {\n        registerInteractionListener(idleTimeout, finalTimeout, childSpanTimeout, latestRoute);\n      }\n\n      (0,_request_js__WEBPACK_IMPORTED_MODULE_1__.instrumentOutgoingRequests)({\n        traceFetch,\n        traceXHR,\n        tracePropagationTargets: client.getOptions().tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n      });\n    },\n  };\n}) ;\n\n/**\n * Manually start a page load span.\n * This will only do something if a browser tracing integration integration has been setup.\n *\n * If you provide a custom `traceOptions` object, it will be used to continue the trace\n * instead of the default behavior, which is to look it up on the <meta> tags.\n */\nfunction startBrowserTracingPageLoadSpan(\n  client,\n  spanOptions,\n  traceOptions,\n) {\n  client.emit('startPageLoadSpan', spanOptions, traceOptions);\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().setTransactionName(spanOptions.name);\n\n  const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getActiveSpan)();\n  const op = span && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToJSON)(span).op;\n  return op === 'pageload' ? span : undefined;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if a browser tracing integration has been setup.\n */\nfunction startBrowserTracingNavigationSpan(client, spanOptions) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)().setPropagationContext((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.generatePropagationContext)());\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().setPropagationContext((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.generatePropagationContext)());\n\n  client.emit('startNavigationSpan', spanOptions);\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().setTransactionName(spanOptions.name);\n\n  const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getActiveSpan)();\n  const op = span && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToJSON)(span).op;\n  return op === 'navigation' ? span : undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.getDomElement)(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  idleTimeout,\n  finalTimeout,\n  childSpanTimeout,\n  latestRoute,\n) {\n  let inflightInteractionSpan;\n  const registerInteractionTransaction = () => {\n    const op = 'ui.action.click';\n\n    const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getActiveSpan)();\n    const rootSpan = activeSpan && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getRootSpan)(activeSpan);\n    if (rootSpan) {\n      const currentRootSpanOp = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanToJSON)(rootSpan).op;\n      if (['navigation', 'pageload'].includes(currentRootSpanOp )) {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${op} span because a pageload or navigation span is in progress.`);\n        return undefined;\n      }\n    }\n\n    if (inflightInteractionSpan) {\n      inflightInteractionSpan.setAttribute(_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, 'interactionInterrupted');\n      inflightInteractionSpan.end();\n      inflightInteractionSpan = undefined;\n    }\n\n    if (!latestRoute.name) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    inflightInteractionSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startIdleSpan)(\n      {\n        name: latestRoute.name,\n        op,\n        attributes: {\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.source || 'url',\n        },\n      },\n      {\n        idleTimeout,\n        finalTimeout,\n        childSpanTimeout,\n      },\n    );\n  };\n\n  if (_helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.document) {\n    addEventListener('click', registerInteractionTransaction, { once: false, capture: true });\n  }\n}\n\n\n//# sourceMappingURL=browserTracingIntegration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/tracing/browserTracingIntegration.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/tracing/request.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/tracing/request.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultRequestInstrumentationOptions\": function() { return /* binding */ defaultRequestInstrumentationOptions; },\n/* harmony export */   \"extractNetworkProtocol\": function() { return /* binding */ extractNetworkProtocol; },\n/* harmony export */   \"instrumentOutgoingRequests\": function() { return /* binding */ instrumentOutgoingRequests; },\n/* harmony export */   \"shouldAttachHeaders\": function() { return /* binding */ shouldAttachHeaders; },\n/* harmony export */   \"xhrCallback\": function() { return /* binding */ xhrCallback; }\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry-internal/browser-utils */ \"./node_modules/@sentry-internal/browser-utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  const { traceFetch, traceXHR, shouldCreateSpanForRequest, enableHTTPTimings, tracePropagationTargets } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  const shouldAttachHeadersWithTargets = (url) => shouldAttachHeaders(url, tracePropagationTargets);\n\n  const spans = {};\n\n  if (traceFetch) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addFetchInstrumentationHandler)(handlerData => {\n      const createdSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.instrumentFetchRequest)(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseUrl)(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__.addXhrInstrumentationHandler)(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry) {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry ).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const { url } = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__.addPerformanceInstrumentationHandler)('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time = 0) {\n  return ((_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming) {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * We only export this function for testing purposes.\n */\nfunction shouldAttachHeaders(\n  targetUrl,\n  tracePropagationTargets,\n) {\n  // window.location.href not being defined is an edge case in the browser but we need to handle it.\n  // Potentially dangerous situations where it may not be defined: Browser Extensions, Web Workers, patching of the location obj\n  const href = _helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location && _helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location.href;\n\n  if (!href) {\n    // If there is no window.location.origin, we default to only attaching tracing headers to relative requests, i.e. ones that start with `/`\n    // BIG DISCLAIMER: Users can call URLs with a double slash (fetch(\"//example.com/api\")), this is a shorthand for \"send to the same protocol\",\n    // so we need a to exclude those requests, because they might be cross origin.\n    const isRelativeSameOriginRequest = !!targetUrl.match(/^\\/(?!\\/)/);\n    if (!tracePropagationTargets) {\n      return isRelativeSameOriginRequest;\n    } else {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stringMatchesSomePattern)(targetUrl, tracePropagationTargets);\n    }\n  } else {\n    let resolvedUrl;\n    let currentOrigin;\n\n    // URL parsing may fail, we default to not attaching trace headers in that case.\n    try {\n      resolvedUrl = new URL(targetUrl, href);\n      currentOrigin = new URL(href).origin;\n    } catch (e) {\n      return false;\n    }\n\n    const isSameOriginRequest = resolvedUrl.origin === currentOrigin;\n    if (!tracePropagationTargets) {\n      return isSameOriginRequest;\n    } else {\n      return (\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stringMatchesSomePattern)(resolvedUrl.toString(), tracePropagationTargets) ||\n        (isSameOriginRequest && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stringMatchesSomePattern)(resolvedUrl.pathname, tracePropagationTargets))\n      );\n    }\n  }\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_2__.SENTRY_XHR_DATA_KEY];\n\n  if (!xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.hasTracingEnabled)() && shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setHttpStatus)(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseUrl)(fullUrl).host : undefined;\n\n  const hasParent = !!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getActiveSpan)();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.startInactiveSpan)({\n          name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n          attributes: {\n            type: 'xhr',\n            'http.method': sentryXhrData.method,\n            'http.url': fullUrl,\n            url: sentryXhrData.url,\n            'server.address': host,\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SentryNonRecordingSpan();\n\n  xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n  spans[xhr.__sentry_xhr_span_id__] = span;\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url) && client) {\n    addTracingHeadersToXhrRequest(\n      xhr,\n      client,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.hasTracingEnabled)() && hasParent ? span : undefined,\n    );\n  }\n\n  return span;\n}\n\nfunction addTracingHeadersToXhrRequest(xhr, client, span) {\n  const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)();\n  const isolationScope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getIsolationScope)();\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader =\n    span && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.hasTracingEnabled)() ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.spanToTraceHeader)(span) : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.generateSentryTraceHeader)(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicSamplingContextToSentryBaggageHeader)(\n    dsc || (span ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getDynamicSamplingContextFromSpan)(span) : (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getDynamicSamplingContextFromClient)(traceId, client)),\n  );\n\n  setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url) {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, _helpers_js__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location.origin);\n    return parsed.href;\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n\n//# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/tracing/request.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/fetch.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/fetch.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeFetchTransport\": function() { return /* binding */ makeFetchTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry-internal/browser-utils */ \"./node_modules/@sentry-internal/browser-utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_0__.getNativeImplementation)('fetch'),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    if (!nativeFetch) {\n      (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_0__.clearCachedImplementation)('fetch');\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.rejectedSyncPromise)('No fetch implementation available');\n    }\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      (0,_sentry_internal_browser_utils__WEBPACK_IMPORTED_MODULE_0__.clearCachedImplementation)('fetch');\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.rejectedSyncPromise)(e);\n    }\n  }\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.createTransport)(options, makeRequest);\n}\n\n\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL2ZldGNoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0c7QUFDckQ7QUFDSzs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1RkFBdUI7QUFDdkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSx5RkFBeUI7QUFDL0IsYUFBYSxrRUFBbUI7QUFDaEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTixNQUFNLHlGQUF5QjtBQUMvQjtBQUNBO0FBQ0EsYUFBYSxrRUFBbUI7QUFDaEM7QUFDQTs7QUFFQSxTQUFTLDZEQUFlO0FBQ3hCOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL2ZldGNoLmpzPzEwZjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmF0aXZlSW1wbGVtZW50YXRpb24sIGNsZWFyQ2FjaGVkSW1wbGVtZW50YXRpb24gfSBmcm9tICdAc2VudHJ5LWludGVybmFsL2Jyb3dzZXItdXRpbHMnO1xuaW1wb3J0IHsgY3JlYXRlVHJhbnNwb3J0IH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IHJlamVjdGVkU3luY1Byb21pc2UgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgVHJhbnNwb3J0IHRoYXQgdXNlcyB0aGUgRmV0Y2ggQVBJIHRvIHNlbmQgZXZlbnRzIHRvIFNlbnRyeS5cbiAqL1xuZnVuY3Rpb24gbWFrZUZldGNoVHJhbnNwb3J0KFxuICBvcHRpb25zLFxuICBuYXRpdmVGZXRjaCA9IGdldE5hdGl2ZUltcGxlbWVudGF0aW9uKCdmZXRjaCcpLFxuKSB7XG4gIGxldCBwZW5kaW5nQm9keVNpemUgPSAwO1xuICBsZXQgcGVuZGluZ0NvdW50ID0gMDtcblxuICBmdW5jdGlvbiBtYWtlUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgY29uc3QgcmVxdWVzdFNpemUgPSByZXF1ZXN0LmJvZHkubGVuZ3RoO1xuICAgIHBlbmRpbmdCb2R5U2l6ZSArPSByZXF1ZXN0U2l6ZTtcbiAgICBwZW5kaW5nQ291bnQrKztcblxuICAgIGNvbnN0IHJlcXVlc3RPcHRpb25zID0ge1xuICAgICAgYm9keTogcmVxdWVzdC5ib2R5LFxuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICByZWZlcnJlclBvbGljeTogJ29yaWdpbicsXG4gICAgICBoZWFkZXJzOiBvcHRpb25zLmhlYWRlcnMsXG4gICAgICAvLyBPdXRnb2luZyByZXF1ZXN0cyBhcmUgdXN1YWxseSBjYW5jZWxsZWQgd2hlbiBuYXZpZ2F0aW5nIHRvIGEgZGlmZmVyZW50IHBhZ2UsIGNhdXNpbmcgYSBcIlR5cGVFcnJvcjogRmFpbGVkIHRvXG4gICAgICAvLyBmZXRjaFwiIGVycm9yIGFuZCBzZW5kaW5nIGEgXCJuZXR3b3JrX2Vycm9yXCIgY2xpZW50LW91dGNvbWUgLSBpbiBDaHJvbWUsIHRoZSByZXF1ZXN0IHN0YXR1cyBzaG93cyBcIihjYW5jZWxsZWQpXCIuXG4gICAgICAvLyBUaGUgYGtlZXBhbGl2ZWAgZmxhZyBrZWVwcyBvdXRnb2luZyByZXF1ZXN0cyBhbGl2ZSwgZXZlbiB3aGVuIHN3aXRjaGluZyBwYWdlcy4gV2Ugd2FudCB0aGlzIHNpbmNlIHdlJ3JlXG4gICAgICAvLyBmcmVxdWVudGx5IHNlbmRpbmcgZXZlbnRzIHJpZ2h0IGJlZm9yZSB0aGUgdXNlciBpcyBzd2l0Y2hpbmcgcGFnZXMgKGVnLiB3aGVuZmluaXNoaW5nIG5hdmlnYXRpb24gdHJhbnNhY3Rpb25zKS5cbiAgICAgIC8vIEdvdGNoYXM6XG4gICAgICAvLyAtIGBrZWVwYWxpdmVgIGlzbid0IHN1cHBvcnRlZCBieSBGaXJlZm94XG4gICAgICAvLyAtIEFzIHBlciBzcGVjIChodHRwczovL2ZldGNoLnNwZWMud2hhdHdnLm9yZy8jaHR0cC1uZXR3b3JrLW9yLWNhY2hlLWZldGNoKTpcbiAgICAgIC8vICAgSWYgdGhlIHN1bSBvZiBjb250ZW50TGVuZ3RoIGFuZCBpbmZsaWdodEtlZXBhbGl2ZUJ5dGVzIGlzIGdyZWF0ZXIgdGhhbiA2NCBraWJpYnl0ZXMsIHRoZW4gcmV0dXJuIGEgbmV0d29yayBlcnJvci5cbiAgICAgIC8vICAgV2Ugd2lsbCB0aGVyZWZvcmUgb25seSBhY3RpdmF0ZSB0aGUgZmxhZyB3aGVuIHdlJ3JlIGJlbG93IHRoYXQgbGltaXQuXG4gICAgICAvLyBUaGVyZSBpcyBhbHNvIGEgbGltaXQgb2YgcmVxdWVzdHMgdGhhdCBjYW4gYmUgb3BlbiBhdCB0aGUgc2FtZSB0aW1lLCBzbyB3ZSBhbHNvIGxpbWl0IHRoaXMgdG8gMTVcbiAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L3B1bGwvNzU1MyBmb3IgZGV0YWlsc1xuICAgICAga2VlcGFsaXZlOiBwZW5kaW5nQm9keVNpemUgPD0gNjAwMDAgJiYgcGVuZGluZ0NvdW50IDwgMTUsXG4gICAgICAuLi5vcHRpb25zLmZldGNoT3B0aW9ucyxcbiAgICB9O1xuXG4gICAgaWYgKCFuYXRpdmVGZXRjaCkge1xuICAgICAgY2xlYXJDYWNoZWRJbXBsZW1lbnRhdGlvbignZmV0Y2gnKTtcbiAgICAgIHJldHVybiByZWplY3RlZFN5bmNQcm9taXNlKCdObyBmZXRjaCBpbXBsZW1lbnRhdGlvbiBhdmFpbGFibGUnKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG5hdGl2ZUZldGNoKG9wdGlvbnMudXJsLCByZXF1ZXN0T3B0aW9ucykudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgIHBlbmRpbmdCb2R5U2l6ZSAtPSByZXF1ZXN0U2l6ZTtcbiAgICAgICAgcGVuZGluZ0NvdW50LS07XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc3RhdHVzQ29kZTogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICd4LXNlbnRyeS1yYXRlLWxpbWl0cyc6IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdYLVNlbnRyeS1SYXRlLUxpbWl0cycpLFxuICAgICAgICAgICAgJ3JldHJ5LWFmdGVyJzogcmVzcG9uc2UuaGVhZGVycy5nZXQoJ1JldHJ5LUFmdGVyJyksXG4gICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNsZWFyQ2FjaGVkSW1wbGVtZW50YXRpb24oJ2ZldGNoJyk7XG4gICAgICBwZW5kaW5nQm9keVNpemUgLT0gcmVxdWVzdFNpemU7XG4gICAgICBwZW5kaW5nQ291bnQtLTtcbiAgICAgIHJldHVybiByZWplY3RlZFN5bmNQcm9taXNlKGUpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjcmVhdGVUcmFuc3BvcnQob3B0aW9ucywgbWFrZVJlcXVlc3QpO1xufVxuXG5leHBvcnQgeyBtYWtlRmV0Y2hUcmFuc3BvcnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/offline.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/offline.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createStore\": function() { return /* binding */ createStore; },\n/* harmony export */   \"makeBrowserOfflineTransport\": function() { return /* binding */ makeBrowserOfflineTransport; },\n/* harmony export */   \"push\": function() { return /* binding */ push; },\n/* harmony export */   \"shift\": function() { return /* binding */ shift; },\n/* harmony export */   \"unshift\": function() { return /* binding */ unshift; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fetch.js */ \"./node_modules/@sentry/browser/esm/transports/fetch.js\");\n\n\n\n\n// 'Store', 'promisifyRequest' and 'createStore' were originally copied from the 'idb-keyval' package before being\n// modified and simplified: https://github.com/jakearchibald/idb-keyval\n//\n// At commit: 0420a704fd6cbb4225429c536b1f61112d012fca\n// Original licence:\n\n// Copyright 2016, Jake Archibald\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nfunction promisifyRequest(request) {\n  return new Promise((resolve, reject) => {\n    // @ts-expect-error - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result);\n    // @ts-expect-error - file size hacks\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\n\n/** Create or open an IndexedDb store */\nfunction createStore(dbName, storeName) {\n  const request = indexedDB.open(dbName);\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n  const dbp = promisifyRequest(request);\n\n  return callback => dbp.then(db => callback(db.transaction(storeName, 'readwrite').objectStore(storeName)));\n}\n\nfunction keys(store) {\n  return promisifyRequest(store.getAllKeys() );\n}\n\n/** Insert into the end of the store */\nfunction push(store, value, maxQueueSize) {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an incremented key so that the entries are popped in order\n      store.put(value, Math.max(...keys, 0) + 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Insert into the front of the store */\nfunction unshift(store, value, maxQueueSize) {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an decremented key so that the entries are popped in order\n      store.put(value, Math.min(...keys, 0) - 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Pop the oldest value from the store */\nfunction shift(store) {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length === 0) {\n        return undefined;\n      }\n\n      return promisifyRequest(store.get(keys[0])).then(value => {\n        store.delete(keys[0]);\n        return promisifyRequest(store.transaction).then(() => value);\n      });\n    });\n  });\n}\n\nfunction createIndexedDbStore(options) {\n  let store;\n\n  // Lazily create the store only when it's needed\n  function getStore() {\n    if (store == undefined) {\n      store = createStore(options.dbName || 'sentry-offline', options.storeName || 'queue');\n    }\n\n    return store;\n  }\n\n  return {\n    push: async (env) => {\n      try {\n        const serialized = await (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.serializeEnvelope)(env);\n        await push(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    unshift: async (env) => {\n      try {\n        const serialized = await (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.serializeEnvelope)(env);\n        await unshift(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    shift: async () => {\n      try {\n        const deserialized = await shift(getStore());\n        if (deserialized) {\n          return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseEnvelope)(deserialized);\n        }\n      } catch (_) {\n        //\n      }\n\n      return undefined;\n    },\n  };\n}\n\nfunction makeIndexedDbOfflineTransport(\n  createTransport,\n) {\n  return options => createTransport({ ...options, createStore: createIndexedDbStore });\n}\n\n/**\n * Creates a transport that uses IndexedDb to store events when offline.\n */\nfunction makeBrowserOfflineTransport(\n  createTransport = _fetch_js__WEBPACK_IMPORTED_MODULE_1__.makeFetchTransport,\n) {\n  return makeIndexedDbOfflineTransport((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.makeOfflineTransport)(createTransport));\n}\n\n\n//# sourceMappingURL=offline.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0Q7QUFDYTtBQUNqQjs7QUFFaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGdFQUFpQjtBQUNsRDtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxpQ0FBaUMsZ0VBQWlCO0FBQ2xEO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNERBQWE7QUFDOUI7QUFDQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywrQ0FBK0M7QUFDckY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseURBQWtCO0FBQ3RDO0FBQ0EsdUNBQXVDLGtFQUFvQjtBQUMzRDs7QUFFMEU7QUFDMUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vdHJhbnNwb3J0cy9vZmZsaW5lLmpzP2UzY2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFrZU9mZmxpbmVUcmFuc3BvcnQgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgc2VyaWFsaXplRW52ZWxvcGUsIHBhcnNlRW52ZWxvcGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IG1ha2VGZXRjaFRyYW5zcG9ydCB9IGZyb20gJy4vZmV0Y2guanMnO1xuXG4vLyAnU3RvcmUnLCAncHJvbWlzaWZ5UmVxdWVzdCcgYW5kICdjcmVhdGVTdG9yZScgd2VyZSBvcmlnaW5hbGx5IGNvcGllZCBmcm9tIHRoZSAnaWRiLWtleXZhbCcgcGFja2FnZSBiZWZvcmUgYmVpbmdcbi8vIG1vZGlmaWVkIGFuZCBzaW1wbGlmaWVkOiBodHRwczovL2dpdGh1Yi5jb20vamFrZWFyY2hpYmFsZC9pZGIta2V5dmFsXG4vL1xuLy8gQXQgY29tbWl0OiAwNDIwYTcwNGZkNmNiYjQyMjU0MjljNTM2YjFmNjExMTJkMDEyZmNhXG4vLyBPcmlnaW5hbCBsaWNlbmNlOlxuXG4vLyBDb3B5cmlnaHQgMjAxNiwgSmFrZSBBcmNoaWJhbGRcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5mdW5jdGlvbiBwcm9taXNpZnlSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gZmlsZSBzaXplIGhhY2tzXG4gICAgcmVxdWVzdC5vbmNvbXBsZXRlID0gcmVxdWVzdC5vbnN1Y2Nlc3MgPSAoKSA9PiByZXNvbHZlKHJlcXVlc3QucmVzdWx0KTtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gZmlsZSBzaXplIGhhY2tzXG4gICAgcmVxdWVzdC5vbmFib3J0ID0gcmVxdWVzdC5vbmVycm9yID0gKCkgPT4gcmVqZWN0KHJlcXVlc3QuZXJyb3IpO1xuICB9KTtcbn1cblxuLyoqIENyZWF0ZSBvciBvcGVuIGFuIEluZGV4ZWREYiBzdG9yZSAqL1xuZnVuY3Rpb24gY3JlYXRlU3RvcmUoZGJOYW1lLCBzdG9yZU5hbWUpIHtcbiAgY29uc3QgcmVxdWVzdCA9IGluZGV4ZWREQi5vcGVuKGRiTmFtZSk7XG4gIHJlcXVlc3Qub251cGdyYWRlbmVlZGVkID0gKCkgPT4gcmVxdWVzdC5yZXN1bHQuY3JlYXRlT2JqZWN0U3RvcmUoc3RvcmVOYW1lKTtcbiAgY29uc3QgZGJwID0gcHJvbWlzaWZ5UmVxdWVzdChyZXF1ZXN0KTtcblxuICByZXR1cm4gY2FsbGJhY2sgPT4gZGJwLnRoZW4oZGIgPT4gY2FsbGJhY2soZGIudHJhbnNhY3Rpb24oc3RvcmVOYW1lLCAncmVhZHdyaXRlJykub2JqZWN0U3RvcmUoc3RvcmVOYW1lKSkpO1xufVxuXG5mdW5jdGlvbiBrZXlzKHN0b3JlKSB7XG4gIHJldHVybiBwcm9taXNpZnlSZXF1ZXN0KHN0b3JlLmdldEFsbEtleXMoKSApO1xufVxuXG4vKiogSW5zZXJ0IGludG8gdGhlIGVuZCBvZiB0aGUgc3RvcmUgKi9cbmZ1bmN0aW9uIHB1c2goc3RvcmUsIHZhbHVlLCBtYXhRdWV1ZVNpemUpIHtcbiAgcmV0dXJuIHN0b3JlKHN0b3JlID0+IHtcbiAgICByZXR1cm4ga2V5cyhzdG9yZSkudGhlbihrZXlzID0+IHtcbiAgICAgIGlmIChrZXlzLmxlbmd0aCA+PSBtYXhRdWV1ZVNpemUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBXZSBpbnNlcnQgd2l0aCBhbiBpbmNyZW1lbnRlZCBrZXkgc28gdGhhdCB0aGUgZW50cmllcyBhcmUgcG9wcGVkIGluIG9yZGVyXG4gICAgICBzdG9yZS5wdXQodmFsdWUsIE1hdGgubWF4KC4uLmtleXMsIDApICsgMSk7XG4gICAgICByZXR1cm4gcHJvbWlzaWZ5UmVxdWVzdChzdG9yZS50cmFuc2FjdGlvbik7XG4gICAgfSk7XG4gIH0pO1xufVxuXG4vKiogSW5zZXJ0IGludG8gdGhlIGZyb250IG9mIHRoZSBzdG9yZSAqL1xuZnVuY3Rpb24gdW5zaGlmdChzdG9yZSwgdmFsdWUsIG1heFF1ZXVlU2l6ZSkge1xuICByZXR1cm4gc3RvcmUoc3RvcmUgPT4ge1xuICAgIHJldHVybiBrZXlzKHN0b3JlKS50aGVuKGtleXMgPT4ge1xuICAgICAgaWYgKGtleXMubGVuZ3RoID49IG1heFF1ZXVlU2l6ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFdlIGluc2VydCB3aXRoIGFuIGRlY3JlbWVudGVkIGtleSBzbyB0aGF0IHRoZSBlbnRyaWVzIGFyZSBwb3BwZWQgaW4gb3JkZXJcbiAgICAgIHN0b3JlLnB1dCh2YWx1ZSwgTWF0aC5taW4oLi4ua2V5cywgMCkgLSAxKTtcbiAgICAgIHJldHVybiBwcm9taXNpZnlSZXF1ZXN0KHN0b3JlLnRyYW5zYWN0aW9uKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbi8qKiBQb3AgdGhlIG9sZGVzdCB2YWx1ZSBmcm9tIHRoZSBzdG9yZSAqL1xuZnVuY3Rpb24gc2hpZnQoc3RvcmUpIHtcbiAgcmV0dXJuIHN0b3JlKHN0b3JlID0+IHtcbiAgICByZXR1cm4ga2V5cyhzdG9yZSkudGhlbihrZXlzID0+IHtcbiAgICAgIGlmIChrZXlzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJvbWlzaWZ5UmVxdWVzdChzdG9yZS5nZXQoa2V5c1swXSkpLnRoZW4odmFsdWUgPT4ge1xuICAgICAgICBzdG9yZS5kZWxldGUoa2V5c1swXSk7XG4gICAgICAgIHJldHVybiBwcm9taXNpZnlSZXF1ZXN0KHN0b3JlLnRyYW5zYWN0aW9uKS50aGVuKCgpID0+IHZhbHVlKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSW5kZXhlZERiU3RvcmUob3B0aW9ucykge1xuICBsZXQgc3RvcmU7XG5cbiAgLy8gTGF6aWx5IGNyZWF0ZSB0aGUgc3RvcmUgb25seSB3aGVuIGl0J3MgbmVlZGVkXG4gIGZ1bmN0aW9uIGdldFN0b3JlKCkge1xuICAgIGlmIChzdG9yZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgIHN0b3JlID0gY3JlYXRlU3RvcmUob3B0aW9ucy5kYk5hbWUgfHwgJ3NlbnRyeS1vZmZsaW5lJywgb3B0aW9ucy5zdG9yZU5hbWUgfHwgJ3F1ZXVlJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0b3JlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwdXNoOiBhc3luYyAoZW52KSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBzZXJpYWxpemVkID0gYXdhaXQgc2VyaWFsaXplRW52ZWxvcGUoZW52KTtcbiAgICAgICAgYXdhaXQgcHVzaChnZXRTdG9yZSgpLCBzZXJpYWxpemVkLCBvcHRpb25zLm1heFF1ZXVlU2l6ZSB8fCAzMCk7XG4gICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgIC8vXG4gICAgICB9XG4gICAgfSxcbiAgICB1bnNoaWZ0OiBhc3luYyAoZW52KSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBzZXJpYWxpemVkID0gYXdhaXQgc2VyaWFsaXplRW52ZWxvcGUoZW52KTtcbiAgICAgICAgYXdhaXQgdW5zaGlmdChnZXRTdG9yZSgpLCBzZXJpYWxpemVkLCBvcHRpb25zLm1heFF1ZXVlU2l6ZSB8fCAzMCk7XG4gICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgIC8vXG4gICAgICB9XG4gICAgfSxcbiAgICBzaGlmdDogYXN5bmMgKCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZGVzZXJpYWxpemVkID0gYXdhaXQgc2hpZnQoZ2V0U3RvcmUoKSk7XG4gICAgICAgIGlmIChkZXNlcmlhbGl6ZWQpIHtcbiAgICAgICAgICByZXR1cm4gcGFyc2VFbnZlbG9wZShkZXNlcmlhbGl6ZWQpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgIC8vXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSxcbiAgfTtcbn1cblxuZnVuY3Rpb24gbWFrZUluZGV4ZWREYk9mZmxpbmVUcmFuc3BvcnQoXG4gIGNyZWF0ZVRyYW5zcG9ydCxcbikge1xuICByZXR1cm4gb3B0aW9ucyA9PiBjcmVhdGVUcmFuc3BvcnQoeyAuLi5vcHRpb25zLCBjcmVhdGVTdG9yZTogY3JlYXRlSW5kZXhlZERiU3RvcmUgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHRyYW5zcG9ydCB0aGF0IHVzZXMgSW5kZXhlZERiIHRvIHN0b3JlIGV2ZW50cyB3aGVuIG9mZmxpbmUuXG4gKi9cbmZ1bmN0aW9uIG1ha2VCcm93c2VyT2ZmbGluZVRyYW5zcG9ydChcbiAgY3JlYXRlVHJhbnNwb3J0ID0gbWFrZUZldGNoVHJhbnNwb3J0LFxuKSB7XG4gIHJldHVybiBtYWtlSW5kZXhlZERiT2ZmbGluZVRyYW5zcG9ydChtYWtlT2ZmbGluZVRyYW5zcG9ydChjcmVhdGVUcmFuc3BvcnQpKTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlU3RvcmUsIG1ha2VCcm93c2VyT2ZmbGluZVRyYW5zcG9ydCwgcHVzaCwgc2hpZnQsIHVuc2hpZnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9mZmxpbmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/offline.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/userfeedback.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/userfeedback.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUserFeedbackEnvelope\": function() { return /* binding */ createUserFeedbackEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\n\n//# sourceMappingURL=userfeedback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS91c2VyZmVlZGJhY2suanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEQ7O0FBRTVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCwrQkFBK0IsS0FBSywwREFBVyxPQUFPO0FBQ3REO0FBQ0E7O0FBRUEsU0FBUyw2REFBYztBQUN2Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNDO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL3VzZXJmZWVkYmFjay5qcz8wMWVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRzblRvU3RyaW5nLCBjcmVhdGVFbnZlbG9wZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gZW52ZWxvcGUgZnJvbSBhIHVzZXIgZmVlZGJhY2suXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVVzZXJGZWVkYmFja0VudmVsb3BlKFxuICBmZWVkYmFjayxcbiAge1xuICAgIG1ldGFkYXRhLFxuICAgIHR1bm5lbCxcbiAgICBkc24sXG4gIH1cblxuLFxuKSB7XG4gIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgZXZlbnRfaWQ6IGZlZWRiYWNrLmV2ZW50X2lkLFxuICAgIHNlbnRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAuLi4obWV0YWRhdGEgJiZcbiAgICAgIG1ldGFkYXRhLnNkayAmJiB7XG4gICAgICAgIHNkazoge1xuICAgICAgICAgIG5hbWU6IG1ldGFkYXRhLnNkay5uYW1lLFxuICAgICAgICAgIHZlcnNpb246IG1ldGFkYXRhLnNkay52ZXJzaW9uLFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgLi4uKCEhdHVubmVsICYmICEhZHNuICYmIHsgZHNuOiBkc25Ub1N0cmluZyhkc24pIH0pLFxuICB9O1xuICBjb25zdCBpdGVtID0gY3JlYXRlVXNlckZlZWRiYWNrRW52ZWxvcGVJdGVtKGZlZWRiYWNrKTtcblxuICByZXR1cm4gY3JlYXRlRW52ZWxvcGUoaGVhZGVycywgW2l0ZW1dKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVXNlckZlZWRiYWNrRW52ZWxvcGVJdGVtKGZlZWRiYWNrKSB7XG4gIGNvbnN0IGZlZWRiYWNrSGVhZGVycyA9IHtcbiAgICB0eXBlOiAndXNlcl9yZXBvcnQnLFxuICB9O1xuICByZXR1cm4gW2ZlZWRiYWNrSGVhZGVycywgZmVlZGJhY2tdO1xufVxuXG5leHBvcnQgeyBjcmVhdGVVc2VyRmVlZGJhY2tFbnZlbG9wZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlcmZlZWRiYWNrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/userfeedback.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/utils/lazyLoadIntegration.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/utils/lazyLoadIntegration.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lazyLoadIntegration\": function() { return /* binding */ lazyLoadIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n// This is a map of integration function method to bundle file name.\nconst LazyLoadableIntegrations = {\n  replayIntegration: 'replay',\n  replayCanvasIntegration: 'replay-canvas',\n  feedbackIntegration: 'feedback',\n  feedbackModalIntegration: 'feedback-modal',\n  feedbackScreenshotIntegration: 'feedback-screenshot',\n  captureConsoleIntegration: 'captureconsole',\n  contextLinesIntegration: 'contextlines',\n  linkedErrorsIntegration: 'linkederrors',\n  debugIntegration: 'debug',\n  dedupeIntegration: 'dedupe',\n  extraErrorDataIntegration: 'extraerrordata',\n  httpClientIntegration: 'httpclient',\n  reportingObserverIntegration: 'reportingobserver',\n  rewriteFramesIntegration: 'rewriteframes',\n  sessionTimingIntegration: 'sessiontiming',\n  browserProfilingIntegration: 'browserprofiling',\n} ;\n\nconst WindowWithMaybeIntegration = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW\n\n;\n\n/**\n * Lazy load an integration from the CDN.\n * Rejects if the integration cannot be loaded.\n */\nasync function lazyLoadIntegration(name) {\n  const bundle = LazyLoadableIntegrations[name];\n\n  // `window.Sentry` is only set when using a CDN bundle, but this method can also be used via the NPM package\n  const sentryOnWindow = (WindowWithMaybeIntegration.Sentry = WindowWithMaybeIntegration.Sentry || {});\n\n  if (!bundle) {\n    throw new Error(`Cannot lazy load integration: ${name}`);\n  }\n\n  // Bail if the integration already exists\n  const existing = sentryOnWindow[name];\n  if (typeof existing === 'function') {\n    return existing;\n  }\n\n  const url = getScriptURL(bundle);\n  const script = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.createElement('script');\n  script.src = url;\n  script.crossOrigin = 'anonymous';\n\n  const waitForLoad = new Promise((resolve, reject) => {\n    script.addEventListener('load', () => resolve());\n    script.addEventListener('error', reject);\n  });\n\n  _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.body.appendChild(script);\n\n  try {\n    await waitForLoad;\n  } catch (e) {\n    throw new Error(`Error when loading integration: ${name}`);\n  }\n\n  const integrationFn = sentryOnWindow[name];\n\n  if (typeof integrationFn !== 'function') {\n    throw new Error(`Could not load integration: ${name}`);\n  }\n\n  return integrationFn;\n}\n\nfunction getScriptURL(bundle) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n  const options = client && client.getOptions();\n  const baseURL = (options && options.cdnBaseUrl) || 'https://browser.sentry-cdn.com';\n\n  return new URL(`/${_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION}/${bundle}.min.js`, baseURL).toString();\n}\n\n\n//# sourceMappingURL=lazyLoadIntegration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS91dGlscy9sYXp5TG9hZEludGVncmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRDtBQUNmOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsK0NBQU07O0FBRXpDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFHQUFxRzs7QUFFckc7QUFDQSxxREFBcUQsS0FBSztBQUMxRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLHNFQUE2QjtBQUM5QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUgsRUFBRSx5RUFBZ0M7O0FBRWxDO0FBQ0E7QUFDQSxJQUFJO0FBQ0osdURBQXVELEtBQUs7QUFDNUQ7O0FBRUE7O0FBRUE7QUFDQSxtREFBbUQsS0FBSztBQUN4RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLHVEQUFTO0FBQzFCO0FBQ0E7O0FBRUEscUJBQXFCLHFEQUFXLENBQUMsR0FBRyxPQUFPO0FBQzNDOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS91dGlscy9sYXp5TG9hZEludGVncmF0aW9uLmpzP2IyNGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q2xpZW50LCBTREtfVkVSU0lPTiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi9oZWxwZXJzLmpzJztcblxuLy8gVGhpcyBpcyBhIG1hcCBvZiBpbnRlZ3JhdGlvbiBmdW5jdGlvbiBtZXRob2QgdG8gYnVuZGxlIGZpbGUgbmFtZS5cbmNvbnN0IExhenlMb2FkYWJsZUludGVncmF0aW9ucyA9IHtcbiAgcmVwbGF5SW50ZWdyYXRpb246ICdyZXBsYXknLFxuICByZXBsYXlDYW52YXNJbnRlZ3JhdGlvbjogJ3JlcGxheS1jYW52YXMnLFxuICBmZWVkYmFja0ludGVncmF0aW9uOiAnZmVlZGJhY2snLFxuICBmZWVkYmFja01vZGFsSW50ZWdyYXRpb246ICdmZWVkYmFjay1tb2RhbCcsXG4gIGZlZWRiYWNrU2NyZWVuc2hvdEludGVncmF0aW9uOiAnZmVlZGJhY2stc2NyZWVuc2hvdCcsXG4gIGNhcHR1cmVDb25zb2xlSW50ZWdyYXRpb246ICdjYXB0dXJlY29uc29sZScsXG4gIGNvbnRleHRMaW5lc0ludGVncmF0aW9uOiAnY29udGV4dGxpbmVzJyxcbiAgbGlua2VkRXJyb3JzSW50ZWdyYXRpb246ICdsaW5rZWRlcnJvcnMnLFxuICBkZWJ1Z0ludGVncmF0aW9uOiAnZGVidWcnLFxuICBkZWR1cGVJbnRlZ3JhdGlvbjogJ2RlZHVwZScsXG4gIGV4dHJhRXJyb3JEYXRhSW50ZWdyYXRpb246ICdleHRyYWVycm9yZGF0YScsXG4gIGh0dHBDbGllbnRJbnRlZ3JhdGlvbjogJ2h0dHBjbGllbnQnLFxuICByZXBvcnRpbmdPYnNlcnZlckludGVncmF0aW9uOiAncmVwb3J0aW5nb2JzZXJ2ZXInLFxuICByZXdyaXRlRnJhbWVzSW50ZWdyYXRpb246ICdyZXdyaXRlZnJhbWVzJyxcbiAgc2Vzc2lvblRpbWluZ0ludGVncmF0aW9uOiAnc2Vzc2lvbnRpbWluZycsXG4gIGJyb3dzZXJQcm9maWxpbmdJbnRlZ3JhdGlvbjogJ2Jyb3dzZXJwcm9maWxpbmcnLFxufSA7XG5cbmNvbnN0IFdpbmRvd1dpdGhNYXliZUludGVncmF0aW9uID0gV0lORE9XXG5cbjtcblxuLyoqXG4gKiBMYXp5IGxvYWQgYW4gaW50ZWdyYXRpb24gZnJvbSB0aGUgQ0ROLlxuICogUmVqZWN0cyBpZiB0aGUgaW50ZWdyYXRpb24gY2Fubm90IGJlIGxvYWRlZC5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gbGF6eUxvYWRJbnRlZ3JhdGlvbihuYW1lKSB7XG4gIGNvbnN0IGJ1bmRsZSA9IExhenlMb2FkYWJsZUludGVncmF0aW9uc1tuYW1lXTtcblxuICAvLyBgd2luZG93LlNlbnRyeWAgaXMgb25seSBzZXQgd2hlbiB1c2luZyBhIENETiBidW5kbGUsIGJ1dCB0aGlzIG1ldGhvZCBjYW4gYWxzbyBiZSB1c2VkIHZpYSB0aGUgTlBNIHBhY2thZ2VcbiAgY29uc3Qgc2VudHJ5T25XaW5kb3cgPSAoV2luZG93V2l0aE1heWJlSW50ZWdyYXRpb24uU2VudHJ5ID0gV2luZG93V2l0aE1heWJlSW50ZWdyYXRpb24uU2VudHJ5IHx8IHt9KTtcblxuICBpZiAoIWJ1bmRsZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGxhenkgbG9hZCBpbnRlZ3JhdGlvbjogJHtuYW1lfWApO1xuICB9XG5cbiAgLy8gQmFpbCBpZiB0aGUgaW50ZWdyYXRpb24gYWxyZWFkeSBleGlzdHNcbiAgY29uc3QgZXhpc3RpbmcgPSBzZW50cnlPbldpbmRvd1tuYW1lXTtcbiAgaWYgKHR5cGVvZiBleGlzdGluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBleGlzdGluZztcbiAgfVxuXG4gIGNvbnN0IHVybCA9IGdldFNjcmlwdFVSTChidW5kbGUpO1xuICBjb25zdCBzY3JpcHQgPSBXSU5ET1cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gIHNjcmlwdC5zcmMgPSB1cmw7XG4gIHNjcmlwdC5jcm9zc09yaWdpbiA9ICdhbm9ueW1vdXMnO1xuXG4gIGNvbnN0IHdhaXRGb3JMb2FkID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHNjcmlwdC5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4gcmVzb2x2ZSgpKTtcbiAgICBzY3JpcHQuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCByZWplY3QpO1xuICB9KTtcblxuICBXSU5ET1cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuXG4gIHRyeSB7XG4gICAgYXdhaXQgd2FpdEZvckxvYWQ7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yIHdoZW4gbG9hZGluZyBpbnRlZ3JhdGlvbjogJHtuYW1lfWApO1xuICB9XG5cbiAgY29uc3QgaW50ZWdyYXRpb25GbiA9IHNlbnRyeU9uV2luZG93W25hbWVdO1xuXG4gIGlmICh0eXBlb2YgaW50ZWdyYXRpb25GbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IGxvYWQgaW50ZWdyYXRpb246ICR7bmFtZX1gKTtcbiAgfVxuXG4gIHJldHVybiBpbnRlZ3JhdGlvbkZuO1xufVxuXG5mdW5jdGlvbiBnZXRTY3JpcHRVUkwoYnVuZGxlKSB7XG4gIGNvbnN0IGNsaWVudCA9IGdldENsaWVudCgpO1xuICBjb25zdCBvcHRpb25zID0gY2xpZW50ICYmIGNsaWVudC5nZXRPcHRpb25zKCk7XG4gIGNvbnN0IGJhc2VVUkwgPSAob3B0aW9ucyAmJiBvcHRpb25zLmNkbkJhc2VVcmwpIHx8ICdodHRwczovL2Jyb3dzZXIuc2VudHJ5LWNkbi5jb20nO1xuXG4gIHJldHVybiBuZXcgVVJMKGAvJHtTREtfVkVSU0lPTn0vJHtidW5kbGV9Lm1pbi5qc2AsIGJhc2VVUkwpLnRvU3RyaW5nKCk7XG59XG5cbmV4cG9ydCB7IGxhenlMb2FkSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxhenlMb2FkSW50ZWdyYXRpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/utils/lazyLoadIntegration.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/api.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/api.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getEnvelopeEndpointWithUrlEncodedAuth\": function() { return /* binding */ getEnvelopeEndpointWithUrlEncodedAuth; },\n/* harmony export */   \"getReportDialogEndpoint\": function() { return /* binding */ getReportDialogEndpoint; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.urlEncode)({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel, sdkInfo) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\n\n//# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hcGkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdFOztBQUVoRTs7QUFFQTtBQUNBO0FBQ0EscUNBQXFDLGFBQWE7QUFDbEQsOEJBQThCLFNBQVM7QUFDdkMsWUFBWSxTQUFTLElBQUksU0FBUyxFQUFFLEtBQUssRUFBRSxlQUFlLFNBQVMsT0FBTztBQUMxRTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSx3QkFBd0IsRUFBRSxjQUFjO0FBQ3BEOztBQUVBO0FBQ0E7QUFDQSxTQUFTLHdEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGtCQUFrQixhQUFhLEdBQUcsZ0JBQWdCLEdBQUc7QUFDMUUsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix3QkFBd0IsR0FBRywyQkFBMkI7QUFDcEY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWMsc0RBQU87QUFDckI7QUFDQTtBQUNBOztBQUVBLHNCQUFzQix3QkFBd0I7O0FBRTlDLDhCQUE4QiwwREFBVyxNQUFNO0FBQy9DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsOEJBQThCO0FBQ2pFO0FBQ0E7QUFDQSxvQ0FBb0MsK0JBQStCO0FBQ25FO0FBQ0EsTUFBTTtBQUNOLDRCQUE0Qix3QkFBd0IsR0FBRyx3Q0FBd0M7QUFDL0Y7QUFDQTs7QUFFQSxZQUFZLFNBQVMsR0FBRyxlQUFlO0FBQ3ZDOztBQUUwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hcGkuanM/ZDg3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlRHNuLCBkc25Ub1N0cmluZywgdXJsRW5jb2RlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IFNFTlRSWV9BUElfVkVSU0lPTiA9ICc3JztcblxuLyoqIFJldHVybnMgdGhlIHByZWZpeCB0byBjb25zdHJ1Y3QgU2VudHJ5IGluZ2VzdGlvbiBBUEkgZW5kcG9pbnRzLiAqL1xuZnVuY3Rpb24gZ2V0QmFzZUFwaUVuZHBvaW50KGRzbikge1xuICBjb25zdCBwcm90b2NvbCA9IGRzbi5wcm90b2NvbCA/IGAke2Rzbi5wcm90b2NvbH06YCA6ICcnO1xuICBjb25zdCBwb3J0ID0gZHNuLnBvcnQgPyBgOiR7ZHNuLnBvcnR9YCA6ICcnO1xuICByZXR1cm4gYCR7cHJvdG9jb2x9Ly8ke2Rzbi5ob3N0fSR7cG9ydH0ke2Rzbi5wYXRoID8gYC8ke2Rzbi5wYXRofWAgOiAnJ30vYXBpL2A7XG59XG5cbi8qKiBSZXR1cm5zIHRoZSBpbmdlc3QgQVBJIGVuZHBvaW50IGZvciB0YXJnZXQuICovXG5mdW5jdGlvbiBfZ2V0SW5nZXN0RW5kcG9pbnQoZHNuKSB7XG4gIHJldHVybiBgJHtnZXRCYXNlQXBpRW5kcG9pbnQoZHNuKX0ke2Rzbi5wcm9qZWN0SWR9L2VudmVsb3BlL2A7XG59XG5cbi8qKiBSZXR1cm5zIGEgVVJMLWVuY29kZWQgc3RyaW5nIHdpdGggYXV0aCBjb25maWcgc3VpdGFibGUgZm9yIGEgcXVlcnkgc3RyaW5nLiAqL1xuZnVuY3Rpb24gX2VuY29kZWRBdXRoKGRzbiwgc2RrSW5mbykge1xuICByZXR1cm4gdXJsRW5jb2RlKHtcbiAgICAvLyBXZSBzZW5kIG9ubHkgdGhlIG1pbmltdW0gc2V0IG9mIHJlcXVpcmVkIGluZm9ybWF0aW9uLiBTZWVcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L2lzc3Vlcy8yNTcyLlxuICAgIHNlbnRyeV9rZXk6IGRzbi5wdWJsaWNLZXksXG4gICAgc2VudHJ5X3ZlcnNpb246IFNFTlRSWV9BUElfVkVSU0lPTixcbiAgICAuLi4oc2RrSW5mbyAmJiB7IHNlbnRyeV9jbGllbnQ6IGAke3Nka0luZm8ubmFtZX0vJHtzZGtJbmZvLnZlcnNpb259YCB9KSxcbiAgfSk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZW52ZWxvcGUgZW5kcG9pbnQgVVJMIHdpdGggYXV0aCBpbiB0aGUgcXVlcnkgc3RyaW5nLlxuICpcbiAqIFNlbmRpbmcgYXV0aCBhcyBwYXJ0IG9mIHRoZSBxdWVyeSBzdHJpbmcgYW5kIG5vdCBhcyBjdXN0b20gSFRUUCBoZWFkZXJzIGF2b2lkcyBDT1JTIHByZWZsaWdodCByZXF1ZXN0cy5cbiAqL1xuZnVuY3Rpb24gZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aChkc24sIHR1bm5lbCwgc2RrSW5mbykge1xuICByZXR1cm4gdHVubmVsID8gdHVubmVsIDogYCR7X2dldEluZ2VzdEVuZHBvaW50KGRzbil9PyR7X2VuY29kZWRBdXRoKGRzbiwgc2RrSW5mbyl9YDtcbn1cblxuLyoqIFJldHVybnMgdGhlIHVybCB0byB0aGUgcmVwb3J0IGRpYWxvZyBlbmRwb2ludC4gKi9cbmZ1bmN0aW9uIGdldFJlcG9ydERpYWxvZ0VuZHBvaW50KFxuICBkc25MaWtlLFxuICBkaWFsb2dPcHRpb25zXG5cbixcbikge1xuICBjb25zdCBkc24gPSBtYWtlRHNuKGRzbkxpa2UpO1xuICBpZiAoIWRzbikge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGNvbnN0IGVuZHBvaW50ID0gYCR7Z2V0QmFzZUFwaUVuZHBvaW50KGRzbil9ZW1iZWQvZXJyb3ItcGFnZS9gO1xuXG4gIGxldCBlbmNvZGVkT3B0aW9ucyA9IGBkc249JHtkc25Ub1N0cmluZyhkc24pfWA7XG4gIGZvciAoY29uc3Qga2V5IGluIGRpYWxvZ09wdGlvbnMpIHtcbiAgICBpZiAoa2V5ID09PSAnZHNuJykge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKGtleSA9PT0gJ29uQ2xvc2UnKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBpZiAoa2V5ID09PSAndXNlcicpIHtcbiAgICAgIGNvbnN0IHVzZXIgPSBkaWFsb2dPcHRpb25zLnVzZXI7XG4gICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodXNlci5uYW1lKSB7XG4gICAgICAgIGVuY29kZWRPcHRpb25zICs9IGAmbmFtZT0ke2VuY29kZVVSSUNvbXBvbmVudCh1c2VyLm5hbWUpfWA7XG4gICAgICB9XG4gICAgICBpZiAodXNlci5lbWFpbCkge1xuICAgICAgICBlbmNvZGVkT3B0aW9ucyArPSBgJmVtYWlsPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHVzZXIuZW1haWwpfWA7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGVuY29kZWRPcHRpb25zICs9IGAmJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQoZGlhbG9nT3B0aW9uc1trZXldICl9YDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYCR7ZW5kcG9pbnR9PyR7ZW5jb2RlZE9wdGlvbnN9YDtcbn1cblxuZXhwb3J0IHsgZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCwgZ2V0UmVwb3J0RGlhbG9nRW5kcG9pbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/api.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/asyncContext/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/asyncContext/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAsyncContextStrategy\": function() { return /* binding */ getAsyncContextStrategy; },\n/* harmony export */   \"setAsyncContextStrategy\": function() { return /* binding */ setAsyncContextStrategy; }\n/* harmony export */ });\n/* harmony import */ var _carrier_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../carrier.js */ \"./node_modules/@sentry/core/esm/carrier.js\");\n/* harmony import */ var _stackStrategy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stackStrategy.js */ \"./node_modules/@sentry/core/esm/asyncContext/stackStrategy.js\");\n\n\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_0__.getMainCarrier)();\n  const sentry = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_0__.getSentryCarrier)(registry);\n  sentry.acs = strategy;\n}\n\n/**\n * Get the current async context strategy.\n * If none has been setup, the default will be used.\n */\nfunction getAsyncContextStrategy(carrier) {\n  const sentry = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_0__.getSentryCarrier)(carrier);\n\n  if (sentry.acs) {\n    return sentry.acs;\n  }\n\n  // Otherwise, use the default one (stack)\n  return (0,_stackStrategy_js__WEBPACK_IMPORTED_MODULE_1__.getStackAsyncContextStrategy)();\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hc3luY0NvbnRleHQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRTtBQUNDOztBQUVsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwyREFBYztBQUNqQyxpQkFBaUIsNkRBQWdCO0FBQ2pDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw2REFBZ0I7O0FBRWpDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFNBQVMsK0VBQTRCO0FBQ3JDOztBQUU0RDtBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hc3luY0NvbnRleHQvaW5kZXguanM/ZWJhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRNYWluQ2FycmllciwgZ2V0U2VudHJ5Q2FycmllciB9IGZyb20gJy4uL2NhcnJpZXIuanMnO1xuaW1wb3J0IHsgZ2V0U3RhY2tBc3luY0NvbnRleHRTdHJhdGVneSB9IGZyb20gJy4vc3RhY2tTdHJhdGVneS5qcyc7XG5cbi8qKlxuICogQHByaXZhdGUgUHJpdmF0ZSBBUEkgd2l0aCBubyBzZW12ZXIgZ3VhcmFudGVlcyFcbiAqXG4gKiBTZXRzIHRoZSBnbG9iYWwgYXN5bmMgY29udGV4dCBzdHJhdGVneVxuICovXG5mdW5jdGlvbiBzZXRBc3luY0NvbnRleHRTdHJhdGVneShzdHJhdGVneSkge1xuICAvLyBHZXQgbWFpbiBjYXJyaWVyIChnbG9iYWwgZm9yIGV2ZXJ5IGVudmlyb25tZW50KVxuICBjb25zdCByZWdpc3RyeSA9IGdldE1haW5DYXJyaWVyKCk7XG4gIGNvbnN0IHNlbnRyeSA9IGdldFNlbnRyeUNhcnJpZXIocmVnaXN0cnkpO1xuICBzZW50cnkuYWNzID0gc3RyYXRlZ3k7XG59XG5cbi8qKlxuICogR2V0IHRoZSBjdXJyZW50IGFzeW5jIGNvbnRleHQgc3RyYXRlZ3kuXG4gKiBJZiBub25lIGhhcyBiZWVuIHNldHVwLCB0aGUgZGVmYXVsdCB3aWxsIGJlIHVzZWQuXG4gKi9cbmZ1bmN0aW9uIGdldEFzeW5jQ29udGV4dFN0cmF0ZWd5KGNhcnJpZXIpIHtcbiAgY29uc3Qgc2VudHJ5ID0gZ2V0U2VudHJ5Q2FycmllcihjYXJyaWVyKTtcblxuICBpZiAoc2VudHJ5LmFjcykge1xuICAgIHJldHVybiBzZW50cnkuYWNzO1xuICB9XG5cbiAgLy8gT3RoZXJ3aXNlLCB1c2UgdGhlIGRlZmF1bHQgb25lIChzdGFjaylcbiAgcmV0dXJuIGdldFN0YWNrQXN5bmNDb250ZXh0U3RyYXRlZ3koKTtcbn1cblxuZXhwb3J0IHsgZ2V0QXN5bmNDb250ZXh0U3RyYXRlZ3ksIHNldEFzeW5jQ29udGV4dFN0cmF0ZWd5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/asyncContext/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/asyncContext/stackStrategy.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/asyncContext/stackStrategy.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AsyncContextStack\": function() { return /* binding */ AsyncContextStack; },\n/* harmony export */   \"getStackAsyncContextStrategy\": function() { return /* binding */ getStackAsyncContextStrategy; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _defaultScopes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../defaultScopes.js */ \"./node_modules/@sentry/core/esm/defaultScopes.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _carrier_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../carrier.js */ \"./node_modules/@sentry/core/esm/carrier.js\");\n\n\n\n\n\n/**\n * This is an object that holds a stack of scopes.\n */\nclass AsyncContextStack {\n\n   constructor(scope, isolationScope) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope();\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope();\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Fork a scope for the stack.\n   */\n   withScope(callback) {\n    const scope = this._pushScope();\n\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      this._popScope();\n      throw e;\n    }\n\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          this._popScope();\n          return res;\n        },\n        e => {\n          this._popScope();\n          throw e;\n        },\n      );\n    }\n\n    this._popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * Get the client of the stack.\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * Get the isolation scope for the stack.\n   */\n   getIsolationScope() {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   */\n   getStack() {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * Push a scope to the stack.\n   */\n   _pushScope() {\n    // We want to clone the content of prev scope\n    const scope = this.getScope().clone();\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * Pop a scope from the stack.\n   */\n   _popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n}\n\n/**\n * Get the global async context stack.\n * This will be removed during the v8 cycle and is only here to make migration easier.\n */\nfunction getAsyncContextStack() {\n  const registry = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_2__.getMainCarrier)();\n  const sentry = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_2__.getSentryCarrier)(registry);\n\n  return (sentry.stack = sentry.stack || new AsyncContextStack((0,_defaultScopes_js__WEBPACK_IMPORTED_MODULE_3__.getDefaultCurrentScope)(), (0,_defaultScopes_js__WEBPACK_IMPORTED_MODULE_3__.getDefaultIsolationScope)()));\n}\n\nfunction withScope(callback) {\n  return getAsyncContextStack().withScope(callback);\n}\n\nfunction withSetScope(scope, callback) {\n  const stack = getAsyncContextStack() ;\n  return stack.withScope(() => {\n    stack.getStackTop().scope = scope;\n    return callback(scope);\n  });\n}\n\nfunction withIsolationScope(callback) {\n  return getAsyncContextStack().withScope(() => {\n    return callback(getAsyncContextStack().getIsolationScope());\n  });\n}\n\n/**\n * Get the stack-based async context strategy.\n */\nfunction getStackAsyncContextStrategy() {\n  return {\n    withIsolationScope,\n    withScope,\n    withSetScope,\n    withSetIsolationScope: (_isolationScope, callback) => {\n      return withIsolationScope(callback);\n    },\n    getCurrentScope: () => getAsyncContextStack().getScope(),\n    getIsolationScope: () => getAsyncContextStack().getIsolationScope(),\n  };\n}\n\n\n//# sourceMappingURL=stackStrategy.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hc3luY0NvbnRleHQvc3RhY2tTdHJhdGVneS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkM7QUFDNEM7QUFDbkQ7QUFDNkI7O0FBRWpFO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw0Q0FBSztBQUMvQixNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUNBQW1DLDRDQUFLO0FBQ3hDLE1BQU07QUFDTjtBQUNBOztBQUVBLHFCQUFxQixzQkFBc0I7QUFDM0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUEsUUFBUSx5REFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwyREFBYztBQUNqQyxpQkFBaUIsNkRBQWdCOztBQUVqQywrREFBK0QseUVBQXNCLElBQUksMkVBQXdCO0FBQ2pIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFMkQ7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vYXN5bmNDb250ZXh0L3N0YWNrU3RyYXRlZ3kuanM/ZDY5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1RoZW5hYmxlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBnZXREZWZhdWx0Q3VycmVudFNjb3BlLCBnZXREZWZhdWx0SXNvbGF0aW9uU2NvcGUgfSBmcm9tICcuLi9kZWZhdWx0U2NvcGVzLmpzJztcbmltcG9ydCB7IFNjb3BlIH0gZnJvbSAnLi4vc2NvcGUuanMnO1xuaW1wb3J0IHsgZ2V0TWFpbkNhcnJpZXIsIGdldFNlbnRyeUNhcnJpZXIgfSBmcm9tICcuLi9jYXJyaWVyLmpzJztcblxuLyoqXG4gKiBUaGlzIGlzIGFuIG9iamVjdCB0aGF0IGhvbGRzIGEgc3RhY2sgb2Ygc2NvcGVzLlxuICovXG5jbGFzcyBBc3luY0NvbnRleHRTdGFjayB7XG5cbiAgIGNvbnN0cnVjdG9yKHNjb3BlLCBpc29sYXRpb25TY29wZSkge1xuICAgIGxldCBhc3NpZ25lZFNjb3BlO1xuICAgIGlmICghc2NvcGUpIHtcbiAgICAgIGFzc2lnbmVkU2NvcGUgPSBuZXcgU2NvcGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXNzaWduZWRTY29wZSA9IHNjb3BlO1xuICAgIH1cblxuICAgIGxldCBhc3NpZ25lZElzb2xhdGlvblNjb3BlO1xuICAgIGlmICghaXNvbGF0aW9uU2NvcGUpIHtcbiAgICAgIGFzc2lnbmVkSXNvbGF0aW9uU2NvcGUgPSBuZXcgU2NvcGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXNzaWduZWRJc29sYXRpb25TY29wZSA9IGlzb2xhdGlvblNjb3BlO1xuICAgIH1cblxuICAgIHRoaXMuX3N0YWNrID0gW3sgc2NvcGU6IGFzc2lnbmVkU2NvcGUgfV07XG4gICAgdGhpcy5faXNvbGF0aW9uU2NvcGUgPSBhc3NpZ25lZElzb2xhdGlvblNjb3BlO1xuICB9XG5cbiAgLyoqXG4gICAqIEZvcmsgYSBzY29wZSBmb3IgdGhlIHN0YWNrLlxuICAgKi9cbiAgIHdpdGhTY29wZShjYWxsYmFjaykge1xuICAgIGNvbnN0IHNjb3BlID0gdGhpcy5fcHVzaFNjb3BlKCk7XG5cbiAgICBsZXQgbWF5YmVQcm9taXNlUmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICBtYXliZVByb21pc2VSZXN1bHQgPSBjYWxsYmFjayhzY29wZSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5fcG9wU2NvcGUoKTtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuXG4gICAgaWYgKGlzVGhlbmFibGUobWF5YmVQcm9taXNlUmVzdWx0KSkge1xuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIGlzVGhlbmFibGUgcmV0dXJucyB0aGUgd3JvbmcgdHlwZVxuICAgICAgcmV0dXJuIG1heWJlUHJvbWlzZVJlc3VsdC50aGVuKFxuICAgICAgICByZXMgPT4ge1xuICAgICAgICAgIHRoaXMuX3BvcFNjb3BlKCk7XG4gICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgfSxcbiAgICAgICAgZSA9PiB7XG4gICAgICAgICAgdGhpcy5fcG9wU2NvcGUoKTtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9LFxuICAgICAgKTtcbiAgICB9XG5cbiAgICB0aGlzLl9wb3BTY29wZSgpO1xuICAgIHJldHVybiBtYXliZVByb21pc2VSZXN1bHQ7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBjbGllbnQgb2YgdGhlIHN0YWNrLlxuICAgKi9cbiAgIGdldENsaWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdGFja1RvcCgpLmNsaWVudCA7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgc2NvcGUgb2YgdGhlIHRvcCBzdGFjay5cbiAgICovXG4gICBnZXRTY29wZSgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdGFja1RvcCgpLnNjb3BlO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgaXNvbGF0aW9uIHNjb3BlIGZvciB0aGUgc3RhY2suXG4gICAqL1xuICAgZ2V0SXNvbGF0aW9uU2NvcGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lzb2xhdGlvblNjb3BlO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHNjb3BlIHN0YWNrIGZvciBkb21haW5zIG9yIHRoZSBwcm9jZXNzLlxuICAgKi9cbiAgIGdldFN0YWNrKCkge1xuICAgIHJldHVybiB0aGlzLl9zdGFjaztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSB0b3Btb3N0IHNjb3BlIGxheWVyIGluIHRoZSBvcmRlciBkb21haW4gPiBsb2NhbCA+IHByb2Nlc3MuXG4gICAqL1xuICAgZ2V0U3RhY2tUb3AoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3N0YWNrW3RoaXMuX3N0YWNrLmxlbmd0aCAtIDFdO1xuICB9XG5cbiAgLyoqXG4gICAqIFB1c2ggYSBzY29wZSB0byB0aGUgc3RhY2suXG4gICAqL1xuICAgX3B1c2hTY29wZSgpIHtcbiAgICAvLyBXZSB3YW50IHRvIGNsb25lIHRoZSBjb250ZW50IG9mIHByZXYgc2NvcGVcbiAgICBjb25zdCBzY29wZSA9IHRoaXMuZ2V0U2NvcGUoKS5jbG9uZSgpO1xuICAgIHRoaXMuZ2V0U3RhY2soKS5wdXNoKHtcbiAgICAgIGNsaWVudDogdGhpcy5nZXRDbGllbnQoKSxcbiAgICAgIHNjb3BlLFxuICAgIH0pO1xuICAgIHJldHVybiBzY29wZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQb3AgYSBzY29wZSBmcm9tIHRoZSBzdGFjay5cbiAgICovXG4gICBfcG9wU2NvcGUoKSB7XG4gICAgaWYgKHRoaXMuZ2V0U3RhY2soKS5sZW5ndGggPD0gMSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiAhIXRoaXMuZ2V0U3RhY2soKS5wb3AoKTtcbiAgfVxufVxuXG4vKipcbiAqIEdldCB0aGUgZ2xvYmFsIGFzeW5jIGNvbnRleHQgc3RhY2suXG4gKiBUaGlzIHdpbGwgYmUgcmVtb3ZlZCBkdXJpbmcgdGhlIHY4IGN5Y2xlIGFuZCBpcyBvbmx5IGhlcmUgdG8gbWFrZSBtaWdyYXRpb24gZWFzaWVyLlxuICovXG5mdW5jdGlvbiBnZXRBc3luY0NvbnRleHRTdGFjaygpIHtcbiAgY29uc3QgcmVnaXN0cnkgPSBnZXRNYWluQ2FycmllcigpO1xuICBjb25zdCBzZW50cnkgPSBnZXRTZW50cnlDYXJyaWVyKHJlZ2lzdHJ5KTtcblxuICByZXR1cm4gKHNlbnRyeS5zdGFjayA9IHNlbnRyeS5zdGFjayB8fCBuZXcgQXN5bmNDb250ZXh0U3RhY2soZ2V0RGVmYXVsdEN1cnJlbnRTY29wZSgpLCBnZXREZWZhdWx0SXNvbGF0aW9uU2NvcGUoKSkpO1xufVxuXG5mdW5jdGlvbiB3aXRoU2NvcGUoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGdldEFzeW5jQ29udGV4dFN0YWNrKCkud2l0aFNjb3BlKGNhbGxiYWNrKTtcbn1cblxuZnVuY3Rpb24gd2l0aFNldFNjb3BlKHNjb3BlLCBjYWxsYmFjaykge1xuICBjb25zdCBzdGFjayA9IGdldEFzeW5jQ29udGV4dFN0YWNrKCkgO1xuICByZXR1cm4gc3RhY2sud2l0aFNjb3BlKCgpID0+IHtcbiAgICBzdGFjay5nZXRTdGFja1RvcCgpLnNjb3BlID0gc2NvcGU7XG4gICAgcmV0dXJuIGNhbGxiYWNrKHNjb3BlKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHdpdGhJc29sYXRpb25TY29wZShjYWxsYmFjaykge1xuICByZXR1cm4gZ2V0QXN5bmNDb250ZXh0U3RhY2soKS53aXRoU2NvcGUoKCkgPT4ge1xuICAgIHJldHVybiBjYWxsYmFjayhnZXRBc3luY0NvbnRleHRTdGFjaygpLmdldElzb2xhdGlvblNjb3BlKCkpO1xuICB9KTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIHN0YWNrLWJhc2VkIGFzeW5jIGNvbnRleHQgc3RyYXRlZ3kuXG4gKi9cbmZ1bmN0aW9uIGdldFN0YWNrQXN5bmNDb250ZXh0U3RyYXRlZ3koKSB7XG4gIHJldHVybiB7XG4gICAgd2l0aElzb2xhdGlvblNjb3BlLFxuICAgIHdpdGhTY29wZSxcbiAgICB3aXRoU2V0U2NvcGUsXG4gICAgd2l0aFNldElzb2xhdGlvblNjb3BlOiAoX2lzb2xhdGlvblNjb3BlLCBjYWxsYmFjaykgPT4ge1xuICAgICAgcmV0dXJuIHdpdGhJc29sYXRpb25TY29wZShjYWxsYmFjayk7XG4gICAgfSxcbiAgICBnZXRDdXJyZW50U2NvcGU6ICgpID0+IGdldEFzeW5jQ29udGV4dFN0YWNrKCkuZ2V0U2NvcGUoKSxcbiAgICBnZXRJc29sYXRpb25TY29wZTogKCkgPT4gZ2V0QXN5bmNDb250ZXh0U3RhY2soKS5nZXRJc29sYXRpb25TY29wZSgpLFxuICB9O1xufVxuXG5leHBvcnQgeyBBc3luY0NvbnRleHRTdGFjaywgZ2V0U3RhY2tBc3luY0NvbnRleHRTdHJhdGVneSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhY2tTdHJhdGVneS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/asyncContext/stackStrategy.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/baseclient.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/baseclient.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseClient\": function() { return /* binding */ BaseClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api.js */ \"./node_modules/@sentry/core/esm/api.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/core/esm/envelope.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _utils_parseSampleRate_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/parseSampleRate.js */ \"./node_modules/@sentry/core/esm/utils/parseSampleRate.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(options.dsn);\n    } else {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = (0,_api_js__WEBPACK_IMPORTED_MODULE_2__.getEnvelopeEndpointWithUrlEncodedAuth)(\n        this._dsn,\n        options.tunnel,\n        options._metadata ? options._metadata.sdk : undefined,\n      );\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   captureException(exception, hint, scope) {\n    const eventId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n\n    // ensure we haven't captured this very object before\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.checkOrSetAlreadyCaught)(exception)) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    this._process(\n      this.eventFromException(exception, hintWithEventId).then(event =>\n        this._captureEvent(event, hintWithEventId, scope),\n      ),\n    );\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    level,\n    hint,\n    currentScope,\n  ) {\n    const hintWithEventId = {\n      event_id: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n      ...hint,\n    };\n\n    const eventMessage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isParameterizedString)(message) ? message : String(message);\n\n    const promisedEvent = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isPrimitive)(message)\n      ? this.eventFromMessage(eventMessage, level, hintWithEventId)\n      : this.eventFromException(message, hintWithEventId);\n\n    this._process(promisedEvent.then(event => this._captureEvent(event, hintWithEventId, currentScope)));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, currentScope) {\n    const eventId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.checkOrSetAlreadyCaught)(hint.originalException)) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(ALREADY_SEEN_ERROR);\n      return eventId;\n    }\n\n    const hintWithEventId = {\n      event_id: eventId,\n      ...hint,\n    };\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(this._captureEvent(event, hintWithEventId, capturedSpanScope || currentScope));\n\n    return hintWithEventId.event_id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!(typeof session.release === 'string')) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_3__.updateSession)(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      this.emit('flush');\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      this.emit('close');\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /** @inheritdoc */\n   init() {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n   getIntegrationByName(integrationName) {\n    return this._integrations[integrationName] ;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    (0,_integration_js__WEBPACK_IMPORTED_MODULE_4__.setupIntegration)(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      (0,_integration_js__WEBPACK_IMPORTED_MODULE_4__.afterSetupIntegrations)(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_5__.createEventEnvelope)(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addItemToEnvelope)(env, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createAttachmentEnvelopeItem)(attachment));\n    }\n\n    const promise = this.sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    const env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_5__.createSessionEnvelope)(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n   sendEnvelope(envelope) {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('Error while sending event:', reason);\n        return reason;\n      });\n    }\n\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('Transport disabled');\n\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)({});\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n   _setupIntegrations() {\n    const { integrations } = this._options;\n    this._integrations = (0,_integration_js__WEBPACK_IMPORTED_MODULE_4__.setupIntegrations)(this, integrations);\n    (0,_integration_js__WEBPACK_IMPORTED_MODULE_4__.afterSetupIntegrations)(this, integrations);\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_3__.updateSession)(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(\n    event,\n    hint,\n    currentScope,\n    isolationScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_6__.getIsolationScope)(),\n  ) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    if (!event.type) {\n      isolationScope.setLastEventId(event.event_id || hint.event_id);\n    }\n\n    return (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_7__.prepareEvent)(options, event, hint, currentScope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(currentScope ? currentScope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          }),\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_8__.getDynamicSamplingContextFromClient)(trace_id, this);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(sentryError.message);\n          } else {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param currentScope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, currentScope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    const parsedSampleRate = typeof sampleRate === 'undefined' ? undefined : (0,_utils_parseSampleRate_js__WEBPACK_IMPORTED_MODULE_9__.parseSampleRate)(sampleRate);\n    if (isError && typeof parsedSampleRate === 'number' && Math.random() > parsedSampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(\n        new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, currentScope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = currentScope && currentScope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isThenable)(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(event) && event !== null) {\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(beforeSendResult) && beforeSendResult !== null) {\n    throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction, beforeSendSpan } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event)) {\n    if (event.spans && beforeSendSpan) {\n      const processedSpans = [];\n      for (const span of event.spans) {\n        const processedSpan = beforeSendSpan(span);\n        if (processedSpan) {\n          processedSpans.push(processedSpan);\n        }\n      }\n      event.spans = processedSpans;\n    }\n\n    if (beforeSendTransaction) {\n      return beforeSendTransaction(event, hint);\n    }\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n\n//# sourceMappingURL=baseclient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/baseclient.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/breadcrumbs.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/breadcrumbs.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addBreadcrumb\": function() { return /* binding */ addBreadcrumb; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n\n\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n */\nfunction addBreadcrumb(breadcrumb, hint) {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  const isolationScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n\n  if (!client) return;\n\n  const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } = client.getOptions();\n\n  if (maxBreadcrumbs <= 0) return;\n\n  const timestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dateTimestampInSeconds)();\n  const mergedBreadcrumb = { timestamp, ...breadcrumb };\n  const finalBreadcrumb = beforeBreadcrumb\n    ? ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.consoleSandbox)(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n    : mergedBreadcrumb;\n\n  if (finalBreadcrumb === null) return;\n\n  if (client.emit) {\n    client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n  }\n\n  isolationScope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n}\n\n\n//# sourceMappingURL=breadcrumbs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9icmVhZGNydW1icy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUU7QUFDTDs7QUFFbEU7QUFDQTtBQUNBLFNBQVMsNkJBQTZCO0FBQ3RDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNERBQVM7QUFDMUIseUJBQXlCLG9FQUFpQjs7QUFFMUM7O0FBRUEsVUFBVSxnRUFBZ0U7O0FBRTFFOztBQUVBLG9CQUFvQixxRUFBc0I7QUFDMUMsNkJBQTZCO0FBQzdCO0FBQ0EsT0FBTyw2REFBYztBQUNyQjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vYnJlYWRjcnVtYnMuanM/M2Y1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkYXRlVGltZXN0YW1wSW5TZWNvbmRzLCBjb25zb2xlU2FuZGJveCB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0Q2xpZW50LCBnZXRJc29sYXRpb25TY29wZSB9IGZyb20gJy4vY3VycmVudFNjb3Blcy5qcyc7XG5cbi8qKlxuICogRGVmYXVsdCBtYXhpbXVtIG51bWJlciBvZiBicmVhZGNydW1icyBhZGRlZCB0byBhbiBldmVudC4gQ2FuIGJlIG92ZXJ3cml0dGVuXG4gKiB3aXRoIHtAbGluayBPcHRpb25zLm1heEJyZWFkY3J1bWJzfS5cbiAqL1xuY29uc3QgREVGQVVMVF9CUkVBRENSVU1CUyA9IDEwMDtcblxuLyoqXG4gKiBSZWNvcmRzIGEgbmV3IGJyZWFkY3J1bWIgd2hpY2ggd2lsbCBiZSBhdHRhY2hlZCB0byBmdXR1cmUgZXZlbnRzLlxuICpcbiAqIEJyZWFkY3J1bWJzIHdpbGwgYmUgYWRkZWQgdG8gc3Vic2VxdWVudCBldmVudHMgdG8gcHJvdmlkZSBtb3JlIGNvbnRleHQgb25cbiAqIHVzZXIncyBhY3Rpb25zIHByaW9yIHRvIGFuIGVycm9yIG9yIGNyYXNoLlxuICovXG5mdW5jdGlvbiBhZGRCcmVhZGNydW1iKGJyZWFkY3J1bWIsIGhpbnQpIHtcbiAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCk7XG4gIGNvbnN0IGlzb2xhdGlvblNjb3BlID0gZ2V0SXNvbGF0aW9uU2NvcGUoKTtcblxuICBpZiAoIWNsaWVudCkgcmV0dXJuO1xuXG4gIGNvbnN0IHsgYmVmb3JlQnJlYWRjcnVtYiA9IG51bGwsIG1heEJyZWFkY3J1bWJzID0gREVGQVVMVF9CUkVBRENSVU1CUyB9ID0gY2xpZW50LmdldE9wdGlvbnMoKTtcblxuICBpZiAobWF4QnJlYWRjcnVtYnMgPD0gMCkgcmV0dXJuO1xuXG4gIGNvbnN0IHRpbWVzdGFtcCA9IGRhdGVUaW1lc3RhbXBJblNlY29uZHMoKTtcbiAgY29uc3QgbWVyZ2VkQnJlYWRjcnVtYiA9IHsgdGltZXN0YW1wLCAuLi5icmVhZGNydW1iIH07XG4gIGNvbnN0IGZpbmFsQnJlYWRjcnVtYiA9IGJlZm9yZUJyZWFkY3J1bWJcbiAgICA/IChjb25zb2xlU2FuZGJveCgoKSA9PiBiZWZvcmVCcmVhZGNydW1iKG1lcmdlZEJyZWFkY3J1bWIsIGhpbnQpKSApXG4gICAgOiBtZXJnZWRCcmVhZGNydW1iO1xuXG4gIGlmIChmaW5hbEJyZWFkY3J1bWIgPT09IG51bGwpIHJldHVybjtcblxuICBpZiAoY2xpZW50LmVtaXQpIHtcbiAgICBjbGllbnQuZW1pdCgnYmVmb3JlQWRkQnJlYWRjcnVtYicsIGZpbmFsQnJlYWRjcnVtYiwgaGludCk7XG4gIH1cblxuICBpc29sYXRpb25TY29wZS5hZGRCcmVhZGNydW1iKGZpbmFsQnJlYWRjcnVtYiwgbWF4QnJlYWRjcnVtYnMpO1xufVxuXG5leHBvcnQgeyBhZGRCcmVhZGNydW1iIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1icmVhZGNydW1icy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/breadcrumbs.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/carrier.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/carrier.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getMainCarrier\": function() { return /* binding */ getMainCarrier; },\n/* harmony export */   \"getSentryCarrier\": function() { return /* binding */ getSentryCarrier; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * An object that contains globally accessible properties and maintains a scope stack.\n * @hidden\n */\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ);\n  return _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nfunction getSentryCarrier(carrier) {\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n\n  // For now: First SDK that sets the .version property wins\n  __SENTRY__.version = __SENTRY__.version || _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION;\n\n  // Intentionally populating and returning the version of \"this\" SDK instance\n  // rather than what's set in .version so that \"this\" SDK always gets its carrier\n  return (__SENTRY__[_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION] = __SENTRY__[_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION] || {});\n}\n\n\n//# sourceMappingURL=carrier.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jYXJyaWVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RDs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFEQUFVO0FBQzdCLFNBQVMscURBQVU7QUFDbkI7O0FBRUE7QUFDQTtBQUNBLG1FQUFtRTs7QUFFbkU7QUFDQSw2Q0FBNkMsc0RBQVc7O0FBRXhEO0FBQ0E7QUFDQSxxQkFBcUIsc0RBQVcsZUFBZSxzREFBVyxPQUFPO0FBQ2pFOztBQUU0QztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jYXJyaWVyLmpzP2MxN2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR0xPQkFMX09CSiwgU0RLX1ZFUlNJT04gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBBbiBvYmplY3QgdGhhdCBjb250YWlucyBnbG9iYWxseSBhY2Nlc3NpYmxlIHByb3BlcnRpZXMgYW5kIG1haW50YWlucyBhIHNjb3BlIHN0YWNrLlxuICogQGhpZGRlblxuICovXG5cbi8qKlxuICogUmV0dXJucyB0aGUgZ2xvYmFsIHNoaW0gcmVnaXN0cnkuXG4gKlxuICogRklYTUU6IFRoaXMgZnVuY3Rpb24gaXMgcHJvYmxlbWF0aWMsIGJlY2F1c2UgZGVzcGl0ZSBhbHdheXMgcmV0dXJuaW5nIGEgdmFsaWQgQ2FycmllcixcbiAqIGl0IGhhcyBhbiBvcHRpb25hbCBgX19TRU5UUllfX2AgcHJvcGVydHksIHdoaWNoIHRoZW4gaW4gdHVybiByZXF1aXJlcyB1cyB0byBhbHdheXMgcGVyZm9ybSBhbiB1bm5lY2Vzc2FyeSBjaGVja1xuICogYXQgdGhlIGNhbGwtc2l0ZS4gV2UgYWx3YXlzIGFjY2VzcyB0aGUgY2FycmllciB0aHJvdWdoIHRoaXMgZnVuY3Rpb24sIHNvIHdlIGNhbiBndWFyYW50ZWUgdGhhdCBgX19TRU5UUllfX2AgaXMgdGhlcmUuXG4gKiovXG5mdW5jdGlvbiBnZXRNYWluQ2FycmllcigpIHtcbiAgLy8gVGhpcyBlbnN1cmVzIGEgU2VudHJ5IGNhcnJpZXIgZXhpc3RzXG4gIGdldFNlbnRyeUNhcnJpZXIoR0xPQkFMX09CSik7XG4gIHJldHVybiBHTE9CQUxfT0JKO1xufVxuXG4vKiogV2lsbCBlaXRoZXIgZ2V0IHRoZSBleGlzdGluZyBzZW50cnkgY2Fycmllciwgb3IgY3JlYXRlIGEgbmV3IG9uZS4gKi9cbmZ1bmN0aW9uIGdldFNlbnRyeUNhcnJpZXIoY2Fycmllcikge1xuICBjb25zdCBfX1NFTlRSWV9fID0gKGNhcnJpZXIuX19TRU5UUllfXyA9IGNhcnJpZXIuX19TRU5UUllfXyB8fCB7fSk7XG5cbiAgLy8gRm9yIG5vdzogRmlyc3QgU0RLIHRoYXQgc2V0cyB0aGUgLnZlcnNpb24gcHJvcGVydHkgd2luc1xuICBfX1NFTlRSWV9fLnZlcnNpb24gPSBfX1NFTlRSWV9fLnZlcnNpb24gfHwgU0RLX1ZFUlNJT047XG5cbiAgLy8gSW50ZW50aW9uYWxseSBwb3B1bGF0aW5nIGFuZCByZXR1cm5pbmcgdGhlIHZlcnNpb24gb2YgXCJ0aGlzXCIgU0RLIGluc3RhbmNlXG4gIC8vIHJhdGhlciB0aGFuIHdoYXQncyBzZXQgaW4gLnZlcnNpb24gc28gdGhhdCBcInRoaXNcIiBTREsgYWx3YXlzIGdldHMgaXRzIGNhcnJpZXJcbiAgcmV0dXJuIChfX1NFTlRSWV9fW1NES19WRVJTSU9OXSA9IF9fU0VOVFJZX19bU0RLX1ZFUlNJT05dIHx8IHt9KTtcbn1cblxuZXhwb3J0IHsgZ2V0TWFpbkNhcnJpZXIsIGdldFNlbnRyeUNhcnJpZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhcnJpZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/carrier.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/checkin.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/checkin.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCheckInEnvelope\": function() { return /* binding */ createCheckInEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Create envelope from check in item.\n */\nfunction createCheckInEnvelope(\n  checkIn,\n  dynamicSamplingContext,\n  metadata,\n  tunnel,\n  dsn,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && !!dsn) {\n    headers.dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn);\n  }\n\n  if (dynamicSamplingContext) {\n    headers.trace = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(dynamicSamplingContext) ;\n  }\n\n  const item = createCheckInEnvelopeItem(checkIn);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(headers, [item]);\n}\n\nfunction createCheckInEnvelopeItem(checkIn) {\n  const checkInHeaders = {\n    type: 'check_in',\n  };\n  return [checkInHeaders, checkIn];\n}\n\n\n//# sourceMappingURL=checkin.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jaGVja2luLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStFOztBQUUvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsMERBQVc7QUFDN0I7O0FBRUE7QUFDQSxvQkFBb0IsZ0VBQWlCO0FBQ3JDOztBQUVBO0FBQ0EsU0FBUyw2REFBYztBQUN2Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2NoZWNraW4uanM/ZDk4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkc25Ub1N0cmluZywgZHJvcFVuZGVmaW5lZEtleXMsIGNyZWF0ZUVudmVsb3BlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogQ3JlYXRlIGVudmVsb3BlIGZyb20gY2hlY2sgaW4gaXRlbS5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2hlY2tJbkVudmVsb3BlKFxuICBjaGVja0luLFxuICBkeW5hbWljU2FtcGxpbmdDb250ZXh0LFxuICBtZXRhZGF0YSxcbiAgdHVubmVsLFxuICBkc24sXG4pIHtcbiAgY29uc3QgaGVhZGVycyA9IHtcbiAgICBzZW50X2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gIH07XG5cbiAgaWYgKG1ldGFkYXRhICYmIG1ldGFkYXRhLnNkaykge1xuICAgIGhlYWRlcnMuc2RrID0ge1xuICAgICAgbmFtZTogbWV0YWRhdGEuc2RrLm5hbWUsXG4gICAgICB2ZXJzaW9uOiBtZXRhZGF0YS5zZGsudmVyc2lvbixcbiAgICB9O1xuICB9XG5cbiAgaWYgKCEhdHVubmVsICYmICEhZHNuKSB7XG4gICAgaGVhZGVycy5kc24gPSBkc25Ub1N0cmluZyhkc24pO1xuICB9XG5cbiAgaWYgKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpIHtcbiAgICBoZWFkZXJzLnRyYWNlID0gZHJvcFVuZGVmaW5lZEtleXMoZHluYW1pY1NhbXBsaW5nQ29udGV4dCkgO1xuICB9XG5cbiAgY29uc3QgaXRlbSA9IGNyZWF0ZUNoZWNrSW5FbnZlbG9wZUl0ZW0oY2hlY2tJbik7XG4gIHJldHVybiBjcmVhdGVFbnZlbG9wZShoZWFkZXJzLCBbaXRlbV0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVDaGVja0luRW52ZWxvcGVJdGVtKGNoZWNrSW4pIHtcbiAgY29uc3QgY2hlY2tJbkhlYWRlcnMgPSB7XG4gICAgdHlwZTogJ2NoZWNrX2luJyxcbiAgfTtcbiAgcmV0dXJuIFtjaGVja0luSGVhZGVycywgY2hlY2tJbl07XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUNoZWNrSW5FbnZlbG9wZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hlY2tpbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/checkin.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/constants.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_ENVIRONMENT\": function() { return /* binding */ DEFAULT_ENVIRONMENT; }\n/* harmony export */ });\nconst DEFAULT_ENVIRONMENT = 'production';\n\n\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jb25zdGFudHMuanM/ZWU5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBERUZBVUxUX0VOVklST05NRU5UID0gJ3Byb2R1Y3Rpb24nO1xuXG5leHBvcnQgeyBERUZBVUxUX0VOVklST05NRU5UIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/constants.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/currentScopes.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/currentScopes.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getClient\": function() { return /* binding */ getClient; },\n/* harmony export */   \"getCurrentScope\": function() { return /* binding */ getCurrentScope; },\n/* harmony export */   \"getGlobalScope\": function() { return /* binding */ getGlobalScope; },\n/* harmony export */   \"getIsolationScope\": function() { return /* binding */ getIsolationScope; },\n/* harmony export */   \"withIsolationScope\": function() { return /* binding */ withIsolationScope; },\n/* harmony export */   \"withScope\": function() { return /* binding */ withScope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _asyncContext_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./asyncContext/index.js */ \"./node_modules/@sentry/core/esm/asyncContext/index.js\");\n/* harmony import */ var _carrier_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carrier.js */ \"./node_modules/@sentry/core/esm/carrier.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n\n\n\n\n\n/**\n * Get the currently active scope.\n */\nfunction getCurrentScope() {\n  const carrier = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_0__.getMainCarrier)();\n  const acs = (0,_asyncContext_index_js__WEBPACK_IMPORTED_MODULE_1__.getAsyncContextStrategy)(carrier);\n  return acs.getCurrentScope();\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context.\n */\nfunction getIsolationScope() {\n  const carrier = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_0__.getMainCarrier)();\n  const acs = (0,_asyncContext_index_js__WEBPACK_IMPORTED_MODULE_1__.getAsyncContextStrategy)(carrier);\n  return acs.getIsolationScope();\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nfunction getGlobalScope() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getGlobalSingleton)('globalScope', () => new _scope_js__WEBPACK_IMPORTED_MODULE_3__.Scope());\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n */\n\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nfunction withScope(\n  ...rest\n) {\n  const carrier = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_0__.getMainCarrier)();\n  const acs = (0,_asyncContext_index_js__WEBPACK_IMPORTED_MODULE_1__.getAsyncContextStrategy)(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n\n    if (!scope) {\n      return acs.withScope(callback);\n    }\n\n    return acs.withSetScope(scope, callback);\n  }\n\n  return acs.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n */\n\n/**\n * Either creates a new active isolation scope, or sets the given isolation scope as active scope in the given callback.\n */\nfunction withIsolationScope(\n  ...rest\n\n) {\n  const carrier = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_0__.getMainCarrier)();\n  const acs = (0,_asyncContext_index_js__WEBPACK_IMPORTED_MODULE_1__.getAsyncContextStrategy)(carrier);\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [isolationScope, callback] = rest;\n\n    if (!isolationScope) {\n      return acs.withIsolationScope(callback);\n    }\n\n    return acs.withSetIsolationScope(isolationScope, callback);\n  }\n\n  return acs.withIsolationScope(rest[0]);\n}\n\n/**\n * Get the currently active client.\n */\nfunction getClient() {\n  return getCurrentScope().getClient();\n}\n\n\n//# sourceMappingURL=currentScopes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jdXJyZW50U2NvcGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBbUQ7QUFDZTtBQUNwQjtBQUNYOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyREFBYztBQUNoQyxjQUFjLCtFQUF1QjtBQUNyQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMkRBQWM7QUFDaEMsY0FBYywrRUFBdUI7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxpRUFBa0IsMEJBQTBCLDRDQUFLO0FBQzFEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFjO0FBQ2hDLGNBQWMsK0VBQXVCOztBQUVyQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLDJEQUFjO0FBQ2hDLGNBQWMsK0VBQXVCOztBQUVyQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXdHO0FBQ3hHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2N1cnJlbnRTY29wZXMuanM/YjU1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRHbG9iYWxTaW5nbGV0b24gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEFzeW5jQ29udGV4dFN0cmF0ZWd5IH0gZnJvbSAnLi9hc3luY0NvbnRleHQvaW5kZXguanMnO1xuaW1wb3J0IHsgZ2V0TWFpbkNhcnJpZXIgfSBmcm9tICcuL2NhcnJpZXIuanMnO1xuaW1wb3J0IHsgU2NvcGUgfSBmcm9tICcuL3Njb3BlLmpzJztcblxuLyoqXG4gKiBHZXQgdGhlIGN1cnJlbnRseSBhY3RpdmUgc2NvcGUuXG4gKi9cbmZ1bmN0aW9uIGdldEN1cnJlbnRTY29wZSgpIHtcbiAgY29uc3QgY2FycmllciA9IGdldE1haW5DYXJyaWVyKCk7XG4gIGNvbnN0IGFjcyA9IGdldEFzeW5jQ29udGV4dFN0cmF0ZWd5KGNhcnJpZXIpO1xuICByZXR1cm4gYWNzLmdldEN1cnJlbnRTY29wZSgpO1xufVxuXG4vKipcbiAqIEdldCB0aGUgY3VycmVudGx5IGFjdGl2ZSBpc29sYXRpb24gc2NvcGUuXG4gKiBUaGUgaXNvbGF0aW9uIHNjb3BlIGlzIGFjdGl2ZSBmb3IgdGhlIGN1cnJlbnQgZXhlY3Rpb24gY29udGV4dC5cbiAqL1xuZnVuY3Rpb24gZ2V0SXNvbGF0aW9uU2NvcGUoKSB7XG4gIGNvbnN0IGNhcnJpZXIgPSBnZXRNYWluQ2FycmllcigpO1xuICBjb25zdCBhY3MgPSBnZXRBc3luY0NvbnRleHRTdHJhdGVneShjYXJyaWVyKTtcbiAgcmV0dXJuIGFjcy5nZXRJc29sYXRpb25TY29wZSgpO1xufVxuXG4vKipcbiAqIEdldCB0aGUgZ2xvYmFsIHNjb3BlLlxuICogVGhpcyBzY29wZSBpcyBhcHBsaWVkIHRvIF9hbGxfIGV2ZW50cy5cbiAqL1xuZnVuY3Rpb24gZ2V0R2xvYmFsU2NvcGUoKSB7XG4gIHJldHVybiBnZXRHbG9iYWxTaW5nbGV0b24oJ2dsb2JhbFNjb3BlJywgKCkgPT4gbmV3IFNjb3BlKCkpO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgc2NvcGUgd2l0aCBhbmQgZXhlY3V0ZXMgdGhlIGdpdmVuIG9wZXJhdGlvbiB3aXRoaW4uXG4gKiBUaGUgc2NvcGUgaXMgYXV0b21hdGljYWxseSByZW1vdmVkIG9uY2UgdGhlIG9wZXJhdGlvblxuICogZmluaXNoZXMgb3IgdGhyb3dzLlxuICovXG5cbi8qKlxuICogRWl0aGVyIGNyZWF0ZXMgYSBuZXcgYWN0aXZlIHNjb3BlLCBvciBzZXRzIHRoZSBnaXZlbiBzY29wZSBhcyBhY3RpdmUgc2NvcGUgaW4gdGhlIGdpdmVuIGNhbGxiYWNrLlxuICovXG5mdW5jdGlvbiB3aXRoU2NvcGUoXG4gIC4uLnJlc3Rcbikge1xuICBjb25zdCBjYXJyaWVyID0gZ2V0TWFpbkNhcnJpZXIoKTtcbiAgY29uc3QgYWNzID0gZ2V0QXN5bmNDb250ZXh0U3RyYXRlZ3koY2Fycmllcik7XG5cbiAgLy8gSWYgYSBzY29wZSBpcyBkZWZpbmVkLCB3ZSB3YW50IHRvIG1ha2UgdGhpcyB0aGUgYWN0aXZlIHNjb3BlIGluc3RlYWQgb2YgdGhlIGRlZmF1bHQgb25lXG4gIGlmIChyZXN0Lmxlbmd0aCA9PT0gMikge1xuICAgIGNvbnN0IFtzY29wZSwgY2FsbGJhY2tdID0gcmVzdDtcblxuICAgIGlmICghc2NvcGUpIHtcbiAgICAgIHJldHVybiBhY3Mud2l0aFNjb3BlKGNhbGxiYWNrKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWNzLndpdGhTZXRTY29wZShzY29wZSwgY2FsbGJhY2spO1xuICB9XG5cbiAgcmV0dXJuIGFjcy53aXRoU2NvcGUocmVzdFswXSk7XG59XG5cbi8qKlxuICogQXR0ZW1wdHMgdG8gZm9yayB0aGUgY3VycmVudCBpc29sYXRpb24gc2NvcGUgYW5kIHRoZSBjdXJyZW50IHNjb3BlIGJhc2VkIG9uIHRoZSBjdXJyZW50IGFzeW5jIGNvbnRleHQgc3RyYXRlZ3kuIElmIG5vXG4gKiBhc3luYyBjb250ZXh0IHN0cmF0ZWd5IGlzIHNldCwgdGhlIGlzb2xhdGlvbiBzY29wZSBhbmQgdGhlIGN1cnJlbnQgc2NvcGUgd2lsbCBub3QgYmUgZm9ya2VkICh0aGlzIGlzIGN1cnJlbnRseSB0aGVcbiAqIGNhc2UsIGZvciBleGFtcGxlLCBpbiB0aGUgYnJvd3NlcikuXG4gKlxuICogVXNhZ2Ugb2YgdGhpcyBmdW5jdGlvbiBpbiBlbnZpcm9ubWVudHMgd2l0aG91dCBhc3luYyBjb250ZXh0IHN0cmF0ZWd5IGlzIGRpc2NvdXJhZ2VkIGFuZCBtYXkgbGVhZCB0byB1bmV4cGVjdGVkIGJlaGF2aW91ci5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIGludGVuZGVkIGZvciBTZW50cnkgU0RLIGFuZCBTREsgaW50ZWdyYXRpb24gZGV2ZWxvcG1lbnQuIEl0IGlzIG5vdCByZWNvbW1lbmRlZCB0byBiZSB1c2VkIGluIFwibm9ybWFsXCJcbiAqIGFwcGxpY2F0aW9ucyBkaXJlY3RseSBiZWNhdXNlIGl0IGNvbWVzIHdpdGggcGl0ZmFsbHMuIFVzZSBhdCB5b3VyIG93biByaXNrIVxuICovXG5cbi8qKlxuICogRWl0aGVyIGNyZWF0ZXMgYSBuZXcgYWN0aXZlIGlzb2xhdGlvbiBzY29wZSwgb3Igc2V0cyB0aGUgZ2l2ZW4gaXNvbGF0aW9uIHNjb3BlIGFzIGFjdGl2ZSBzY29wZSBpbiB0aGUgZ2l2ZW4gY2FsbGJhY2suXG4gKi9cbmZ1bmN0aW9uIHdpdGhJc29sYXRpb25TY29wZShcbiAgLi4ucmVzdFxuXG4pIHtcbiAgY29uc3QgY2FycmllciA9IGdldE1haW5DYXJyaWVyKCk7XG4gIGNvbnN0IGFjcyA9IGdldEFzeW5jQ29udGV4dFN0cmF0ZWd5KGNhcnJpZXIpO1xuXG4gIC8vIElmIGEgc2NvcGUgaXMgZGVmaW5lZCwgd2Ugd2FudCB0byBtYWtlIHRoaXMgdGhlIGFjdGl2ZSBzY29wZSBpbnN0ZWFkIG9mIHRoZSBkZWZhdWx0IG9uZVxuICBpZiAocmVzdC5sZW5ndGggPT09IDIpIHtcbiAgICBjb25zdCBbaXNvbGF0aW9uU2NvcGUsIGNhbGxiYWNrXSA9IHJlc3Q7XG5cbiAgICBpZiAoIWlzb2xhdGlvblNjb3BlKSB7XG4gICAgICByZXR1cm4gYWNzLndpdGhJc29sYXRpb25TY29wZShjYWxsYmFjayk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjcy53aXRoU2V0SXNvbGF0aW9uU2NvcGUoaXNvbGF0aW9uU2NvcGUsIGNhbGxiYWNrKTtcbiAgfVxuXG4gIHJldHVybiBhY3Mud2l0aElzb2xhdGlvblNjb3BlKHJlc3RbMF0pO1xufVxuXG4vKipcbiAqIEdldCB0aGUgY3VycmVudGx5IGFjdGl2ZSBjbGllbnQuXG4gKi9cbmZ1bmN0aW9uIGdldENsaWVudCgpIHtcbiAgcmV0dXJuIGdldEN1cnJlbnRTY29wZSgpLmdldENsaWVudCgpO1xufVxuXG5leHBvcnQgeyBnZXRDbGllbnQsIGdldEN1cnJlbnRTY29wZSwgZ2V0R2xvYmFsU2NvcGUsIGdldElzb2xhdGlvblNjb3BlLCB3aXRoSXNvbGF0aW9uU2NvcGUsIHdpdGhTY29wZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3VycmVudFNjb3Blcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/currentScopes.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/debug-build.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/debug-build.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEBUG_BUILD\": function() { return /* binding */ DEBUG_BUILD; }\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9kZWJ1Zy1idWlsZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUV6RDtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9kZWJ1Zy1idWlsZC5qcz9jNTQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBzZXJ2ZXMgYXMgYSBidWlsZCB0aW1lIGZsYWcgdGhhdCB3aWxsIGJlIHRydWUgYnkgZGVmYXVsdCwgYnV0IGZhbHNlIGluIG5vbi1kZWJ1ZyBidWlsZHMgb3IgaWYgdXNlcnMgcmVwbGFjZSBgX19TRU5UUllfREVCVUdfX2AgaW4gdGhlaXIgZ2VuZXJhdGVkIGNvZGUuXG4gKlxuICogQVRURU5USU9OOiBUaGlzIGNvbnN0YW50IG11c3QgbmV2ZXIgY3Jvc3MgcGFja2FnZSBib3VuZGFyaWVzIChpLmUuIGJlIGV4cG9ydGVkKSB0byBndWFyYW50ZWUgdGhhdCBpdCBjYW4gYmUgdXNlZCBmb3IgdHJlZSBzaGFraW5nLlxuICovXG5jb25zdCBERUJVR19CVUlMRCA9ICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXyk7XG5cbmV4cG9ydCB7IERFQlVHX0JVSUxEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy1idWlsZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/debug-build.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/defaultScopes.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/defaultScopes.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDefaultCurrentScope\": function() { return /* binding */ getDefaultCurrentScope; },\n/* harmony export */   \"getDefaultIsolationScope\": function() { return /* binding */ getDefaultIsolationScope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n\n\n\n/** Get the default current scope. */\nfunction getDefaultCurrentScope() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)('defaultCurrentScope', () => new _scope_js__WEBPACK_IMPORTED_MODULE_1__.Scope());\n}\n\n/** Get the default isolation scope. */\nfunction getDefaultIsolationScope() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)('defaultIsolationScope', () => new _scope_js__WEBPACK_IMPORTED_MODULE_1__.Scope());\n}\n\n\n//# sourceMappingURL=defaultScopes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9kZWZhdWx0U2NvcGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUQ7QUFDaEI7O0FBRW5DO0FBQ0E7QUFDQSxTQUFTLGlFQUFrQixrQ0FBa0MsNENBQUs7QUFDbEU7O0FBRUE7QUFDQTtBQUNBLFNBQVMsaUVBQWtCLG9DQUFvQyw0Q0FBSztBQUNwRTs7QUFFNEQ7QUFDNUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vZGVmYXVsdFNjb3Blcy5qcz80OThjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEdsb2JhbFNpbmdsZXRvbiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgU2NvcGUgfSBmcm9tICcuL3Njb3BlLmpzJztcblxuLyoqIEdldCB0aGUgZGVmYXVsdCBjdXJyZW50IHNjb3BlLiAqL1xuZnVuY3Rpb24gZ2V0RGVmYXVsdEN1cnJlbnRTY29wZSgpIHtcbiAgcmV0dXJuIGdldEdsb2JhbFNpbmdsZXRvbignZGVmYXVsdEN1cnJlbnRTY29wZScsICgpID0+IG5ldyBTY29wZSgpKTtcbn1cblxuLyoqIEdldCB0aGUgZGVmYXVsdCBpc29sYXRpb24gc2NvcGUuICovXG5mdW5jdGlvbiBnZXREZWZhdWx0SXNvbGF0aW9uU2NvcGUoKSB7XG4gIHJldHVybiBnZXRHbG9iYWxTaW5nbGV0b24oJ2RlZmF1bHRJc29sYXRpb25TY29wZScsICgpID0+IG5ldyBTY29wZSgpKTtcbn1cblxuZXhwb3J0IHsgZ2V0RGVmYXVsdEN1cnJlbnRTY29wZSwgZ2V0RGVmYXVsdElzb2xhdGlvblNjb3BlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZhdWx0U2NvcGVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/defaultScopes.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/envelope.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/core/esm/envelope.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEventEnvelope\": function() { return /* binding */ createEventEnvelope; },\n/* harmony export */   \"createSessionEnvelope\": function() { return /* binding */ createSessionEnvelope; },\n/* harmony export */   \"createSpanEnvelope\": function() { return /* binding */ createSpanEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEventEnvelopeHeaders)(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [eventItem]);\n}\n\n/**\n * Create envelope from Span item.\n *\n * Takes an optional client and runs spans through `beforeSendSpan` if available.\n */\nfunction createSpanEnvelope(spans, client) {\n  function dscHasRequiredProps(dsc) {\n    return !!dsc.trace_id && !!dsc.public_key;\n  }\n\n  // For the moment we'll obtain the DSC from the first span in the array\n  // This might need to be changed if we permit sending multiple spans from\n  // different segments in one envelope\n  const dsc = (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_1__.getDynamicSamplingContextFromSpan)(spans[0]);\n\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  const headers = {\n    sent_at: new Date().toISOString(),\n    ...(dscHasRequiredProps(dsc) && { trace: dsc }),\n    ...(!!tunnel && dsn && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn) }),\n  };\n\n  const beforeSendSpan = client && client.getOptions().beforeSendSpan;\n  const convertToSpanJSON = beforeSendSpan\n    ? (span) => beforeSendSpan((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.spanToJSON)(span) )\n    : (span) => (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.spanToJSON)(span);\n\n  const items = [];\n  for (const span of spans) {\n    const spanJson = convertToSpanJSON(span);\n    if (spanJson) {\n      items.push((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createSpanEnvelopeItem)(spanJson));\n    }\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(headers, items);\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9lbnZlbG9wZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBaUo7QUFDekQ7QUFDdEM7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw4RUFBK0I7QUFDakQ7QUFDQTtBQUNBLHFCQUFxQixjQUFjO0FBQ25DLDZCQUE2QixLQUFLLDBEQUFXLE9BQU87QUFDcEQ7O0FBRUE7QUFDQSxpQ0FBaUMsa0JBQWtCLGdCQUFnQixpQkFBaUI7O0FBRXBGLFNBQVMsNkRBQWM7QUFDdkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDhFQUErQjs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSwwQkFBMEIseUVBQTBCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixpQkFBaUI7QUFDeEMsU0FBUyw2REFBYztBQUN2Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxR0FBaUM7O0FBRS9DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNDQUFzQyxZQUFZO0FBQ2xELDZCQUE2QixLQUFLLDBEQUFXLE9BQU87QUFDcEQ7O0FBRUE7QUFDQTtBQUNBLCtCQUErQiwrREFBVTtBQUN6QyxnQkFBZ0IsK0RBQVU7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFFQUFzQjtBQUN2QztBQUNBOztBQUVBLFNBQVMsNkRBQWM7QUFDdkI7O0FBRTBFO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2VudmVsb3BlLmpzPzEzMTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0U2RrTWV0YWRhdGFGb3JFbnZlbG9wZUhlYWRlciwgZHNuVG9TdHJpbmcsIGNyZWF0ZUVudmVsb3BlLCBjcmVhdGVFdmVudEVudmVsb3BlSGVhZGVycywgY3JlYXRlU3BhbkVudmVsb3BlSXRlbSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuIH0gZnJvbSAnLi90cmFjaW5nL2R5bmFtaWNTYW1wbGluZ0NvbnRleHQuanMnO1xuaW1wb3J0IHsgc3BhblRvSlNPTiB9IGZyb20gJy4vdXRpbHMvc3BhblV0aWxzLmpzJztcblxuLyoqXG4gKiBBcHBseSBTZGtJbmZvIChuYW1lLCB2ZXJzaW9uLCBwYWNrYWdlcywgaW50ZWdyYXRpb25zKSB0byB0aGUgY29ycmVzcG9uZGluZyBldmVudCBrZXkuXG4gKiBNZXJnZSB3aXRoIGV4aXN0aW5nIGRhdGEgaWYgYW55LlxuICoqL1xuZnVuY3Rpb24gZW5oYW5jZUV2ZW50V2l0aFNka0luZm8oZXZlbnQsIHNka0luZm8pIHtcbiAgaWYgKCFzZGtJbmZvKSB7XG4gICAgcmV0dXJuIGV2ZW50O1xuICB9XG4gIGV2ZW50LnNkayA9IGV2ZW50LnNkayB8fCB7fTtcbiAgZXZlbnQuc2RrLm5hbWUgPSBldmVudC5zZGsubmFtZSB8fCBzZGtJbmZvLm5hbWU7XG4gIGV2ZW50LnNkay52ZXJzaW9uID0gZXZlbnQuc2RrLnZlcnNpb24gfHwgc2RrSW5mby52ZXJzaW9uO1xuICBldmVudC5zZGsuaW50ZWdyYXRpb25zID0gWy4uLihldmVudC5zZGsuaW50ZWdyYXRpb25zIHx8IFtdKSwgLi4uKHNka0luZm8uaW50ZWdyYXRpb25zIHx8IFtdKV07XG4gIGV2ZW50LnNkay5wYWNrYWdlcyA9IFsuLi4oZXZlbnQuc2RrLnBhY2thZ2VzIHx8IFtdKSwgLi4uKHNka0luZm8ucGFja2FnZXMgfHwgW10pXTtcbiAgcmV0dXJuIGV2ZW50O1xufVxuXG4vKiogQ3JlYXRlcyBhbiBlbnZlbG9wZSBmcm9tIGEgU2Vzc2lvbiAqL1xuZnVuY3Rpb24gY3JlYXRlU2Vzc2lvbkVudmVsb3BlKFxuICBzZXNzaW9uLFxuICBkc24sXG4gIG1ldGFkYXRhLFxuICB0dW5uZWwsXG4pIHtcbiAgY29uc3Qgc2RrSW5mbyA9IGdldFNka01ldGFkYXRhRm9yRW52ZWxvcGVIZWFkZXIobWV0YWRhdGEpO1xuICBjb25zdCBlbnZlbG9wZUhlYWRlcnMgPSB7XG4gICAgc2VudF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIC4uLihzZGtJbmZvICYmIHsgc2RrOiBzZGtJbmZvIH0pLFxuICAgIC4uLighIXR1bm5lbCAmJiBkc24gJiYgeyBkc246IGRzblRvU3RyaW5nKGRzbikgfSksXG4gIH07XG5cbiAgY29uc3QgZW52ZWxvcGVJdGVtID1cbiAgICAnYWdncmVnYXRlcycgaW4gc2Vzc2lvbiA/IFt7IHR5cGU6ICdzZXNzaW9ucycgfSwgc2Vzc2lvbl0gOiBbeyB0eXBlOiAnc2Vzc2lvbicgfSwgc2Vzc2lvbi50b0pTT04oKV07XG5cbiAgcmV0dXJuIGNyZWF0ZUVudmVsb3BlKGVudmVsb3BlSGVhZGVycywgW2VudmVsb3BlSXRlbV0pO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBFbnZlbG9wZSBmcm9tIGFuIGV2ZW50LlxuICovXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVudmVsb3BlKFxuICBldmVudCxcbiAgZHNuLFxuICBtZXRhZGF0YSxcbiAgdHVubmVsLFxuKSB7XG4gIGNvbnN0IHNka0luZm8gPSBnZXRTZGtNZXRhZGF0YUZvckVudmVsb3BlSGVhZGVyKG1ldGFkYXRhKTtcblxuICAvKlxuICAgIE5vdGU6IER1ZSB0byBUUywgZXZlbnQudHlwZSBtYXkgYmUgYHJlcGxheV9ldmVudGAsIHRoZW9yZXRpY2FsbHkuXG4gICAgSW4gcHJhY3RpY2UsIHdlIG5ldmVyIGNhbGwgYGNyZWF0ZUV2ZW50RW52ZWxvcGVgIHdpdGggYHJlcGxheV9ldmVudGAgdHlwZSxcbiAgICBhbmQgd2UnZCBoYXZlIHRvIGFkanV0IGEgbG9vb3Qgb2YgdHlwZXMgdG8gbWFrZSB0aGlzIHdvcmsgcHJvcGVybHkuXG4gICAgV2Ugd2FudCB0byBhdm9pZCBjYXN0aW5nIHRoaXMgYXJvdW5kLCBhcyB0aGF0IGNvdWxkIGxlYWQgdG8gYnVncyAoZS5nLiB3aGVuIHdlIGFkZCBhbm90aGVyIHR5cGUpXG4gICAgU28gdGhlIHNhZmUgY2hvaWNlIGlzIHRvIHJlYWxseSBndWFyZCBhZ2FpbnN0IHRoZSByZXBsYXlfZXZlbnQgdHlwZSBoZXJlLlxuICAqL1xuICBjb25zdCBldmVudFR5cGUgPSBldmVudC50eXBlICYmIGV2ZW50LnR5cGUgIT09ICdyZXBsYXlfZXZlbnQnID8gZXZlbnQudHlwZSA6ICdldmVudCc7XG5cbiAgZW5oYW5jZUV2ZW50V2l0aFNka0luZm8oZXZlbnQsIG1ldGFkYXRhICYmIG1ldGFkYXRhLnNkayk7XG5cbiAgY29uc3QgZW52ZWxvcGVIZWFkZXJzID0gY3JlYXRlRXZlbnRFbnZlbG9wZUhlYWRlcnMoZXZlbnQsIHNka0luZm8sIHR1bm5lbCwgZHNuKTtcblxuICAvLyBQcmV2ZW50IHRoaXMgZGF0YSAod2hpY2gsIGlmIGl0IGV4aXN0cywgd2FzIHVzZWQgaW4gZWFybGllciBzdGVwcyBpbiB0aGUgcHJvY2Vzc2luZyBwaXBlbGluZSkgZnJvbSBiZWluZyBzZW50IHRvXG4gIC8vIHNlbnRyeS4gKE5vdGU6IE91ciB1c2Ugb2YgdGhpcyBwcm9wZXJ0eSBjb21lcyBhbmQgZ29lcyB3aXRoIHdoYXRldmVyIHdlIG1pZ2h0IGJlIGRlYnVnZ2luZywgd2hhdGV2ZXIgaGFja3Mgd2UgbWF5XG4gIC8vIGhhdmUgdGVtcG9yYXJpbHkgYWRkZWQsIGV0Yy4gRXZlbiBpZiB3ZSBkb24ndCBoYXBwZW4gdG8gYmUgdXNpbmcgaXQgYXQgc29tZSBwb2ludCBpbiB0aGUgZnV0dXJlLCBsZXQncyBub3QgZ2V0IHJpZFxuICAvLyBvZiB0aGlzIGBkZWxldGVgLCBsZXN0IHdlIG1pc3MgcHV0dGluZyBpdCBiYWNrIGluIHRoZSBuZXh0IHRpbWUgdGhlIHByb3BlcnR5IGlzIGluIHVzZS4pXG4gIGRlbGV0ZSBldmVudC5zZGtQcm9jZXNzaW5nTWV0YWRhdGE7XG5cbiAgY29uc3QgZXZlbnRJdGVtID0gW3sgdHlwZTogZXZlbnRUeXBlIH0sIGV2ZW50XTtcbiAgcmV0dXJuIGNyZWF0ZUVudmVsb3BlKGVudmVsb3BlSGVhZGVycywgW2V2ZW50SXRlbV0pO1xufVxuXG4vKipcbiAqIENyZWF0ZSBlbnZlbG9wZSBmcm9tIFNwYW4gaXRlbS5cbiAqXG4gKiBUYWtlcyBhbiBvcHRpb25hbCBjbGllbnQgYW5kIHJ1bnMgc3BhbnMgdGhyb3VnaCBgYmVmb3JlU2VuZFNwYW5gIGlmIGF2YWlsYWJsZS5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlU3BhbkVudmVsb3BlKHNwYW5zLCBjbGllbnQpIHtcbiAgZnVuY3Rpb24gZHNjSGFzUmVxdWlyZWRQcm9wcyhkc2MpIHtcbiAgICByZXR1cm4gISFkc2MudHJhY2VfaWQgJiYgISFkc2MucHVibGljX2tleTtcbiAgfVxuXG4gIC8vIEZvciB0aGUgbW9tZW50IHdlJ2xsIG9idGFpbiB0aGUgRFNDIGZyb20gdGhlIGZpcnN0IHNwYW4gaW4gdGhlIGFycmF5XG4gIC8vIFRoaXMgbWlnaHQgbmVlZCB0byBiZSBjaGFuZ2VkIGlmIHdlIHBlcm1pdCBzZW5kaW5nIG11bHRpcGxlIHNwYW5zIGZyb21cbiAgLy8gZGlmZmVyZW50IHNlZ21lbnRzIGluIG9uZSBlbnZlbG9wZVxuICBjb25zdCBkc2MgPSBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4oc3BhbnNbMF0pO1xuXG4gIGNvbnN0IGRzbiA9IGNsaWVudCAmJiBjbGllbnQuZ2V0RHNuKCk7XG4gIGNvbnN0IHR1bm5lbCA9IGNsaWVudCAmJiBjbGllbnQuZ2V0T3B0aW9ucygpLnR1bm5lbDtcblxuICBjb25zdCBoZWFkZXJzID0ge1xuICAgIHNlbnRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAuLi4oZHNjSGFzUmVxdWlyZWRQcm9wcyhkc2MpICYmIHsgdHJhY2U6IGRzYyB9KSxcbiAgICAuLi4oISF0dW5uZWwgJiYgZHNuICYmIHsgZHNuOiBkc25Ub1N0cmluZyhkc24pIH0pLFxuICB9O1xuXG4gIGNvbnN0IGJlZm9yZVNlbmRTcGFuID0gY2xpZW50ICYmIGNsaWVudC5nZXRPcHRpb25zKCkuYmVmb3JlU2VuZFNwYW47XG4gIGNvbnN0IGNvbnZlcnRUb1NwYW5KU09OID0gYmVmb3JlU2VuZFNwYW5cbiAgICA/IChzcGFuKSA9PiBiZWZvcmVTZW5kU3BhbihzcGFuVG9KU09OKHNwYW4pIClcbiAgICA6IChzcGFuKSA9PiBzcGFuVG9KU09OKHNwYW4pO1xuXG4gIGNvbnN0IGl0ZW1zID0gW107XG4gIGZvciAoY29uc3Qgc3BhbiBvZiBzcGFucykge1xuICAgIGNvbnN0IHNwYW5Kc29uID0gY29udmVydFRvU3BhbkpTT04oc3Bhbik7XG4gICAgaWYgKHNwYW5Kc29uKSB7XG4gICAgICBpdGVtcy5wdXNoKGNyZWF0ZVNwYW5FbnZlbG9wZUl0ZW0oc3Bhbkpzb24pKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY3JlYXRlRW52ZWxvcGUoaGVhZGVycywgaXRlbXMpO1xufVxuXG5leHBvcnQgeyBjcmVhdGVFdmVudEVudmVsb3BlLCBjcmVhdGVTZXNzaW9uRW52ZWxvcGUsIGNyZWF0ZVNwYW5FbnZlbG9wZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52ZWxvcGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/envelope.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/eventProcessors.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/eventProcessors.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"notifyEventProcessors\": function() { return /* binding */ notifyEventProcessors; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nfunction notifyEventProcessors(\n  processors,\n  event,\n  hint,\n  index = 0,\n) {\n  return new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) ;\n\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && processor.id && result === null && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isThenable)(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n\n\n//# sourceMappingURL=eventProcessors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9ldmVudFByb2Nlc3NvcnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdFO0FBQ2pCOztBQUUvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHNEQUFXO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixpQ0FBaUMsVUFBVTs7QUFFM0MsTUFBTSx3REFBVyx1Q0FBdUMscURBQVUscUJBQXFCLGFBQWE7O0FBRXBHLFVBQVUseURBQVU7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2V2ZW50UHJvY2Vzc29ycy5qcz9jNDA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN5bmNQcm9taXNlLCBsb2dnZXIsIGlzVGhlbmFibGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi9kZWJ1Zy1idWlsZC5qcyc7XG5cbi8qKlxuICogUHJvY2VzcyBhbiBhcnJheSBvZiBldmVudCBwcm9jZXNzb3JzLCByZXR1cm5pbmcgdGhlIHByb2Nlc3NlZCBldmVudCAob3IgYG51bGxgIGlmIHRoZSBldmVudCB3YXMgZHJvcHBlZCkuXG4gKi9cbmZ1bmN0aW9uIG5vdGlmeUV2ZW50UHJvY2Vzc29ycyhcbiAgcHJvY2Vzc29ycyxcbiAgZXZlbnQsXG4gIGhpbnQsXG4gIGluZGV4ID0gMCxcbikge1xuICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCBwcm9jZXNzb3IgPSBwcm9jZXNzb3JzW2luZGV4XTtcbiAgICBpZiAoZXZlbnQgPT09IG51bGwgfHwgdHlwZW9mIHByb2Nlc3NvciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmVzb2x2ZShldmVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHByb2Nlc3Nvcih7IC4uLmV2ZW50IH0sIGhpbnQpIDtcblxuICAgICAgREVCVUdfQlVJTEQgJiYgcHJvY2Vzc29yLmlkICYmIHJlc3VsdCA9PT0gbnVsbCAmJiBsb2dnZXIubG9nKGBFdmVudCBwcm9jZXNzb3IgXCIke3Byb2Nlc3Nvci5pZH1cIiBkcm9wcGVkIGV2ZW50YCk7XG5cbiAgICAgIGlmIChpc1RoZW5hYmxlKHJlc3VsdCkpIHtcbiAgICAgICAgdm9pZCByZXN1bHRcbiAgICAgICAgICAudGhlbihmaW5hbCA9PiBub3RpZnlFdmVudFByb2Nlc3NvcnMocHJvY2Vzc29ycywgZmluYWwsIGhpbnQsIGluZGV4ICsgMSkudGhlbihyZXNvbHZlKSlcbiAgICAgICAgICAudGhlbihudWxsLCByZWplY3QpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdm9pZCBub3RpZnlFdmVudFByb2Nlc3NvcnMocHJvY2Vzc29ycywgcmVzdWx0LCBoaW50LCBpbmRleCArIDEpXG4gICAgICAgICAgLnRoZW4ocmVzb2x2ZSlcbiAgICAgICAgICAudGhlbihudWxsLCByZWplY3QpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydCB7IG5vdGlmeUV2ZW50UHJvY2Vzc29ycyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXZlbnRQcm9jZXNzb3JzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/eventProcessors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/exports.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/exports.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addEventProcessor\": function() { return /* binding */ addEventProcessor; },\n/* harmony export */   \"captureCheckIn\": function() { return /* binding */ captureCheckIn; },\n/* harmony export */   \"captureEvent\": function() { return /* binding */ captureEvent; },\n/* harmony export */   \"captureException\": function() { return /* binding */ captureException; },\n/* harmony export */   \"captureMessage\": function() { return /* binding */ captureMessage; },\n/* harmony export */   \"captureSession\": function() { return /* binding */ captureSession; },\n/* harmony export */   \"close\": function() { return /* binding */ close; },\n/* harmony export */   \"endSession\": function() { return /* binding */ endSession; },\n/* harmony export */   \"flush\": function() { return /* binding */ flush; },\n/* harmony export */   \"isEnabled\": function() { return /* binding */ isEnabled; },\n/* harmony export */   \"isInitialized\": function() { return /* binding */ isInitialized; },\n/* harmony export */   \"lastEventId\": function() { return /* binding */ lastEventId; },\n/* harmony export */   \"setContext\": function() { return /* binding */ setContext; },\n/* harmony export */   \"setExtra\": function() { return /* binding */ setExtra; },\n/* harmony export */   \"setExtras\": function() { return /* binding */ setExtras; },\n/* harmony export */   \"setTag\": function() { return /* binding */ setTag; },\n/* harmony export */   \"setTags\": function() { return /* binding */ setTags; },\n/* harmony export */   \"setUser\": function() { return /* binding */ setUser; },\n/* harmony export */   \"startSession\": function() { return /* binding */ startSession; },\n/* harmony export */   \"withMonitor\": function() { return /* binding */ withMonitor; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n\n\n\n\n\n\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception,\n  hint,\n) {\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().captureException(exception, (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__.parseEventHintOrCaptureContext)(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nfunction captureMessage(message, captureContext) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nfunction captureEvent(event, hint) {\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().captureEvent(event, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)().setUser(user);\n}\n\n/**\n * The last error event id of the isolation scope.\n *\n * Warning: This function really returns the last recorded error event id on the current\n * isolation scope. If you call this function after handling a certain error and another error\n * is captured in between, the last one is returned instead of the one you might expect.\n * Also, ids of events that were never sent to Sentry (for example because\n * they were dropped in `beforeSend`) could be returned.\n *\n * @returns The last event id of the isolation scope.\n */\nfunction lastEventId() {\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)().lastEventId();\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction captureCheckIn(checkIn, upsertMonitorConfig) {\n  const scope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  if (!client) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nfunction withMonitor(\n  monitorSlug,\n  callback,\n  upsertMonitorConfig,\n) {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.timestampInSeconds)();\n\n  function finishCheckIn(status) {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.timestampInSeconds)() - now });\n  }\n\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.withIsolationScope)(() => {\n    let maybePromiseResult;\n    try {\n      maybePromiseResult = callback();\n    } catch (e) {\n      finishCheckIn('error');\n      throw e;\n    }\n\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isThenable)(maybePromiseResult)) {\n      Promise.resolve(maybePromiseResult).then(\n        () => {\n          finishCheckIn('ok');\n        },\n        () => {\n          finishCheckIn('error');\n        },\n      );\n    } else {\n      finishCheckIn('ok');\n    }\n\n    return maybePromiseResult;\n  });\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function flush(timeout) {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  if (client) {\n    return client.flush(timeout);\n  }\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nasync function close(timeout) {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  if (client) {\n    return client.close(timeout);\n  }\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nfunction isInitialized() {\n  return !!(0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n}\n\n/** If the SDK is initialized & enabled. */\nfunction isEnabled() {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  return !!client && client.getOptions().enabled !== false && !!client.getTransport();\n}\n\n/**\n * Add an event processor.\n * This will be added to the current isolation scope, ensuring any event that is processed in the current execution\n * context will have the processor applied.\n */\nfunction addEventProcessor(callback) {\n  (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)().addEventProcessor(callback);\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nfunction startSession(context) {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  const isolationScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n  const currentScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n\n  const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ.navigator || {};\n\n  const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_5__.makeSession)({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    (0,_session_js__WEBPACK_IMPORTED_MODULE_5__.updateSession)(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nfunction endSession() {\n  const isolationScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n  const currentScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    (0,_session_js__WEBPACK_IMPORTED_MODULE_5__.closeSession)(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const isolationScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n  const currentScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nfunction captureSession(end = false) {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n\n\n//# sourceMappingURL=exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/exports.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/feedback.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/core/esm/feedback.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"captureFeedback\": function() { return /* binding */ captureFeedback; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n\n\n\n/**\n * Send user feedback to Sentry.\n */\nfunction captureFeedback(\n  feedbackParams,\n  hint = {},\n  scope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)(),\n) {\n  const { message, name, email, url, source, associatedEventId } = feedbackParams;\n\n  const feedbackEvent = {\n    contexts: {\n      feedback: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({\n        contact_email: email,\n        name,\n        message,\n        url,\n        source,\n        associated_event_id: associatedEventId,\n      }),\n    },\n    type: 'feedback',\n    level: 'info',\n  };\n\n  const client = (scope && scope.getClient()) || (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n\n  if (client) {\n    client.emit('beforeSendFeedback', feedbackEvent, hint);\n  }\n\n  const eventId = scope.captureEvent(feedbackEvent, hint);\n\n  return eventId;\n}\n\n\n//# sourceMappingURL=feedback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9mZWVkYmFjay5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0Q7QUFDYzs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxVQUFVLGtFQUFlO0FBQ3pCO0FBQ0EsVUFBVSx1REFBdUQ7O0FBRWpFO0FBQ0E7QUFDQSxnQkFBZ0IsZ0VBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBLGlEQUFpRCw0REFBUzs7QUFFMUQ7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ZlZWRiYWNrLmpzPzZmMmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHJvcFVuZGVmaW5lZEtleXMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldENsaWVudCwgZ2V0Q3VycmVudFNjb3BlIH0gZnJvbSAnLi9jdXJyZW50U2NvcGVzLmpzJztcblxuLyoqXG4gKiBTZW5kIHVzZXIgZmVlZGJhY2sgdG8gU2VudHJ5LlxuICovXG5mdW5jdGlvbiBjYXB0dXJlRmVlZGJhY2soXG4gIGZlZWRiYWNrUGFyYW1zLFxuICBoaW50ID0ge30sXG4gIHNjb3BlID0gZ2V0Q3VycmVudFNjb3BlKCksXG4pIHtcbiAgY29uc3QgeyBtZXNzYWdlLCBuYW1lLCBlbWFpbCwgdXJsLCBzb3VyY2UsIGFzc29jaWF0ZWRFdmVudElkIH0gPSBmZWVkYmFja1BhcmFtcztcblxuICBjb25zdCBmZWVkYmFja0V2ZW50ID0ge1xuICAgIGNvbnRleHRzOiB7XG4gICAgICBmZWVkYmFjazogZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgICAgICBjb250YWN0X2VtYWlsOiBlbWFpbCxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgdXJsLFxuICAgICAgICBzb3VyY2UsXG4gICAgICAgIGFzc29jaWF0ZWRfZXZlbnRfaWQ6IGFzc29jaWF0ZWRFdmVudElkLFxuICAgICAgfSksXG4gICAgfSxcbiAgICB0eXBlOiAnZmVlZGJhY2snLFxuICAgIGxldmVsOiAnaW5mbycsXG4gIH07XG5cbiAgY29uc3QgY2xpZW50ID0gKHNjb3BlICYmIHNjb3BlLmdldENsaWVudCgpKSB8fCBnZXRDbGllbnQoKTtcblxuICBpZiAoY2xpZW50KSB7XG4gICAgY2xpZW50LmVtaXQoJ2JlZm9yZVNlbmRGZWVkYmFjaycsIGZlZWRiYWNrRXZlbnQsIGhpbnQpO1xuICB9XG5cbiAgY29uc3QgZXZlbnRJZCA9IHNjb3BlLmNhcHR1cmVFdmVudChmZWVkYmFja0V2ZW50LCBoaW50KTtcblxuICByZXR1cm4gZXZlbnRJZDtcbn1cblxuZXhwb3J0IHsgY2FwdHVyZUZlZWRiYWNrIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZWVkYmFjay5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/feedback.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/fetch.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/fetch.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addTracingHeadersToFetchRequest\": function() { return /* binding */ addTracingHeadersToFetchRequest; },\n/* harmony export */   \"instrumentFetchRequest\": function() { return /* binding */ instrumentFetchRequest; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./semanticAttributes.js */ \"./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _tracing_sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tracing/sentryNonRecordingSpan.js */ \"./node_modules/@sentry/core/esm/tracing/sentryNonRecordingSpan.js\");\n/* harmony import */ var _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tracing/spanstatus.js */ \"./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _tracing_trace_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tracing/trace.js */ \"./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create and track fetch request spans for usage in combination with `addFetchInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction instrumentFetchRequest(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n  spanOrigin = 'auto.http.browser',\n) {\n  if (!handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = (0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled)() && shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)();\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n\n  const { method, url } = handlerData.fetchData;\n\n  const fullUrl = getFullURL(url);\n  const host = fullUrl ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(fullUrl).host : undefined;\n\n  const hasParent = !!(0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.getActiveSpan)();\n\n  const span =\n    shouldCreateSpanResult && hasParent\n      ? (0,_tracing_trace_js__WEBPACK_IMPORTED_MODULE_4__.startInactiveSpan)({\n          name: `${method} ${url}`,\n          attributes: {\n            url,\n            type: 'fetch',\n            'http.method': method,\n            'http.url': fullUrl,\n            'server.address': host,\n            [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_5__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n            [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_5__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.client',\n          },\n        })\n      : new _tracing_sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_6__.SentryNonRecordingSpan();\n\n  handlerData.fetchData.__span = span.spanContext().spanId;\n  spans[span.spanContext().spanId] = span;\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    options.headers = addTracingHeadersToFetchRequest(\n      request,\n      client,\n      scope,\n      options,\n      // If performance is disabled (TWP) or there's no active root span (pageload/navigation/interaction),\n      // we do not want to use the span as base for the trace headers,\n      // which means that the headers will be generated from the scope and the sampling decision is deferred\n      (0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled)() && hasParent ? span : undefined,\n    );\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nfunction addTracingHeadersToFetchRequest(\n  request, // unknown is actually type Request but we can't export DOM types from this package,\n  client,\n  scope,\n  options\n\n,\n  span,\n) {\n  const isolationScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_1__.getIsolationScope)();\n\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader = span ? (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToTraceHeader)(span) : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.generateSentryTraceHeader)(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dynamicSamplingContextToSentryBaggageHeader)(\n    dsc || (span ? (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_7__.getDynamicSamplingContextFromSpan)(span) : (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_7__.getDynamicSamplingContextFromClient)(traceId, client)),\n  );\n\n  const headers =\n    options.headers ||\n    (typeof Request !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isInstanceOf)(request, Request) ? (request ).headers : undefined);\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isInstanceOf)(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\nfunction getFullURL(url) {\n  try {\n    const parsed = new URL(url);\n    return parsed.href;\n  } catch (e) {\n    return undefined;\n  }\n}\n\nfunction endSpan(span, handlerData) {\n  if (handlerData.response) {\n    (0,_tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_8__.setHttpStatus)(span, handlerData.response.status);\n\n    const contentLength =\n      handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus({ code: _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_8__.SPAN_STATUS_ERROR, message: 'internal_error' });\n  }\n  span.end();\n}\n\n\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/getCurrentHubShim.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/getCurrentHubShim.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCurrentHub\": function() { return /* binding */ getCurrentHub; },\n/* harmony export */   \"getCurrentHubShim\": function() { return /* binding */ getCurrentHubShim; }\n/* harmony export */ });\n/* harmony import */ var _breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./breadcrumbs.js */ \"./node_modules/@sentry/core/esm/breadcrumbs.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./exports.js */ \"./node_modules/@sentry/core/esm/exports.js\");\n\n\n\n\n/**\n * This is for legacy reasons, and returns a proxy object instead of a hub to be used.\n *\n * @deprecated Use the methods directly from the top level Sentry API (e.g. `Sentry.withScope`)\n * For more information see our migration guide for\n * [replacing `getCurrentHub` and `Hub`](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n * usage\n */\n// eslint-disable-next-line deprecation/deprecation\nfunction getCurrentHubShim() {\n  return {\n    bindClient(client) {\n      const scope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n      scope.setClient(client);\n    },\n\n    withScope: _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.withScope,\n    getClient: () => (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)() ,\n    getScope: _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope,\n    getIsolationScope: _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope,\n    captureException: (exception, hint) => {\n      return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().captureException(exception, hint);\n    },\n    captureMessage: (message, level, hint) => {\n      return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)().captureMessage(message, level, hint);\n    },\n    captureEvent: _exports_js__WEBPACK_IMPORTED_MODULE_1__.captureEvent,\n    addBreadcrumb: _breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__.addBreadcrumb,\n    setUser: _exports_js__WEBPACK_IMPORTED_MODULE_1__.setUser,\n    setTags: _exports_js__WEBPACK_IMPORTED_MODULE_1__.setTags,\n    setTag: _exports_js__WEBPACK_IMPORTED_MODULE_1__.setTag,\n    setExtra: _exports_js__WEBPACK_IMPORTED_MODULE_1__.setExtra,\n    setExtras: _exports_js__WEBPACK_IMPORTED_MODULE_1__.setExtras,\n    setContext: _exports_js__WEBPACK_IMPORTED_MODULE_1__.setContext,\n\n    getIntegration(integration) {\n      const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n      return (client && client.getIntegrationByName(integration.id)) || null;\n    },\n\n    startSession: _exports_js__WEBPACK_IMPORTED_MODULE_1__.startSession,\n    endSession: _exports_js__WEBPACK_IMPORTED_MODULE_1__.endSession,\n    captureSession(end) {\n      // both send the update and pull the session from the scope\n      if (end) {\n        return (0,_exports_js__WEBPACK_IMPORTED_MODULE_1__.endSession)();\n      }\n\n      // only send the update\n      _sendSessionUpdate();\n    },\n  };\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nconst getCurrentHub = getCurrentHubShim;\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate() {\n  const scope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n\n  const session = scope.getSession();\n  if (client && session) {\n    client.captureSession(session);\n  }\n}\n\n\n//# sourceMappingURL=getCurrentHubShim.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9nZXRDdXJyZW50SHViU2hpbS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUM2QztBQUNtQzs7QUFFakk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtFQUFlO0FBQ25DO0FBQ0EsS0FBSzs7QUFFTCxhQUFhO0FBQ2IscUJBQXFCLDREQUFTO0FBQzlCLGNBQWMsOERBQWU7QUFDN0IscUJBQXFCO0FBQ3JCO0FBQ0EsYUFBYSxrRUFBZTtBQUM1QixLQUFLO0FBQ0w7QUFDQSxhQUFhLGtFQUFlO0FBQzVCLEtBQUs7QUFDTCxnQkFBZ0I7QUFDaEIsaUJBQWlCO0FBQ2pCLFdBQVc7QUFDWCxXQUFXO0FBQ1gsVUFBVTtBQUNWLFlBQVk7QUFDWixhQUFhO0FBQ2IsY0FBYzs7QUFFZDtBQUNBLHFCQUFxQiw0REFBUztBQUM5QjtBQUNBLEtBQUs7O0FBRUwsZ0JBQWdCO0FBQ2hCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVEQUFVO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGtFQUFlO0FBQy9CLGlCQUFpQiw0REFBUzs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vZ2V0Q3VycmVudEh1YlNoaW0uanM/NzNlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhZGRCcmVhZGNydW1iIH0gZnJvbSAnLi9icmVhZGNydW1icy5qcyc7XG5pbXBvcnQgeyBnZXRDdXJyZW50U2NvcGUsIHdpdGhTY29wZSwgZ2V0Q2xpZW50LCBnZXRJc29sYXRpb25TY29wZSB9IGZyb20gJy4vY3VycmVudFNjb3Blcy5qcyc7XG5pbXBvcnQgeyBjYXB0dXJlRXZlbnQsIHNldFVzZXIsIHNldFRhZ3MsIHNldFRhZywgc2V0RXh0cmEsIHNldEV4dHJhcywgc2V0Q29udGV4dCwgc3RhcnRTZXNzaW9uLCBlbmRTZXNzaW9uIH0gZnJvbSAnLi9leHBvcnRzLmpzJztcblxuLyoqXG4gKiBUaGlzIGlzIGZvciBsZWdhY3kgcmVhc29ucywgYW5kIHJldHVybnMgYSBwcm94eSBvYmplY3QgaW5zdGVhZCBvZiBhIGh1YiB0byBiZSB1c2VkLlxuICpcbiAqIEBkZXByZWNhdGVkIFVzZSB0aGUgbWV0aG9kcyBkaXJlY3RseSBmcm9tIHRoZSB0b3AgbGV2ZWwgU2VudHJ5IEFQSSAoZS5nLiBgU2VudHJ5LndpdGhTY29wZWApXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBzZWUgb3VyIG1pZ3JhdGlvbiBndWlkZSBmb3JcbiAqIFtyZXBsYWNpbmcgYGdldEN1cnJlbnRIdWJgIGFuZCBgSHViYF0oaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9zZW50cnktamF2YXNjcmlwdC9ibG9iL2RldmVsb3AvTUlHUkFUSU9OLm1kI2RlcHJlY2F0ZS1odWIpXG4gKiB1c2FnZVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmZ1bmN0aW9uIGdldEN1cnJlbnRIdWJTaGltKCkge1xuICByZXR1cm4ge1xuICAgIGJpbmRDbGllbnQoY2xpZW50KSB7XG4gICAgICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRTY29wZSgpO1xuICAgICAgc2NvcGUuc2V0Q2xpZW50KGNsaWVudCk7XG4gICAgfSxcblxuICAgIHdpdGhTY29wZSxcbiAgICBnZXRDbGllbnQ6ICgpID0+IGdldENsaWVudCgpICxcbiAgICBnZXRTY29wZTogZ2V0Q3VycmVudFNjb3BlLFxuICAgIGdldElzb2xhdGlvblNjb3BlLFxuICAgIGNhcHR1cmVFeGNlcHRpb246IChleGNlcHRpb24sIGhpbnQpID0+IHtcbiAgICAgIHJldHVybiBnZXRDdXJyZW50U2NvcGUoKS5jYXB0dXJlRXhjZXB0aW9uKGV4Y2VwdGlvbiwgaGludCk7XG4gICAgfSxcbiAgICBjYXB0dXJlTWVzc2FnZTogKG1lc3NhZ2UsIGxldmVsLCBoaW50KSA9PiB7XG4gICAgICByZXR1cm4gZ2V0Q3VycmVudFNjb3BlKCkuY2FwdHVyZU1lc3NhZ2UobWVzc2FnZSwgbGV2ZWwsIGhpbnQpO1xuICAgIH0sXG4gICAgY2FwdHVyZUV2ZW50LFxuICAgIGFkZEJyZWFkY3J1bWIsXG4gICAgc2V0VXNlcixcbiAgICBzZXRUYWdzLFxuICAgIHNldFRhZyxcbiAgICBzZXRFeHRyYSxcbiAgICBzZXRFeHRyYXMsXG4gICAgc2V0Q29udGV4dCxcblxuICAgIGdldEludGVncmF0aW9uKGludGVncmF0aW9uKSB7XG4gICAgICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoKTtcbiAgICAgIHJldHVybiAoY2xpZW50ICYmIGNsaWVudC5nZXRJbnRlZ3JhdGlvbkJ5TmFtZShpbnRlZ3JhdGlvbi5pZCkpIHx8IG51bGw7XG4gICAgfSxcblxuICAgIHN0YXJ0U2Vzc2lvbixcbiAgICBlbmRTZXNzaW9uLFxuICAgIGNhcHR1cmVTZXNzaW9uKGVuZCkge1xuICAgICAgLy8gYm90aCBzZW5kIHRoZSB1cGRhdGUgYW5kIHB1bGwgdGhlIHNlc3Npb24gZnJvbSB0aGUgc2NvcGVcbiAgICAgIGlmIChlbmQpIHtcbiAgICAgICAgcmV0dXJuIGVuZFNlc3Npb24oKTtcbiAgICAgIH1cblxuICAgICAgLy8gb25seSBzZW5kIHRoZSB1cGRhdGVcbiAgICAgIF9zZW5kU2Vzc2lvblVwZGF0ZSgpO1xuICAgIH0sXG4gIH07XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZGVmYXVsdCBodWIgaW5zdGFuY2UuXG4gKlxuICogSWYgYSBodWIgaXMgYWxyZWFkeSByZWdpc3RlcmVkIGluIHRoZSBnbG9iYWwgY2FycmllciBidXQgdGhpcyBtb2R1bGVcbiAqIGNvbnRhaW5zIGEgbW9yZSByZWNlbnQgdmVyc2lvbiwgaXQgcmVwbGFjZXMgdGhlIHJlZ2lzdGVyZWQgdmVyc2lvbi5cbiAqIE90aGVyd2lzZSwgdGhlIGN1cnJlbnRseSByZWdpc3RlcmVkIGh1YiB3aWxsIGJlIHJldHVybmVkLlxuICpcbiAqIEBkZXByZWNhdGVkIFVzZSB0aGUgcmVzcGVjdGl2ZSByZXBsYWNlbWVudCBtZXRob2QgZGlyZWN0bHkgaW5zdGVhZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG5jb25zdCBnZXRDdXJyZW50SHViID0gZ2V0Q3VycmVudEh1YlNoaW07XG5cbi8qKlxuICogU2VuZHMgdGhlIGN1cnJlbnQgU2Vzc2lvbiBvbiB0aGUgc2NvcGVcbiAqL1xuZnVuY3Rpb24gX3NlbmRTZXNzaW9uVXBkYXRlKCkge1xuICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRTY29wZSgpO1xuICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoKTtcblxuICBjb25zdCBzZXNzaW9uID0gc2NvcGUuZ2V0U2Vzc2lvbigpO1xuICBpZiAoY2xpZW50ICYmIHNlc3Npb24pIHtcbiAgICBjbGllbnQuY2FwdHVyZVNlc3Npb24oc2Vzc2lvbik7XG4gIH1cbn1cblxuZXhwb3J0IHsgZ2V0Q3VycmVudEh1YiwgZ2V0Q3VycmVudEh1YlNoaW0gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEN1cnJlbnRIdWJTaGltLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/getCurrentHubShim.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseClient\": function() { return /* reexport safe */ _baseclient_js__WEBPACK_IMPORTED_MODULE_24__.BaseClient; },\n/* harmony export */   \"BrowserMetricsAggregator\": function() { return /* reexport safe */ _metrics_browser_aggregator_js__WEBPACK_IMPORTED_MODULE_58__.BrowserMetricsAggregator; },\n/* harmony export */   \"DEFAULT_ENVIRONMENT\": function() { return /* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_41__.DEFAULT_ENVIRONMENT; },\n/* harmony export */   \"SDK_VERSION\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_64__.SDK_VERSION; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_CACHE_HIT\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_CACHE_HIT; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_CACHE_KEY\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_CACHE_KEY; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_PROFILE_ID\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_PROFILE_ID; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_OP\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_SENTRY_OP; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE\": function() { return /* reexport safe */ _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE; },\n/* harmony export */   \"SPAN_STATUS_ERROR\": function() { return /* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_6__.SPAN_STATUS_ERROR; },\n/* harmony export */   \"SPAN_STATUS_OK\": function() { return /* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_6__.SPAN_STATUS_OK; },\n/* harmony export */   \"SPAN_STATUS_UNSET\": function() { return /* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_6__.SPAN_STATUS_UNSET; },\n/* harmony export */   \"Scope\": function() { return /* reexport safe */ _scope_js__WEBPACK_IMPORTED_MODULE_21__.Scope; },\n/* harmony export */   \"SentryNonRecordingSpan\": function() { return /* reexport safe */ _tracing_sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_5__.SentryNonRecordingSpan; },\n/* harmony export */   \"SentrySpan\": function() { return /* reexport safe */ _tracing_sentrySpan_js__WEBPACK_IMPORTED_MODULE_4__.SentrySpan; },\n/* harmony export */   \"ServerRuntimeClient\": function() { return /* reexport safe */ _server_runtime_client_js__WEBPACK_IMPORTED_MODULE_25__.ServerRuntimeClient; },\n/* harmony export */   \"SessionFlusher\": function() { return /* reexport safe */ _sessionflusher_js__WEBPACK_IMPORTED_MODULE_20__.SessionFlusher; },\n/* harmony export */   \"TRACING_DEFAULTS\": function() { return /* reexport safe */ _tracing_idleSpan_js__WEBPACK_IMPORTED_MODULE_3__.TRACING_DEFAULTS; },\n/* harmony export */   \"addBreadcrumb\": function() { return /* reexport safe */ _breadcrumbs_js__WEBPACK_IMPORTED_MODULE_42__.addBreadcrumb; },\n/* harmony export */   \"addChildSpanToSpan\": function() { return /* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__.addChildSpanToSpan; },\n/* harmony export */   \"addEventProcessor\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.addEventProcessor; },\n/* harmony export */   \"addIntegration\": function() { return /* reexport safe */ _integration_js__WEBPACK_IMPORTED_MODULE_30__.addIntegration; },\n/* harmony export */   \"addTracingExtensions\": function() { return /* reexport safe */ _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_2__.addTracingExtensions; },\n/* harmony export */   \"addTracingHeadersToFetchRequest\": function() { return /* reexport safe */ _fetch_js__WEBPACK_IMPORTED_MODULE_60__.addTracingHeadersToFetchRequest; },\n/* harmony export */   \"applyScopeDataToEvent\": function() { return /* reexport safe */ _utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_31__.applyScopeDataToEvent; },\n/* harmony export */   \"applySdkMetadata\": function() { return /* reexport safe */ _utils_sdkMetadata_js__WEBPACK_IMPORTED_MODULE_40__.applySdkMetadata; },\n/* harmony export */   \"captureCheckIn\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.captureCheckIn; },\n/* harmony export */   \"captureConsoleIntegration\": function() { return /* reexport safe */ _integrations_captureconsole_js__WEBPACK_IMPORTED_MODULE_48__.captureConsoleIntegration; },\n/* harmony export */   \"captureEvent\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.captureEvent; },\n/* harmony export */   \"captureException\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.captureException; },\n/* harmony export */   \"captureFeedback\": function() { return /* reexport safe */ _feedback_js__WEBPACK_IMPORTED_MODULE_62__.captureFeedback; },\n/* harmony export */   \"captureMessage\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.captureMessage; },\n/* harmony export */   \"captureSession\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.captureSession; },\n/* harmony export */   \"close\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.close; },\n/* harmony export */   \"closeSession\": function() { return /* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_19__.closeSession; },\n/* harmony export */   \"continueTrace\": function() { return /* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_7__.continueTrace; },\n/* harmony export */   \"createCheckInEnvelope\": function() { return /* reexport safe */ _checkin_js__WEBPACK_IMPORTED_MODULE_33__.createCheckInEnvelope; },\n/* harmony export */   \"createEventEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_13__.createEventEnvelope; },\n/* harmony export */   \"createSessionEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_13__.createSessionEnvelope; },\n/* harmony export */   \"createSpanEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_13__.createSpanEnvelope; },\n/* harmony export */   \"createTransport\": function() { return /* reexport safe */ _transports_base_js__WEBPACK_IMPORTED_MODULE_27__.createTransport; },\n/* harmony export */   \"debugIntegration\": function() { return /* reexport safe */ _integrations_debug_js__WEBPACK_IMPORTED_MODULE_49__.debugIntegration; },\n/* harmony export */   \"dedupeIntegration\": function() { return /* reexport safe */ _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_50__.dedupeIntegration; },\n/* harmony export */   \"defineIntegration\": function() { return /* reexport safe */ _integration_js__WEBPACK_IMPORTED_MODULE_30__.defineIntegration; },\n/* harmony export */   \"endSession\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.endSession; },\n/* harmony export */   \"extraErrorDataIntegration\": function() { return /* reexport safe */ _integrations_extraerrordata_js__WEBPACK_IMPORTED_MODULE_51__.extraErrorDataIntegration; },\n/* harmony export */   \"flush\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.flush; },\n/* harmony export */   \"functionToStringIntegration\": function() { return /* reexport safe */ _integrations_functiontostring_js__WEBPACK_IMPORTED_MODULE_43__.functionToStringIntegration; },\n/* harmony export */   \"getActiveSpan\": function() { return /* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__.getActiveSpan; },\n/* harmony export */   \"getCapturedScopesOnSpan\": function() { return /* reexport safe */ _tracing_utils_js__WEBPACK_IMPORTED_MODULE_1__.getCapturedScopesOnSpan; },\n/* harmony export */   \"getClient\": function() { return /* reexport safe */ _currentScopes_js__WEBPACK_IMPORTED_MODULE_15__.getClient; },\n/* harmony export */   \"getCurrentHub\": function() { return /* reexport safe */ _getCurrentHubShim_js__WEBPACK_IMPORTED_MODULE_63__.getCurrentHub; },\n/* harmony export */   \"getCurrentHubShim\": function() { return /* reexport safe */ _getCurrentHubShim_js__WEBPACK_IMPORTED_MODULE_63__.getCurrentHubShim; },\n/* harmony export */   \"getCurrentScope\": function() { return /* reexport safe */ _currentScopes_js__WEBPACK_IMPORTED_MODULE_15__.getCurrentScope; },\n/* harmony export */   \"getDefaultCurrentScope\": function() { return /* reexport safe */ _defaultScopes_js__WEBPACK_IMPORTED_MODULE_16__.getDefaultCurrentScope; },\n/* harmony export */   \"getDefaultIsolationScope\": function() { return /* reexport safe */ _defaultScopes_js__WEBPACK_IMPORTED_MODULE_16__.getDefaultIsolationScope; },\n/* harmony export */   \"getDynamicSamplingContextFromClient\": function() { return /* reexport safe */ _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_8__.getDynamicSamplingContextFromClient; },\n/* harmony export */   \"getDynamicSamplingContextFromSpan\": function() { return /* reexport safe */ _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_8__.getDynamicSamplingContextFromSpan; },\n/* harmony export */   \"getEnvelopeEndpointWithUrlEncodedAuth\": function() { return /* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_23__.getEnvelopeEndpointWithUrlEncodedAuth; },\n/* harmony export */   \"getGlobalScope\": function() { return /* reexport safe */ _currentScopes_js__WEBPACK_IMPORTED_MODULE_15__.getGlobalScope; },\n/* harmony export */   \"getIntegrationsToSetup\": function() { return /* reexport safe */ _integration_js__WEBPACK_IMPORTED_MODULE_30__.getIntegrationsToSetup; },\n/* harmony export */   \"getIsolationScope\": function() { return /* reexport safe */ _currentScopes_js__WEBPACK_IMPORTED_MODULE_15__.getIsolationScope; },\n/* harmony export */   \"getMainCarrier\": function() { return /* reexport safe */ _carrier_js__WEBPACK_IMPORTED_MODULE_18__.getMainCarrier; },\n/* harmony export */   \"getMetricSummaryJsonForSpan\": function() { return /* reexport safe */ _metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_59__.getMetricSummaryJsonForSpan; },\n/* harmony export */   \"getReportDialogEndpoint\": function() { return /* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_23__.getReportDialogEndpoint; },\n/* harmony export */   \"getRootSpan\": function() { return /* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__.getRootSpan; },\n/* harmony export */   \"getSpanDescendants\": function() { return /* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__.getSpanDescendants; },\n/* harmony export */   \"getSpanStatusFromHttpCode\": function() { return /* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_6__.getSpanStatusFromHttpCode; },\n/* harmony export */   \"getStatusMessage\": function() { return /* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__.getStatusMessage; },\n/* harmony export */   \"handleCallbackErrors\": function() { return /* reexport safe */ _utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_36__.handleCallbackErrors; },\n/* harmony export */   \"hasTracingEnabled\": function() { return /* reexport safe */ _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_34__.hasTracingEnabled; },\n/* harmony export */   \"inboundFiltersIntegration\": function() { return /* reexport safe */ _integrations_inboundfilters_js__WEBPACK_IMPORTED_MODULE_44__.inboundFiltersIntegration; },\n/* harmony export */   \"initAndBind\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_26__.initAndBind; },\n/* harmony export */   \"instrumentFetchRequest\": function() { return /* reexport safe */ _fetch_js__WEBPACK_IMPORTED_MODULE_60__.instrumentFetchRequest; },\n/* harmony export */   \"isEnabled\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.isEnabled; },\n/* harmony export */   \"isInitialized\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.isInitialized; },\n/* harmony export */   \"isSentryRequestUrl\": function() { return /* reexport safe */ _utils_isSentryRequestUrl_js__WEBPACK_IMPORTED_MODULE_35__.isSentryRequestUrl; },\n/* harmony export */   \"lastEventId\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.lastEventId; },\n/* harmony export */   \"linkedErrorsIntegration\": function() { return /* reexport safe */ _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_45__.linkedErrorsIntegration; },\n/* harmony export */   \"logSpanEnd\": function() { return /* reexport safe */ _tracing_logSpans_js__WEBPACK_IMPORTED_MODULE_11__.logSpanEnd; },\n/* harmony export */   \"logSpanStart\": function() { return /* reexport safe */ _tracing_logSpans_js__WEBPACK_IMPORTED_MODULE_11__.logSpanStart; },\n/* harmony export */   \"makeMultiplexedTransport\": function() { return /* reexport safe */ _transports_multiplexed_js__WEBPACK_IMPORTED_MODULE_29__.makeMultiplexedTransport; },\n/* harmony export */   \"makeOfflineTransport\": function() { return /* reexport safe */ _transports_offline_js__WEBPACK_IMPORTED_MODULE_28__.makeOfflineTransport; },\n/* harmony export */   \"makeSession\": function() { return /* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_19__.makeSession; },\n/* harmony export */   \"mergeScopeData\": function() { return /* reexport safe */ _utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_31__.mergeScopeData; },\n/* harmony export */   \"metrics\": function() { return /* reexport safe */ _metrics_exports_js__WEBPACK_IMPORTED_MODULE_56__.metrics; },\n/* harmony export */   \"metricsDefault\": function() { return /* reexport safe */ _metrics_exports_default_js__WEBPACK_IMPORTED_MODULE_57__.metricsDefault; },\n/* harmony export */   \"moduleMetadataIntegration\": function() { return /* reexport safe */ _integrations_metadata_js__WEBPACK_IMPORTED_MODULE_46__.moduleMetadataIntegration; },\n/* harmony export */   \"notifyEventProcessors\": function() { return /* reexport safe */ _eventProcessors_js__WEBPACK_IMPORTED_MODULE_22__.notifyEventProcessors; },\n/* harmony export */   \"parameterize\": function() { return /* reexport safe */ _utils_parameterize_js__WEBPACK_IMPORTED_MODULE_37__.parameterize; },\n/* harmony export */   \"parseSampleRate\": function() { return /* reexport safe */ _utils_parseSampleRate_js__WEBPACK_IMPORTED_MODULE_39__.parseSampleRate; },\n/* harmony export */   \"prepareEvent\": function() { return /* reexport safe */ _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_32__.prepareEvent; },\n/* harmony export */   \"registerSpanErrorInstrumentation\": function() { return /* reexport safe */ _tracing_errors_js__WEBPACK_IMPORTED_MODULE_0__.registerSpanErrorInstrumentation; },\n/* harmony export */   \"requestDataIntegration\": function() { return /* reexport safe */ _integrations_requestdata_js__WEBPACK_IMPORTED_MODULE_47__.requestDataIntegration; },\n/* harmony export */   \"rewriteFramesIntegration\": function() { return /* reexport safe */ _integrations_rewriteframes_js__WEBPACK_IMPORTED_MODULE_52__.rewriteFramesIntegration; },\n/* harmony export */   \"sampleSpan\": function() { return /* reexport safe */ _tracing_sampling_js__WEBPACK_IMPORTED_MODULE_10__.sampleSpan; },\n/* harmony export */   \"sessionTimingIntegration\": function() { return /* reexport safe */ _integrations_sessiontiming_js__WEBPACK_IMPORTED_MODULE_53__.sessionTimingIntegration; },\n/* harmony export */   \"setAsyncContextStrategy\": function() { return /* reexport safe */ _asyncContext_index_js__WEBPACK_IMPORTED_MODULE_17__.setAsyncContextStrategy; },\n/* harmony export */   \"setCapturedScopesOnSpan\": function() { return /* reexport safe */ _tracing_utils_js__WEBPACK_IMPORTED_MODULE_1__.setCapturedScopesOnSpan; },\n/* harmony export */   \"setContext\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.setContext; },\n/* harmony export */   \"setCurrentClient\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_26__.setCurrentClient; },\n/* harmony export */   \"setExtra\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.setExtra; },\n/* harmony export */   \"setExtras\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.setExtras; },\n/* harmony export */   \"setHttpStatus\": function() { return /* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_6__.setHttpStatus; },\n/* harmony export */   \"setMeasurement\": function() { return /* reexport safe */ _tracing_measurement_js__WEBPACK_IMPORTED_MODULE_9__.setMeasurement; },\n/* harmony export */   \"setTag\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.setTag; },\n/* harmony export */   \"setTags\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.setTags; },\n/* harmony export */   \"setUser\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.setUser; },\n/* harmony export */   \"spanIsSampled\": function() { return /* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__.spanIsSampled; },\n/* harmony export */   \"spanToBaggageHeader\": function() { return /* reexport safe */ _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_8__.spanToBaggageHeader; },\n/* harmony export */   \"spanToJSON\": function() { return /* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__.spanToJSON; },\n/* harmony export */   \"spanToTraceContext\": function() { return /* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__.spanToTraceContext; },\n/* harmony export */   \"spanToTraceHeader\": function() { return /* reexport safe */ _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__.spanToTraceHeader; },\n/* harmony export */   \"startIdleSpan\": function() { return /* reexport safe */ _tracing_idleSpan_js__WEBPACK_IMPORTED_MODULE_3__.startIdleSpan; },\n/* harmony export */   \"startInactiveSpan\": function() { return /* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_7__.startInactiveSpan; },\n/* harmony export */   \"startNewTrace\": function() { return /* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_7__.startNewTrace; },\n/* harmony export */   \"startSession\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.startSession; },\n/* harmony export */   \"startSpan\": function() { return /* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_7__.startSpan; },\n/* harmony export */   \"startSpanManual\": function() { return /* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_7__.startSpanManual; },\n/* harmony export */   \"suppressTracing\": function() { return /* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_7__.suppressTracing; },\n/* harmony export */   \"thirdPartyErrorFilterIntegration\": function() { return /* reexport safe */ _integrations_third_party_errors_filter_js__WEBPACK_IMPORTED_MODULE_55__.thirdPartyErrorFilterIntegration; },\n/* harmony export */   \"timedEventsToMeasurements\": function() { return /* reexport safe */ _tracing_measurement_js__WEBPACK_IMPORTED_MODULE_9__.timedEventsToMeasurements; },\n/* harmony export */   \"trpcMiddleware\": function() { return /* reexport safe */ _trpc_js__WEBPACK_IMPORTED_MODULE_61__.trpcMiddleware; },\n/* harmony export */   \"updateSession\": function() { return /* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_19__.updateSession; },\n/* harmony export */   \"withActiveSpan\": function() { return /* reexport safe */ _tracing_trace_js__WEBPACK_IMPORTED_MODULE_7__.withActiveSpan; },\n/* harmony export */   \"withIsolationScope\": function() { return /* reexport safe */ _currentScopes_js__WEBPACK_IMPORTED_MODULE_15__.withIsolationScope; },\n/* harmony export */   \"withMonitor\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_14__.withMonitor; },\n/* harmony export */   \"withScope\": function() { return /* reexport safe */ _currentScopes_js__WEBPACK_IMPORTED_MODULE_15__.withScope; },\n/* harmony export */   \"zodErrorsIntegration\": function() { return /* reexport safe */ _integrations_zoderrors_js__WEBPACK_IMPORTED_MODULE_54__.zodErrorsIntegration; }\n/* harmony export */ });\n/* harmony import */ var _tracing_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracing/errors.js */ \"./node_modules/@sentry/core/esm/tracing/errors.js\");\n/* harmony import */ var _tracing_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracing/utils.js */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tracing/hubextensions.js */ \"./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _tracing_idleSpan_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tracing/idleSpan.js */ \"./node_modules/@sentry/core/esm/tracing/idleSpan.js\");\n/* harmony import */ var _tracing_sentrySpan_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tracing/sentrySpan.js */ \"./node_modules/@sentry/core/esm/tracing/sentrySpan.js\");\n/* harmony import */ var _tracing_sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tracing/sentryNonRecordingSpan.js */ \"./node_modules/@sentry/core/esm/tracing/sentryNonRecordingSpan.js\");\n/* harmony import */ var _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tracing/spanstatus.js */ \"./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _tracing_trace_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tracing/trace.js */ \"./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _tracing_measurement_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tracing/measurement.js */ \"./node_modules/@sentry/core/esm/tracing/measurement.js\");\n/* harmony import */ var _tracing_sampling_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./tracing/sampling.js */ \"./node_modules/@sentry/core/esm/tracing/sampling.js\");\n/* harmony import */ var _tracing_logSpans_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tracing/logSpans.js */ \"./node_modules/@sentry/core/esm/tracing/logSpans.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./semanticAttributes.js */ \"./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/core/esm/envelope.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./exports.js */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _defaultScopes_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./defaultScopes.js */ \"./node_modules/@sentry/core/esm/defaultScopes.js\");\n/* harmony import */ var _asyncContext_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./asyncContext/index.js */ \"./node_modules/@sentry/core/esm/asyncContext/index.js\");\n/* harmony import */ var _carrier_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./carrier.js */ \"./node_modules/@sentry/core/esm/carrier.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _sessionflusher_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./sessionflusher.js */ \"./node_modules/@sentry/core/esm/sessionflusher.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./eventProcessors.js */ \"./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./api.js */ \"./node_modules/@sentry/core/esm/api.js\");\n/* harmony import */ var _baseclient_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./baseclient.js */ \"./node_modules/@sentry/core/esm/baseclient.js\");\n/* harmony import */ var _server_runtime_client_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./server-runtime-client.js */ \"./node_modules/@sentry/core/esm/server-runtime-client.js\");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./sdk.js */ \"./node_modules/@sentry/core/esm/sdk.js\");\n/* harmony import */ var _transports_base_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./transports/base.js */ \"./node_modules/@sentry/core/esm/transports/base.js\");\n/* harmony import */ var _transports_offline_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./transports/offline.js */ \"./node_modules/@sentry/core/esm/transports/offline.js\");\n/* harmony import */ var _transports_multiplexed_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./transports/multiplexed.js */ \"./node_modules/@sentry/core/esm/transports/multiplexed.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./utils/applyScopeDataToEvent.js */ \"./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n/* harmony import */ var _checkin_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./checkin.js */ \"./node_modules/@sentry/core/esm/checkin.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _utils_isSentryRequestUrl_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./utils/isSentryRequestUrl.js */ \"./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js\");\n/* harmony import */ var _utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./utils/handleCallbackErrors.js */ \"./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _utils_parameterize_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./utils/parameterize.js */ \"./node_modules/@sentry/core/esm/utils/parameterize.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _utils_parseSampleRate_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./utils/parseSampleRate.js */ \"./node_modules/@sentry/core/esm/utils/parseSampleRate.js\");\n/* harmony import */ var _utils_sdkMetadata_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./utils/sdkMetadata.js */ \"./node_modules/@sentry/core/esm/utils/sdkMetadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _breadcrumbs_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./breadcrumbs.js */ \"./node_modules/@sentry/core/esm/breadcrumbs.js\");\n/* harmony import */ var _integrations_functiontostring_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./integrations/functiontostring.js */ \"./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _integrations_inboundfilters_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./integrations/inboundfilters.js */ \"./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n/* harmony import */ var _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./integrations/linkederrors.js */ \"./node_modules/@sentry/core/esm/integrations/linkederrors.js\");\n/* harmony import */ var _integrations_metadata_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./integrations/metadata.js */ \"./node_modules/@sentry/core/esm/integrations/metadata.js\");\n/* harmony import */ var _integrations_requestdata_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./integrations/requestdata.js */ \"./node_modules/@sentry/core/esm/integrations/requestdata.js\");\n/* harmony import */ var _integrations_captureconsole_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./integrations/captureconsole.js */ \"./node_modules/@sentry/core/esm/integrations/captureconsole.js\");\n/* harmony import */ var _integrations_debug_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./integrations/debug.js */ \"./node_modules/@sentry/core/esm/integrations/debug.js\");\n/* harmony import */ var _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./integrations/dedupe.js */ \"./node_modules/@sentry/core/esm/integrations/dedupe.js\");\n/* harmony import */ var _integrations_extraerrordata_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./integrations/extraerrordata.js */ \"./node_modules/@sentry/core/esm/integrations/extraerrordata.js\");\n/* harmony import */ var _integrations_rewriteframes_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./integrations/rewriteframes.js */ \"./node_modules/@sentry/core/esm/integrations/rewriteframes.js\");\n/* harmony import */ var _integrations_sessiontiming_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./integrations/sessiontiming.js */ \"./node_modules/@sentry/core/esm/integrations/sessiontiming.js\");\n/* harmony import */ var _integrations_zoderrors_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./integrations/zoderrors.js */ \"./node_modules/@sentry/core/esm/integrations/zoderrors.js\");\n/* harmony import */ var _integrations_third_party_errors_filter_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./integrations/third-party-errors-filter.js */ \"./node_modules/@sentry/core/esm/integrations/third-party-errors-filter.js\");\n/* harmony import */ var _metrics_exports_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./metrics/exports.js */ \"./node_modules/@sentry/core/esm/metrics/exports.js\");\n/* harmony import */ var _metrics_exports_default_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./metrics/exports-default.js */ \"./node_modules/@sentry/core/esm/metrics/exports-default.js\");\n/* harmony import */ var _metrics_browser_aggregator_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./metrics/browser-aggregator.js */ \"./node_modules/@sentry/core/esm/metrics/browser-aggregator.js\");\n/* harmony import */ var _metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./metrics/metric-summary.js */ \"./node_modules/@sentry/core/esm/metrics/metric-summary.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./fetch.js */ \"./node_modules/@sentry/core/esm/fetch.js\");\n/* harmony import */ var _trpc_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./trpc.js */ \"./node_modules/@sentry/core/esm/trpc.js\");\n/* harmony import */ var _feedback_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./feedback.js */ \"./node_modules/@sentry/core/esm/feedback.js\");\n/* harmony import */ var _getCurrentHubShim_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./getCurrentHubShim.js */ \"./node_modules/@sentry/core/esm/getCurrentHubShim.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integration.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integration.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addIntegration\": function() { return /* binding */ addIntegration; },\n/* harmony export */   \"afterSetupIntegrations\": function() { return /* binding */ afterSetupIntegrations; },\n/* harmony export */   \"defineIntegration\": function() { return /* binding */ defineIntegration; },\n/* harmony export */   \"getIntegrationsToSetup\": function() { return /* binding */ getIntegrationsToSetup; },\n/* harmony export */   \"installedIntegrations\": function() { return /* binding */ installedIntegrations; },\n/* harmony export */   \"setupIntegration\": function() { return /* binding */ setupIntegration; },\n/* harmony export */   \"setupIntegrations\": function() { return /* binding */ setupIntegrations; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.arrayify)(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nfunction afterSetupIntegrations(client, integrations) {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  if (integrationIndex[integration.name]) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1 && typeof integration.setupOnce === 'function') {\n    integration.setupOnce();\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current scope's client. */\nfunction addIntegration(integration) {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n\n  if (!client) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nfunction defineIntegration(fn) {\n  return fn;\n}\n\n\n//# sourceMappingURL=integration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWlEO0FBQ0Y7QUFDQTs7QUFFL0M7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksT0FBTzs7QUFFbkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osbUJBQW1CLHVEQUFRO0FBQzNCLElBQUk7QUFDSjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUksd0RBQVcsSUFBSSxxREFBVSwwREFBMEQsaUJBQWlCO0FBQ3hHO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQSxFQUFFLHdEQUFXLElBQUkscURBQVUsMkJBQTJCLGlCQUFpQjtBQUN2RTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLDREQUFTOztBQUUxQjtBQUNBLElBQUksd0RBQVcsSUFBSSxzREFBVyw0QkFBNEIsaUJBQWlCO0FBQzNFO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5SjtBQUN6SiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbi5qcz8xODUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFycmF5aWZ5LCBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldENsaWVudCB9IGZyb20gJy4vY3VycmVudFNjb3Blcy5qcyc7XG5pbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4vZGVidWctYnVpbGQuanMnO1xuXG5jb25zdCBpbnN0YWxsZWRJbnRlZ3JhdGlvbnMgPSBbXTtcblxuLyoqIE1hcCBvZiBpbnRlZ3JhdGlvbnMgYXNzaWduZWQgdG8gYSBjbGllbnQgKi9cblxuLyoqXG4gKiBSZW1vdmUgZHVwbGljYXRlcyBmcm9tIHRoZSBnaXZlbiBhcnJheSwgcHJlZmVycmluZyB0aGUgbGFzdCBpbnN0YW5jZSBvZiBhbnkgZHVwbGljYXRlLiBOb3QgZ3VhcmFudGVlZCB0b1xuICogcHJlc2V2ZSB0aGUgb3JkZXIgb2YgaW50ZWdyYXRpb25zIGluIHRoZSBhcnJheS5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBmaWx0ZXJEdXBsaWNhdGVzKGludGVncmF0aW9ucykge1xuICBjb25zdCBpbnRlZ3JhdGlvbnNCeU5hbWUgPSB7fTtcblxuICBpbnRlZ3JhdGlvbnMuZm9yRWFjaChjdXJyZW50SW5zdGFuY2UgPT4ge1xuICAgIGNvbnN0IHsgbmFtZSB9ID0gY3VycmVudEluc3RhbmNlO1xuXG4gICAgY29uc3QgZXhpc3RpbmdJbnN0YW5jZSA9IGludGVncmF0aW9uc0J5TmFtZVtuYW1lXTtcblxuICAgIC8vIFdlIHdhbnQgaW50ZWdyYXRpb25zIGxhdGVyIGluIHRoZSBhcnJheSB0byBvdmVyd3JpdGUgZWFybGllciBvbmVzIG9mIHRoZSBzYW1lIHR5cGUsIGV4Y2VwdCB0aGF0IHdlIG5ldmVyIHdhbnQgYVxuICAgIC8vIGRlZmF1bHQgaW5zdGFuY2UgdG8gb3ZlcndyaXRlIGFuIGV4aXN0aW5nIHVzZXIgaW5zdGFuY2VcbiAgICBpZiAoZXhpc3RpbmdJbnN0YW5jZSAmJiAhZXhpc3RpbmdJbnN0YW5jZS5pc0RlZmF1bHRJbnN0YW5jZSAmJiBjdXJyZW50SW5zdGFuY2UuaXNEZWZhdWx0SW5zdGFuY2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpbnRlZ3JhdGlvbnNCeU5hbWVbbmFtZV0gPSBjdXJyZW50SW5zdGFuY2U7XG4gIH0pO1xuXG4gIHJldHVybiBPYmplY3Qua2V5cyhpbnRlZ3JhdGlvbnNCeU5hbWUpLm1hcChrID0+IGludGVncmF0aW9uc0J5TmFtZVtrXSk7XG59XG5cbi8qKiBHZXRzIGludGVncmF0aW9ucyB0byBpbnN0YWxsICovXG5mdW5jdGlvbiBnZXRJbnRlZ3JhdGlvbnNUb1NldHVwKG9wdGlvbnMpIHtcbiAgY29uc3QgZGVmYXVsdEludGVncmF0aW9ucyA9IG9wdGlvbnMuZGVmYXVsdEludGVncmF0aW9ucyB8fCBbXTtcbiAgY29uc3QgdXNlckludGVncmF0aW9ucyA9IG9wdGlvbnMuaW50ZWdyYXRpb25zO1xuXG4gIC8vIFdlIGZsYWcgZGVmYXVsdCBpbnN0YW5jZXMsIHNvIHRoYXQgbGF0ZXIgd2UgY2FuIHRlbGwgdGhlbSBhcGFydCBmcm9tIGFueSB1c2VyLWNyZWF0ZWQgaW5zdGFuY2VzIG9mIHRoZSBzYW1lIGNsYXNzXG4gIGRlZmF1bHRJbnRlZ3JhdGlvbnMuZm9yRWFjaChpbnRlZ3JhdGlvbiA9PiB7XG4gICAgaW50ZWdyYXRpb24uaXNEZWZhdWx0SW5zdGFuY2UgPSB0cnVlO1xuICB9KTtcblxuICBsZXQgaW50ZWdyYXRpb25zO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KHVzZXJJbnRlZ3JhdGlvbnMpKSB7XG4gICAgaW50ZWdyYXRpb25zID0gWy4uLmRlZmF1bHRJbnRlZ3JhdGlvbnMsIC4uLnVzZXJJbnRlZ3JhdGlvbnNdO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB1c2VySW50ZWdyYXRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgaW50ZWdyYXRpb25zID0gYXJyYXlpZnkodXNlckludGVncmF0aW9ucyhkZWZhdWx0SW50ZWdyYXRpb25zKSk7XG4gIH0gZWxzZSB7XG4gICAgaW50ZWdyYXRpb25zID0gZGVmYXVsdEludGVncmF0aW9ucztcbiAgfVxuXG4gIGNvbnN0IGZpbmFsSW50ZWdyYXRpb25zID0gZmlsdGVyRHVwbGljYXRlcyhpbnRlZ3JhdGlvbnMpO1xuXG4gIC8vIFRoZSBgRGVidWdgIGludGVncmF0aW9uIHByaW50cyBjb3BpZXMgb2YgdGhlIGBldmVudGAgYW5kIGBoaW50YCB3aGljaCB3aWxsIGJlIHBhc3NlZCB0byBgYmVmb3JlU2VuZGAgb3JcbiAgLy8gYGJlZm9yZVNlbmRUcmFuc2FjdGlvbmAuIEl0IHRoZXJlZm9yZSBoYXMgdG8gcnVuIGFmdGVyIGFsbCBvdGhlciBpbnRlZ3JhdGlvbnMsIHNvIHRoYXQgdGhlIGNoYW5nZXMgb2YgYWxsIGV2ZW50XG4gIC8vIHByb2Nlc3NvcnMgd2lsbCBiZSByZWZsZWN0ZWQgaW4gdGhlIHByaW50ZWQgdmFsdWVzLiBGb3IgbGFjayBvZiBhIG1vcmUgZWxlZ2FudCB3YXkgdG8gZ3VhcmFudGVlIHRoYXQsIHdlIHRoZXJlZm9yZVxuICAvLyBsb2NhdGUgaXQgYW5kLCBhc3N1bWluZyBpdCBleGlzdHMsIHBvcCBpdCBvdXQgb2YgaXRzIGN1cnJlbnQgc3BvdCBhbmQgc2hvdmUgaXQgb250byB0aGUgZW5kIG9mIHRoZSBhcnJheS5cbiAgY29uc3QgZGVidWdJbmRleCA9IGZpbmRJbmRleChmaW5hbEludGVncmF0aW9ucywgaW50ZWdyYXRpb24gPT4gaW50ZWdyYXRpb24ubmFtZSA9PT0gJ0RlYnVnJyk7XG4gIGlmIChkZWJ1Z0luZGV4ICE9PSAtMSkge1xuICAgIGNvbnN0IFtkZWJ1Z0luc3RhbmNlXSA9IGZpbmFsSW50ZWdyYXRpb25zLnNwbGljZShkZWJ1Z0luZGV4LCAxKTtcbiAgICBmaW5hbEludGVncmF0aW9ucy5wdXNoKGRlYnVnSW5zdGFuY2UpO1xuICB9XG5cbiAgcmV0dXJuIGZpbmFsSW50ZWdyYXRpb25zO1xufVxuXG4vKipcbiAqIEdpdmVuIGEgbGlzdCBvZiBpbnRlZ3JhdGlvbiBpbnN0YW5jZXMgdGhpcyBpbnN0YWxscyB0aGVtIGFsbC4gV2hlbiBgd2l0aERlZmF1bHRzYCBpcyBzZXQgdG8gYHRydWVgIHRoZW4gYWxsIGRlZmF1bHRcbiAqIGludGVncmF0aW9ucyBhcmUgYWRkZWQgdW5sZXNzIHRoZXkgd2VyZSBhbHJlYWR5IHByb3ZpZGVkIGJlZm9yZS5cbiAqIEBwYXJhbSBpbnRlZ3JhdGlvbnMgYXJyYXkgb2YgaW50ZWdyYXRpb24gaW5zdGFuY2VzXG4gKiBAcGFyYW0gd2l0aERlZmF1bHQgc2hvdWxkIGVuYWJsZSBkZWZhdWx0IGludGVncmF0aW9uc1xuICovXG5mdW5jdGlvbiBzZXR1cEludGVncmF0aW9ucyhjbGllbnQsIGludGVncmF0aW9ucykge1xuICBjb25zdCBpbnRlZ3JhdGlvbkluZGV4ID0ge307XG5cbiAgaW50ZWdyYXRpb25zLmZvckVhY2goaW50ZWdyYXRpb24gPT4ge1xuICAgIC8vIGd1YXJkIGFnYWluc3QgZW1wdHkgcHJvdmlkZWQgaW50ZWdyYXRpb25zXG4gICAgaWYgKGludGVncmF0aW9uKSB7XG4gICAgICBzZXR1cEludGVncmF0aW9uKGNsaWVudCwgaW50ZWdyYXRpb24sIGludGVncmF0aW9uSW5kZXgpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGludGVncmF0aW9uSW5kZXg7XG59XG5cbi8qKlxuICogRXhlY3V0ZSB0aGUgYGFmdGVyQWxsU2V0dXBgIGhvb2tzIG9mIHRoZSBnaXZlbiBpbnRlZ3JhdGlvbnMuXG4gKi9cbmZ1bmN0aW9uIGFmdGVyU2V0dXBJbnRlZ3JhdGlvbnMoY2xpZW50LCBpbnRlZ3JhdGlvbnMpIHtcbiAgZm9yIChjb25zdCBpbnRlZ3JhdGlvbiBvZiBpbnRlZ3JhdGlvbnMpIHtcbiAgICAvLyBndWFyZCBhZ2FpbnN0IGVtcHR5IHByb3ZpZGVkIGludGVncmF0aW9uc1xuICAgIGlmIChpbnRlZ3JhdGlvbiAmJiBpbnRlZ3JhdGlvbi5hZnRlckFsbFNldHVwKSB7XG4gICAgICBpbnRlZ3JhdGlvbi5hZnRlckFsbFNldHVwKGNsaWVudCk7XG4gICAgfVxuICB9XG59XG5cbi8qKiBTZXR1cCBhIHNpbmdsZSBpbnRlZ3JhdGlvbi4gICovXG5mdW5jdGlvbiBzZXR1cEludGVncmF0aW9uKGNsaWVudCwgaW50ZWdyYXRpb24sIGludGVncmF0aW9uSW5kZXgpIHtcbiAgaWYgKGludGVncmF0aW9uSW5kZXhbaW50ZWdyYXRpb24ubmFtZV0pIHtcbiAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIubG9nKGBJbnRlZ3JhdGlvbiBza2lwcGVkIGJlY2F1c2UgaXQgd2FzIGFscmVhZHkgaW5zdGFsbGVkOiAke2ludGVncmF0aW9uLm5hbWV9YCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGludGVncmF0aW9uSW5kZXhbaW50ZWdyYXRpb24ubmFtZV0gPSBpbnRlZ3JhdGlvbjtcblxuICAvLyBgc2V0dXBPbmNlYCBpcyBvbmx5IGNhbGxlZCB0aGUgZmlyc3QgdGltZVxuICBpZiAoaW5zdGFsbGVkSW50ZWdyYXRpb25zLmluZGV4T2YoaW50ZWdyYXRpb24ubmFtZSkgPT09IC0xICYmIHR5cGVvZiBpbnRlZ3JhdGlvbi5zZXR1cE9uY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICBpbnRlZ3JhdGlvbi5zZXR1cE9uY2UoKTtcbiAgICBpbnN0YWxsZWRJbnRlZ3JhdGlvbnMucHVzaChpbnRlZ3JhdGlvbi5uYW1lKTtcbiAgfVxuXG4gIC8vIGBzZXR1cGAgaXMgcnVuIGZvciBlYWNoIGNsaWVudFxuICBpZiAoaW50ZWdyYXRpb24uc2V0dXAgJiYgdHlwZW9mIGludGVncmF0aW9uLnNldHVwID09PSAnZnVuY3Rpb24nKSB7XG4gICAgaW50ZWdyYXRpb24uc2V0dXAoY2xpZW50KTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgaW50ZWdyYXRpb24ucHJlcHJvY2Vzc0V2ZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc3QgY2FsbGJhY2sgPSBpbnRlZ3JhdGlvbi5wcmVwcm9jZXNzRXZlbnQuYmluZChpbnRlZ3JhdGlvbikgO1xuICAgIGNsaWVudC5vbigncHJlcHJvY2Vzc0V2ZW50JywgKGV2ZW50LCBoaW50KSA9PiBjYWxsYmFjayhldmVudCwgaGludCwgY2xpZW50KSk7XG4gIH1cblxuICBpZiAodHlwZW9mIGludGVncmF0aW9uLnByb2Nlc3NFdmVudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnN0IGNhbGxiYWNrID0gaW50ZWdyYXRpb24ucHJvY2Vzc0V2ZW50LmJpbmQoaW50ZWdyYXRpb24pIDtcblxuICAgIGNvbnN0IHByb2Nlc3NvciA9IE9iamVjdC5hc3NpZ24oKGV2ZW50LCBoaW50KSA9PiBjYWxsYmFjayhldmVudCwgaGludCwgY2xpZW50KSwge1xuICAgICAgaWQ6IGludGVncmF0aW9uLm5hbWUsXG4gICAgfSk7XG5cbiAgICBjbGllbnQuYWRkRXZlbnRQcm9jZXNzb3IocHJvY2Vzc29yKTtcbiAgfVxuXG4gIERFQlVHX0JVSUxEICYmIGxvZ2dlci5sb2coYEludGVncmF0aW9uIGluc3RhbGxlZDogJHtpbnRlZ3JhdGlvbi5uYW1lfWApO1xufVxuXG4vKiogQWRkIGFuIGludGVncmF0aW9uIHRvIHRoZSBjdXJyZW50IHNjb3BlJ3MgY2xpZW50LiAqL1xuZnVuY3Rpb24gYWRkSW50ZWdyYXRpb24oaW50ZWdyYXRpb24pIHtcbiAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCk7XG5cbiAgaWYgKCFjbGllbnQpIHtcbiAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIud2FybihgQ2Fubm90IGFkZCBpbnRlZ3JhdGlvbiBcIiR7aW50ZWdyYXRpb24ubmFtZX1cIiBiZWNhdXNlIG5vIFNESyBDbGllbnQgaXMgYXZhaWxhYmxlLmApO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNsaWVudC5hZGRJbnRlZ3JhdGlvbihpbnRlZ3JhdGlvbik7XG59XG5cbi8vIFBvbHlmaWxsIGZvciBBcnJheS5maW5kSW5kZXgoKSwgd2hpY2ggaXMgbm90IHN1cHBvcnRlZCBpbiBFUzVcbmZ1bmN0aW9uIGZpbmRJbmRleChhcnIsIGNhbGxiYWNrKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGNhbGxiYWNrKGFycltpXSkgPT09IHRydWUpIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAtMTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgYW4gaW50ZWdyYXRpb24gZnVuY3Rpb24gdGhhdCBjYW4gYmUgdXNlZCB0byBjcmVhdGUgYW4gaW50ZWdyYXRpb24gaW5zdGFuY2UuXG4gKiBOb3RlIHRoYXQgdGhpcyBieSBkZXNpZ24gaGlkZXMgdGhlIGltcGxlbWVudGF0aW9uIGRldGFpbHMgb2YgdGhlIGludGVncmF0aW9uLCBhcyB0aGV5IGFyZSBjb25zaWRlcmVkIGludGVybmFsLlxuICovXG5mdW5jdGlvbiBkZWZpbmVJbnRlZ3JhdGlvbihmbikge1xuICByZXR1cm4gZm47XG59XG5cbmV4cG9ydCB7IGFkZEludGVncmF0aW9uLCBhZnRlclNldHVwSW50ZWdyYXRpb25zLCBkZWZpbmVJbnRlZ3JhdGlvbiwgZ2V0SW50ZWdyYXRpb25zVG9TZXR1cCwgaW5zdGFsbGVkSW50ZWdyYXRpb25zLCBzZXR1cEludGVncmF0aW9uLCBzZXR1cEludGVncmF0aW9ucyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZWdyYXRpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integration.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/captureconsole.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/captureconsole.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"captureConsoleIntegration\": function() { return /* binding */ captureConsoleIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../exports.js */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n\n\n\n\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options = {}) => {\n  const levels = options.levels || _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      if (!(\"console\" in _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {\n        return;\n      }\n\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addConsoleInstrumentationHandler)(({ args, level }) => {\n        if ((0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_1__.getClient)() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) ;\n\n/**\n * Send Console API calls as Sentry Events.\n */\nconst captureConsoleIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_captureConsoleIntegration);\n\nfunction consoleHandler(args, level) {\n  const captureContext = {\n    level: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.severityLevelFromString)(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_1__.withScope)(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert') {\n      if (!args[0]) {\n        const message = `Assertion failed: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.safeJoin)(args.slice(1), ' ') || 'console.assert'}`;\n        scope.setExtra('arguments', args.slice(1));\n        (0,_exports_js__WEBPACK_IMPORTED_MODULE_3__.captureMessage)(message, captureContext);\n      }\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (error) {\n      (0,_exports_js__WEBPACK_IMPORTED_MODULE_3__.captureException)(error, captureContext);\n      return;\n    }\n\n    const message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.safeJoin)(args, ' ');\n    (0,_exports_js__WEBPACK_IMPORTED_MODULE_3__.captureMessage)(message, captureContext);\n  });\n}\n\n\n//# sourceMappingURL=captureconsole.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvY2FwdHVyZWNvbnNvbGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUo7QUFDNUY7QUFDTTtBQUNYOztBQUV0RDs7QUFFQSxpREFBaUQ7QUFDakQsbUNBQW1DLHlEQUFjOztBQUVqRDtBQUNBO0FBQ0E7QUFDQSxZQUFZLGtFQUF1QjtBQUNuQztBQUNBOztBQUVBLE1BQU0sK0VBQWdDLElBQUksYUFBYTtBQUN2RCxZQUFZLDREQUFTO0FBQ3JCO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msa0VBQWlCOztBQUVuRDtBQUNBO0FBQ0EsV0FBVyxzRUFBdUI7QUFDbEM7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxFQUFFLDREQUFTO0FBQ1g7QUFDQTs7QUFFQSxNQUFNLG9FQUFxQjtBQUMzQjtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLDZDQUE2Qyx1REFBUSx5Q0FBeUM7QUFDOUY7QUFDQSxRQUFRLDJEQUFjO0FBQ3RCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSw2REFBZ0I7QUFDdEI7QUFDQTs7QUFFQSxvQkFBb0IsdURBQVE7QUFDNUIsSUFBSSwyREFBYztBQUNsQixHQUFHO0FBQ0g7O0FBRXFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9ucy9jYXB0dXJlY29uc29sZS5qcz8yZGU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPTlNPTEVfTEVWRUxTLCBHTE9CQUxfT0JKLCBhZGRDb25zb2xlSW5zdHJ1bWVudGF0aW9uSGFuZGxlciwgc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcsIGFkZEV4Y2VwdGlvbk1lY2hhbmlzbSwgc2FmZUpvaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldENsaWVudCwgd2l0aFNjb3BlIH0gZnJvbSAnLi4vY3VycmVudFNjb3Blcy5qcyc7XG5pbXBvcnQgeyBjYXB0dXJlTWVzc2FnZSwgY2FwdHVyZUV4Y2VwdGlvbiB9IGZyb20gJy4uL2V4cG9ydHMuanMnO1xuaW1wb3J0IHsgZGVmaW5lSW50ZWdyYXRpb24gfSBmcm9tICcuLi9pbnRlZ3JhdGlvbi5qcyc7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnQ2FwdHVyZUNvbnNvbGUnO1xuXG5jb25zdCBfY2FwdHVyZUNvbnNvbGVJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IGxldmVscyA9IG9wdGlvbnMubGV2ZWxzIHx8IENPTlNPTEVfTEVWRUxTO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cChjbGllbnQpIHtcbiAgICAgIGlmICghKCdjb25zb2xlJyBpbiBHTE9CQUxfT0JKKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFkZENvbnNvbGVJbnN0cnVtZW50YXRpb25IYW5kbGVyKCh7IGFyZ3MsIGxldmVsIH0pID0+IHtcbiAgICAgICAgaWYgKGdldENsaWVudCgpICE9PSBjbGllbnQgfHwgIWxldmVscy5pbmNsdWRlcyhsZXZlbCkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zb2xlSGFuZGxlcihhcmdzLCBsZXZlbCk7XG4gICAgICB9KTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIFNlbmQgQ29uc29sZSBBUEkgY2FsbHMgYXMgU2VudHJ5IEV2ZW50cy5cbiAqL1xuY29uc3QgY2FwdHVyZUNvbnNvbGVJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9jYXB0dXJlQ29uc29sZUludGVncmF0aW9uKTtcblxuZnVuY3Rpb24gY29uc29sZUhhbmRsZXIoYXJncywgbGV2ZWwpIHtcbiAgY29uc3QgY2FwdHVyZUNvbnRleHQgPSB7XG4gICAgbGV2ZWw6IHNldmVyaXR5TGV2ZWxGcm9tU3RyaW5nKGxldmVsKSxcbiAgICBleHRyYToge1xuICAgICAgYXJndW1lbnRzOiBhcmdzLFxuICAgIH0sXG4gIH07XG5cbiAgd2l0aFNjb3BlKHNjb3BlID0+IHtcbiAgICBzY29wZS5hZGRFdmVudFByb2Nlc3NvcihldmVudCA9PiB7XG4gICAgICBldmVudC5sb2dnZXIgPSAnY29uc29sZSc7XG5cbiAgICAgIGFkZEV4Y2VwdGlvbk1lY2hhbmlzbShldmVudCwge1xuICAgICAgICBoYW5kbGVkOiBmYWxzZSxcbiAgICAgICAgdHlwZTogJ2NvbnNvbGUnLFxuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBldmVudDtcbiAgICB9KTtcblxuICAgIGlmIChsZXZlbCA9PT0gJ2Fzc2VydCcpIHtcbiAgICAgIGlmICghYXJnc1swXSkge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gYEFzc2VydGlvbiBmYWlsZWQ6ICR7c2FmZUpvaW4oYXJncy5zbGljZSgxKSwgJyAnKSB8fCAnY29uc29sZS5hc3NlcnQnfWA7XG4gICAgICAgIHNjb3BlLnNldEV4dHJhKCdhcmd1bWVudHMnLCBhcmdzLnNsaWNlKDEpKTtcbiAgICAgICAgY2FwdHVyZU1lc3NhZ2UobWVzc2FnZSwgY2FwdHVyZUNvbnRleHQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGVycm9yID0gYXJncy5maW5kKGFyZyA9PiBhcmcgaW5zdGFuY2VvZiBFcnJvcik7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjYXB0dXJlRXhjZXB0aW9uKGVycm9yLCBjYXB0dXJlQ29udGV4dCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgbWVzc2FnZSA9IHNhZmVKb2luKGFyZ3MsICcgJyk7XG4gICAgY2FwdHVyZU1lc3NhZ2UobWVzc2FnZSwgY2FwdHVyZUNvbnRleHQpO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgY2FwdHVyZUNvbnNvbGVJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FwdHVyZWNvbnNvbGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/captureconsole.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/debug.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/debug.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"debugIntegration\": function() { return /* binding */ debugIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n\n\n\nconst INTEGRATION_NAME = 'Debug';\n\n/**\n * Integration to debug sent Sentry events.\n * This integration should not be used in production.\n */\nconst _debugIntegration = ((options = {}) => {\n  const _options = {\n    debugger: false,\n    stringify: false,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      client.on('beforeSendEvent', (event, hint) => {\n        if (_options.debugger) {\n          // eslint-disable-next-line no-debugger\n          debugger;\n        }\n\n        /* eslint-disable no-console */\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {\n          if (_options.stringify) {\n            console.log(JSON.stringify(event, null, 2));\n            if (hint && Object.keys(hint).length) {\n              console.log(JSON.stringify(hint, null, 2));\n            }\n          } else {\n            console.log(event);\n            if (hint && Object.keys(hint).length) {\n              console.log(hint);\n            }\n          }\n        });\n        /* eslint-enable no-console */\n      });\n    },\n  };\n}) ;\n\nconst debugIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_debugIntegration);\n\n\n//# sourceMappingURL=debug.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvZGVidWcuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBQ087O0FBRXREOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFFBQVEsNkRBQWM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQseUJBQXlCLGtFQUFpQjs7QUFFZDtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvZGVidWcuanM/NjBlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25zb2xlU2FuZGJveCB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZGVmaW5lSW50ZWdyYXRpb24gfSBmcm9tICcuLi9pbnRlZ3JhdGlvbi5qcyc7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnRGVidWcnO1xuXG4vKipcbiAqIEludGVncmF0aW9uIHRvIGRlYnVnIHNlbnQgU2VudHJ5IGV2ZW50cy5cbiAqIFRoaXMgaW50ZWdyYXRpb24gc2hvdWxkIG5vdCBiZSB1c2VkIGluIHByb2R1Y3Rpb24uXG4gKi9cbmNvbnN0IF9kZWJ1Z0ludGVncmF0aW9uID0gKChvcHRpb25zID0ge30pID0+IHtcbiAgY29uc3QgX29wdGlvbnMgPSB7XG4gICAgZGVidWdnZXI6IGZhbHNlLFxuICAgIHN0cmluZ2lmeTogZmFsc2UsXG4gICAgLi4ub3B0aW9ucyxcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgc2V0dXAoY2xpZW50KSB7XG4gICAgICBjbGllbnQub24oJ2JlZm9yZVNlbmRFdmVudCcsIChldmVudCwgaGludCkgPT4ge1xuICAgICAgICBpZiAoX29wdGlvbnMuZGVidWdnZXIpIHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZGVidWdnZXJcbiAgICAgICAgICBkZWJ1Z2dlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgICAgY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgICAgIGlmIChfb3B0aW9ucy5zdHJpbmdpZnkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGV2ZW50LCBudWxsLCAyKSk7XG4gICAgICAgICAgICBpZiAoaGludCAmJiBPYmplY3Qua2V5cyhoaW50KS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoaGludCwgbnVsbCwgMikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudCk7XG4gICAgICAgICAgICBpZiAoaGludCAmJiBPYmplY3Qua2V5cyhoaW50KS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coaGludCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG4gICAgICB9KTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBkZWJ1Z0ludGVncmF0aW9uID0gZGVmaW5lSW50ZWdyYXRpb24oX2RlYnVnSW50ZWdyYXRpb24pO1xuXG5leHBvcnQgeyBkZWJ1Z0ludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/debug.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/dedupe.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/dedupe.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_shouldDropEvent\": function() { return /* binding */ _shouldDropEvent; },\n/* harmony export */   \"dedupeIntegration\": function() { return /* binding */ dedupeIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) ;\n\n/**\n * Deduplication filter.\n */\nconst dedupeIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_dedupeIntegration);\n\n/** only exported for tests. */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getFramesFromEvent)(currentEvent);\n  let previousFrames = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getFramesFromEvent)(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n\n//# sourceMappingURL=dedupe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/dedupe.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/extraerrordata.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/extraerrordata.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"extraErrorDataIntegration\": function() { return /* binding */ extraErrorDataIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\n\nconst INTEGRATION_NAME = 'ExtraErrorData';\n\n/**\n * Extract additional data for from original exceptions.\n */\nconst _extraErrorDataIntegration = ((options = {}) => {\n  const { depth = 3, captureErrorCause = true } = options;\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event, hint) {\n      return _enhanceEventWithErrorData(event, hint, depth, captureErrorCause);\n    },\n  };\n}) ;\n\nconst extraErrorDataIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_extraErrorDataIntegration);\n\nfunction _enhanceEventWithErrorData(\n  event,\n  hint = {},\n  depth,\n  captureErrorCause,\n) {\n  if (!hint.originalException || !(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(hint.originalException)) {\n    return event;\n  }\n  const exceptionName = (hint.originalException ).name || hint.originalException.constructor.name;\n\n  const errorData = _extractErrorData(hint.originalException , captureErrorCause);\n\n  if (errorData) {\n    const contexts = {\n      ...event.contexts,\n    };\n\n    const normalizedErrorData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.normalize)(errorData, depth);\n\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(normalizedErrorData)) {\n      // We mark the error data as \"already normalized\" here, because we don't want other normalization procedures to\n      // potentially truncate the data we just already normalized, with a certain depth setting.\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addNonEnumerableProperty)(normalizedErrorData, '__sentry_skip_normalization__', true);\n      contexts[exceptionName] = normalizedErrorData;\n    }\n\n    return {\n      ...event,\n      contexts,\n    };\n  }\n\n  return event;\n}\n\n/**\n * Extract extra information from the Error object\n */\nfunction _extractErrorData(error, captureErrorCause) {\n  // We are trying to enhance already existing event, so no harm done if it won't succeed\n  try {\n    const nativeKeys = [\n      'name',\n      'message',\n      'stack',\n      'line',\n      'column',\n      'fileName',\n      'lineNumber',\n      'columnNumber',\n      'toJSON',\n    ];\n\n    const extraErrorInfo = {};\n\n    // We want only enumerable properties, thus `getOwnPropertyNames` is redundant here, as we filter keys anyway.\n    for (const key of Object.keys(error)) {\n      if (nativeKeys.indexOf(key) !== -1) {\n        continue;\n      }\n      const value = error[key];\n      extraErrorInfo[key] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(value) ? value.toString() : value;\n    }\n\n    // Error.cause is a standard property that is non enumerable, we therefore need to access it separately.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\n    if (captureErrorCause && error.cause !== undefined) {\n      extraErrorInfo.cause = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(error.cause) ? error.cause.toString() : error.cause;\n    }\n\n    // Check if someone attached `toJSON` method to grab even more properties (eg. axios is doing that)\n    if (typeof error.toJSON === 'function') {\n      const serializedError = error.toJSON() ;\n\n      for (const key of Object.keys(serializedError)) {\n        const value = serializedError[key];\n        extraErrorInfo[key] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(value) ? value.toString() : value;\n      }\n    }\n\n    return extraErrorInfo;\n  } catch (oO) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Unable to extract extra data from the Error object:', oO);\n  }\n\n  return null;\n}\n\n\n//# sourceMappingURL=extraerrordata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvZXh0cmFlcnJvcmRhdGEuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRztBQUM5QztBQUNOOztBQUVoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQsVUFBVSxzQ0FBc0M7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELGtDQUFrQyxrRUFBaUI7O0FBRW5EO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHNEQUFPO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxnQ0FBZ0Msd0RBQVM7O0FBRXpDLFFBQVEsNERBQWE7QUFDckI7QUFDQTtBQUNBLE1BQU0sdUVBQXdCO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHNEQUFPO0FBQ25DOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixzREFBTztBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDhCQUE4QixzREFBTztBQUNyQztBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKLElBQUksd0RBQVcsSUFBSSx1REFBWTtBQUMvQjs7QUFFQTtBQUNBOztBQUVxQztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvZXh0cmFlcnJvcmRhdGEuanM/MWU3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Vycm9yLCBub3JtYWxpemUsIGlzUGxhaW5PYmplY3QsIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eSwgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiB9IGZyb20gJy4uL2ludGVncmF0aW9uLmpzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi4vZGVidWctYnVpbGQuanMnO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ0V4dHJhRXJyb3JEYXRhJztcblxuLyoqXG4gKiBFeHRyYWN0IGFkZGl0aW9uYWwgZGF0YSBmb3IgZnJvbSBvcmlnaW5hbCBleGNlcHRpb25zLlxuICovXG5jb25zdCBfZXh0cmFFcnJvckRhdGFJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IHsgZGVwdGggPSAzLCBjYXB0dXJlRXJyb3JDYXVzZSA9IHRydWUgfSA9IG9wdGlvbnM7XG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBwcm9jZXNzRXZlbnQoZXZlbnQsIGhpbnQpIHtcbiAgICAgIHJldHVybiBfZW5oYW5jZUV2ZW50V2l0aEVycm9yRGF0YShldmVudCwgaGludCwgZGVwdGgsIGNhcHR1cmVFcnJvckNhdXNlKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBleHRyYUVycm9yRGF0YUludGVncmF0aW9uID0gZGVmaW5lSW50ZWdyYXRpb24oX2V4dHJhRXJyb3JEYXRhSW50ZWdyYXRpb24pO1xuXG5mdW5jdGlvbiBfZW5oYW5jZUV2ZW50V2l0aEVycm9yRGF0YShcbiAgZXZlbnQsXG4gIGhpbnQgPSB7fSxcbiAgZGVwdGgsXG4gIGNhcHR1cmVFcnJvckNhdXNlLFxuKSB7XG4gIGlmICghaGludC5vcmlnaW5hbEV4Y2VwdGlvbiB8fCAhaXNFcnJvcihoaW50Lm9yaWdpbmFsRXhjZXB0aW9uKSkge1xuICAgIHJldHVybiBldmVudDtcbiAgfVxuICBjb25zdCBleGNlcHRpb25OYW1lID0gKGhpbnQub3JpZ2luYWxFeGNlcHRpb24gKS5uYW1lIHx8IGhpbnQub3JpZ2luYWxFeGNlcHRpb24uY29uc3RydWN0b3IubmFtZTtcblxuICBjb25zdCBlcnJvckRhdGEgPSBfZXh0cmFjdEVycm9yRGF0YShoaW50Lm9yaWdpbmFsRXhjZXB0aW9uICwgY2FwdHVyZUVycm9yQ2F1c2UpO1xuXG4gIGlmIChlcnJvckRhdGEpIHtcbiAgICBjb25zdCBjb250ZXh0cyA9IHtcbiAgICAgIC4uLmV2ZW50LmNvbnRleHRzLFxuICAgIH07XG5cbiAgICBjb25zdCBub3JtYWxpemVkRXJyb3JEYXRhID0gbm9ybWFsaXplKGVycm9yRGF0YSwgZGVwdGgpO1xuXG4gICAgaWYgKGlzUGxhaW5PYmplY3Qobm9ybWFsaXplZEVycm9yRGF0YSkpIHtcbiAgICAgIC8vIFdlIG1hcmsgdGhlIGVycm9yIGRhdGEgYXMgXCJhbHJlYWR5IG5vcm1hbGl6ZWRcIiBoZXJlLCBiZWNhdXNlIHdlIGRvbid0IHdhbnQgb3RoZXIgbm9ybWFsaXphdGlvbiBwcm9jZWR1cmVzIHRvXG4gICAgICAvLyBwb3RlbnRpYWxseSB0cnVuY2F0ZSB0aGUgZGF0YSB3ZSBqdXN0IGFscmVhZHkgbm9ybWFsaXplZCwgd2l0aCBhIGNlcnRhaW4gZGVwdGggc2V0dGluZy5cbiAgICAgIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eShub3JtYWxpemVkRXJyb3JEYXRhLCAnX19zZW50cnlfc2tpcF9ub3JtYWxpemF0aW9uX18nLCB0cnVlKTtcbiAgICAgIGNvbnRleHRzW2V4Y2VwdGlvbk5hbWVdID0gbm9ybWFsaXplZEVycm9yRGF0YTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgLi4uZXZlbnQsXG4gICAgICBjb250ZXh0cyxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGV2ZW50O1xufVxuXG4vKipcbiAqIEV4dHJhY3QgZXh0cmEgaW5mb3JtYXRpb24gZnJvbSB0aGUgRXJyb3Igb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIF9leHRyYWN0RXJyb3JEYXRhKGVycm9yLCBjYXB0dXJlRXJyb3JDYXVzZSkge1xuICAvLyBXZSBhcmUgdHJ5aW5nIHRvIGVuaGFuY2UgYWxyZWFkeSBleGlzdGluZyBldmVudCwgc28gbm8gaGFybSBkb25lIGlmIGl0IHdvbid0IHN1Y2NlZWRcbiAgdHJ5IHtcbiAgICBjb25zdCBuYXRpdmVLZXlzID0gW1xuICAgICAgJ25hbWUnLFxuICAgICAgJ21lc3NhZ2UnLFxuICAgICAgJ3N0YWNrJyxcbiAgICAgICdsaW5lJyxcbiAgICAgICdjb2x1bW4nLFxuICAgICAgJ2ZpbGVOYW1lJyxcbiAgICAgICdsaW5lTnVtYmVyJyxcbiAgICAgICdjb2x1bW5OdW1iZXInLFxuICAgICAgJ3RvSlNPTicsXG4gICAgXTtcblxuICAgIGNvbnN0IGV4dHJhRXJyb3JJbmZvID0ge307XG5cbiAgICAvLyBXZSB3YW50IG9ubHkgZW51bWVyYWJsZSBwcm9wZXJ0aWVzLCB0aHVzIGBnZXRPd25Qcm9wZXJ0eU5hbWVzYCBpcyByZWR1bmRhbnQgaGVyZSwgYXMgd2UgZmlsdGVyIGtleXMgYW55d2F5LlxuICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKGVycm9yKSkge1xuICAgICAgaWYgKG5hdGl2ZUtleXMuaW5kZXhPZihrZXkpICE9PSAtMSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHZhbHVlID0gZXJyb3Jba2V5XTtcbiAgICAgIGV4dHJhRXJyb3JJbmZvW2tleV0gPSBpc0Vycm9yKHZhbHVlKSA/IHZhbHVlLnRvU3RyaW5nKCkgOiB2YWx1ZTtcbiAgICB9XG5cbiAgICAvLyBFcnJvci5jYXVzZSBpcyBhIHN0YW5kYXJkIHByb3BlcnR5IHRoYXQgaXMgbm9uIGVudW1lcmFibGUsIHdlIHRoZXJlZm9yZSBuZWVkIHRvIGFjY2VzcyBpdCBzZXBhcmF0ZWx5LlxuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0Vycm9yL2NhdXNlXG4gICAgaWYgKGNhcHR1cmVFcnJvckNhdXNlICYmIGVycm9yLmNhdXNlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGV4dHJhRXJyb3JJbmZvLmNhdXNlID0gaXNFcnJvcihlcnJvci5jYXVzZSkgPyBlcnJvci5jYXVzZS50b1N0cmluZygpIDogZXJyb3IuY2F1c2U7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgaWYgc29tZW9uZSBhdHRhY2hlZCBgdG9KU09OYCBtZXRob2QgdG8gZ3JhYiBldmVuIG1vcmUgcHJvcGVydGllcyAoZWcuIGF4aW9zIGlzIGRvaW5nIHRoYXQpXG4gICAgaWYgKHR5cGVvZiBlcnJvci50b0pTT04gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNvbnN0IHNlcmlhbGl6ZWRFcnJvciA9IGVycm9yLnRvSlNPTigpIDtcblxuICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoc2VyaWFsaXplZEVycm9yKSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHNlcmlhbGl6ZWRFcnJvcltrZXldO1xuICAgICAgICBleHRyYUVycm9ySW5mb1trZXldID0gaXNFcnJvcih2YWx1ZSkgPyB2YWx1ZS50b1N0cmluZygpIDogdmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGV4dHJhRXJyb3JJbmZvO1xuICB9IGNhdGNoIChvTykge1xuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5lcnJvcignVW5hYmxlIHRvIGV4dHJhY3QgZXh0cmEgZGF0YSBmcm9tIHRoZSBFcnJvciBvYmplY3Q6Jywgb08pO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCB7IGV4dHJhRXJyb3JEYXRhSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4dHJhZXJyb3JkYXRhLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/extraerrordata.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/functiontostring.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/functiontostring.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"functionToStringIntegration\": function() { return /* binding */ functionToStringIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n\n\n\n\nlet originalFunctionToString;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function ( ...args) {\n          const originalFunction = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(this);\n          const context =\n            SETUP_CLIENTS.has((0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_1__.getClient)() ) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch (e) {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) ;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nconst functionToStringIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_functionToStringIntegration);\n\n\n//# sourceMappingURL=functiontostring.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvZnVuY3Rpb250b3N0cmluZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBQ0o7QUFDTTs7QUFFdEQ7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0VBQW1CO0FBQ3REO0FBQ0EsOEJBQThCLDREQUFTO0FBQ3ZDO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxvQ0FBb0Msa0VBQWlCOztBQUVkO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9ucy9mdW5jdGlvbnRvc3RyaW5nLmpzPzNhYWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0T3JpZ2luYWxGdW5jdGlvbiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0Q2xpZW50IH0gZnJvbSAnLi4vY3VycmVudFNjb3Blcy5qcyc7XG5pbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiB9IGZyb20gJy4uL2ludGVncmF0aW9uLmpzJztcblxubGV0IG9yaWdpbmFsRnVuY3Rpb25Ub1N0cmluZztcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdGdW5jdGlvblRvU3RyaW5nJztcblxuY29uc3QgU0VUVVBfQ0xJRU5UUyA9IG5ldyBXZWFrTWFwKCk7XG5cbmNvbnN0IF9mdW5jdGlvblRvU3RyaW5nSW50ZWdyYXRpb24gPSAoKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgc2V0dXBPbmNlKCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC91bmJvdW5kLW1ldGhvZFxuICAgICAgb3JpZ2luYWxGdW5jdGlvblRvU3RyaW5nID0gRnVuY3Rpb24ucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4gICAgICAvLyBpbnRyaW5zaWNzIChsaWtlIEZ1bmN0aW9uLnByb3RvdHlwZSkgbWlnaHQgYmUgaW1tdXRhYmxlIGluIHNvbWUgZW52aXJvbm1lbnRzXG4gICAgICAvLyBlLmcuIE5vZGUgd2l0aCAtLWZyb3plbi1pbnRyaW5zaWNzLCBYUyAoYW4gZW1iZWRkZWQgSmF2YVNjcmlwdCBlbmdpbmUpIG9yIFNFUyAoYSBKYXZhU2NyaXB0IHByb3Bvc2FsKVxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgICAgRnVuY3Rpb24ucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKCAuLi5hcmdzKSB7XG4gICAgICAgICAgY29uc3Qgb3JpZ2luYWxGdW5jdGlvbiA9IGdldE9yaWdpbmFsRnVuY3Rpb24odGhpcyk7XG4gICAgICAgICAgY29uc3QgY29udGV4dCA9XG4gICAgICAgICAgICBTRVRVUF9DTElFTlRTLmhhcyhnZXRDbGllbnQoKSApICYmIG9yaWdpbmFsRnVuY3Rpb24gIT09IHVuZGVmaW5lZCA/IG9yaWdpbmFsRnVuY3Rpb24gOiB0aGlzO1xuICAgICAgICAgIHJldHVybiBvcmlnaW5hbEZ1bmN0aW9uVG9TdHJpbmcuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgICAgIH07XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlnbm9yZSBlcnJvcnMgaGVyZSwganVzdCBkb24ndCBwYXRjaCB0aGlzXG4gICAgICB9XG4gICAgfSxcbiAgICBzZXR1cChjbGllbnQpIHtcbiAgICAgIFNFVFVQX0NMSUVOVFMuc2V0KGNsaWVudCwgdHJ1ZSk7XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuLyoqXG4gKiBQYXRjaCB0b1N0cmluZyBjYWxscyB0byByZXR1cm4gcHJvcGVyIG5hbWUgZm9yIHdyYXBwZWQgZnVuY3Rpb25zLlxuICpcbiAqIGBgYGpzXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgIGludGVncmF0aW9uczogW1xuICogICAgIGZ1bmN0aW9uVG9TdHJpbmdJbnRlZ3JhdGlvbigpLFxuICogICBdLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuY29uc3QgZnVuY3Rpb25Ub1N0cmluZ0ludGVncmF0aW9uID0gZGVmaW5lSW50ZWdyYXRpb24oX2Z1bmN0aW9uVG9TdHJpbmdJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydCB7IGZ1bmN0aW9uVG9TdHJpbmdJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnVuY3Rpb250b3N0cmluZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/functiontostring.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/inboundfilters.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/inboundfilters.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inboundFiltersIntegration\": function() { return /* binding */ inboundFiltersIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n\n\n\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/, // The browser logs this when a ResizeObserver handler takes a bit longer. Usually this is not an actual issue though. It indicates slowness.\n  /^Cannot redefine property: googletag$/, // This is thrown when google tag manager is used in combination with an ad blocker\n  \"undefined is not an object (evaluating 'a.L')\", // Random error that happens but not actionable or noticeable to end-users.\n  'can\\'t redefine non-configurable property \"solana\"', // Probably a browser extension or custom browser (Brave) throwing this error\n  \"vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)\", // Error thrown by GTM, seemingly not affecting end-users\n  \"Can't find variable: _AutofillCallbackHandler\", // Unactionable error in instagram webview https://developers.facebook.com/community/threads/320013549791141/\n];\n\n/** Options for the InboundFilters integration */\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) ;\n\nconst inboundFiltersIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_inboundFiltersIntegration);\n\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getEventDescription)(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getEventDescription)(event)}`,\n      );\n    return true;\n  }\n  if (_isUselessError(event)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `Event dropped due to not having an error message, error type or stacktrace.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getEventDescription)(\n          event,\n        )}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getEventDescription)(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stringMatchesSomePattern)(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error(`Cannot extract url for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getEventDescription)(event)}`);\n    return null;\n  }\n}\n\nfunction _isUselessError(event) {\n  if (event.type) {\n    // event is not an error\n    return false;\n  }\n\n  // We only want to consider events for dropping that actually have recorded exception values.\n  if (!event.exception || !event.exception.values || event.exception.values.length === 0) {\n    return false;\n  }\n\n  return (\n    // No top-level message\n    !event.message &&\n    // There are no exception values that have a stacktrace, a non-generic-Error type or value\n    !event.exception.values.some(value => value.stacktrace || (value.type && value.type !== 'Error') || value.value)\n  );\n}\n\n\n//# sourceMappingURL=inboundfilters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/linkederrors.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/linkederrors.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"linkedErrorsIntegration\": function() { return /* binding */ linkedErrorsIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n\n\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.applyAggregateErrorsToEvent)(\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\nconst linkedErrorsIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_linkedErrorsIntegration);\n\n\n//# sourceMappingURL=linkederrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRjtBQUMxQjs7QUFFdEQ7QUFDQTs7QUFFQTs7QUFFQSwrQ0FBK0M7QUFDL0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLDBFQUEyQjtBQUNqQyxRQUFRLDZEQUFrQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQsZ0NBQWdDLGtFQUFpQjs7QUFFZDtBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzPzRlOTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50LCBleGNlcHRpb25Gcm9tRXJyb3IgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGRlZmluZUludGVncmF0aW9uIH0gZnJvbSAnLi4vaW50ZWdyYXRpb24uanMnO1xuXG5jb25zdCBERUZBVUxUX0tFWSA9ICdjYXVzZSc7XG5jb25zdCBERUZBVUxUX0xJTUlUID0gNTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdMaW5rZWRFcnJvcnMnO1xuXG5jb25zdCBfbGlua2VkRXJyb3JzSW50ZWdyYXRpb24gPSAoKG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCBsaW1pdCA9IG9wdGlvbnMubGltaXQgfHwgREVGQVVMVF9MSU1JVDtcbiAgY29uc3Qga2V5ID0gb3B0aW9ucy5rZXkgfHwgREVGQVVMVF9LRVk7XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHByZXByb2Nlc3NFdmVudChldmVudCwgaGludCwgY2xpZW50KSB7XG4gICAgICBjb25zdCBvcHRpb25zID0gY2xpZW50LmdldE9wdGlvbnMoKTtcblxuICAgICAgYXBwbHlBZ2dyZWdhdGVFcnJvcnNUb0V2ZW50KFxuICAgICAgICBleGNlcHRpb25Gcm9tRXJyb3IsXG4gICAgICAgIG9wdGlvbnMuc3RhY2tQYXJzZXIsXG4gICAgICAgIG9wdGlvbnMubWF4VmFsdWVMZW5ndGgsXG4gICAgICAgIGtleSxcbiAgICAgICAgbGltaXQsXG4gICAgICAgIGV2ZW50LFxuICAgICAgICBoaW50LFxuICAgICAgKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBsaW5rZWRFcnJvcnNJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9saW5rZWRFcnJvcnNJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydCB7IGxpbmtlZEVycm9yc0ludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5rZWRlcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/linkederrors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/metadata.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/metadata.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"moduleMetadataIntegration\": function() { return /* binding */ moduleMetadataIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../metadata.js */ \"./node_modules/@sentry/core/esm/metadata.js\");\n\n\n\n\nconst INTEGRATION_NAME = 'ModuleMetadata';\n\nconst _moduleMetadataIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setup(client) {\n      // We need to strip metadata from stack frames before sending them to Sentry since these are client side only.\n      client.on('beforeEnvelope', envelope => {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(envelope, (item, type) => {\n          if (type === 'event') {\n            const event = Array.isArray(item) ? (item )[1] : undefined;\n\n            if (event) {\n              (0,_metadata_js__WEBPACK_IMPORTED_MODULE_1__.stripMetadataFromStackFrames)(event);\n              item[1] = event;\n            }\n          }\n        });\n      });\n    },\n\n    processEvent(event, _hint, client) {\n      const stackParser = client.getOptions().stackParser;\n      (0,_metadata_js__WEBPACK_IMPORTED_MODULE_1__.addMetadataToStackFrames)(stackParser, event);\n      return event;\n    },\n  };\n}) ;\n\n/**\n * Adds module metadata to stack frames.\n *\n * Metadata can be injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n *\n * When this integration is added, the metadata passed to the bundler plugin is added to the stack frames of all events\n * under the `module_metadata` property. This can be used to help in tagging or routing of events from different teams\n * our sources\n */\nconst moduleMetadataIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_moduleMetadataIntegration);\n\n\n//# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvbWV0YWRhdGEuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNFO0FBQ2tDOztBQUV4Rjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtFQUFtQjtBQUMzQjtBQUNBOztBQUVBO0FBQ0EsY0FBYywwRUFBNEI7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7QUFDQSxNQUFNLHNFQUF3QjtBQUM5QjtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGtFQUFpQjs7QUFFZDtBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvbWV0YWRhdGEuanM/OTcyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JFYWNoRW52ZWxvcGVJdGVtIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiB9IGZyb20gJy4uL2ludGVncmF0aW9uLmpzJztcbmltcG9ydCB7IHN0cmlwTWV0YWRhdGFGcm9tU3RhY2tGcmFtZXMsIGFkZE1ldGFkYXRhVG9TdGFja0ZyYW1lcyB9IGZyb20gJy4uL21ldGFkYXRhLmpzJztcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdNb2R1bGVNZXRhZGF0YSc7XG5cbmNvbnN0IF9tb2R1bGVNZXRhZGF0YUludGVncmF0aW9uID0gKCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwKGNsaWVudCkge1xuICAgICAgLy8gV2UgbmVlZCB0byBzdHJpcCBtZXRhZGF0YSBmcm9tIHN0YWNrIGZyYW1lcyBiZWZvcmUgc2VuZGluZyB0aGVtIHRvIFNlbnRyeSBzaW5jZSB0aGVzZSBhcmUgY2xpZW50IHNpZGUgb25seS5cbiAgICAgIGNsaWVudC5vbignYmVmb3JlRW52ZWxvcGUnLCBlbnZlbG9wZSA9PiB7XG4gICAgICAgIGZvckVhY2hFbnZlbG9wZUl0ZW0oZW52ZWxvcGUsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgICAgICAgaWYgKHR5cGUgPT09ICdldmVudCcpIHtcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gQXJyYXkuaXNBcnJheShpdGVtKSA/IChpdGVtIClbMV0gOiB1bmRlZmluZWQ7XG5cbiAgICAgICAgICAgIGlmIChldmVudCkge1xuICAgICAgICAgICAgICBzdHJpcE1ldGFkYXRhRnJvbVN0YWNrRnJhbWVzKGV2ZW50KTtcbiAgICAgICAgICAgICAgaXRlbVsxXSA9IGV2ZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgcHJvY2Vzc0V2ZW50KGV2ZW50LCBfaGludCwgY2xpZW50KSB7XG4gICAgICBjb25zdCBzdGFja1BhcnNlciA9IGNsaWVudC5nZXRPcHRpb25zKCkuc3RhY2tQYXJzZXI7XG4gICAgICBhZGRNZXRhZGF0YVRvU3RhY2tGcmFtZXMoc3RhY2tQYXJzZXIsIGV2ZW50KTtcbiAgICAgIHJldHVybiBldmVudDtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZHMgbW9kdWxlIG1ldGFkYXRhIHRvIHN0YWNrIGZyYW1lcy5cbiAqXG4gKiBNZXRhZGF0YSBjYW4gYmUgaW5qZWN0ZWQgYnkgdGhlIFNlbnRyeSBidW5kbGVyIHBsdWdpbnMgdXNpbmcgdGhlIGBfZXhwZXJpbWVudHMubW9kdWxlTWV0YWRhdGFgIGNvbmZpZyBvcHRpb24uXG4gKlxuICogV2hlbiB0aGlzIGludGVncmF0aW9uIGlzIGFkZGVkLCB0aGUgbWV0YWRhdGEgcGFzc2VkIHRvIHRoZSBidW5kbGVyIHBsdWdpbiBpcyBhZGRlZCB0byB0aGUgc3RhY2sgZnJhbWVzIG9mIGFsbCBldmVudHNcbiAqIHVuZGVyIHRoZSBgbW9kdWxlX21ldGFkYXRhYCBwcm9wZXJ0eS4gVGhpcyBjYW4gYmUgdXNlZCB0byBoZWxwIGluIHRhZ2dpbmcgb3Igcm91dGluZyBvZiBldmVudHMgZnJvbSBkaWZmZXJlbnQgdGVhbXNcbiAqIG91ciBzb3VyY2VzXG4gKi9cbmNvbnN0IG1vZHVsZU1ldGFkYXRhSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbihfbW9kdWxlTWV0YWRhdGFJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydCB7IG1vZHVsZU1ldGFkYXRhSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1ldGFkYXRhLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/metadata.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/requestdata.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/requestdata.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"requestDataIntegration\": function() { return /* binding */ requestDataIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n\n\n\nconst DEFAULT_OPTIONS = {\n  include: {\n    cookies: true,\n    data: true,\n    headers: true,\n    ip: false,\n    query_string: true,\n    url: true,\n    user: {\n      id: true,\n      username: true,\n      email: true,\n    },\n  },\n  transactionNamingScheme: 'methodPath' ,\n};\n\nconst INTEGRATION_NAME = 'RequestData';\n\nconst _requestDataIntegration = ((options = {}) => {\n  const _options = {\n    ...DEFAULT_OPTIONS,\n    ...options,\n    include: {\n      ...DEFAULT_OPTIONS.include,\n      ...options.include,\n      user:\n        options.include && typeof options.include.user === 'boolean'\n          ? options.include.user\n          : {\n              ...DEFAULT_OPTIONS.include.user,\n              // Unclear why TS still thinks `options.include.user` could be a boolean at this point\n              ...((options.include || {}).user ),\n            },\n    },\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      // Note: In the long run, most of the logic here should probably move into the request data utility functions. For\n      // the moment it lives here, though, until https://github.com/getsentry/sentry-javascript/issues/5718 is addressed.\n      // (TL;DR: Those functions touch many parts of the repo in many different ways, and need to be cleaned up. Once\n      // that's happened, it will be easier to add this logic in without worrying about unexpected side effects.)\n\n      const { sdkProcessingMetadata = {} } = event;\n      const req = sdkProcessingMetadata.request;\n\n      if (!req) {\n        return event;\n      }\n\n      const addRequestDataOptions = convertReqDataIntegrationOptsToAddReqDataOpts(_options);\n\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addRequestDataToEvent)(event, req, addRequestDataOptions);\n    },\n  };\n}) ;\n\n/**\n * Add data about a request to an event. Primarily for use in Node-based SDKs, but included in `@sentry/core`\n * so it can be used in cross-platform SDKs like `@sentry/nextjs`.\n */\nconst requestDataIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_requestDataIntegration);\n\n/** Convert this integration's options to match what `addRequestDataToEvent` expects */\n/** TODO: Can possibly be deleted once https://github.com/getsentry/sentry-javascript/issues/5718 is fixed */\nfunction convertReqDataIntegrationOptsToAddReqDataOpts(\n  integrationOptions,\n) {\n  const {\n    transactionNamingScheme,\n    include: { ip, user, ...requestOptions },\n  } = integrationOptions;\n\n  const requestIncludeKeys = ['method'];\n  for (const [key, value] of Object.entries(requestOptions)) {\n    if (value) {\n      requestIncludeKeys.push(key);\n    }\n  }\n\n  let addReqDataUserOpt;\n  if (user === undefined) {\n    addReqDataUserOpt = true;\n  } else if (typeof user === 'boolean') {\n    addReqDataUserOpt = user;\n  } else {\n    const userIncludeKeys = [];\n    for (const [key, value] of Object.entries(user)) {\n      if (value) {\n        userIncludeKeys.push(key);\n      }\n    }\n    addReqDataUserOpt = userIncludeKeys;\n  }\n\n  return {\n    include: {\n      ip,\n      user: addReqDataUserOpt,\n      request: requestIncludeKeys.length !== 0 ? requestIncludeKeys : undefined,\n      transaction: transactionNamingScheme,\n    },\n  };\n}\n\n\n//# sourceMappingURL=requestdata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvcmVxdWVzdGRhdGEuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEO0FBQ0E7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTs7QUFFQTs7QUFFQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDLGFBQWE7QUFDYixLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjs7QUFFQSxjQUFjLDZCQUE2QjtBQUMzQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsYUFBYSxvRUFBcUI7QUFDbEMsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixrRUFBaUI7O0FBRWhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw2QkFBNkI7QUFDNUMsSUFBSTs7QUFFSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRWtDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9ucy9yZXF1ZXN0ZGF0YS5qcz8xNDFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZFJlcXVlc3REYXRhVG9FdmVudCB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZGVmaW5lSW50ZWdyYXRpb24gfSBmcm9tICcuLi9pbnRlZ3JhdGlvbi5qcyc7XG5cbmNvbnN0IERFRkFVTFRfT1BUSU9OUyA9IHtcbiAgaW5jbHVkZToge1xuICAgIGNvb2tpZXM6IHRydWUsXG4gICAgZGF0YTogdHJ1ZSxcbiAgICBoZWFkZXJzOiB0cnVlLFxuICAgIGlwOiBmYWxzZSxcbiAgICBxdWVyeV9zdHJpbmc6IHRydWUsXG4gICAgdXJsOiB0cnVlLFxuICAgIHVzZXI6IHtcbiAgICAgIGlkOiB0cnVlLFxuICAgICAgdXNlcm5hbWU6IHRydWUsXG4gICAgICBlbWFpbDogdHJ1ZSxcbiAgICB9LFxuICB9LFxuICB0cmFuc2FjdGlvbk5hbWluZ1NjaGVtZTogJ21ldGhvZFBhdGgnICxcbn07XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnUmVxdWVzdERhdGEnO1xuXG5jb25zdCBfcmVxdWVzdERhdGFJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IF9vcHRpb25zID0ge1xuICAgIC4uLkRFRkFVTFRfT1BUSU9OUyxcbiAgICAuLi5vcHRpb25zLFxuICAgIGluY2x1ZGU6IHtcbiAgICAgIC4uLkRFRkFVTFRfT1BUSU9OUy5pbmNsdWRlLFxuICAgICAgLi4ub3B0aW9ucy5pbmNsdWRlLFxuICAgICAgdXNlcjpcbiAgICAgICAgb3B0aW9ucy5pbmNsdWRlICYmIHR5cGVvZiBvcHRpb25zLmluY2x1ZGUudXNlciA9PT0gJ2Jvb2xlYW4nXG4gICAgICAgICAgPyBvcHRpb25zLmluY2x1ZGUudXNlclxuICAgICAgICAgIDoge1xuICAgICAgICAgICAgICAuLi5ERUZBVUxUX09QVElPTlMuaW5jbHVkZS51c2VyLFxuICAgICAgICAgICAgICAvLyBVbmNsZWFyIHdoeSBUUyBzdGlsbCB0aGlua3MgYG9wdGlvbnMuaW5jbHVkZS51c2VyYCBjb3VsZCBiZSBhIGJvb2xlYW4gYXQgdGhpcyBwb2ludFxuICAgICAgICAgICAgICAuLi4oKG9wdGlvbnMuaW5jbHVkZSB8fCB7fSkudXNlciApLFxuICAgICAgICAgICAgfSxcbiAgICB9LFxuICB9O1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBwcm9jZXNzRXZlbnQoZXZlbnQpIHtcbiAgICAgIC8vIE5vdGU6IEluIHRoZSBsb25nIHJ1biwgbW9zdCBvZiB0aGUgbG9naWMgaGVyZSBzaG91bGQgcHJvYmFibHkgbW92ZSBpbnRvIHRoZSByZXF1ZXN0IGRhdGEgdXRpbGl0eSBmdW5jdGlvbnMuIEZvclxuICAgICAgLy8gdGhlIG1vbWVudCBpdCBsaXZlcyBoZXJlLCB0aG91Z2gsIHVudGlsIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzU3MTggaXMgYWRkcmVzc2VkLlxuICAgICAgLy8gKFRMO0RSOiBUaG9zZSBmdW5jdGlvbnMgdG91Y2ggbWFueSBwYXJ0cyBvZiB0aGUgcmVwbyBpbiBtYW55IGRpZmZlcmVudCB3YXlzLCBhbmQgbmVlZCB0byBiZSBjbGVhbmVkIHVwLiBPbmNlXG4gICAgICAvLyB0aGF0J3MgaGFwcGVuZWQsIGl0IHdpbGwgYmUgZWFzaWVyIHRvIGFkZCB0aGlzIGxvZ2ljIGluIHdpdGhvdXQgd29ycnlpbmcgYWJvdXQgdW5leHBlY3RlZCBzaWRlIGVmZmVjdHMuKVxuXG4gICAgICBjb25zdCB7IHNka1Byb2Nlc3NpbmdNZXRhZGF0YSA9IHt9IH0gPSBldmVudDtcbiAgICAgIGNvbnN0IHJlcSA9IHNka1Byb2Nlc3NpbmdNZXRhZGF0YS5yZXF1ZXN0O1xuXG4gICAgICBpZiAoIXJlcSkge1xuICAgICAgICByZXR1cm4gZXZlbnQ7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGFkZFJlcXVlc3REYXRhT3B0aW9ucyA9IGNvbnZlcnRSZXFEYXRhSW50ZWdyYXRpb25PcHRzVG9BZGRSZXFEYXRhT3B0cyhfb3B0aW9ucyk7XG5cbiAgICAgIHJldHVybiBhZGRSZXF1ZXN0RGF0YVRvRXZlbnQoZXZlbnQsIHJlcSwgYWRkUmVxdWVzdERhdGFPcHRpb25zKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZCBkYXRhIGFib3V0IGEgcmVxdWVzdCB0byBhbiBldmVudC4gUHJpbWFyaWx5IGZvciB1c2UgaW4gTm9kZS1iYXNlZCBTREtzLCBidXQgaW5jbHVkZWQgaW4gYEBzZW50cnkvY29yZWBcbiAqIHNvIGl0IGNhbiBiZSB1c2VkIGluIGNyb3NzLXBsYXRmb3JtIFNES3MgbGlrZSBgQHNlbnRyeS9uZXh0anNgLlxuICovXG5jb25zdCByZXF1ZXN0RGF0YUludGVncmF0aW9uID0gZGVmaW5lSW50ZWdyYXRpb24oX3JlcXVlc3REYXRhSW50ZWdyYXRpb24pO1xuXG4vKiogQ29udmVydCB0aGlzIGludGVncmF0aW9uJ3Mgb3B0aW9ucyB0byBtYXRjaCB3aGF0IGBhZGRSZXF1ZXN0RGF0YVRvRXZlbnRgIGV4cGVjdHMgKi9cbi8qKiBUT0RPOiBDYW4gcG9zc2libHkgYmUgZGVsZXRlZCBvbmNlIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzU3MTggaXMgZml4ZWQgKi9cbmZ1bmN0aW9uIGNvbnZlcnRSZXFEYXRhSW50ZWdyYXRpb25PcHRzVG9BZGRSZXFEYXRhT3B0cyhcbiAgaW50ZWdyYXRpb25PcHRpb25zLFxuKSB7XG4gIGNvbnN0IHtcbiAgICB0cmFuc2FjdGlvbk5hbWluZ1NjaGVtZSxcbiAgICBpbmNsdWRlOiB7IGlwLCB1c2VyLCAuLi5yZXF1ZXN0T3B0aW9ucyB9LFxuICB9ID0gaW50ZWdyYXRpb25PcHRpb25zO1xuXG4gIGNvbnN0IHJlcXVlc3RJbmNsdWRlS2V5cyA9IFsnbWV0aG9kJ107XG4gIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHJlcXVlc3RPcHRpb25zKSkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgcmVxdWVzdEluY2x1ZGVLZXlzLnB1c2goa2V5KTtcbiAgICB9XG4gIH1cblxuICBsZXQgYWRkUmVxRGF0YVVzZXJPcHQ7XG4gIGlmICh1c2VyID09PSB1bmRlZmluZWQpIHtcbiAgICBhZGRSZXFEYXRhVXNlck9wdCA9IHRydWU7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHVzZXIgPT09ICdib29sZWFuJykge1xuICAgIGFkZFJlcURhdGFVc2VyT3B0ID0gdXNlcjtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCB1c2VySW5jbHVkZUtleXMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyh1c2VyKSkge1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHVzZXJJbmNsdWRlS2V5cy5wdXNoKGtleSk7XG4gICAgICB9XG4gICAgfVxuICAgIGFkZFJlcURhdGFVc2VyT3B0ID0gdXNlckluY2x1ZGVLZXlzO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpbmNsdWRlOiB7XG4gICAgICBpcCxcbiAgICAgIHVzZXI6IGFkZFJlcURhdGFVc2VyT3B0LFxuICAgICAgcmVxdWVzdDogcmVxdWVzdEluY2x1ZGVLZXlzLmxlbmd0aCAhPT0gMCA/IHJlcXVlc3RJbmNsdWRlS2V5cyA6IHVuZGVmaW5lZCxcbiAgICAgIHRyYW5zYWN0aW9uOiB0cmFuc2FjdGlvbk5hbWluZ1NjaGVtZSxcbiAgICB9LFxuICB9O1xufVxuXG5leHBvcnQgeyByZXF1ZXN0RGF0YUludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0ZGF0YS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/requestdata.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/rewriteframes.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/rewriteframes.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateIteratee\": function() { return /* binding */ generateIteratee; },\n/* harmony export */   \"rewriteFramesIntegration\": function() { return /* binding */ rewriteFramesIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n\n\n\nconst INTEGRATION_NAME = 'RewriteFrames';\n\n/**\n * Rewrite event frames paths.\n */\nconst rewriteFramesIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)((options = {}) => {\n  const root = options.root;\n  const prefix = options.prefix || 'app:///';\n\n  const isBrowser = \"window\" in _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.window !== undefined;\n\n  const iteratee = options.iteratee || generateIteratee({ isBrowser, root, prefix });\n\n  /** Process an exception event. */\n  function _processExceptionsEvent(event) {\n    try {\n      return {\n        ...event,\n        exception: {\n          ...event.exception,\n          // The check for this is performed inside `process` call itself, safe to skip here\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          values: event.exception.values.map(value => ({\n            ...value,\n            ...(value.stacktrace && { stacktrace: _processStacktrace(value.stacktrace) }),\n          })),\n        },\n      };\n    } catch (_oO) {\n      return event;\n    }\n  }\n\n  /** Process a stack trace. */\n  function _processStacktrace(stacktrace) {\n    return {\n      ...stacktrace,\n      frames: stacktrace && stacktrace.frames && stacktrace.frames.map(f => iteratee(f)),\n    };\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(originalEvent) {\n      let processedEvent = originalEvent;\n\n      if (originalEvent.exception && Array.isArray(originalEvent.exception.values)) {\n        processedEvent = _processExceptionsEvent(processedEvent);\n      }\n\n      return processedEvent;\n    },\n  };\n});\n\n/**\n * Exported only for tests.\n */\nfunction generateIteratee({\n  isBrowser,\n  root,\n  prefix,\n}\n\n) {\n  return (frame) => {\n    if (!frame.filename) {\n      return frame;\n    }\n\n    // Determine if this is a Windows frame by checking for a Windows-style prefix such as `C:\\`\n    const isWindowsFrame =\n      /^[a-zA-Z]:\\\\/.test(frame.filename) ||\n      // or the presence of a backslash without a forward slash (which are not allowed on Windows)\n      (frame.filename.includes('\\\\') && !frame.filename.includes('/'));\n\n    // Check if the frame filename begins with `/`\n    const startsWithSlash = /^\\//.test(frame.filename);\n\n    if (isBrowser) {\n      if (root) {\n        const oldFilename = frame.filename;\n        if (oldFilename.indexOf(root) === 0) {\n          frame.filename = oldFilename.replace(root, prefix);\n        }\n      }\n    } else {\n      if (isWindowsFrame || startsWithSlash) {\n        const filename = isWindowsFrame\n          ? frame.filename\n              .replace(/^[a-zA-Z]:/, '') // remove Windows-style prefix\n              .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n          : frame.filename;\n        const base = root ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.relative)(root, filename) : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.basename)(filename);\n        frame.filename = `${prefix}${base}`;\n      }\n    }\n\n    return frame;\n  };\n}\n\n\n//# sourceMappingURL=rewriteframes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvcmV3cml0ZWZyYW1lcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStEO0FBQ1Q7O0FBRXREOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxrRUFBaUIsY0FBYztBQUNoRTtBQUNBOztBQUVBLG9CQUFvQixpRUFBc0IsSUFBSSw0REFBaUI7O0FBRS9ELDBEQUEwRCx5QkFBeUI7O0FBRW5GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msa0RBQWtEO0FBQ3hGLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdURBQVEsbUJBQW1CLHVEQUFRO0FBQy9ELDRCQUE0QixPQUFPLEVBQUUsS0FBSztBQUMxQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFc0Q7QUFDdEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vaW50ZWdyYXRpb25zL3Jld3JpdGVmcmFtZXMuanM/YTllOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTE9CQUxfT0JKLCByZWxhdGl2ZSwgYmFzZW5hbWUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGRlZmluZUludGVncmF0aW9uIH0gZnJvbSAnLi4vaW50ZWdyYXRpb24uanMnO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ1Jld3JpdGVGcmFtZXMnO1xuXG4vKipcbiAqIFJld3JpdGUgZXZlbnQgZnJhbWVzIHBhdGhzLlxuICovXG5jb25zdCByZXdyaXRlRnJhbWVzSW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbigob3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IHJvb3QgPSBvcHRpb25zLnJvb3Q7XG4gIGNvbnN0IHByZWZpeCA9IG9wdGlvbnMucHJlZml4IHx8ICdhcHA6Ly8vJztcblxuICBjb25zdCBpc0Jyb3dzZXIgPSAnd2luZG93JyBpbiBHTE9CQUxfT0JKICYmIEdMT0JBTF9PQkoud2luZG93ICE9PSB1bmRlZmluZWQ7XG5cbiAgY29uc3QgaXRlcmF0ZWUgPSBvcHRpb25zLml0ZXJhdGVlIHx8IGdlbmVyYXRlSXRlcmF0ZWUoeyBpc0Jyb3dzZXIsIHJvb3QsIHByZWZpeCB9KTtcblxuICAvKiogUHJvY2VzcyBhbiBleGNlcHRpb24gZXZlbnQuICovXG4gIGZ1bmN0aW9uIF9wcm9jZXNzRXhjZXB0aW9uc0V2ZW50KGV2ZW50KSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmV2ZW50LFxuICAgICAgICBleGNlcHRpb246IHtcbiAgICAgICAgICAuLi5ldmVudC5leGNlcHRpb24sXG4gICAgICAgICAgLy8gVGhlIGNoZWNrIGZvciB0aGlzIGlzIHBlcmZvcm1lZCBpbnNpZGUgYHByb2Nlc3NgIGNhbGwgaXRzZWxmLCBzYWZlIHRvIHNraXAgaGVyZVxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgdmFsdWVzOiBldmVudC5leGNlcHRpb24udmFsdWVzLm1hcCh2YWx1ZSA9PiAoe1xuICAgICAgICAgICAgLi4udmFsdWUsXG4gICAgICAgICAgICAuLi4odmFsdWUuc3RhY2t0cmFjZSAmJiB7IHN0YWNrdHJhY2U6IF9wcm9jZXNzU3RhY2t0cmFjZSh2YWx1ZS5zdGFja3RyYWNlKSB9KSxcbiAgICAgICAgICB9KSksXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKF9vTykge1xuICAgICAgcmV0dXJuIGV2ZW50O1xuICAgIH1cbiAgfVxuXG4gIC8qKiBQcm9jZXNzIGEgc3RhY2sgdHJhY2UuICovXG4gIGZ1bmN0aW9uIF9wcm9jZXNzU3RhY2t0cmFjZShzdGFja3RyYWNlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnN0YWNrdHJhY2UsXG4gICAgICBmcmFtZXM6IHN0YWNrdHJhY2UgJiYgc3RhY2t0cmFjZS5mcmFtZXMgJiYgc3RhY2t0cmFjZS5mcmFtZXMubWFwKGYgPT4gaXRlcmF0ZWUoZikpLFxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgcHJvY2Vzc0V2ZW50KG9yaWdpbmFsRXZlbnQpIHtcbiAgICAgIGxldCBwcm9jZXNzZWRFdmVudCA9IG9yaWdpbmFsRXZlbnQ7XG5cbiAgICAgIGlmIChvcmlnaW5hbEV2ZW50LmV4Y2VwdGlvbiAmJiBBcnJheS5pc0FycmF5KG9yaWdpbmFsRXZlbnQuZXhjZXB0aW9uLnZhbHVlcykpIHtcbiAgICAgICAgcHJvY2Vzc2VkRXZlbnQgPSBfcHJvY2Vzc0V4Y2VwdGlvbnNFdmVudChwcm9jZXNzZWRFdmVudCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwcm9jZXNzZWRFdmVudDtcbiAgICB9LFxuICB9O1xufSk7XG5cbi8qKlxuICogRXhwb3J0ZWQgb25seSBmb3IgdGVzdHMuXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlSXRlcmF0ZWUoe1xuICBpc0Jyb3dzZXIsXG4gIHJvb3QsXG4gIHByZWZpeCxcbn1cblxuKSB7XG4gIHJldHVybiAoZnJhbWUpID0+IHtcbiAgICBpZiAoIWZyYW1lLmZpbGVuYW1lKSB7XG4gICAgICByZXR1cm4gZnJhbWU7XG4gICAgfVxuXG4gICAgLy8gRGV0ZXJtaW5lIGlmIHRoaXMgaXMgYSBXaW5kb3dzIGZyYW1lIGJ5IGNoZWNraW5nIGZvciBhIFdpbmRvd3Mtc3R5bGUgcHJlZml4IHN1Y2ggYXMgYEM6XFxgXG4gICAgY29uc3QgaXNXaW5kb3dzRnJhbWUgPVxuICAgICAgL15bYS16QS1aXTpcXFxcLy50ZXN0KGZyYW1lLmZpbGVuYW1lKSB8fFxuICAgICAgLy8gb3IgdGhlIHByZXNlbmNlIG9mIGEgYmFja3NsYXNoIHdpdGhvdXQgYSBmb3J3YXJkIHNsYXNoICh3aGljaCBhcmUgbm90IGFsbG93ZWQgb24gV2luZG93cylcbiAgICAgIChmcmFtZS5maWxlbmFtZS5pbmNsdWRlcygnXFxcXCcpICYmICFmcmFtZS5maWxlbmFtZS5pbmNsdWRlcygnLycpKTtcblxuICAgIC8vIENoZWNrIGlmIHRoZSBmcmFtZSBmaWxlbmFtZSBiZWdpbnMgd2l0aCBgL2BcbiAgICBjb25zdCBzdGFydHNXaXRoU2xhc2ggPSAvXlxcLy8udGVzdChmcmFtZS5maWxlbmFtZSk7XG5cbiAgICBpZiAoaXNCcm93c2VyKSB7XG4gICAgICBpZiAocm9vdCkge1xuICAgICAgICBjb25zdCBvbGRGaWxlbmFtZSA9IGZyYW1lLmZpbGVuYW1lO1xuICAgICAgICBpZiAob2xkRmlsZW5hbWUuaW5kZXhPZihyb290KSA9PT0gMCkge1xuICAgICAgICAgIGZyYW1lLmZpbGVuYW1lID0gb2xkRmlsZW5hbWUucmVwbGFjZShyb290LCBwcmVmaXgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChpc1dpbmRvd3NGcmFtZSB8fCBzdGFydHNXaXRoU2xhc2gpIHtcbiAgICAgICAgY29uc3QgZmlsZW5hbWUgPSBpc1dpbmRvd3NGcmFtZVxuICAgICAgICAgID8gZnJhbWUuZmlsZW5hbWVcbiAgICAgICAgICAgICAgLnJlcGxhY2UoL15bYS16QS1aXTovLCAnJykgLy8gcmVtb3ZlIFdpbmRvd3Mtc3R5bGUgcHJlZml4XG4gICAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcL2csICcvJykgLy8gcmVwbGFjZSBhbGwgYFxcXFxgIGluc3RhbmNlcyB3aXRoIGAvYFxuICAgICAgICAgIDogZnJhbWUuZmlsZW5hbWU7XG4gICAgICAgIGNvbnN0IGJhc2UgPSByb290ID8gcmVsYXRpdmUocm9vdCwgZmlsZW5hbWUpIDogYmFzZW5hbWUoZmlsZW5hbWUpO1xuICAgICAgICBmcmFtZS5maWxlbmFtZSA9IGAke3ByZWZpeH0ke2Jhc2V9YDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZnJhbWU7XG4gIH07XG59XG5cbmV4cG9ydCB7IGdlbmVyYXRlSXRlcmF0ZWUsIHJld3JpdGVGcmFtZXNJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmV3cml0ZWZyYW1lcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/rewriteframes.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/sessiontiming.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/sessiontiming.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sessionTimingIntegration\": function() { return /* binding */ sessionTimingIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n\n\n\nconst INTEGRATION_NAME = 'SessionTiming';\n\nconst _sessionTimingIntegration = (() => {\n  const startTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)() * 1000;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(event) {\n      const now = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)() * 1000;\n\n      return {\n        ...event,\n        extra: {\n          ...event.extra,\n          ['session:start']: startTime,\n          ['session:duration']: now - startTime,\n          ['session:end']: now,\n        },\n      };\n    },\n  };\n}) ;\n\n/**\n * This function adds duration since the sessionTimingIntegration was initialized\n * till the time event was sent.\n */\nconst sessionTimingIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_sessionTimingIntegration);\n\n\n//# sourceMappingURL=sessiontiming.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvc2Vzc2lvbnRpbWluZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUQ7QUFDRzs7QUFFdEQ7O0FBRUE7QUFDQSxvQkFBb0IsaUVBQWtCOztBQUV0QztBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUVBQWtCOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsa0VBQWlCOztBQUVkO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9ucy9zZXNzaW9udGltaW5nLmpzP2FhMzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdGltZXN0YW1wSW5TZWNvbmRzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiB9IGZyb20gJy4uL2ludGVncmF0aW9uLmpzJztcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdTZXNzaW9uVGltaW5nJztcblxuY29uc3QgX3Nlc3Npb25UaW1pbmdJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIGNvbnN0IHN0YXJ0VGltZSA9IHRpbWVzdGFtcEluU2Vjb25kcygpICogMTAwMDtcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgcHJvY2Vzc0V2ZW50KGV2ZW50KSB7XG4gICAgICBjb25zdCBub3cgPSB0aW1lc3RhbXBJblNlY29uZHMoKSAqIDEwMDA7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmV2ZW50LFxuICAgICAgICBleHRyYToge1xuICAgICAgICAgIC4uLmV2ZW50LmV4dHJhLFxuICAgICAgICAgIFsnc2Vzc2lvbjpzdGFydCddOiBzdGFydFRpbWUsXG4gICAgICAgICAgWydzZXNzaW9uOmR1cmF0aW9uJ106IG5vdyAtIHN0YXJ0VGltZSxcbiAgICAgICAgICBbJ3Nlc3Npb246ZW5kJ106IG5vdyxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGFkZHMgZHVyYXRpb24gc2luY2UgdGhlIHNlc3Npb25UaW1pbmdJbnRlZ3JhdGlvbiB3YXMgaW5pdGlhbGl6ZWRcbiAqIHRpbGwgdGhlIHRpbWUgZXZlbnQgd2FzIHNlbnQuXG4gKi9cbmNvbnN0IHNlc3Npb25UaW1pbmdJbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKF9zZXNzaW9uVGltaW5nSW50ZWdyYXRpb24pO1xuXG5leHBvcnQgeyBzZXNzaW9uVGltaW5nSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb250aW1pbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/sessiontiming.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/third-party-errors-filter.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/third-party-errors-filter.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"thirdPartyErrorFilterIntegration\": function() { return /* binding */ thirdPartyErrorFilterIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../metadata.js */ \"./node_modules/@sentry/core/esm/metadata.js\");\n\n\n\n\n/**\n * This integration allows you to filter out, or tag error events that do not come from user code marked with a bundle key via the Sentry bundler plugins.\n */\nconst thirdPartyErrorFilterIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)((options) => {\n  return {\n    name: 'ThirdPartyErrorsFilter',\n    setup(client) {\n      // We need to strip metadata from stack frames before sending them to Sentry since these are client side only.\n      // TODO(lforst): Move this cleanup logic into a more central place in the SDK.\n      client.on('beforeEnvelope', envelope => {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.forEachEnvelopeItem)(envelope, (item, type) => {\n          if (type === 'event') {\n            const event = Array.isArray(item) ? (item )[1] : undefined;\n\n            if (event) {\n              (0,_metadata_js__WEBPACK_IMPORTED_MODULE_2__.stripMetadataFromStackFrames)(event);\n              item[1] = event;\n            }\n          }\n        });\n      });\n    },\n    processEvent(event, _hint, client) {\n      const stackParser = client.getOptions().stackParser;\n      (0,_metadata_js__WEBPACK_IMPORTED_MODULE_2__.addMetadataToStackFrames)(stackParser, event);\n\n      const frameKeys = getBundleKeysForAllFramesWithFilenames(event);\n\n      if (frameKeys) {\n        const arrayMethod =\n          options.behaviour === 'drop-error-if-contains-third-party-frames' ||\n          options.behaviour === 'apply-tag-if-contains-third-party-frames'\n            ? 'some'\n            : 'every';\n\n        const behaviourApplies = frameKeys[arrayMethod](keys => !keys.some(key => options.filterKeys.includes(key)));\n\n        if (behaviourApplies) {\n          const shouldDrop =\n            options.behaviour === 'drop-error-if-contains-third-party-frames' ||\n            options.behaviour === 'drop-error-if-exclusively-contains-third-party-frames';\n          if (shouldDrop) {\n            return null;\n          } else {\n            event.tags = {\n              ...event.tags,\n              third_party_code: true,\n            };\n          }\n        }\n      }\n\n      return event;\n    },\n  };\n});\n\nfunction getBundleKeysForAllFramesWithFilenames(event) {\n  const frames = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getFramesFromEvent)(event);\n\n  if (!frames) {\n    return undefined;\n  }\n\n  return (\n    frames\n      // Exclude frames without a filename since these are likely native code or built-ins\n      .filter(frame => !!frame.filename)\n      .map(frame => {\n        if (frame.module_metadata) {\n          return Object.keys(frame.module_metadata)\n            .filter(key => key.startsWith(BUNDLER_PLUGIN_APP_KEY_PREFIX))\n            .map(key => key.slice(BUNDLER_PLUGIN_APP_KEY_PREFIX.length));\n        }\n        return [];\n      })\n  );\n}\n\nconst BUNDLER_PLUGIN_APP_KEY_PREFIX = '_sentryBundlerPluginAppKey:';\n\n\n//# sourceMappingURL=third-party-errors-filter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvdGhpcmQtcGFydHktZXJyb3JzLWZpbHRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdFO0FBQ2xCO0FBQ2tDOztBQUV4RjtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsa0VBQWlCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0VBQW1CO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLDBFQUE0QjtBQUMxQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsTUFBTSxzRUFBd0I7O0FBRTlCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0EsaUJBQWlCLGlFQUFrQjs7QUFFbkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vaW50ZWdyYXRpb25zL3RoaXJkLXBhcnR5LWVycm9ycy1maWx0ZXIuanM/YTViOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JFYWNoRW52ZWxvcGVJdGVtLCBnZXRGcmFtZXNGcm9tRXZlbnQgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGRlZmluZUludGVncmF0aW9uIH0gZnJvbSAnLi4vaW50ZWdyYXRpb24uanMnO1xuaW1wb3J0IHsgc3RyaXBNZXRhZGF0YUZyb21TdGFja0ZyYW1lcywgYWRkTWV0YWRhdGFUb1N0YWNrRnJhbWVzIH0gZnJvbSAnLi4vbWV0YWRhdGEuanMnO1xuXG4vKipcbiAqIFRoaXMgaW50ZWdyYXRpb24gYWxsb3dzIHlvdSB0byBmaWx0ZXIgb3V0LCBvciB0YWcgZXJyb3IgZXZlbnRzIHRoYXQgZG8gbm90IGNvbWUgZnJvbSB1c2VyIGNvZGUgbWFya2VkIHdpdGggYSBidW5kbGUga2V5IHZpYSB0aGUgU2VudHJ5IGJ1bmRsZXIgcGx1Z2lucy5cbiAqL1xuY29uc3QgdGhpcmRQYXJ0eUVycm9yRmlsdGVySW50ZWdyYXRpb24gPSBkZWZpbmVJbnRlZ3JhdGlvbigob3B0aW9ucykgPT4ge1xuICByZXR1cm4ge1xuICAgIG5hbWU6ICdUaGlyZFBhcnR5RXJyb3JzRmlsdGVyJyxcbiAgICBzZXR1cChjbGllbnQpIHtcbiAgICAgIC8vIFdlIG5lZWQgdG8gc3RyaXAgbWV0YWRhdGEgZnJvbSBzdGFjayBmcmFtZXMgYmVmb3JlIHNlbmRpbmcgdGhlbSB0byBTZW50cnkgc2luY2UgdGhlc2UgYXJlIGNsaWVudCBzaWRlIG9ubHkuXG4gICAgICAvLyBUT0RPKGxmb3JzdCk6IE1vdmUgdGhpcyBjbGVhbnVwIGxvZ2ljIGludG8gYSBtb3JlIGNlbnRyYWwgcGxhY2UgaW4gdGhlIFNESy5cbiAgICAgIGNsaWVudC5vbignYmVmb3JlRW52ZWxvcGUnLCBlbnZlbG9wZSA9PiB7XG4gICAgICAgIGZvckVhY2hFbnZlbG9wZUl0ZW0oZW52ZWxvcGUsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgICAgICAgaWYgKHR5cGUgPT09ICdldmVudCcpIHtcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gQXJyYXkuaXNBcnJheShpdGVtKSA/IChpdGVtIClbMV0gOiB1bmRlZmluZWQ7XG5cbiAgICAgICAgICAgIGlmIChldmVudCkge1xuICAgICAgICAgICAgICBzdHJpcE1ldGFkYXRhRnJvbVN0YWNrRnJhbWVzKGV2ZW50KTtcbiAgICAgICAgICAgICAgaXRlbVsxXSA9IGV2ZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHByb2Nlc3NFdmVudChldmVudCwgX2hpbnQsIGNsaWVudCkge1xuICAgICAgY29uc3Qgc3RhY2tQYXJzZXIgPSBjbGllbnQuZ2V0T3B0aW9ucygpLnN0YWNrUGFyc2VyO1xuICAgICAgYWRkTWV0YWRhdGFUb1N0YWNrRnJhbWVzKHN0YWNrUGFyc2VyLCBldmVudCk7XG5cbiAgICAgIGNvbnN0IGZyYW1lS2V5cyA9IGdldEJ1bmRsZUtleXNGb3JBbGxGcmFtZXNXaXRoRmlsZW5hbWVzKGV2ZW50KTtcblxuICAgICAgaWYgKGZyYW1lS2V5cykge1xuICAgICAgICBjb25zdCBhcnJheU1ldGhvZCA9XG4gICAgICAgICAgb3B0aW9ucy5iZWhhdmlvdXIgPT09ICdkcm9wLWVycm9yLWlmLWNvbnRhaW5zLXRoaXJkLXBhcnR5LWZyYW1lcycgfHxcbiAgICAgICAgICBvcHRpb25zLmJlaGF2aW91ciA9PT0gJ2FwcGx5LXRhZy1pZi1jb250YWlucy10aGlyZC1wYXJ0eS1mcmFtZXMnXG4gICAgICAgICAgICA/ICdzb21lJ1xuICAgICAgICAgICAgOiAnZXZlcnknO1xuXG4gICAgICAgIGNvbnN0IGJlaGF2aW91ckFwcGxpZXMgPSBmcmFtZUtleXNbYXJyYXlNZXRob2RdKGtleXMgPT4gIWtleXMuc29tZShrZXkgPT4gb3B0aW9ucy5maWx0ZXJLZXlzLmluY2x1ZGVzKGtleSkpKTtcblxuICAgICAgICBpZiAoYmVoYXZpb3VyQXBwbGllcykge1xuICAgICAgICAgIGNvbnN0IHNob3VsZERyb3AgPVxuICAgICAgICAgICAgb3B0aW9ucy5iZWhhdmlvdXIgPT09ICdkcm9wLWVycm9yLWlmLWNvbnRhaW5zLXRoaXJkLXBhcnR5LWZyYW1lcycgfHxcbiAgICAgICAgICAgIG9wdGlvbnMuYmVoYXZpb3VyID09PSAnZHJvcC1lcnJvci1pZi1leGNsdXNpdmVseS1jb250YWlucy10aGlyZC1wYXJ0eS1mcmFtZXMnO1xuICAgICAgICAgIGlmIChzaG91bGREcm9wKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZXZlbnQudGFncyA9IHtcbiAgICAgICAgICAgICAgLi4uZXZlbnQudGFncyxcbiAgICAgICAgICAgICAgdGhpcmRfcGFydHlfY29kZTogdHJ1ZSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBldmVudDtcbiAgICB9LFxuICB9O1xufSk7XG5cbmZ1bmN0aW9uIGdldEJ1bmRsZUtleXNGb3JBbGxGcmFtZXNXaXRoRmlsZW5hbWVzKGV2ZW50KSB7XG4gIGNvbnN0IGZyYW1lcyA9IGdldEZyYW1lc0Zyb21FdmVudChldmVudCk7XG5cbiAgaWYgKCFmcmFtZXMpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICBmcmFtZXNcbiAgICAgIC8vIEV4Y2x1ZGUgZnJhbWVzIHdpdGhvdXQgYSBmaWxlbmFtZSBzaW5jZSB0aGVzZSBhcmUgbGlrZWx5IG5hdGl2ZSBjb2RlIG9yIGJ1aWx0LWluc1xuICAgICAgLmZpbHRlcihmcmFtZSA9PiAhIWZyYW1lLmZpbGVuYW1lKVxuICAgICAgLm1hcChmcmFtZSA9PiB7XG4gICAgICAgIGlmIChmcmFtZS5tb2R1bGVfbWV0YWRhdGEpIHtcbiAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMoZnJhbWUubW9kdWxlX21ldGFkYXRhKVxuICAgICAgICAgICAgLmZpbHRlcihrZXkgPT4ga2V5LnN0YXJ0c1dpdGgoQlVORExFUl9QTFVHSU5fQVBQX0tFWV9QUkVGSVgpKVxuICAgICAgICAgICAgLm1hcChrZXkgPT4ga2V5LnNsaWNlKEJVTkRMRVJfUExVR0lOX0FQUF9LRVlfUFJFRklYLmxlbmd0aCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH0pXG4gICk7XG59XG5cbmNvbnN0IEJVTkRMRVJfUExVR0lOX0FQUF9LRVlfUFJFRklYID0gJ19zZW50cnlCdW5kbGVyUGx1Z2luQXBwS2V5Oic7XG5cbmV4cG9ydCB7IHRoaXJkUGFydHlFcnJvckZpbHRlckludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aGlyZC1wYXJ0eS1lcnJvcnMtZmlsdGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/third-party-errors-filter.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/zoderrors.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/zoderrors.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyZodErrorsToEvent\": function() { return /* binding */ applyZodErrorsToEvent; },\n/* harmony export */   \"zodErrorsIntegration\": function() { return /* binding */ zodErrorsIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n\n\n\nconst DEFAULT_LIMIT = 10;\nconst INTEGRATION_NAME = 'ZodErrors';\n\n// Simplified ZodIssue type definition\n\nfunction originalExceptionIsZodError(originalException) {\n  return (\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isError)(originalException) &&\n    originalException.name === 'ZodError' &&\n    Array.isArray((originalException ).errors)\n  );\n}\n\n/**\n * Formats child objects or arrays to a string\n * That is preserved when sent to Sentry\n */\nfunction formatIssueTitle(issue) {\n  return {\n    ...issue,\n    path: 'path' in issue && Array.isArray(issue.path) ? issue.path.join('.') : undefined,\n    keys: 'keys' in issue ? JSON.stringify(issue.keys) : undefined,\n    unionErrors: 'unionErrors' in issue ? JSON.stringify(issue.unionErrors) : undefined,\n  };\n}\n\n/**\n * Zod error message is a stringified version of ZodError.issues\n * This doesn't display well in the Sentry UI. Replace it with something shorter.\n */\nfunction formatIssueMessage(zodError) {\n  const errorKeyMap = new Set();\n  for (const iss of zodError.issues) {\n    if (iss.path) errorKeyMap.add(iss.path[0]);\n  }\n  const errorKeys = Array.from(errorKeyMap);\n\n  return `Failed to validate keys: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.truncate)(errorKeys.join(', '), 100)}`;\n}\n\n/**\n * Applies ZodError issues to an event extras and replaces the error message\n */\nfunction applyZodErrorsToEvent(limit, event, hint) {\n  if (\n    !event.exception ||\n    !event.exception.values ||\n    !hint ||\n    !hint.originalException ||\n    !originalExceptionIsZodError(hint.originalException) ||\n    hint.originalException.issues.length === 0\n  ) {\n    return event;\n  }\n\n  return {\n    ...event,\n    exception: {\n      ...event.exception,\n      values: [\n        {\n          ...event.exception.values[0],\n          value: formatIssueMessage(hint.originalException),\n        },\n        ...event.exception.values.slice(1),\n      ],\n    },\n    extra: {\n      ...event.extra,\n      'zoderror.issues': hint.originalException.errors.slice(0, limit).map(formatIssueTitle),\n    },\n  };\n}\n\nconst _zodErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n\n  return {\n    name: INTEGRATION_NAME,\n    processEvent(originalEvent, hint) {\n      const processedEvent = applyZodErrorsToEvent(limit, originalEvent, hint);\n      return processedEvent;\n    },\n  };\n}) ;\n\nconst zodErrorsIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_zodErrorsIntegration);\n\n\n//# sourceMappingURL=zoderrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvem9kZXJyb3JzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0Q7QUFDSTs7QUFFdEQ7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxzREFBTztBQUNYO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQ0FBcUMsdURBQVEsNEJBQTRCO0FBQ3pFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLDRDQUE0QztBQUM1Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRCw2QkFBNkIsa0VBQWlCOztBQUVTO0FBQ3ZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9ucy96b2RlcnJvcnMuanM/ZDRmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Vycm9yLCB0cnVuY2F0ZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZGVmaW5lSW50ZWdyYXRpb24gfSBmcm9tICcuLi9pbnRlZ3JhdGlvbi5qcyc7XG5cbmNvbnN0IERFRkFVTFRfTElNSVQgPSAxMDtcbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnWm9kRXJyb3JzJztcblxuLy8gU2ltcGxpZmllZCBab2RJc3N1ZSB0eXBlIGRlZmluaXRpb25cblxuZnVuY3Rpb24gb3JpZ2luYWxFeGNlcHRpb25Jc1pvZEVycm9yKG9yaWdpbmFsRXhjZXB0aW9uKSB7XG4gIHJldHVybiAoXG4gICAgaXNFcnJvcihvcmlnaW5hbEV4Y2VwdGlvbikgJiZcbiAgICBvcmlnaW5hbEV4Y2VwdGlvbi5uYW1lID09PSAnWm9kRXJyb3InICYmXG4gICAgQXJyYXkuaXNBcnJheSgob3JpZ2luYWxFeGNlcHRpb24gKS5lcnJvcnMpXG4gICk7XG59XG5cbi8qKlxuICogRm9ybWF0cyBjaGlsZCBvYmplY3RzIG9yIGFycmF5cyB0byBhIHN0cmluZ1xuICogVGhhdCBpcyBwcmVzZXJ2ZWQgd2hlbiBzZW50IHRvIFNlbnRyeVxuICovXG5mdW5jdGlvbiBmb3JtYXRJc3N1ZVRpdGxlKGlzc3VlKSB7XG4gIHJldHVybiB7XG4gICAgLi4uaXNzdWUsXG4gICAgcGF0aDogJ3BhdGgnIGluIGlzc3VlICYmIEFycmF5LmlzQXJyYXkoaXNzdWUucGF0aCkgPyBpc3N1ZS5wYXRoLmpvaW4oJy4nKSA6IHVuZGVmaW5lZCxcbiAgICBrZXlzOiAna2V5cycgaW4gaXNzdWUgPyBKU09OLnN0cmluZ2lmeShpc3N1ZS5rZXlzKSA6IHVuZGVmaW5lZCxcbiAgICB1bmlvbkVycm9yczogJ3VuaW9uRXJyb3JzJyBpbiBpc3N1ZSA/IEpTT04uc3RyaW5naWZ5KGlzc3VlLnVuaW9uRXJyb3JzKSA6IHVuZGVmaW5lZCxcbiAgfTtcbn1cblxuLyoqXG4gKiBab2QgZXJyb3IgbWVzc2FnZSBpcyBhIHN0cmluZ2lmaWVkIHZlcnNpb24gb2YgWm9kRXJyb3IuaXNzdWVzXG4gKiBUaGlzIGRvZXNuJ3QgZGlzcGxheSB3ZWxsIGluIHRoZSBTZW50cnkgVUkuIFJlcGxhY2UgaXQgd2l0aCBzb21ldGhpbmcgc2hvcnRlci5cbiAqL1xuZnVuY3Rpb24gZm9ybWF0SXNzdWVNZXNzYWdlKHpvZEVycm9yKSB7XG4gIGNvbnN0IGVycm9yS2V5TWFwID0gbmV3IFNldCgpO1xuICBmb3IgKGNvbnN0IGlzcyBvZiB6b2RFcnJvci5pc3N1ZXMpIHtcbiAgICBpZiAoaXNzLnBhdGgpIGVycm9yS2V5TWFwLmFkZChpc3MucGF0aFswXSk7XG4gIH1cbiAgY29uc3QgZXJyb3JLZXlzID0gQXJyYXkuZnJvbShlcnJvcktleU1hcCk7XG5cbiAgcmV0dXJuIGBGYWlsZWQgdG8gdmFsaWRhdGUga2V5czogJHt0cnVuY2F0ZShlcnJvcktleXMuam9pbignLCAnKSwgMTAwKX1gO1xufVxuXG4vKipcbiAqIEFwcGxpZXMgWm9kRXJyb3IgaXNzdWVzIHRvIGFuIGV2ZW50IGV4dHJhcyBhbmQgcmVwbGFjZXMgdGhlIGVycm9yIG1lc3NhZ2VcbiAqL1xuZnVuY3Rpb24gYXBwbHlab2RFcnJvcnNUb0V2ZW50KGxpbWl0LCBldmVudCwgaGludCkge1xuICBpZiAoXG4gICAgIWV2ZW50LmV4Y2VwdGlvbiB8fFxuICAgICFldmVudC5leGNlcHRpb24udmFsdWVzIHx8XG4gICAgIWhpbnQgfHxcbiAgICAhaGludC5vcmlnaW5hbEV4Y2VwdGlvbiB8fFxuICAgICFvcmlnaW5hbEV4Y2VwdGlvbklzWm9kRXJyb3IoaGludC5vcmlnaW5hbEV4Y2VwdGlvbikgfHxcbiAgICBoaW50Lm9yaWdpbmFsRXhjZXB0aW9uLmlzc3Vlcy5sZW5ndGggPT09IDBcbiAgKSB7XG4gICAgcmV0dXJuIGV2ZW50O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICAuLi5ldmVudCxcbiAgICBleGNlcHRpb246IHtcbiAgICAgIC4uLmV2ZW50LmV4Y2VwdGlvbixcbiAgICAgIHZhbHVlczogW1xuICAgICAgICB7XG4gICAgICAgICAgLi4uZXZlbnQuZXhjZXB0aW9uLnZhbHVlc1swXSxcbiAgICAgICAgICB2YWx1ZTogZm9ybWF0SXNzdWVNZXNzYWdlKGhpbnQub3JpZ2luYWxFeGNlcHRpb24pLFxuICAgICAgICB9LFxuICAgICAgICAuLi5ldmVudC5leGNlcHRpb24udmFsdWVzLnNsaWNlKDEpLFxuICAgICAgXSxcbiAgICB9LFxuICAgIGV4dHJhOiB7XG4gICAgICAuLi5ldmVudC5leHRyYSxcbiAgICAgICd6b2RlcnJvci5pc3N1ZXMnOiBoaW50Lm9yaWdpbmFsRXhjZXB0aW9uLmVycm9ycy5zbGljZSgwLCBsaW1pdCkubWFwKGZvcm1hdElzc3VlVGl0bGUpLFxuICAgIH0sXG4gIH07XG59XG5cbmNvbnN0IF96b2RFcnJvcnNJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIGNvbnN0IGxpbWl0ID0gb3B0aW9ucy5saW1pdCB8fCBERUZBVUxUX0xJTUlUO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBwcm9jZXNzRXZlbnQob3JpZ2luYWxFdmVudCwgaGludCkge1xuICAgICAgY29uc3QgcHJvY2Vzc2VkRXZlbnQgPSBhcHBseVpvZEVycm9yc1RvRXZlbnQobGltaXQsIG9yaWdpbmFsRXZlbnQsIGhpbnQpO1xuICAgICAgcmV0dXJuIHByb2Nlc3NlZEV2ZW50O1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IHpvZEVycm9yc0ludGVncmF0aW9uID0gZGVmaW5lSW50ZWdyYXRpb24oX3pvZEVycm9yc0ludGVncmF0aW9uKTtcblxuZXhwb3J0IHsgYXBwbHlab2RFcnJvcnNUb0V2ZW50LCB6b2RFcnJvcnNJbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9em9kZXJyb3JzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/zoderrors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metadata.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metadata.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addMetadataToStackFrames\": function() { return /* binding */ addMetadataToStackFrames; },\n/* harmony export */   \"getMetadataForUrl\": function() { return /* binding */ getMetadataForUrl; },\n/* harmony export */   \"stripMetadataFromStackFrames\": function() { return /* binding */ stripMetadataFromStackFrames; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/** Keys are source filename/url, values are metadata objects. */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst filenameMetadataMap = new Map();\n/** Set of stack strings that have already been parsed. */\nconst parsedStacks = new Set();\n\nfunction ensureMetadataStacksAreParsed(parser) {\n  if (!_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryModuleMetadata) {\n    return;\n  }\n\n  for (const stack of Object.keys(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryModuleMetadata)) {\n    const metadata = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryModuleMetadata[stack];\n\n    if (parsedStacks.has(stack)) {\n      continue;\n    }\n\n    // Ensure this stack doesn't get parsed again\n    parsedStacks.add(stack);\n\n    const frames = parser(stack);\n\n    // Go through the frames starting from the top of the stack and find the first one with a filename\n    for (const frame of frames.reverse()) {\n      if (frame.filename) {\n        // Save the metadata for this filename\n        filenameMetadataMap.set(frame.filename, metadata);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Retrieve metadata for a specific JavaScript file URL.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getMetadataForUrl(parser, filename) {\n  ensureMetadataStacksAreParsed(parser);\n  return filenameMetadataMap.get(filename);\n}\n\n/**\n * Adds metadata to stack frames.\n *\n * Metadata is injected by the Sentry bundler plugins using the `_experiments.moduleMetadata` config option.\n */\nfunction addMetadataToStackFrames(parser, event) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        if (!frame.filename || frame.module_metadata) {\n          continue;\n        }\n\n        const metadata = getMetadataForUrl(parser, frame.filename);\n\n        if (metadata) {\n          frame.module_metadata = metadata;\n        }\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Strips metadata from stack frames.\n */\nfunction stripMetadataFromStackFrames(event) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      if (!exception.stacktrace) {\n        return;\n      }\n\n      for (const frame of exception.stacktrace.frames || []) {\n        delete frame.module_metadata;\n      }\n    });\n  } catch (_) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n\n//# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRhZGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJDOztBQUUzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTywyRUFBZ0M7QUFDdkM7QUFDQTs7QUFFQSxrQ0FBa0MsMkVBQWdDO0FBQ2xFLHFCQUFxQiwyRUFBZ0M7O0FBRXJEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVxRjtBQUNyRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRhZGF0YS5qcz9hNmZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdMT0JBTF9PQkogfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqIEtleXMgYXJlIHNvdXJjZSBmaWxlbmFtZS91cmwsIHZhbHVlcyBhcmUgbWV0YWRhdGEgb2JqZWN0cy4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5jb25zdCBmaWxlbmFtZU1ldGFkYXRhTWFwID0gbmV3IE1hcCgpO1xuLyoqIFNldCBvZiBzdGFjayBzdHJpbmdzIHRoYXQgaGF2ZSBhbHJlYWR5IGJlZW4gcGFyc2VkLiAqL1xuY29uc3QgcGFyc2VkU3RhY2tzID0gbmV3IFNldCgpO1xuXG5mdW5jdGlvbiBlbnN1cmVNZXRhZGF0YVN0YWNrc0FyZVBhcnNlZChwYXJzZXIpIHtcbiAgaWYgKCFHTE9CQUxfT0JKLl9zZW50cnlNb2R1bGVNZXRhZGF0YSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZvciAoY29uc3Qgc3RhY2sgb2YgT2JqZWN0LmtleXMoR0xPQkFMX09CSi5fc2VudHJ5TW9kdWxlTWV0YWRhdGEpKSB7XG4gICAgY29uc3QgbWV0YWRhdGEgPSBHTE9CQUxfT0JKLl9zZW50cnlNb2R1bGVNZXRhZGF0YVtzdGFja107XG5cbiAgICBpZiAocGFyc2VkU3RhY2tzLmhhcyhzdGFjaykpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIEVuc3VyZSB0aGlzIHN0YWNrIGRvZXNuJ3QgZ2V0IHBhcnNlZCBhZ2FpblxuICAgIHBhcnNlZFN0YWNrcy5hZGQoc3RhY2spO1xuXG4gICAgY29uc3QgZnJhbWVzID0gcGFyc2VyKHN0YWNrKTtcblxuICAgIC8vIEdvIHRocm91Z2ggdGhlIGZyYW1lcyBzdGFydGluZyBmcm9tIHRoZSB0b3Agb2YgdGhlIHN0YWNrIGFuZCBmaW5kIHRoZSBmaXJzdCBvbmUgd2l0aCBhIGZpbGVuYW1lXG4gICAgZm9yIChjb25zdCBmcmFtZSBvZiBmcmFtZXMucmV2ZXJzZSgpKSB7XG4gICAgICBpZiAoZnJhbWUuZmlsZW5hbWUpIHtcbiAgICAgICAgLy8gU2F2ZSB0aGUgbWV0YWRhdGEgZm9yIHRoaXMgZmlsZW5hbWVcbiAgICAgICAgZmlsZW5hbWVNZXRhZGF0YU1hcC5zZXQoZnJhbWUuZmlsZW5hbWUsIG1ldGFkYXRhKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUmV0cmlldmUgbWV0YWRhdGEgZm9yIGEgc3BlY2lmaWMgSmF2YVNjcmlwdCBmaWxlIFVSTC5cbiAqXG4gKiBNZXRhZGF0YSBpcyBpbmplY3RlZCBieSB0aGUgU2VudHJ5IGJ1bmRsZXIgcGx1Z2lucyB1c2luZyB0aGUgYF9leHBlcmltZW50cy5tb2R1bGVNZXRhZGF0YWAgY29uZmlnIG9wdGlvbi5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmZ1bmN0aW9uIGdldE1ldGFkYXRhRm9yVXJsKHBhcnNlciwgZmlsZW5hbWUpIHtcbiAgZW5zdXJlTWV0YWRhdGFTdGFja3NBcmVQYXJzZWQocGFyc2VyKTtcbiAgcmV0dXJuIGZpbGVuYW1lTWV0YWRhdGFNYXAuZ2V0KGZpbGVuYW1lKTtcbn1cblxuLyoqXG4gKiBBZGRzIG1ldGFkYXRhIHRvIHN0YWNrIGZyYW1lcy5cbiAqXG4gKiBNZXRhZGF0YSBpcyBpbmplY3RlZCBieSB0aGUgU2VudHJ5IGJ1bmRsZXIgcGx1Z2lucyB1c2luZyB0aGUgYF9leHBlcmltZW50cy5tb2R1bGVNZXRhZGF0YWAgY29uZmlnIG9wdGlvbi5cbiAqL1xuZnVuY3Rpb24gYWRkTWV0YWRhdGFUb1N0YWNrRnJhbWVzKHBhcnNlciwgZXZlbnQpIHtcbiAgdHJ5IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICAgIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMuZm9yRWFjaChleGNlcHRpb24gPT4ge1xuICAgICAgaWYgKCFleGNlcHRpb24uc3RhY2t0cmFjZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGZvciAoY29uc3QgZnJhbWUgb2YgZXhjZXB0aW9uLnN0YWNrdHJhY2UuZnJhbWVzIHx8IFtdKSB7XG4gICAgICAgIGlmICghZnJhbWUuZmlsZW5hbWUgfHwgZnJhbWUubW9kdWxlX21ldGFkYXRhKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBtZXRhZGF0YSA9IGdldE1ldGFkYXRhRm9yVXJsKHBhcnNlciwgZnJhbWUuZmlsZW5hbWUpO1xuXG4gICAgICAgIGlmIChtZXRhZGF0YSkge1xuICAgICAgICAgIGZyYW1lLm1vZHVsZV9tZXRhZGF0YSA9IG1ldGFkYXRhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH0gY2F0Y2ggKF8pIHtcbiAgICAvLyBUbyBzYXZlIGJ1bmRsZSBzaXplIHdlJ3JlIGp1c3QgdHJ5IGNhdGNoaW5nIGhlcmUgaW5zdGVhZCBvZiBjaGVja2luZyBmb3IgdGhlIGV4aXN0ZW5jZSBvZiBhbGwgdGhlIGRpZmZlcmVudCBvYmplY3RzLlxuICB9XG59XG5cbi8qKlxuICogU3RyaXBzIG1ldGFkYXRhIGZyb20gc3RhY2sgZnJhbWVzLlxuICovXG5mdW5jdGlvbiBzdHJpcE1ldGFkYXRhRnJvbVN0YWNrRnJhbWVzKGV2ZW50KSB7XG4gIHRyeSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzLmZvckVhY2goZXhjZXB0aW9uID0+IHtcbiAgICAgIGlmICghZXhjZXB0aW9uLnN0YWNrdHJhY2UpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGNvbnN0IGZyYW1lIG9mIGV4Y2VwdGlvbi5zdGFja3RyYWNlLmZyYW1lcyB8fCBbXSkge1xuICAgICAgICBkZWxldGUgZnJhbWUubW9kdWxlX21ldGFkYXRhO1xuICAgICAgfVxuICAgIH0pO1xuICB9IGNhdGNoIChfKSB7XG4gICAgLy8gVG8gc2F2ZSBidW5kbGUgc2l6ZSB3ZSdyZSBqdXN0IHRyeSBjYXRjaGluZyBoZXJlIGluc3RlYWQgb2YgY2hlY2tpbmcgZm9yIHRoZSBleGlzdGVuY2Ugb2YgYWxsIHRoZSBkaWZmZXJlbnQgb2JqZWN0cy5cbiAgfVxufVxuXG5leHBvcnQgeyBhZGRNZXRhZGF0YVRvU3RhY2tGcmFtZXMsIGdldE1ldGFkYXRhRm9yVXJsLCBzdHJpcE1ldGFkYXRhRnJvbVN0YWNrRnJhbWVzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRhZGF0YS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metadata.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/aggregator.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/aggregator.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MetricsAggregator\": function() { return /* binding */ MetricsAggregator; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/metrics/constants.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/core/esm/metrics/envelope.js\");\n/* harmony import */ var _instance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instance.js */ \"./node_modules/@sentry/core/esm/metrics/instance.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/core/esm/metrics/utils.js\");\n\n\n\n\n\n\n\n/**\n * A metrics aggregator that aggregates metrics in memory and flushes them periodically.\n */\nclass MetricsAggregator  {\n  // TODO(@anonrig): Use FinalizationRegistry to have a proper way of flushing the buckets\n  // when the aggregator is garbage collected.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n\n  // Different metrics have different weights. We use this to limit the number of metrics\n  // that we store in memory.\n\n  // Cast to any so that it can use Node.js timeout\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  // SDKs are required to shift the flush interval by random() * rollup_in_seconds.\n  // That shift is determined once per startup to create jittering.\n\n  // An SDK is required to perform force flushing ahead of scheduled time if the memory\n  // pressure is too high. There is no rule for this other than that SDKs should be tracking\n  // abstract aggregation complexity (eg: a counter only carries a single float, whereas a\n  // distribution is a float per emission).\n  //\n  // Force flush is used on either shutdown, flush() or when we exceed the max weight.\n\n   constructor(  _client) {this._client = _client;\n    this._buckets = new Map();\n    this._bucketsTotalWeight = 0;\n\n    this._interval = setInterval(() => this._flush(), _constants_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_FLUSH_INTERVAL) ;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (this._interval.unref) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      this._interval.unref();\n    }\n\n    this._flushShift = Math.floor((Math.random() * _constants_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_FLUSH_INTERVAL) / 1000);\n    this._forceFlush = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(\n    metricType,\n    unsanitizedName,\n    value,\n    unsanitizedUnit = 'none',\n    unsanitizedTags = {},\n    maybeFloatTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)(),\n  ) {\n    const timestamp = Math.floor(maybeFloatTimestamp);\n    const name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeMetricKey)(unsanitizedName);\n    const tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeTags)(unsanitizedTags);\n    const unit = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeUnit)(unsanitizedUnit );\n\n    const bucketKey = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getBucketKey)(metricType, name, unit, tags);\n\n    let bucketItem = this._buckets.get(bucketKey);\n    // If this is a set metric, we need to calculate the delta from the previous weight.\n    const previousWeight = bucketItem && metricType === _constants_js__WEBPACK_IMPORTED_MODULE_0__.SET_METRIC_TYPE ? bucketItem.metric.weight : 0;\n\n    if (bucketItem) {\n      bucketItem.metric.add(value);\n      // TODO(abhi): Do we need this check?\n      if (bucketItem.timestamp < timestamp) {\n        bucketItem.timestamp = timestamp;\n      }\n    } else {\n      bucketItem = {\n        // @ts-expect-error we don't need to narrow down the type of value here, saves bundle size.\n        metric: new _instance_js__WEBPACK_IMPORTED_MODULE_3__.METRIC_MAP[metricType](value),\n        timestamp,\n        metricType,\n        name,\n        unit,\n        tags,\n      };\n      this._buckets.set(bucketKey, bucketItem);\n    }\n\n    // If value is a string, it's a set metric so calculate the delta from the previous weight.\n    const val = typeof value === 'string' ? bucketItem.metric.weight - previousWeight : value;\n    (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.updateMetricSummaryOnActiveSpan)(metricType, name, val, unit, unsanitizedTags, bucketKey);\n\n    // We need to keep track of the total weight of the buckets so that we can\n    // flush them when we exceed the max weight.\n    this._bucketsTotalWeight += bucketItem.metric.weight;\n\n    if (this._bucketsTotalWeight >= _constants_js__WEBPACK_IMPORTED_MODULE_0__.MAX_WEIGHT) {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flushes the current metrics to the transport via the transport.\n   */\n   flush() {\n    this._forceFlush = true;\n    this._flush();\n  }\n\n  /**\n   * Shuts down metrics aggregator and clears all metrics.\n   */\n   close() {\n    this._forceFlush = true;\n    clearInterval(this._interval);\n    this._flush();\n  }\n\n  /**\n   * Flushes the buckets according to the internal state of the aggregator.\n   * If it is a force flush, which happens on shutdown, it will flush all buckets.\n   * Otherwise, it will only flush buckets that are older than the flush interval,\n   * and according to the flush shift.\n   *\n   * This function mutates `_forceFlush` and `_bucketsTotalWeight` properties.\n   */\n   _flush() {\n    // TODO(@anonrig): Add Atomics for locking to avoid having force flush and regular flush\n    // running at the same time.\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics\n\n    // This path eliminates the need for checking for timestamps since we're forcing a flush.\n    // Remember to reset the flag, or it will always flush all metrics.\n    if (this._forceFlush) {\n      this._forceFlush = false;\n      this._bucketsTotalWeight = 0;\n      this._captureMetrics(this._buckets);\n      this._buckets.clear();\n      return;\n    }\n    const cutoffSeconds = Math.floor((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)()) - _constants_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_FLUSH_INTERVAL / 1000 - this._flushShift;\n    // TODO(@anonrig): Optimization opportunity.\n    // Convert this map to an array and store key in the bucketItem.\n    const flushedBuckets = new Map();\n    for (const [key, bucket] of this._buckets) {\n      if (bucket.timestamp <= cutoffSeconds) {\n        flushedBuckets.set(key, bucket);\n        this._bucketsTotalWeight -= bucket.metric.weight;\n      }\n    }\n\n    for (const [key] of flushedBuckets) {\n      this._buckets.delete(key);\n    }\n\n    this._captureMetrics(flushedBuckets);\n  }\n\n  /**\n   * Only captures a subset of the buckets passed to this function.\n   * @param flushedBuckets\n   */\n   _captureMetrics(flushedBuckets) {\n    if (flushedBuckets.size > 0) {\n      // TODO(@anonrig): Optimization opportunity.\n      // This copy operation can be avoided if we store the key in the bucketItem.\n      const buckets = Array.from(flushedBuckets).map(([, bucketItem]) => bucketItem);\n      (0,_envelope_js__WEBPACK_IMPORTED_MODULE_5__.captureAggregateMetrics)(this._client, buckets);\n    }\n  }\n}\n\n\n//# sourceMappingURL=aggregator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metrics/aggregator.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/browser-aggregator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/browser-aggregator.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserMetricsAggregator\": function() { return /* binding */ BrowserMetricsAggregator; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/metrics/constants.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/core/esm/metrics/envelope.js\");\n/* harmony import */ var _instance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instance.js */ \"./node_modules/@sentry/core/esm/metrics/instance.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/core/esm/metrics/utils.js\");\n\n\n\n\n\n\n\n/**\n * A simple metrics aggregator that aggregates metrics in memory and flushes them periodically.\n * Default flush interval is 5 seconds.\n *\n * @experimental This API is experimental and might change in the future.\n */\nclass BrowserMetricsAggregator  {\n  // TODO(@anonrig): Use FinalizationRegistry to have a proper way of flushing the buckets\n  // when the aggregator is garbage collected.\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\n\n   constructor(  _client) {this._client = _client;\n    this._buckets = new Map();\n    this._interval = setInterval(() => this.flush(), _constants_js__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_BROWSER_FLUSH_INTERVAL);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(\n    metricType,\n    unsanitizedName,\n    value,\n    unsanitizedUnit = 'none',\n    unsanitizedTags = {},\n    maybeFloatTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)(),\n  ) {\n    const timestamp = Math.floor(maybeFloatTimestamp);\n    const name = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeMetricKey)(unsanitizedName);\n    const tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeTags)(unsanitizedTags);\n    const unit = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeUnit)(unsanitizedUnit );\n\n    const bucketKey = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getBucketKey)(metricType, name, unit, tags);\n\n    let bucketItem = this._buckets.get(bucketKey);\n    // If this is a set metric, we need to calculate the delta from the previous weight.\n    const previousWeight = bucketItem && metricType === _constants_js__WEBPACK_IMPORTED_MODULE_0__.SET_METRIC_TYPE ? bucketItem.metric.weight : 0;\n\n    if (bucketItem) {\n      bucketItem.metric.add(value);\n      // TODO(abhi): Do we need this check?\n      if (bucketItem.timestamp < timestamp) {\n        bucketItem.timestamp = timestamp;\n      }\n    } else {\n      bucketItem = {\n        // @ts-expect-error we don't need to narrow down the type of value here, saves bundle size.\n        metric: new _instance_js__WEBPACK_IMPORTED_MODULE_3__.METRIC_MAP[metricType](value),\n        timestamp,\n        metricType,\n        name,\n        unit,\n        tags,\n      };\n      this._buckets.set(bucketKey, bucketItem);\n    }\n\n    // If value is a string, it's a set metric so calculate the delta from the previous weight.\n    const val = typeof value === 'string' ? bucketItem.metric.weight - previousWeight : value;\n    (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.updateMetricSummaryOnActiveSpan)(metricType, name, val, unit, unsanitizedTags, bucketKey);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush() {\n    // short circuit if buckets are empty.\n    if (this._buckets.size === 0) {\n      return;\n    }\n\n    const metricBuckets = Array.from(this._buckets.values());\n    (0,_envelope_js__WEBPACK_IMPORTED_MODULE_5__.captureAggregateMetrics)(this._client, metricBuckets);\n\n    this._buckets.clear();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close() {\n    clearInterval(this._interval);\n    this.flush();\n  }\n}\n\n\n//# sourceMappingURL=browser-aggregator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2Jyb3dzZXItYWdncmVnYXRvci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW1EO0FBQ3FCO0FBQ1M7QUFDekI7QUFDYjtBQUM4Qzs7QUFFekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMkJBQTJCO0FBQzNCO0FBQ0EscURBQXFELHlFQUE4QjtBQUNuRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCLDBCQUEwQixpRUFBa0I7QUFDNUM7QUFDQTtBQUNBLGlCQUFpQiw0REFBaUI7QUFDbEMsaUJBQWlCLHVEQUFZO0FBQzdCLGlCQUFpQix1REFBWTs7QUFFN0Isc0JBQXNCLHVEQUFZOztBQUVsQztBQUNBO0FBQ0Esd0RBQXdELDBEQUFlOztBQUV2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLG9CQUFvQixvREFBVTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLG9GQUErQjtBQUNuQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxxRUFBdUI7O0FBRTNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vbWV0cmljcy9icm93c2VyLWFnZ3JlZ2F0b3IuanM/ZTc0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0aW1lc3RhbXBJblNlY29uZHMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IHVwZGF0ZU1ldHJpY1N1bW1hcnlPbkFjdGl2ZVNwYW4gfSBmcm9tICcuLi91dGlscy9zcGFuVXRpbHMuanMnO1xuaW1wb3J0IHsgREVGQVVMVF9CUk9XU0VSX0ZMVVNIX0lOVEVSVkFMLCBTRVRfTUVUUklDX1RZUEUgfSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBjYXB0dXJlQWdncmVnYXRlTWV0cmljcyB9IGZyb20gJy4vZW52ZWxvcGUuanMnO1xuaW1wb3J0IHsgTUVUUklDX01BUCB9IGZyb20gJy4vaW5zdGFuY2UuanMnO1xuaW1wb3J0IHsgc2FuaXRpemVNZXRyaWNLZXksIHNhbml0aXplVGFncywgc2FuaXRpemVVbml0LCBnZXRCdWNrZXRLZXkgfSBmcm9tICcuL3V0aWxzLmpzJztcblxuLyoqXG4gKiBBIHNpbXBsZSBtZXRyaWNzIGFnZ3JlZ2F0b3IgdGhhdCBhZ2dyZWdhdGVzIG1ldHJpY3MgaW4gbWVtb3J5IGFuZCBmbHVzaGVzIHRoZW0gcGVyaW9kaWNhbGx5LlxuICogRGVmYXVsdCBmbHVzaCBpbnRlcnZhbCBpcyA1IHNlY29uZHMuXG4gKlxuICogQGV4cGVyaW1lbnRhbCBUaGlzIEFQSSBpcyBleHBlcmltZW50YWwgYW5kIG1pZ2h0IGNoYW5nZSBpbiB0aGUgZnV0dXJlLlxuICovXG5jbGFzcyBCcm93c2VyTWV0cmljc0FnZ3JlZ2F0b3IgIHtcbiAgLy8gVE9ETyhAYW5vbnJpZyk6IFVzZSBGaW5hbGl6YXRpb25SZWdpc3RyeSB0byBoYXZlIGEgcHJvcGVyIHdheSBvZiBmbHVzaGluZyB0aGUgYnVja2V0c1xuICAvLyB3aGVuIHRoZSBhZ2dyZWdhdG9yIGlzIGdhcmJhZ2UgY29sbGVjdGVkLlxuICAvLyBSZWY6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0ZpbmFsaXphdGlvblJlZ2lzdHJ5XG5cbiAgIGNvbnN0cnVjdG9yKCAgX2NsaWVudCkge3RoaXMuX2NsaWVudCA9IF9jbGllbnQ7XG4gICAgdGhpcy5fYnVja2V0cyA9IG5ldyBNYXAoKTtcbiAgICB0aGlzLl9pbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHRoaXMuZmx1c2goKSwgREVGQVVMVF9CUk9XU0VSX0ZMVVNIX0lOVEVSVkFMKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGFkZChcbiAgICBtZXRyaWNUeXBlLFxuICAgIHVuc2FuaXRpemVkTmFtZSxcbiAgICB2YWx1ZSxcbiAgICB1bnNhbml0aXplZFVuaXQgPSAnbm9uZScsXG4gICAgdW5zYW5pdGl6ZWRUYWdzID0ge30sXG4gICAgbWF5YmVGbG9hdFRpbWVzdGFtcCA9IHRpbWVzdGFtcEluU2Vjb25kcygpLFxuICApIHtcbiAgICBjb25zdCB0aW1lc3RhbXAgPSBNYXRoLmZsb29yKG1heWJlRmxvYXRUaW1lc3RhbXApO1xuICAgIGNvbnN0IG5hbWUgPSBzYW5pdGl6ZU1ldHJpY0tleSh1bnNhbml0aXplZE5hbWUpO1xuICAgIGNvbnN0IHRhZ3MgPSBzYW5pdGl6ZVRhZ3ModW5zYW5pdGl6ZWRUYWdzKTtcbiAgICBjb25zdCB1bml0ID0gc2FuaXRpemVVbml0KHVuc2FuaXRpemVkVW5pdCApO1xuXG4gICAgY29uc3QgYnVja2V0S2V5ID0gZ2V0QnVja2V0S2V5KG1ldHJpY1R5cGUsIG5hbWUsIHVuaXQsIHRhZ3MpO1xuXG4gICAgbGV0IGJ1Y2tldEl0ZW0gPSB0aGlzLl9idWNrZXRzLmdldChidWNrZXRLZXkpO1xuICAgIC8vIElmIHRoaXMgaXMgYSBzZXQgbWV0cmljLCB3ZSBuZWVkIHRvIGNhbGN1bGF0ZSB0aGUgZGVsdGEgZnJvbSB0aGUgcHJldmlvdXMgd2VpZ2h0LlxuICAgIGNvbnN0IHByZXZpb3VzV2VpZ2h0ID0gYnVja2V0SXRlbSAmJiBtZXRyaWNUeXBlID09PSBTRVRfTUVUUklDX1RZUEUgPyBidWNrZXRJdGVtLm1ldHJpYy53ZWlnaHQgOiAwO1xuXG4gICAgaWYgKGJ1Y2tldEl0ZW0pIHtcbiAgICAgIGJ1Y2tldEl0ZW0ubWV0cmljLmFkZCh2YWx1ZSk7XG4gICAgICAvLyBUT0RPKGFiaGkpOiBEbyB3ZSBuZWVkIHRoaXMgY2hlY2s/XG4gICAgICBpZiAoYnVja2V0SXRlbS50aW1lc3RhbXAgPCB0aW1lc3RhbXApIHtcbiAgICAgICAgYnVja2V0SXRlbS50aW1lc3RhbXAgPSB0aW1lc3RhbXA7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1Y2tldEl0ZW0gPSB7XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3Igd2UgZG9uJ3QgbmVlZCB0byBuYXJyb3cgZG93biB0aGUgdHlwZSBvZiB2YWx1ZSBoZXJlLCBzYXZlcyBidW5kbGUgc2l6ZS5cbiAgICAgICAgbWV0cmljOiBuZXcgTUVUUklDX01BUFttZXRyaWNUeXBlXSh2YWx1ZSksXG4gICAgICAgIHRpbWVzdGFtcCxcbiAgICAgICAgbWV0cmljVHlwZSxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdW5pdCxcbiAgICAgICAgdGFncyxcbiAgICAgIH07XG4gICAgICB0aGlzLl9idWNrZXRzLnNldChidWNrZXRLZXksIGJ1Y2tldEl0ZW0pO1xuICAgIH1cblxuICAgIC8vIElmIHZhbHVlIGlzIGEgc3RyaW5nLCBpdCdzIGEgc2V0IG1ldHJpYyBzbyBjYWxjdWxhdGUgdGhlIGRlbHRhIGZyb20gdGhlIHByZXZpb3VzIHdlaWdodC5cbiAgICBjb25zdCB2YWwgPSB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnID8gYnVja2V0SXRlbS5tZXRyaWMud2VpZ2h0IC0gcHJldmlvdXNXZWlnaHQgOiB2YWx1ZTtcbiAgICB1cGRhdGVNZXRyaWNTdW1tYXJ5T25BY3RpdmVTcGFuKG1ldHJpY1R5cGUsIG5hbWUsIHZhbCwgdW5pdCwgdW5zYW5pdGl6ZWRUYWdzLCBidWNrZXRLZXkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgZmx1c2goKSB7XG4gICAgLy8gc2hvcnQgY2lyY3VpdCBpZiBidWNrZXRzIGFyZSBlbXB0eS5cbiAgICBpZiAodGhpcy5fYnVja2V0cy5zaXplID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgbWV0cmljQnVja2V0cyA9IEFycmF5LmZyb20odGhpcy5fYnVja2V0cy52YWx1ZXMoKSk7XG4gICAgY2FwdHVyZUFnZ3JlZ2F0ZU1ldHJpY3ModGhpcy5fY2xpZW50LCBtZXRyaWNCdWNrZXRzKTtcblxuICAgIHRoaXMuX2J1Y2tldHMuY2xlYXIoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGNsb3NlKCkge1xuICAgIGNsZWFySW50ZXJ2YWwodGhpcy5faW50ZXJ2YWwpO1xuICAgIHRoaXMuZmx1c2goKTtcbiAgfVxufVxuXG5leHBvcnQgeyBCcm93c2VyTWV0cmljc0FnZ3JlZ2F0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJyb3dzZXItYWdncmVnYXRvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metrics/browser-aggregator.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/constants.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"COUNTER_METRIC_TYPE\": function() { return /* binding */ COUNTER_METRIC_TYPE; },\n/* harmony export */   \"DEFAULT_BROWSER_FLUSH_INTERVAL\": function() { return /* binding */ DEFAULT_BROWSER_FLUSH_INTERVAL; },\n/* harmony export */   \"DEFAULT_FLUSH_INTERVAL\": function() { return /* binding */ DEFAULT_FLUSH_INTERVAL; },\n/* harmony export */   \"DISTRIBUTION_METRIC_TYPE\": function() { return /* binding */ DISTRIBUTION_METRIC_TYPE; },\n/* harmony export */   \"GAUGE_METRIC_TYPE\": function() { return /* binding */ GAUGE_METRIC_TYPE; },\n/* harmony export */   \"MAX_WEIGHT\": function() { return /* binding */ MAX_WEIGHT; },\n/* harmony export */   \"SET_METRIC_TYPE\": function() { return /* binding */ SET_METRIC_TYPE; }\n/* harmony export */ });\nconst COUNTER_METRIC_TYPE = 'c' ;\nconst GAUGE_METRIC_TYPE = 'g' ;\nconst SET_METRIC_TYPE = 's' ;\nconst DISTRIBUTION_METRIC_TYPE = 'd' ;\n\n/**\n * This does not match spec in https://develop.sentry.dev/sdk/metrics\n * but was chosen to optimize for the most common case in browser environments.\n */\nconst DEFAULT_BROWSER_FLUSH_INTERVAL = 5000;\n\n/**\n * SDKs are required to bucket into 10 second intervals (rollup in seconds)\n * which is the current lower bound of metric accuracy.\n */\nconst DEFAULT_FLUSH_INTERVAL = 10000;\n\n/**\n * The maximum number of metrics that should be stored in memory.\n */\nconst MAX_WEIGHT = 10000;\n\n\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2NvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVpSztBQUNqSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2NvbnN0YW50cy5qcz80YzViIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENPVU5URVJfTUVUUklDX1RZUEUgPSAnYycgO1xuY29uc3QgR0FVR0VfTUVUUklDX1RZUEUgPSAnZycgO1xuY29uc3QgU0VUX01FVFJJQ19UWVBFID0gJ3MnIDtcbmNvbnN0IERJU1RSSUJVVElPTl9NRVRSSUNfVFlQRSA9ICdkJyA7XG5cbi8qKlxuICogVGhpcyBkb2VzIG5vdCBtYXRjaCBzcGVjIGluIGh0dHBzOi8vZGV2ZWxvcC5zZW50cnkuZGV2L3Nkay9tZXRyaWNzXG4gKiBidXQgd2FzIGNob3NlbiB0byBvcHRpbWl6ZSBmb3IgdGhlIG1vc3QgY29tbW9uIGNhc2UgaW4gYnJvd3NlciBlbnZpcm9ubWVudHMuXG4gKi9cbmNvbnN0IERFRkFVTFRfQlJPV1NFUl9GTFVTSF9JTlRFUlZBTCA9IDUwMDA7XG5cbi8qKlxuICogU0RLcyBhcmUgcmVxdWlyZWQgdG8gYnVja2V0IGludG8gMTAgc2Vjb25kIGludGVydmFscyAocm9sbHVwIGluIHNlY29uZHMpXG4gKiB3aGljaCBpcyB0aGUgY3VycmVudCBsb3dlciBib3VuZCBvZiBtZXRyaWMgYWNjdXJhY3kuXG4gKi9cbmNvbnN0IERFRkFVTFRfRkxVU0hfSU5URVJWQUwgPSAxMDAwMDtcblxuLyoqXG4gKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgbWV0cmljcyB0aGF0IHNob3VsZCBiZSBzdG9yZWQgaW4gbWVtb3J5LlxuICovXG5jb25zdCBNQVhfV0VJR0hUID0gMTAwMDA7XG5cbmV4cG9ydCB7IENPVU5URVJfTUVUUklDX1RZUEUsIERFRkFVTFRfQlJPV1NFUl9GTFVTSF9JTlRFUlZBTCwgREVGQVVMVF9GTFVTSF9JTlRFUlZBTCwgRElTVFJJQlVUSU9OX01FVFJJQ19UWVBFLCBHQVVHRV9NRVRSSUNfVFlQRSwgTUFYX1dFSUdIVCwgU0VUX01FVFJJQ19UWVBFIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metrics/constants.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/envelope.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/envelope.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"captureAggregateMetrics\": function() { return /* binding */ captureAggregateMetrics; },\n/* harmony export */   \"createMetricEnvelope\": function() { return /* binding */ createMetricEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/core/esm/metrics/utils.js\");\n\n\n\n/**\n * Captures aggregated metrics to the supplied client.\n */\nfunction captureAggregateMetrics(client, metricBucketItems) {\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n  const dsn = client.getDsn();\n  const metadata = client.getSdkMetadata();\n  const tunnel = client.getOptions().tunnel;\n\n  const metricsEnvelope = createMetricEnvelope(metricBucketItems, dsn, metadata, tunnel);\n\n  // sendEnvelope should not throw\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  client.sendEnvelope(metricsEnvelope);\n}\n\n/**\n * Create envelope from a metric aggregate.\n */\nfunction createMetricEnvelope(\n  metricBucketItems,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const headers = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems) {\n  const payload = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializeMetricBuckets)(metricBucketItems);\n  const metricHeaders = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2VudmVsb3BlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0U7QUFDaEI7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxxREFBVSxvREFBb0QseUJBQXlCO0FBQ3pGO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLDBEQUFXO0FBQzdCOztBQUVBO0FBQ0EsU0FBUyw2REFBYztBQUN2Qjs7QUFFQTtBQUNBLGtCQUFrQixpRUFBc0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5RDtBQUN6RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2VudmVsb3BlLmpzPzE5ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nZ2VyLCBkc25Ub1N0cmluZywgY3JlYXRlRW52ZWxvcGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IHNlcmlhbGl6ZU1ldHJpY0J1Y2tldHMgfSBmcm9tICcuL3V0aWxzLmpzJztcblxuLyoqXG4gKiBDYXB0dXJlcyBhZ2dyZWdhdGVkIG1ldHJpY3MgdG8gdGhlIHN1cHBsaWVkIGNsaWVudC5cbiAqL1xuZnVuY3Rpb24gY2FwdHVyZUFnZ3JlZ2F0ZU1ldHJpY3MoY2xpZW50LCBtZXRyaWNCdWNrZXRJdGVtcykge1xuICBsb2dnZXIubG9nKGBGbHVzaGluZyBhZ2dyZWdhdGVkIG1ldHJpY3MsIG51bWJlciBvZiBtZXRyaWNzOiAke21ldHJpY0J1Y2tldEl0ZW1zLmxlbmd0aH1gKTtcbiAgY29uc3QgZHNuID0gY2xpZW50LmdldERzbigpO1xuICBjb25zdCBtZXRhZGF0YSA9IGNsaWVudC5nZXRTZGtNZXRhZGF0YSgpO1xuICBjb25zdCB0dW5uZWwgPSBjbGllbnQuZ2V0T3B0aW9ucygpLnR1bm5lbDtcblxuICBjb25zdCBtZXRyaWNzRW52ZWxvcGUgPSBjcmVhdGVNZXRyaWNFbnZlbG9wZShtZXRyaWNCdWNrZXRJdGVtcywgZHNuLCBtZXRhZGF0YSwgdHVubmVsKTtcblxuICAvLyBzZW5kRW52ZWxvcGUgc2hvdWxkIG5vdCB0aHJvd1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXG4gIGNsaWVudC5zZW5kRW52ZWxvcGUobWV0cmljc0VudmVsb3BlKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgZW52ZWxvcGUgZnJvbSBhIG1ldHJpYyBhZ2dyZWdhdGUuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZU1ldHJpY0VudmVsb3BlKFxuICBtZXRyaWNCdWNrZXRJdGVtcyxcbiAgZHNuLFxuICBtZXRhZGF0YSxcbiAgdHVubmVsLFxuKSB7XG4gIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgc2VudF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICB9O1xuXG4gIGlmIChtZXRhZGF0YSAmJiBtZXRhZGF0YS5zZGspIHtcbiAgICBoZWFkZXJzLnNkayA9IHtcbiAgICAgIG5hbWU6IG1ldGFkYXRhLnNkay5uYW1lLFxuICAgICAgdmVyc2lvbjogbWV0YWRhdGEuc2RrLnZlcnNpb24sXG4gICAgfTtcbiAgfVxuXG4gIGlmICghIXR1bm5lbCAmJiBkc24pIHtcbiAgICBoZWFkZXJzLmRzbiA9IGRzblRvU3RyaW5nKGRzbik7XG4gIH1cblxuICBjb25zdCBpdGVtID0gY3JlYXRlTWV0cmljRW52ZWxvcGVJdGVtKG1ldHJpY0J1Y2tldEl0ZW1zKTtcbiAgcmV0dXJuIGNyZWF0ZUVudmVsb3BlKGhlYWRlcnMsIFtpdGVtXSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU1ldHJpY0VudmVsb3BlSXRlbShtZXRyaWNCdWNrZXRJdGVtcykge1xuICBjb25zdCBwYXlsb2FkID0gc2VyaWFsaXplTWV0cmljQnVja2V0cyhtZXRyaWNCdWNrZXRJdGVtcyk7XG4gIGNvbnN0IG1ldHJpY0hlYWRlcnMgPSB7XG4gICAgdHlwZTogJ3N0YXRzZCcsXG4gICAgbGVuZ3RoOiBwYXlsb2FkLmxlbmd0aCxcbiAgfTtcbiAgcmV0dXJuIFttZXRyaWNIZWFkZXJzLCBwYXlsb2FkXTtcbn1cblxuZXhwb3J0IHsgY2FwdHVyZUFnZ3JlZ2F0ZU1ldHJpY3MsIGNyZWF0ZU1ldHJpY0VudmVsb3BlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnZlbG9wZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metrics/envelope.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/exports-default.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/exports-default.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"metricsDefault\": function() { return /* binding */ metricsDefault; }\n/* harmony export */ });\n/* harmony import */ var _aggregator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aggregator.js */ \"./node_modules/@sentry/core/esm/metrics/aggregator.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exports.js */ \"./node_modules/@sentry/core/esm/metrics/exports.js\");\n\n\n\n/**\n * Adds a value to a counter metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction increment(name, value = 1, data) {\n  _exports_js__WEBPACK_IMPORTED_MODULE_0__.metrics.increment(_aggregator_js__WEBPACK_IMPORTED_MODULE_1__.MetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction distribution(name, value, data) {\n  _exports_js__WEBPACK_IMPORTED_MODULE_0__.metrics.distribution(_aggregator_js__WEBPACK_IMPORTED_MODULE_1__.MetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction set(name, value, data) {\n  _exports_js__WEBPACK_IMPORTED_MODULE_0__.metrics.set(_aggregator_js__WEBPACK_IMPORTED_MODULE_1__.MetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction gauge(name, value, data) {\n  _exports_js__WEBPACK_IMPORTED_MODULE_0__.metrics.gauge(_aggregator_js__WEBPACK_IMPORTED_MODULE_1__.MetricsAggregator, name, value, data);\n}\n\n/**\n * Adds a timing metric.\n * The metric is added as a distribution metric.\n *\n * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\n\nfunction timing(\n  name,\n  value,\n  unit = 'second',\n  data,\n) {\n  return _exports_js__WEBPACK_IMPORTED_MODULE_0__.metrics.timing(_aggregator_js__WEBPACK_IMPORTED_MODULE_1__.MetricsAggregator, name, value, unit, data);\n}\n\n/**\n * Returns the metrics aggregator for a given client.\n */\nfunction getMetricsAggregatorForClient(client) {\n  return _exports_js__WEBPACK_IMPORTED_MODULE_0__.metrics.getMetricsAggregatorForClient(client, _aggregator_js__WEBPACK_IMPORTED_MODULE_1__.MetricsAggregator);\n}\n\nconst metricsDefault\n\n = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  timing,\n  /**\n   * @ignore This is for internal use only.\n   */\n  getMetricsAggregatorForClient,\n};\n\n\n//# sourceMappingURL=exports-default.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2V4cG9ydHMtZGVmYXVsdC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0Q7QUFDYjs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwwREFBaUIsQ0FBQyw2REFBaUI7QUFDckM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSw2REFBb0IsQ0FBQyw2REFBaUI7QUFDeEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxvREFBVyxDQUFDLDZEQUFpQjtBQUMvQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHNEQUFhLENBQUMsNkRBQWlCO0FBQ2pDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHVEQUFjLENBQUMsNkRBQWlCO0FBQ3pDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw4RUFBcUMsU0FBUyw2REFBaUI7QUFDeEU7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vbWV0cmljcy9leHBvcnRzLWRlZmF1bHQuanM/NjFlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZXRyaWNzQWdncmVnYXRvciB9IGZyb20gJy4vYWdncmVnYXRvci5qcyc7XG5pbXBvcnQgeyBtZXRyaWNzIH0gZnJvbSAnLi9leHBvcnRzLmpzJztcblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYSBjb3VudGVyIG1ldHJpY1xuICpcbiAqIEBleHBlcmltZW50YWwgVGhpcyBBUEkgaXMgZXhwZXJpbWVudGFsIGFuZCBtaWdodCBoYXZlIGJyZWFraW5nIGNoYW5nZXMgaW4gdGhlIGZ1dHVyZS5cbiAqL1xuZnVuY3Rpb24gaW5jcmVtZW50KG5hbWUsIHZhbHVlID0gMSwgZGF0YSkge1xuICBtZXRyaWNzLmluY3JlbWVudChNZXRyaWNzQWdncmVnYXRvciwgbmFtZSwgdmFsdWUsIGRhdGEpO1xufVxuXG4vKipcbiAqIEFkZHMgYSB2YWx1ZSB0byBhIGRpc3RyaWJ1dGlvbiBtZXRyaWNcbiAqXG4gKiBAZXhwZXJpbWVudGFsIFRoaXMgQVBJIGlzIGV4cGVyaW1lbnRhbCBhbmQgbWlnaHQgaGF2ZSBicmVha2luZyBjaGFuZ2VzIGluIHRoZSBmdXR1cmUuXG4gKi9cbmZ1bmN0aW9uIGRpc3RyaWJ1dGlvbihuYW1lLCB2YWx1ZSwgZGF0YSkge1xuICBtZXRyaWNzLmRpc3RyaWJ1dGlvbihNZXRyaWNzQWdncmVnYXRvciwgbmFtZSwgdmFsdWUsIGRhdGEpO1xufVxuXG4vKipcbiAqIEFkZHMgYSB2YWx1ZSB0byBhIHNldCBtZXRyaWMuIFZhbHVlIG11c3QgYmUgYSBzdHJpbmcgb3IgaW50ZWdlci5cbiAqXG4gKiBAZXhwZXJpbWVudGFsIFRoaXMgQVBJIGlzIGV4cGVyaW1lbnRhbCBhbmQgbWlnaHQgaGF2ZSBicmVha2luZyBjaGFuZ2VzIGluIHRoZSBmdXR1cmUuXG4gKi9cbmZ1bmN0aW9uIHNldChuYW1lLCB2YWx1ZSwgZGF0YSkge1xuICBtZXRyaWNzLnNldChNZXRyaWNzQWdncmVnYXRvciwgbmFtZSwgdmFsdWUsIGRhdGEpO1xufVxuXG4vKipcbiAqIEFkZHMgYSB2YWx1ZSB0byBhIGdhdWdlIG1ldHJpY1xuICpcbiAqIEBleHBlcmltZW50YWwgVGhpcyBBUEkgaXMgZXhwZXJpbWVudGFsIGFuZCBtaWdodCBoYXZlIGJyZWFraW5nIGNoYW5nZXMgaW4gdGhlIGZ1dHVyZS5cbiAqL1xuZnVuY3Rpb24gZ2F1Z2UobmFtZSwgdmFsdWUsIGRhdGEpIHtcbiAgbWV0cmljcy5nYXVnZShNZXRyaWNzQWdncmVnYXRvciwgbmFtZSwgdmFsdWUsIGRhdGEpO1xufVxuXG4vKipcbiAqIEFkZHMgYSB0aW1pbmcgbWV0cmljLlxuICogVGhlIG1ldHJpYyBpcyBhZGRlZCBhcyBhIGRpc3RyaWJ1dGlvbiBtZXRyaWMuXG4gKlxuICogWW91IGNhbiBlaXRoZXIgZGlyZWN0bHkgY2FwdHVyZSBhIG51bWVyaWMgYHZhbHVlYCwgb3Igd3JhcCBhIGNhbGxiYWNrIGZ1bmN0aW9uIGluIGB0aW1pbmdgLlxuICogSW4gdGhlIGxhdHRlciBjYXNlLCB0aGUgZHVyYXRpb24gb2YgdGhlIGNhbGxiYWNrIGV4ZWN1dGlvbiB3aWxsIGJlIGNhcHR1cmVkIGFzIGEgc3BhbiAmIGEgbWV0cmljLlxuICpcbiAqIEBleHBlcmltZW50YWwgVGhpcyBBUEkgaXMgZXhwZXJpbWVudGFsIGFuZCBtaWdodCBoYXZlIGJyZWFraW5nIGNoYW5nZXMgaW4gdGhlIGZ1dHVyZS5cbiAqL1xuXG5mdW5jdGlvbiB0aW1pbmcoXG4gIG5hbWUsXG4gIHZhbHVlLFxuICB1bml0ID0gJ3NlY29uZCcsXG4gIGRhdGEsXG4pIHtcbiAgcmV0dXJuIG1ldHJpY3MudGltaW5nKE1ldHJpY3NBZ2dyZWdhdG9yLCBuYW1lLCB2YWx1ZSwgdW5pdCwgZGF0YSk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgbWV0cmljcyBhZ2dyZWdhdG9yIGZvciBhIGdpdmVuIGNsaWVudC5cbiAqL1xuZnVuY3Rpb24gZ2V0TWV0cmljc0FnZ3JlZ2F0b3JGb3JDbGllbnQoY2xpZW50KSB7XG4gIHJldHVybiBtZXRyaWNzLmdldE1ldHJpY3NBZ2dyZWdhdG9yRm9yQ2xpZW50KGNsaWVudCwgTWV0cmljc0FnZ3JlZ2F0b3IpO1xufVxuXG5jb25zdCBtZXRyaWNzRGVmYXVsdFxuXG4gPSB7XG4gIGluY3JlbWVudCxcbiAgZGlzdHJpYnV0aW9uLFxuICBzZXQsXG4gIGdhdWdlLFxuICB0aW1pbmcsXG4gIC8qKlxuICAgKiBAaWdub3JlIFRoaXMgaXMgZm9yIGludGVybmFsIHVzZSBvbmx5LlxuICAgKi9cbiAgZ2V0TWV0cmljc0FnZ3JlZ2F0b3JGb3JDbGllbnQsXG59O1xuXG5leHBvcnQgeyBtZXRyaWNzRGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXhwb3J0cy1kZWZhdWx0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metrics/exports-default.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/exports.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/exports.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"metrics\": function() { return /* binding */ metrics; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _tracing_trace_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tracing/trace.js */ \"./node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/handleCallbackErrors.js */ \"./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/metrics/constants.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Gets the metrics aggregator for a given client.\n * @param client The client for which to get the metrics aggregator.\n * @param Aggregator Optional metrics aggregator class to use to create an aggregator if one does not exist.\n */\nfunction getMetricsAggregatorForClient(\n  client,\n  Aggregator,\n) {\n  const globalMetricsAggregators = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)(\n    'globalMetricsAggregators',\n    () => new WeakMap(),\n  );\n\n  const aggregator = globalMetricsAggregators.get(client);\n  if (aggregator) {\n    return aggregator;\n  }\n\n  const newAggregator = new Aggregator(client);\n  client.on('flush', () => newAggregator.flush());\n  client.on('close', () => newAggregator.close());\n  globalMetricsAggregators.set(client, newAggregator);\n\n  return newAggregator;\n}\n\nfunction addToMetricsAggregator(\n  Aggregator,\n  metricType,\n  name,\n  value,\n  data = {},\n) {\n  const client = data.client || (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n\n  if (!client) {\n    return;\n  }\n\n  const span = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.getActiveSpan)();\n  const rootSpan = span ? (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(span) : undefined;\n  const transactionName = rootSpan && (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.spanToJSON)(rootSpan).description;\n\n  const { unit, tags, timestamp } = data;\n  const { release, environment } = client.getOptions();\n  const metricTags = {};\n  if (release) {\n    metricTags.release = release;\n  }\n  if (environment) {\n    metricTags.environment = environment;\n  }\n  if (transactionName) {\n    metricTags.transaction = transactionName;\n  }\n\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Adding value of ${value} to ${metricType} metric ${name}`);\n\n  const aggregator = getMetricsAggregatorForClient(client, Aggregator);\n  aggregator.add(metricType, name, value, unit, { ...metricTags, ...tags }, timestamp);\n}\n\n/**\n * Adds a value to a counter metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction increment(aggregator, name, value = 1, data) {\n  addToMetricsAggregator(aggregator, _constants_js__WEBPACK_IMPORTED_MODULE_4__.COUNTER_METRIC_TYPE, name, ensureNumber(value), data);\n}\n\n/**\n * Adds a value to a distribution metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction distribution(aggregator, name, value, data) {\n  addToMetricsAggregator(aggregator, _constants_js__WEBPACK_IMPORTED_MODULE_4__.DISTRIBUTION_METRIC_TYPE, name, ensureNumber(value), data);\n}\n\n/**\n * Adds a timing metric.\n * The metric is added as a distribution metric.\n *\n * You can either directly capture a numeric `value`, or wrap a callback function in `timing`.\n * In the latter case, the duration of the callback execution will be captured as a span & a metric.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction timing(\n  aggregator,\n  name,\n  value,\n  unit = 'second',\n  data,\n) {\n  // callback form\n  if (typeof value === 'function') {\n    const startTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n    return (0,_tracing_trace_js__WEBPACK_IMPORTED_MODULE_5__.startSpanManual)(\n      {\n        op: 'metrics.timing',\n        name,\n        startTime,\n        onlyIfParent: true,\n      },\n      span => {\n        return (0,_utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_6__.handleCallbackErrors)(\n          () => value(),\n          () => {\n            // no special error handling necessary\n          },\n          () => {\n            const endTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n            const timeDiff = endTime - startTime;\n            distribution(aggregator, name, timeDiff, { ...data, unit: 'second' });\n            span.end(endTime);\n          },\n        );\n      },\n    );\n  }\n\n  // value form\n  distribution(aggregator, name, value, { ...data, unit });\n}\n\n/**\n * Adds a value to a set metric. Value must be a string or integer.\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction set(aggregator, name, value, data) {\n  addToMetricsAggregator(aggregator, _constants_js__WEBPACK_IMPORTED_MODULE_4__.SET_METRIC_TYPE, name, value, data);\n}\n\n/**\n * Adds a value to a gauge metric\n *\n * @experimental This API is experimental and might have breaking changes in the future.\n */\nfunction gauge(aggregator, name, value, data) {\n  addToMetricsAggregator(aggregator, _constants_js__WEBPACK_IMPORTED_MODULE_4__.GAUGE_METRIC_TYPE, name, ensureNumber(value), data);\n}\n\nconst metrics = {\n  increment,\n  distribution,\n  set,\n  gauge,\n  timing,\n  /**\n   * @ignore This is for internal use only.\n   */\n  getMetricsAggregatorForClient,\n};\n\n// Although this is typed to be a number, we try to handle strings as well here\nfunction ensureNumber(number) {\n  return typeof number === 'string' ? parseInt(number) : number;\n}\n\n\n//# sourceMappingURL=exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metrics/exports.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/instance.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/instance.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CounterMetric\": function() { return /* binding */ CounterMetric; },\n/* harmony export */   \"DistributionMetric\": function() { return /* binding */ DistributionMetric; },\n/* harmony export */   \"GaugeMetric\": function() { return /* binding */ GaugeMetric; },\n/* harmony export */   \"METRIC_MAP\": function() { return /* binding */ METRIC_MAP; },\n/* harmony export */   \"SetMetric\": function() { return /* binding */ SetMetric; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/metrics/constants.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/core/esm/metrics/utils.js\");\n\n\n\n/**\n * A metric instance representing a counter.\n */\nclass CounterMetric  {\n   constructor( _value) {this._value = _value;}\n\n  /** @inheritDoc */\n   get weight() {\n    return 1;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value += value;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._value}`;\n  }\n}\n\n/**\n * A metric instance representing a gauge.\n */\nclass GaugeMetric  {\n\n   constructor(value) {\n    this._last = value;\n    this._min = value;\n    this._max = value;\n    this._sum = value;\n    this._count = 1;\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return 5;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._last = value;\n    if (value < this._min) {\n      this._min = value;\n    }\n    if (value > this._max) {\n      this._max = value;\n    }\n    this._sum += value;\n    this._count++;\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;\n  }\n}\n\n/**\n * A metric instance representing a distribution.\n */\nclass DistributionMetric  {\n\n   constructor(first) {\n    this._value = [first];\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.length;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.push(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return this._value.join(':');\n  }\n}\n\n/**\n * A metric instance representing a set.\n */\nclass SetMetric  {\n\n   constructor( first) {this.first = first;\n    this._value = new Set([first]);\n  }\n\n  /** @inheritDoc */\n   get weight() {\n    return this._value.size;\n  }\n\n  /** @inheritdoc */\n   add(value) {\n    this._value.add(value);\n  }\n\n  /** @inheritdoc */\n   toString() {\n    return Array.from(this._value)\n      .map(val => (typeof val === 'string' ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.simpleHash)(val) : val))\n      .join(':');\n  }\n}\n\nconst METRIC_MAP = {\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.COUNTER_METRIC_TYPE]: CounterMetric,\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.GAUGE_METRIC_TYPE]: GaugeMetric,\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.DISTRIBUTION_METRIC_TYPE]: DistributionMetric,\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.SET_METRIC_TYPE]: SetMetric,\n};\n\n\n//# sourceMappingURL=instance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL2luc3RhbmNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUg7QUFDM0U7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxZQUFZO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLFdBQVcsR0FBRyxVQUFVLEdBQUcsVUFBVSxHQUFHLFVBQVUsR0FBRyxZQUFZO0FBQy9FO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHFEQUFVO0FBQ3ZEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUcsOERBQW1CO0FBQ3RCLEdBQUcsNERBQWlCO0FBQ3BCLEdBQUcsbUVBQXdCO0FBQzNCLEdBQUcsMERBQWU7QUFDbEI7O0FBRWlGO0FBQ2pGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL21ldHJpY3MvaW5zdGFuY2UuanM/ZTU3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT1VOVEVSX01FVFJJQ19UWVBFLCBHQVVHRV9NRVRSSUNfVFlQRSwgRElTVFJJQlVUSU9OX01FVFJJQ19UWVBFLCBTRVRfTUVUUklDX1RZUEUgfSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBzaW1wbGVIYXNoIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbi8qKlxuICogQSBtZXRyaWMgaW5zdGFuY2UgcmVwcmVzZW50aW5nIGEgY291bnRlci5cbiAqL1xuY2xhc3MgQ291bnRlck1ldHJpYyAge1xuICAgY29uc3RydWN0b3IoIF92YWx1ZSkge3RoaXMuX3ZhbHVlID0gX3ZhbHVlO31cblxuICAvKiogQGluaGVyaXREb2MgKi9cbiAgIGdldCB3ZWlnaHQoKSB7XG4gICAgcmV0dXJuIDE7XG4gIH1cblxuICAvKiogQGluaGVyaXRkb2MgKi9cbiAgIGFkZCh2YWx1ZSkge1xuICAgIHRoaXMuX3ZhbHVlICs9IHZhbHVlO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gYCR7dGhpcy5fdmFsdWV9YDtcbiAgfVxufVxuXG4vKipcbiAqIEEgbWV0cmljIGluc3RhbmNlIHJlcHJlc2VudGluZyBhIGdhdWdlLlxuICovXG5jbGFzcyBHYXVnZU1ldHJpYyAge1xuXG4gICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgIHRoaXMuX2xhc3QgPSB2YWx1ZTtcbiAgICB0aGlzLl9taW4gPSB2YWx1ZTtcbiAgICB0aGlzLl9tYXggPSB2YWx1ZTtcbiAgICB0aGlzLl9zdW0gPSB2YWx1ZTtcbiAgICB0aGlzLl9jb3VudCA9IDE7XG4gIH1cblxuICAvKiogQGluaGVyaXREb2MgKi9cbiAgIGdldCB3ZWlnaHQoKSB7XG4gICAgcmV0dXJuIDU7XG4gIH1cblxuICAvKiogQGluaGVyaXRkb2MgKi9cbiAgIGFkZCh2YWx1ZSkge1xuICAgIHRoaXMuX2xhc3QgPSB2YWx1ZTtcbiAgICBpZiAodmFsdWUgPCB0aGlzLl9taW4pIHtcbiAgICAgIHRoaXMuX21pbiA9IHZhbHVlO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPiB0aGlzLl9tYXgpIHtcbiAgICAgIHRoaXMuX21heCA9IHZhbHVlO1xuICAgIH1cbiAgICB0aGlzLl9zdW0gKz0gdmFsdWU7XG4gICAgdGhpcy5fY291bnQrKztcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdGRvYyAqL1xuICAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuX2xhc3R9OiR7dGhpcy5fbWlufToke3RoaXMuX21heH06JHt0aGlzLl9zdW19OiR7dGhpcy5fY291bnR9YDtcbiAgfVxufVxuXG4vKipcbiAqIEEgbWV0cmljIGluc3RhbmNlIHJlcHJlc2VudGluZyBhIGRpc3RyaWJ1dGlvbi5cbiAqL1xuY2xhc3MgRGlzdHJpYnV0aW9uTWV0cmljICB7XG5cbiAgIGNvbnN0cnVjdG9yKGZpcnN0KSB7XG4gICAgdGhpcy5fdmFsdWUgPSBbZmlyc3RdO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0RG9jICovXG4gICBnZXQgd2VpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLl92YWx1ZS5sZW5ndGg7XG4gIH1cblxuICAvKiogQGluaGVyaXRkb2MgKi9cbiAgIGFkZCh2YWx1ZSkge1xuICAgIHRoaXMuX3ZhbHVlLnB1c2godmFsdWUpO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWUuam9pbignOicpO1xuICB9XG59XG5cbi8qKlxuICogQSBtZXRyaWMgaW5zdGFuY2UgcmVwcmVzZW50aW5nIGEgc2V0LlxuICovXG5jbGFzcyBTZXRNZXRyaWMgIHtcblxuICAgY29uc3RydWN0b3IoIGZpcnN0KSB7dGhpcy5maXJzdCA9IGZpcnN0O1xuICAgIHRoaXMuX3ZhbHVlID0gbmV3IFNldChbZmlyc3RdKTtcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdERvYyAqL1xuICAgZ2V0IHdlaWdodCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWUuc2l6ZTtcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdGRvYyAqL1xuICAgYWRkKHZhbHVlKSB7XG4gICAgdGhpcy5fdmFsdWUuYWRkKHZhbHVlKTtcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdGRvYyAqL1xuICAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5fdmFsdWUpXG4gICAgICAubWFwKHZhbCA9PiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycgPyBzaW1wbGVIYXNoKHZhbCkgOiB2YWwpKVxuICAgICAgLmpvaW4oJzonKTtcbiAgfVxufVxuXG5jb25zdCBNRVRSSUNfTUFQID0ge1xuICBbQ09VTlRFUl9NRVRSSUNfVFlQRV06IENvdW50ZXJNZXRyaWMsXG4gIFtHQVVHRV9NRVRSSUNfVFlQRV06IEdhdWdlTWV0cmljLFxuICBbRElTVFJJQlVUSU9OX01FVFJJQ19UWVBFXTogRGlzdHJpYnV0aW9uTWV0cmljLFxuICBbU0VUX01FVFJJQ19UWVBFXTogU2V0TWV0cmljLFxufTtcblxuZXhwb3J0IHsgQ291bnRlck1ldHJpYywgRGlzdHJpYnV0aW9uTWV0cmljLCBHYXVnZU1ldHJpYywgTUVUUklDX01BUCwgU2V0TWV0cmljIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0YW5jZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metrics/instance.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/metric-summary.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/metric-summary.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getMetricSummaryJsonForSpan\": function() { return /* binding */ getMetricSummaryJsonForSpan; },\n/* harmony export */   \"updateMetricSummaryOnSpan\": function() { return /* binding */ updateMetricSummaryOnSpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * key: bucketKey\n * value: [exportKey, MetricSummary]\n */\n\nconst METRICS_SPAN_FIELD = '_sentryMetrics';\n\n/**\n * Fetches the metric summary if it exists for the passed span\n */\nfunction getMetricSummaryJsonForSpan(span) {\n  const storage = (span )[METRICS_SPAN_FIELD];\n\n  if (!storage) {\n    return undefined;\n  }\n  const output = {};\n\n  for (const [, [exportKey, summary]] of storage) {\n    if (!output[exportKey]) {\n      output[exportKey] = [];\n    }\n\n    output[exportKey].push((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(summary));\n  }\n\n  return output;\n}\n\n/**\n * Updates the metric summary on a span.\n */\nfunction updateMetricSummaryOnSpan(\n  span,\n  metricType,\n  sanitizedName,\n  value,\n  unit,\n  tags,\n  bucketKey,\n) {\n  const existingStorage = (span )[METRICS_SPAN_FIELD];\n  const storage =\n    existingStorage ||\n    ((span )[METRICS_SPAN_FIELD] = new Map());\n\n  const exportKey = `${metricType}:${sanitizedName}@${unit}`;\n  const bucketItem = storage.get(bucketKey);\n\n  if (bucketItem) {\n    const [, summary] = bucketItem;\n    storage.set(bucketKey, [\n      exportKey,\n      {\n        min: Math.min(summary.min, value),\n        max: Math.max(summary.max, value),\n        count: (summary.count += 1),\n        sum: (summary.sum += value),\n        tags: summary.tags,\n      },\n    ]);\n  } else {\n    storage.set(bucketKey, [\n      exportKey,\n      {\n        min: value,\n        max: value,\n        count: 1,\n        sum: value,\n        tags,\n      },\n    ]);\n  }\n}\n\n\n//# sourceMappingURL=metric-summary.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL21ldHJpYy1zdW1tYXJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRDs7QUFFbEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQkFBMkIsZ0VBQWlCO0FBQzVDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLFdBQVcsR0FBRyxjQUFjLEdBQUcsS0FBSztBQUMzRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFa0U7QUFDbEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vbWV0cmljcy9tZXRyaWMtc3VtbWFyeS5qcz83ZGFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRyb3BVbmRlZmluZWRLZXlzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICoga2V5OiBidWNrZXRLZXlcbiAqIHZhbHVlOiBbZXhwb3J0S2V5LCBNZXRyaWNTdW1tYXJ5XVxuICovXG5cbmNvbnN0IE1FVFJJQ1NfU1BBTl9GSUVMRCA9ICdfc2VudHJ5TWV0cmljcyc7XG5cbi8qKlxuICogRmV0Y2hlcyB0aGUgbWV0cmljIHN1bW1hcnkgaWYgaXQgZXhpc3RzIGZvciB0aGUgcGFzc2VkIHNwYW5cbiAqL1xuZnVuY3Rpb24gZ2V0TWV0cmljU3VtbWFyeUpzb25Gb3JTcGFuKHNwYW4pIHtcbiAgY29uc3Qgc3RvcmFnZSA9IChzcGFuIClbTUVUUklDU19TUEFOX0ZJRUxEXTtcblxuICBpZiAoIXN0b3JhZ2UpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIGNvbnN0IG91dHB1dCA9IHt9O1xuXG4gIGZvciAoY29uc3QgWywgW2V4cG9ydEtleSwgc3VtbWFyeV1dIG9mIHN0b3JhZ2UpIHtcbiAgICBpZiAoIW91dHB1dFtleHBvcnRLZXldKSB7XG4gICAgICBvdXRwdXRbZXhwb3J0S2V5XSA9IFtdO1xuICAgIH1cblxuICAgIG91dHB1dFtleHBvcnRLZXldLnB1c2goZHJvcFVuZGVmaW5lZEtleXMoc3VtbWFyeSkpO1xuICB9XG5cbiAgcmV0dXJuIG91dHB1dDtcbn1cblxuLyoqXG4gKiBVcGRhdGVzIHRoZSBtZXRyaWMgc3VtbWFyeSBvbiBhIHNwYW4uXG4gKi9cbmZ1bmN0aW9uIHVwZGF0ZU1ldHJpY1N1bW1hcnlPblNwYW4oXG4gIHNwYW4sXG4gIG1ldHJpY1R5cGUsXG4gIHNhbml0aXplZE5hbWUsXG4gIHZhbHVlLFxuICB1bml0LFxuICB0YWdzLFxuICBidWNrZXRLZXksXG4pIHtcbiAgY29uc3QgZXhpc3RpbmdTdG9yYWdlID0gKHNwYW4gKVtNRVRSSUNTX1NQQU5fRklFTERdO1xuICBjb25zdCBzdG9yYWdlID1cbiAgICBleGlzdGluZ1N0b3JhZ2UgfHxcbiAgICAoKHNwYW4gKVtNRVRSSUNTX1NQQU5fRklFTERdID0gbmV3IE1hcCgpKTtcblxuICBjb25zdCBleHBvcnRLZXkgPSBgJHttZXRyaWNUeXBlfToke3Nhbml0aXplZE5hbWV9QCR7dW5pdH1gO1xuICBjb25zdCBidWNrZXRJdGVtID0gc3RvcmFnZS5nZXQoYnVja2V0S2V5KTtcblxuICBpZiAoYnVja2V0SXRlbSkge1xuICAgIGNvbnN0IFssIHN1bW1hcnldID0gYnVja2V0SXRlbTtcbiAgICBzdG9yYWdlLnNldChidWNrZXRLZXksIFtcbiAgICAgIGV4cG9ydEtleSxcbiAgICAgIHtcbiAgICAgICAgbWluOiBNYXRoLm1pbihzdW1tYXJ5Lm1pbiwgdmFsdWUpLFxuICAgICAgICBtYXg6IE1hdGgubWF4KHN1bW1hcnkubWF4LCB2YWx1ZSksXG4gICAgICAgIGNvdW50OiAoc3VtbWFyeS5jb3VudCArPSAxKSxcbiAgICAgICAgc3VtOiAoc3VtbWFyeS5zdW0gKz0gdmFsdWUpLFxuICAgICAgICB0YWdzOiBzdW1tYXJ5LnRhZ3MsXG4gICAgICB9LFxuICAgIF0pO1xuICB9IGVsc2Uge1xuICAgIHN0b3JhZ2Uuc2V0KGJ1Y2tldEtleSwgW1xuICAgICAgZXhwb3J0S2V5LFxuICAgICAge1xuICAgICAgICBtaW46IHZhbHVlLFxuICAgICAgICBtYXg6IHZhbHVlLFxuICAgICAgICBjb3VudDogMSxcbiAgICAgICAgc3VtOiB2YWx1ZSxcbiAgICAgICAgdGFncyxcbiAgICAgIH0sXG4gICAgXSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgZ2V0TWV0cmljU3VtbWFyeUpzb25Gb3JTcGFuLCB1cGRhdGVNZXRyaWNTdW1tYXJ5T25TcGFuIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRyaWMtc3VtbWFyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metrics/metric-summary.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/utils.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getBucketKey\": function() { return /* binding */ getBucketKey; },\n/* harmony export */   \"sanitizeMetricKey\": function() { return /* binding */ sanitizeMetricKey; },\n/* harmony export */   \"sanitizeTags\": function() { return /* binding */ sanitizeTags; },\n/* harmony export */   \"sanitizeUnit\": function() { return /* binding */ sanitizeUnit; },\n/* harmony export */   \"serializeMetricBuckets\": function() { return /* binding */ serializeMetricBuckets; },\n/* harmony export */   \"simpleHash\": function() { return /* binding */ simpleHash; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Generate bucket key from metric properties.\n */\nfunction getBucketKey(\n  metricType,\n  name,\n  unit,\n  tags,\n) {\n  const stringifiedTags = Object.entries((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nfunction simpleHash(s) {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nfunction serializeMetricBuckets(metricBucketItems) {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/**\n * Sanitizes units\n *\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nfunction sanitizeUnit(unit) {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/**\n * Sanitizes metric keys\n *\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nfunction sanitizeMetricKey(key) {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\n/**\n * Sanitizes metric keys\n *\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nfunction sanitizeTagKey(key) {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\n/**\n * These Regex's are straight from the normalisation docs:\n * https://develop.sentry.dev/sdk/metrics/#normalization\n */\nconst tagValueReplacements = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input) {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value) {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nfunction sanitizeTags(unsanitizedTags) {\n  const tags = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa0Q7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxnRUFBaUI7QUFDMUQsWUFBWSxXQUFXLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxnQkFBZ0I7QUFDdkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELG9DQUFvQyxJQUFJLEdBQUcsTUFBTSxhQUFhO0FBQ2pILGNBQWMsVUFBVSxHQUFHLFVBQVUsR0FBRyxZQUFZLEdBQUcsZ0JBQWdCLEVBQUUsVUFBVSxJQUFJLGVBQWU7QUFDdEc7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsR0FBRztBQUNoQixhQUFhLEdBQUc7QUFDaEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUyRztBQUMzRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9tZXRyaWNzL3V0aWxzLmpzP2ZjNTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHJvcFVuZGVmaW5lZEtleXMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBHZW5lcmF0ZSBidWNrZXQga2V5IGZyb20gbWV0cmljIHByb3BlcnRpZXMuXG4gKi9cbmZ1bmN0aW9uIGdldEJ1Y2tldEtleShcbiAgbWV0cmljVHlwZSxcbiAgbmFtZSxcbiAgdW5pdCxcbiAgdGFncyxcbikge1xuICBjb25zdCBzdHJpbmdpZmllZFRhZ3MgPSBPYmplY3QuZW50cmllcyhkcm9wVW5kZWZpbmVkS2V5cyh0YWdzKSkuc29ydCgoYSwgYikgPT4gYVswXS5sb2NhbGVDb21wYXJlKGJbMF0pKTtcbiAgcmV0dXJuIGAke21ldHJpY1R5cGV9JHtuYW1lfSR7dW5pdH0ke3N0cmluZ2lmaWVkVGFnc31gO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG4vKipcbiAqIFNpbXBsZSBoYXNoIGZ1bmN0aW9uIGZvciBzdHJpbmdzLlxuICovXG5mdW5jdGlvbiBzaW1wbGVIYXNoKHMpIHtcbiAgbGV0IHJ2ID0gMDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgYyA9IHMuY2hhckNvZGVBdChpKTtcbiAgICBydiA9IChydiA8PCA1KSAtIHJ2ICsgYztcbiAgICBydiAmPSBydjtcbiAgfVxuICByZXR1cm4gcnYgPj4+IDA7XG59XG4vKiBlc2xpbnQtZW5hYmxlIG5vLWJpdHdpc2UgKi9cblxuLyoqXG4gKiBTZXJpYWxpemUgbWV0cmljcyBidWNrZXRzIGludG8gYSBzdHJpbmcgYmFzZWQgb24gc3RhdHNkIGZvcm1hdC5cbiAqXG4gKiBFeGFtcGxlIG9mIGZvcm1hdDpcbiAqIG1ldHJpYy5uYW1lQHNlY29uZDoxOjEuMnxkfCNhOnZhbHVlLGI6YW5vdGhlcnZhbHVlfFQxMjM0NTY3N1xuICogU2VnbWVudHM6XG4gKiBuYW1lOiBtZXRyaWMubmFtZVxuICogdW5pdDogc2Vjb25kXG4gKiB2YWx1ZTogWzEsIDEuMl1cbiAqIHR5cGUgb2YgbWV0cmljOiBkIChkaXN0cmlidXRpb24pXG4gKiB0YWdzOiB7IGE6IHZhbHVlLCBiOiBhbm90aGVydmFsdWUgfVxuICogdGltZXN0YW1wOiAxMjM0NTY3N1xuICovXG5mdW5jdGlvbiBzZXJpYWxpemVNZXRyaWNCdWNrZXRzKG1ldHJpY0J1Y2tldEl0ZW1zKSB7XG4gIGxldCBvdXQgPSAnJztcbiAgZm9yIChjb25zdCBpdGVtIG9mIG1ldHJpY0J1Y2tldEl0ZW1zKSB7XG4gICAgY29uc3QgdGFnRW50cmllcyA9IE9iamVjdC5lbnRyaWVzKGl0ZW0udGFncyk7XG4gICAgY29uc3QgbWF5YmVUYWdzID0gdGFnRW50cmllcy5sZW5ndGggPiAwID8gYHwjJHt0YWdFbnRyaWVzLm1hcCgoW2tleSwgdmFsdWVdKSA9PiBgJHtrZXl9OiR7dmFsdWV9YCkuam9pbignLCcpfWAgOiAnJztcbiAgICBvdXQgKz0gYCR7aXRlbS5uYW1lfUAke2l0ZW0udW5pdH06JHtpdGVtLm1ldHJpY318JHtpdGVtLm1ldHJpY1R5cGV9JHttYXliZVRhZ3N9fFQke2l0ZW0udGltZXN0YW1wfVxcbmA7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cblxuLyoqXG4gKiBTYW5pdGl6ZXMgdW5pdHNcbiAqXG4gKiBUaGVzZSBSZWdleCdzIGFyZSBzdHJhaWdodCBmcm9tIHRoZSBub3JtYWxpc2F0aW9uIGRvY3M6XG4gKiBodHRwczovL2RldmVsb3Auc2VudHJ5LmRldi9zZGsvbWV0cmljcy8jbm9ybWFsaXphdGlvblxuICovXG5mdW5jdGlvbiBzYW5pdGl6ZVVuaXQodW5pdCkge1xuICByZXR1cm4gdW5pdC5yZXBsYWNlKC9bXlxcd10rL2dpLCAnXycpO1xufVxuXG4vKipcbiAqIFNhbml0aXplcyBtZXRyaWMga2V5c1xuICpcbiAqIFRoZXNlIFJlZ2V4J3MgYXJlIHN0cmFpZ2h0IGZyb20gdGhlIG5vcm1hbGlzYXRpb24gZG9jczpcbiAqIGh0dHBzOi8vZGV2ZWxvcC5zZW50cnkuZGV2L3Nkay9tZXRyaWNzLyNub3JtYWxpemF0aW9uXG4gKi9cbmZ1bmN0aW9uIHNhbml0aXplTWV0cmljS2V5KGtleSkge1xuICByZXR1cm4ga2V5LnJlcGxhY2UoL1teXFx3XFwtLl0rL2dpLCAnXycpO1xufVxuXG4vKipcbiAqIFNhbml0aXplcyBtZXRyaWMga2V5c1xuICpcbiAqIFRoZXNlIFJlZ2V4J3MgYXJlIHN0cmFpZ2h0IGZyb20gdGhlIG5vcm1hbGlzYXRpb24gZG9jczpcbiAqIGh0dHBzOi8vZGV2ZWxvcC5zZW50cnkuZGV2L3Nkay9tZXRyaWNzLyNub3JtYWxpemF0aW9uXG4gKi9cbmZ1bmN0aW9uIHNhbml0aXplVGFnS2V5KGtleSkge1xuICByZXR1cm4ga2V5LnJlcGxhY2UoL1teXFx3XFwtLi9dKy9naSwgJycpO1xufVxuXG4vKipcbiAqIFRoZXNlIFJlZ2V4J3MgYXJlIHN0cmFpZ2h0IGZyb20gdGhlIG5vcm1hbGlzYXRpb24gZG9jczpcbiAqIGh0dHBzOi8vZGV2ZWxvcC5zZW50cnkuZGV2L3Nkay9tZXRyaWNzLyNub3JtYWxpemF0aW9uXG4gKi9cbmNvbnN0IHRhZ1ZhbHVlUmVwbGFjZW1lbnRzID0gW1xuICBbJ1xcbicsICdcXFxcbiddLFxuICBbJ1xccicsICdcXFxcciddLFxuICBbJ1xcdCcsICdcXFxcdCddLFxuICBbJ1xcXFwnLCAnXFxcXFxcXFwnXSxcbiAgWyd8JywgJ1xcXFx1ezdjfSddLFxuICBbJywnLCAnXFxcXHV7MmN9J10sXG5dO1xuXG5mdW5jdGlvbiBnZXRDaGFyT3JSZXBsYWNlbWVudChpbnB1dCkge1xuICBmb3IgKGNvbnN0IFtzZWFyY2gsIHJlcGxhY2VtZW50XSBvZiB0YWdWYWx1ZVJlcGxhY2VtZW50cykge1xuICAgIGlmIChpbnB1dCA9PT0gc2VhcmNoKSB7XG4gICAgICByZXR1cm4gcmVwbGFjZW1lbnQ7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGlucHV0O1xufVxuXG5mdW5jdGlvbiBzYW5pdGl6ZVRhZ1ZhbHVlKHZhbHVlKSB7XG4gIHJldHVybiBbLi4udmFsdWVdLnJlZHVjZSgoYWNjLCBjaGFyKSA9PiBhY2MgKyBnZXRDaGFyT3JSZXBsYWNlbWVudChjaGFyKSwgJycpO1xufVxuXG4vKipcbiAqIFNhbml0aXplcyB0YWdzLlxuICovXG5mdW5jdGlvbiBzYW5pdGl6ZVRhZ3ModW5zYW5pdGl6ZWRUYWdzKSB7XG4gIGNvbnN0IHRhZ3MgPSB7fTtcbiAgZm9yIChjb25zdCBrZXkgaW4gdW5zYW5pdGl6ZWRUYWdzKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh1bnNhbml0aXplZFRhZ3MsIGtleSkpIHtcbiAgICAgIGNvbnN0IHNhbml0aXplZEtleSA9IHNhbml0aXplVGFnS2V5KGtleSk7XG4gICAgICB0YWdzW3Nhbml0aXplZEtleV0gPSBzYW5pdGl6ZVRhZ1ZhbHVlKFN0cmluZyh1bnNhbml0aXplZFRhZ3Nba2V5XSkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGFncztcbn1cblxuZXhwb3J0IHsgZ2V0QnVja2V0S2V5LCBzYW5pdGl6ZU1ldHJpY0tleSwgc2FuaXRpemVUYWdzLCBzYW5pdGl6ZVVuaXQsIHNlcmlhbGl6ZU1ldHJpY0J1Y2tldHMsIHNpbXBsZUhhc2ggfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/metrics/utils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/scope.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/scope.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Scope\": function() { return /* binding */ Scope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/spanOnScope.js */ \"./node_modules/@sentry/core/esm/utils/spanOnScope.js\");\n\n\n\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information.\n */\nclass ScopeClass  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called during event processing. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /** Propagation Context for distributed tracing */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n\n  /**\n   * Transaction Name\n   *\n   * IMPORTANT: The transaction name on the scope has nothing to do with root spans/transaction objects.\n   * It's purpose is to assign a transaction to the scope that's added to non-transaction events.\n   */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  /** The client on this scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.generatePropagationContext)();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clone() {\n    const newScope = new ScopeClass();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n    newScope._lastEventId = this._lastEventId;\n\n    (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_1__._setSpanForScope)(newScope, (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_1__._getSpanForScope)(this));\n\n    return newScope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setClient(client) {\n    this._client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLastEventId(lastEventId) {\n    this._lastEventId = lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this._client ;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_2__.updateSession)(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(level) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    const [scopeInstance, requestSession] =\n      scopeToMerge instanceof Scope\n        ? [scopeToMerge.getScopeData(), scopeToMerge.getRequestSession()]\n        : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(scopeToMerge)\n          ? [captureContext , (captureContext ).requestSession]\n          : [];\n\n    const { tags, extra, user, contexts, level, fingerprint = [], propagationContext } = scopeInstance || {};\n\n    this._tags = { ...this._tags, ...tags };\n    this._extra = { ...this._extra, ...extra };\n    this._contexts = { ...this._contexts, ...contexts };\n\n    if (user && Object.keys(user).length) {\n      this._user = user;\n    }\n\n    if (level) {\n      this._level = level;\n    }\n\n    if (fingerprint.length) {\n      this._fingerprint = fingerprint;\n    }\n\n    if (propagationContext) {\n      this._propagationContext = propagationContext;\n    }\n\n    if (requestSession) {\n      this._requestSession = requestSession;\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    // client is not cleared here on purpose!\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._session = undefined;\n    (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_1__._setSpanForScope)(this, undefined);\n    this._attachments = [];\n    this._propagationContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.generatePropagationContext)();\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dateTimestampInSeconds)(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n   getScopeData() {\n    return {\n      breadcrumbs: this._breadcrumbs,\n      attachments: this._attachments,\n      contexts: this._contexts,\n      tags: this._tags,\n      extra: this._extra,\n      user: this._user,\n      level: this._level,\n      fingerprint: this._fingerprint || [],\n      eventProcessors: this._eventProcessors,\n      propagationContext: this._propagationContext,\n      sdkProcessingMetadata: this._sdkProcessingMetadata,\n      transactionName: this._transactionName,\n      span: (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_1__._getSpanForScope)(this),\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setPropagationContext(context) {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getPropagationContext() {\n    return this._propagationContext;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n\n    if (!this._client) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(message, level, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n\n    if (!this._client) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n\n    if (!this._client) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n// NOTE: By exporting this here as const & type, instead of doing `export class`,\n// We can get the correct class when importing from `@sentry/core`, but the original type (from `@sentry/types`)\n// This is helpful for interop, e.g. when doing `import type { Scope } from '@sentry/node';` (which re-exports this)\n\n/**\n * Holds additional event information.\n */\nconst Scope = ScopeClass;\n\n/**\n * Holds additional event information.\n */\n\n\n//# sourceMappingURL=scope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/scope.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/sdk.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/sdk.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initAndBind\": function() { return /* binding */ initAndBind; },\n/* harmony export */   \"setCurrentClient\": function() { return /* binding */ setCurrentClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.consoleSandbox)(() => {\n        // eslint-disable-next-line no-console\n        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n      });\n    }\n  }\n  const scope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  setCurrentClient(client);\n  client.init();\n}\n\n/**\n * Make the given client the current client.\n */\nfunction setCurrentClient(client) {\n  (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)().setClient(client);\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZGsuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUQ7QUFDRjtBQUNOOztBQUUvQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdEQUFXO0FBQ25CLE1BQU0sd0RBQWE7QUFDbkIsTUFBTTtBQUNOO0FBQ0EsTUFBTSw2REFBYztBQUNwQjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxnQkFBZ0Isa0VBQWU7QUFDL0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLGtFQUFlO0FBQ2pCOztBQUV5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZGsuanM/NmM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIsIGNvbnNvbGVTYW5kYm94IH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBnZXRDdXJyZW50U2NvcGUgfSBmcm9tICcuL2N1cnJlbnRTY29wZXMuanMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuL2RlYnVnLWJ1aWxkLmpzJztcblxuLyoqIEEgY2xhc3Mgb2JqZWN0IHRoYXQgY2FuIGluc3RhbnRpYXRlIENsaWVudCBvYmplY3RzLiAqL1xuXG4vKipcbiAqIEludGVybmFsIGZ1bmN0aW9uIHRvIGNyZWF0ZSBhIG5ldyBTREsgY2xpZW50IGluc3RhbmNlLiBUaGUgY2xpZW50IGlzXG4gKiBpbnN0YWxsZWQgYW5kIHRoZW4gYm91bmQgdG8gdGhlIGN1cnJlbnQgc2NvcGUuXG4gKlxuICogQHBhcmFtIGNsaWVudENsYXNzIFRoZSBjbGllbnQgY2xhc3MgdG8gaW5zdGFudGlhdGUuXG4gKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25zIHRvIHBhc3MgdG8gdGhlIGNsaWVudC5cbiAqL1xuZnVuY3Rpb24gaW5pdEFuZEJpbmQoXG4gIGNsaWVudENsYXNzLFxuICBvcHRpb25zLFxuKSB7XG4gIGlmIChvcHRpb25zLmRlYnVnID09PSB0cnVlKSB7XG4gICAgaWYgKERFQlVHX0JVSUxEKSB7XG4gICAgICBsb2dnZXIuZW5hYmxlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHVzZSBgY29uc29sZS53YXJuYCByYXRoZXIgdGhhbiBgbG9nZ2VyLndhcm5gIHNpbmNlIGJ5IG5vbi1kZWJ1ZyBidW5kbGVzIGhhdmUgYWxsIGBsb2dnZXIueGAgc3RhdGVtZW50cyBzdHJpcHBlZFxuICAgICAgY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICBjb25zb2xlLndhcm4oJ1tTZW50cnldIENhbm5vdCBpbml0aWFsaXplIFNESyB3aXRoIGBkZWJ1Z2Agb3B0aW9uIHVzaW5nIGEgbm9uLWRlYnVnIGJ1bmRsZS4nKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRTY29wZSgpO1xuICBzY29wZS51cGRhdGUob3B0aW9ucy5pbml0aWFsU2NvcGUpO1xuXG4gIGNvbnN0IGNsaWVudCA9IG5ldyBjbGllbnRDbGFzcyhvcHRpb25zKTtcbiAgc2V0Q3VycmVudENsaWVudChjbGllbnQpO1xuICBjbGllbnQuaW5pdCgpO1xufVxuXG4vKipcbiAqIE1ha2UgdGhlIGdpdmVuIGNsaWVudCB0aGUgY3VycmVudCBjbGllbnQuXG4gKi9cbmZ1bmN0aW9uIHNldEN1cnJlbnRDbGllbnQoY2xpZW50KSB7XG4gIGdldEN1cnJlbnRTY29wZSgpLnNldENsaWVudChjbGllbnQpO1xufVxuXG5leHBvcnQgeyBpbml0QW5kQmluZCwgc2V0Q3VycmVudENsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/sdk.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/semanticAttributes.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/semanticAttributes.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_CACHE_HIT\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_CACHE_HIT; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_CACHE_KEY\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_CACHE_KEY; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_PROFILE_ID\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_PROFILE_ID; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_OP\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_SENTRY_OP; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE; },\n/* harmony export */   \"SEMANTIC_ATTRIBUTE_SENTRY_SOURCE\": function() { return /* binding */ SEMANTIC_ATTRIBUTE_SENTRY_SOURCE; }\n/* harmony export */ });\n/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nconst SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/** The reason why an idle span finished. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON = 'sentry.idle_span_finish_reason';\n\n/** The unit of a measurement, which may be stored as a TimedEvent. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT = 'sentry.measurement_unit';\n\n/** The value of a measurement, which may be stored as a TimedEvent. */\nconst SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE = 'sentry.measurement_value';\n\n/**\n * The id of the profile that this span occured in.\n */\nconst SEMANTIC_ATTRIBUTE_PROFILE_ID = 'sentry.profile_id';\n\nconst SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME = 'sentry.exclusive_time';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_HIT = 'cache.hit';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_KEY = 'cache.key';\n\nconst SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE = 'cache.item_size';\n\n\n//# sourceMappingURL=semanticAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZW1hbnRpY0F0dHJpYnV0ZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVpYztBQUNqYyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZW1hbnRpY0F0dHJpYnV0ZXMuanM/NmY2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSB0aGlzIGF0dHJpYnV0ZSB0byByZXByZXNlbnQgdGhlIHNvdXJjZSBvZiBhIHNwYW4uXG4gKiBTaG91bGQgYmUgb25lIG9mOiBjdXN0b20sIHVybCwgcm91dGUsIHZpZXcsIGNvbXBvbmVudCwgdGFzaywgdW5rbm93blxuICpcbiAqL1xuY29uc3QgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9TT1VSQ0UgPSAnc2VudHJ5LnNvdXJjZSc7XG5cbi8qKlxuICogVXNlIHRoaXMgYXR0cmlidXRlIHRvIHJlcHJlc2VudCB0aGUgc2FtcGxlIHJhdGUgdXNlZCBmb3IgYSBzcGFuLlxuICovXG5jb25zdCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NBTVBMRV9SQVRFID0gJ3NlbnRyeS5zYW1wbGVfcmF0ZSc7XG5cbi8qKlxuICogVXNlIHRoaXMgYXR0cmlidXRlIHRvIHJlcHJlc2VudCB0aGUgb3BlcmF0aW9uIG9mIGEgc3Bhbi5cbiAqL1xuY29uc3QgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUCA9ICdzZW50cnkub3AnO1xuXG4vKipcbiAqIFVzZSB0aGlzIGF0dHJpYnV0ZSB0byByZXByZXNlbnQgdGhlIG9yaWdpbiBvZiBhIHNwYW4uXG4gKi9cbmNvbnN0IFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOID0gJ3NlbnRyeS5vcmlnaW4nO1xuXG4vKiogVGhlIHJlYXNvbiB3aHkgYW4gaWRsZSBzcGFuIGZpbmlzaGVkLiAqL1xuY29uc3QgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9JRExFX1NQQU5fRklOSVNIX1JFQVNPTiA9ICdzZW50cnkuaWRsZV9zcGFuX2ZpbmlzaF9yZWFzb24nO1xuXG4vKiogVGhlIHVuaXQgb2YgYSBtZWFzdXJlbWVudCwgd2hpY2ggbWF5IGJlIHN0b3JlZCBhcyBhIFRpbWVkRXZlbnQuICovXG5jb25zdCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX01FQVNVUkVNRU5UX1VOSVQgPSAnc2VudHJ5Lm1lYXN1cmVtZW50X3VuaXQnO1xuXG4vKiogVGhlIHZhbHVlIG9mIGEgbWVhc3VyZW1lbnQsIHdoaWNoIG1heSBiZSBzdG9yZWQgYXMgYSBUaW1lZEV2ZW50LiAqL1xuY29uc3QgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9NRUFTVVJFTUVOVF9WQUxVRSA9ICdzZW50cnkubWVhc3VyZW1lbnRfdmFsdWUnO1xuXG4vKipcbiAqIFRoZSBpZCBvZiB0aGUgcHJvZmlsZSB0aGF0IHRoaXMgc3BhbiBvY2N1cmVkIGluLlxuICovXG5jb25zdCBTRU1BTlRJQ19BVFRSSUJVVEVfUFJPRklMRV9JRCA9ICdzZW50cnkucHJvZmlsZV9pZCc7XG5cbmNvbnN0IFNFTUFOVElDX0FUVFJJQlVURV9FWENMVVNJVkVfVElNRSA9ICdzZW50cnkuZXhjbHVzaXZlX3RpbWUnO1xuXG5jb25zdCBTRU1BTlRJQ19BVFRSSUJVVEVfQ0FDSEVfSElUID0gJ2NhY2hlLmhpdCc7XG5cbmNvbnN0IFNFTUFOVElDX0FUVFJJQlVURV9DQUNIRV9LRVkgPSAnY2FjaGUua2V5JztcblxuY29uc3QgU0VNQU5USUNfQVRUUklCVVRFX0NBQ0hFX0lURU1fU0laRSA9ICdjYWNoZS5pdGVtX3NpemUnO1xuXG5leHBvcnQgeyBTRU1BTlRJQ19BVFRSSUJVVEVfQ0FDSEVfSElULCBTRU1BTlRJQ19BVFRSSUJVVEVfQ0FDSEVfSVRFTV9TSVpFLCBTRU1BTlRJQ19BVFRSSUJVVEVfQ0FDSEVfS0VZLCBTRU1BTlRJQ19BVFRSSUJVVEVfRVhDTFVTSVZFX1RJTUUsIFNFTUFOVElDX0FUVFJJQlVURV9QUk9GSUxFX0lELCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX0lETEVfU1BBTl9GSU5JU0hfUkVBU09OLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX01FQVNVUkVNRU5UX1VOSVQsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfTUVBU1VSRU1FTlRfVkFMVUUsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1AsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NBTVBMRV9SQVRFLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VtYW50aWNBdHRyaWJ1dGVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/semanticAttributes.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/server-runtime-client.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/server-runtime-client.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ServerRuntimeClient\": function() { return /* binding */ ServerRuntimeClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _baseclient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baseclient.js */ \"./node_modules/@sentry/core/esm/baseclient.js\");\n/* harmony import */ var _checkin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./checkin.js */ \"./node_modules/@sentry/core/esm/checkin.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _sessionflusher_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sessionflusher.js */ \"./node_modules/@sentry/core/esm/sessionflusher.js\");\n/* harmony import */ var _tracing_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracing/errors.js */ \"./node_modules/@sentry/core/esm/tracing/errors.js\");\n/* harmony import */ var _utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/spanOnScope.js */ \"./node_modules/@sentry/core/esm/utils/spanOnScope.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The Sentry Server Runtime Client SDK.\n */\nclass ServerRuntimeClient\n\n extends _baseclient_js__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n\n  /**\n   * Creates a new Edge SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    // Server clients always support tracing\n    (0,_tracing_errors_js__WEBPACK_IMPORTED_MODULE_1__.registerSpanErrorInstrumentation)();\n\n    super(options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.resolvedSyncPromise)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.eventFromUnknownInput)(this, this._options.stackParser, exception, hint));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    level = 'info',\n    hint,\n  ) {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.resolvedSyncPromise)(\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.eventFromMessage)(this._options.stackParser, message, level, hint, this._options.attachStacktrace),\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   captureException(exception, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher) {\n      const requestSession = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_3__.getIsolationScope)().getRequestSession();\n\n      // Necessary checks to ensure this is code block is executed only within a request\n      // Should override the status only if `requestSession.status` is `Ok`, which is its initial stage\n      if (requestSession && requestSession.status === 'ok') {\n        requestSession.status = 'errored';\n      }\n    }\n\n    return super.captureException(exception, hint, scope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // Check if the flag `autoSessionTracking` is enabled, and if `_sessionFlusher` exists because it is initialised only\n    // when the `requestHandler` middleware is used, and hence the expectation is to have SessionAggregates payload\n    // sent to the Server only when the `requestHandler` middleware is used\n    if (this._options.autoSessionTracking && this._sessionFlusher) {\n      const eventType = event.type || 'exception';\n      const isException =\n        eventType === 'exception' && event.exception && event.exception.values && event.exception.values.length > 0;\n\n      // If the event is of type Exception, then a request session should be captured\n      if (isException) {\n        const requestSession = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_3__.getIsolationScope)().getRequestSession();\n\n        // Ensure that this is happening within the bounds of a request, and make sure not to override\n        // Session Status if Errored / Crashed\n        if (requestSession && requestSession.status === 'ok') {\n          requestSession.status = 'errored';\n        }\n      }\n    }\n\n    return super.captureEvent(event, hint, scope);\n  }\n\n  /**\n   *\n   * @inheritdoc\n   */\n   close(timeout) {\n    if (this._sessionFlusher) {\n      this._sessionFlusher.close();\n    }\n    return super.close(timeout);\n  }\n\n  /** Method that initialises an instance of SessionFlusher on Client */\n   initSessionFlusher() {\n    const { release, environment } = this._options;\n    if (!release) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Cannot initialise an instance of SessionFlusher if no release is provided!');\n    } else {\n      this._sessionFlusher = new _sessionflusher_js__WEBPACK_IMPORTED_MODULE_5__.SessionFlusher(this, {\n        release,\n        environment,\n      });\n    }\n  }\n\n  /**\n   * Create a cron monitor check in and send it to Sentry.\n   *\n   * @param checkIn An object that describes a check in.\n   * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n   * to create a monitor automatically when sending a check in.\n   */\n   captureCheckIn(checkIn, monitorConfig, scope) {\n    const id = 'checkInId' in checkIn && checkIn.checkInId ? checkIn.checkInId : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.uuid4)();\n    if (!this._isEnabled()) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('SDK not enabled, will not capture checkin.');\n      return id;\n    }\n\n    const options = this.getOptions();\n    const { release, environment, tunnel } = options;\n\n    const serializedCheckIn = {\n      check_in_id: id,\n      monitor_slug: checkIn.monitorSlug,\n      status: checkIn.status,\n      release,\n      environment,\n    };\n\n    if ('duration' in checkIn) {\n      serializedCheckIn.duration = checkIn.duration;\n    }\n\n    if (monitorConfig) {\n      serializedCheckIn.monitor_config = {\n        schedule: monitorConfig.schedule,\n        checkin_margin: monitorConfig.checkinMargin,\n        max_runtime: monitorConfig.maxRuntime,\n        timezone: monitorConfig.timezone,\n        failure_issue_threshold: monitorConfig.failureIssueThreshold,\n        recovery_threshold: monitorConfig.recoveryThreshold,\n      };\n    }\n\n    const [dynamicSamplingContext, traceContext] = this._getTraceInfoFromScope(scope);\n    if (traceContext) {\n      serializedCheckIn.contexts = {\n        trace: traceContext,\n      };\n    }\n\n    const envelope = (0,_checkin_js__WEBPACK_IMPORTED_MODULE_6__.createCheckInEnvelope)(\n      serializedCheckIn,\n      dynamicSamplingContext,\n      this.getSdkMetadata(),\n      tunnel,\n      this.getDsn(),\n    );\n\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.info('Sending checkin:', checkIn.monitorSlug, checkIn.status);\n\n    // sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.sendEnvelope(envelope);\n\n    return id;\n  }\n\n  /**\n   * Method responsible for capturing/ending a request session by calling `incrementSessionStatusCount` to increment\n   * appropriate session aggregates bucket\n   */\n   _captureRequestSession() {\n    if (!this._sessionFlusher) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Discarded request mode session because autoSessionTracking option was disabled');\n    } else {\n      this._sessionFlusher.incrementSessionStatusCount();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(\n    event,\n    hint,\n    scope,\n    isolationScope,\n  ) {\n    if (this._options.platform) {\n      event.platform = event.platform || this._options.platform;\n    }\n\n    if (this._options.runtime) {\n      event.contexts = {\n        ...event.contexts,\n        runtime: (event.contexts || {}).runtime || this._options.runtime,\n      };\n    }\n\n    if (this._options.serverName) {\n      event.server_name = event.server_name || this._options.serverName;\n    }\n\n    return super._prepareEvent(event, hint, scope, isolationScope);\n  }\n\n  /** Extract trace information from scope */\n   _getTraceInfoFromScope(\n    scope,\n  ) {\n    if (!scope) {\n      return [undefined, undefined];\n    }\n\n    const span = (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_7__._getSpanForScope)(scope);\n    if (span) {\n      const rootSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_8__.getRootSpan)(span);\n      const samplingContext = (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromSpan)(rootSpan);\n      return [samplingContext, (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_8__.spanToTraceContext)(rootSpan)];\n    }\n\n    const { traceId, spanId, parentSpanId, dsc } = scope.getPropagationContext();\n    const traceContext = {\n      trace_id: traceId,\n      span_id: spanId,\n      parent_span_id: parentSpanId,\n    };\n    if (dsc) {\n      return [dsc, traceContext];\n    }\n\n    return [(0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromClient)(traceId, this), traceContext];\n  }\n}\n\n\n//# sourceMappingURL=server-runtime-client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/server-runtime-client.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/session.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/session.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"closeSession\": function() { return /* binding */ closeSession; },\n/* harmony export */   \"makeSession\": function() { return /* binding */ makeSession; },\n/* harmony export */   \"updateSession\": function() { return /* binding */ updateSession; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  const session = {\n    sid: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\n\n//# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/session.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/sessionflusher.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/sessionflusher.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SessionFlusher\": function() { return /* binding */ SessionFlusher; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n\n\n\n/**\n * @inheritdoc\n */\nclass SessionFlusher  {\n\n  // Cast to any so that it can use Node.js timeout\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n   constructor(client, attrs) {\n    this._client = client;\n    this.flushTimeout = 60;\n    this._pendingAggregates = {};\n    this._isEnabled = true;\n\n    // Call to setInterval, so that flush is called every 60 seconds.\n    this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1000);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (this._intervalId.unref) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      this._intervalId.unref();\n    }\n    this._sessionAttrs = attrs;\n  }\n\n  /** Checks if `pendingAggregates` has entries, and if it does flushes them by calling `sendSession` */\n   flush() {\n    const sessionAggregates = this.getSessionAggregates();\n    if (sessionAggregates.aggregates.length === 0) {\n      return;\n    }\n    this._pendingAggregates = {};\n    this._client.sendSession(sessionAggregates);\n  }\n\n  /** Massages the entries in `pendingAggregates` and returns aggregated sessions */\n   getSessionAggregates() {\n    const aggregates = Object.keys(this._pendingAggregates).map((key) => {\n      return this._pendingAggregates[parseInt(key)];\n    });\n\n    const sessionAggregates = {\n      attrs: this._sessionAttrs,\n      aggregates,\n    };\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(sessionAggregates);\n  }\n\n  /** JSDoc */\n   close() {\n    clearInterval(this._intervalId);\n    this._isEnabled = false;\n    this.flush();\n  }\n\n  /**\n   * Wrapper function for _incrementSessionStatusCount that checks if the instance of SessionFlusher is enabled then\n   * fetches the session status of the request from `Scope.getRequestSession().status` on the scope and passes them to\n   * `_incrementSessionStatusCount` along with the start date\n   */\n   incrementSessionStatusCount() {\n    if (!this._isEnabled) {\n      return;\n    }\n    const isolationScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_1__.getIsolationScope)();\n    const requestSession = isolationScope.getRequestSession();\n\n    if (requestSession && requestSession.status) {\n      this._incrementSessionStatusCount(requestSession.status, new Date());\n      // This is not entirely necessarily but is added as a safe guard to indicate the bounds of a request and so in\n      // case captureRequestSession is called more than once to prevent double count\n      isolationScope.setRequestSession(undefined);\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    }\n  }\n\n  /**\n   * Increments status bucket in pendingAggregates buffer (internal state) corresponding to status of\n   * the session received\n   */\n   _incrementSessionStatusCount(status, date) {\n    // Truncate minutes and seconds on Session Started attribute to have one minute bucket keys\n    const sessionStartedTrunc = new Date(date).setSeconds(0, 0);\n    this._pendingAggregates[sessionStartedTrunc] = this._pendingAggregates[sessionStartedTrunc] || {};\n\n    // corresponds to aggregated sessions in one specific minute bucket\n    // for example, {\"started\":\"2021-03-16T08:00:00.000Z\",\"exited\":4, \"errored\": 1}\n    const aggregationCounts = this._pendingAggregates[sessionStartedTrunc];\n    if (!aggregationCounts.started) {\n      aggregationCounts.started = new Date(sessionStartedTrunc).toISOString();\n    }\n\n    switch (status) {\n      case 'errored':\n        aggregationCounts.errored = (aggregationCounts.errored || 0) + 1;\n        return aggregationCounts.errored;\n      case 'ok':\n        aggregationCounts.exited = (aggregationCounts.exited || 0) + 1;\n        return aggregationCounts.exited;\n      default:\n        aggregationCounts.crashed = (aggregationCounts.crashed || 0) + 1;\n        return aggregationCounts.crashed;\n    }\n  }\n}\n\n\n//# sourceMappingURL=sessionflusher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZXNzaW9uZmx1c2hlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0Q7QUFDSzs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRUFBaUI7QUFDNUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixvRUFBaUI7QUFDNUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZXNzaW9uZmx1c2hlci5qcz8zODIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRyb3BVbmRlZmluZWRLZXlzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBnZXRJc29sYXRpb25TY29wZSB9IGZyb20gJy4vY3VycmVudFNjb3Blcy5qcyc7XG5cbi8qKlxuICogQGluaGVyaXRkb2NcbiAqL1xuY2xhc3MgU2Vzc2lvbkZsdXNoZXIgIHtcblxuICAvLyBDYXN0IHRvIGFueSBzbyB0aGF0IGl0IGNhbiB1c2UgTm9kZS5qcyB0aW1lb3V0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5cbiAgIGNvbnN0cnVjdG9yKGNsaWVudCwgYXR0cnMpIHtcbiAgICB0aGlzLl9jbGllbnQgPSBjbGllbnQ7XG4gICAgdGhpcy5mbHVzaFRpbWVvdXQgPSA2MDtcbiAgICB0aGlzLl9wZW5kaW5nQWdncmVnYXRlcyA9IHt9O1xuICAgIHRoaXMuX2lzRW5hYmxlZCA9IHRydWU7XG5cbiAgICAvLyBDYWxsIHRvIHNldEludGVydmFsLCBzbyB0aGF0IGZsdXNoIGlzIGNhbGxlZCBldmVyeSA2MCBzZWNvbmRzLlxuICAgIHRoaXMuX2ludGVydmFsSWQgPSBzZXRJbnRlcnZhbCgoKSA9PiB0aGlzLmZsdXNoKCksIHRoaXMuZmx1c2hUaW1lb3V0ICogMTAwMCk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgIGlmICh0aGlzLl9pbnRlcnZhbElkLnVucmVmKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gICAgICB0aGlzLl9pbnRlcnZhbElkLnVucmVmKCk7XG4gICAgfVxuICAgIHRoaXMuX3Nlc3Npb25BdHRycyA9IGF0dHJzO1xuICB9XG5cbiAgLyoqIENoZWNrcyBpZiBgcGVuZGluZ0FnZ3JlZ2F0ZXNgIGhhcyBlbnRyaWVzLCBhbmQgaWYgaXQgZG9lcyBmbHVzaGVzIHRoZW0gYnkgY2FsbGluZyBgc2VuZFNlc3Npb25gICovXG4gICBmbHVzaCgpIHtcbiAgICBjb25zdCBzZXNzaW9uQWdncmVnYXRlcyA9IHRoaXMuZ2V0U2Vzc2lvbkFnZ3JlZ2F0ZXMoKTtcbiAgICBpZiAoc2Vzc2lvbkFnZ3JlZ2F0ZXMuYWdncmVnYXRlcy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5fcGVuZGluZ0FnZ3JlZ2F0ZXMgPSB7fTtcbiAgICB0aGlzLl9jbGllbnQuc2VuZFNlc3Npb24oc2Vzc2lvbkFnZ3JlZ2F0ZXMpO1xuICB9XG5cbiAgLyoqIE1hc3NhZ2VzIHRoZSBlbnRyaWVzIGluIGBwZW5kaW5nQWdncmVnYXRlc2AgYW5kIHJldHVybnMgYWdncmVnYXRlZCBzZXNzaW9ucyAqL1xuICAgZ2V0U2Vzc2lvbkFnZ3JlZ2F0ZXMoKSB7XG4gICAgY29uc3QgYWdncmVnYXRlcyA9IE9iamVjdC5rZXlzKHRoaXMuX3BlbmRpbmdBZ2dyZWdhdGVzKS5tYXAoKGtleSkgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuX3BlbmRpbmdBZ2dyZWdhdGVzW3BhcnNlSW50KGtleSldO1xuICAgIH0pO1xuXG4gICAgY29uc3Qgc2Vzc2lvbkFnZ3JlZ2F0ZXMgPSB7XG4gICAgICBhdHRyczogdGhpcy5fc2Vzc2lvbkF0dHJzLFxuICAgICAgYWdncmVnYXRlcyxcbiAgICB9O1xuICAgIHJldHVybiBkcm9wVW5kZWZpbmVkS2V5cyhzZXNzaW9uQWdncmVnYXRlcyk7XG4gIH1cblxuICAvKiogSlNEb2MgKi9cbiAgIGNsb3NlKCkge1xuICAgIGNsZWFySW50ZXJ2YWwodGhpcy5faW50ZXJ2YWxJZCk7XG4gICAgdGhpcy5faXNFbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5mbHVzaCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFdyYXBwZXIgZnVuY3Rpb24gZm9yIF9pbmNyZW1lbnRTZXNzaW9uU3RhdHVzQ291bnQgdGhhdCBjaGVja3MgaWYgdGhlIGluc3RhbmNlIG9mIFNlc3Npb25GbHVzaGVyIGlzIGVuYWJsZWQgdGhlblxuICAgKiBmZXRjaGVzIHRoZSBzZXNzaW9uIHN0YXR1cyBvZiB0aGUgcmVxdWVzdCBmcm9tIGBTY29wZS5nZXRSZXF1ZXN0U2Vzc2lvbigpLnN0YXR1c2Agb24gdGhlIHNjb3BlIGFuZCBwYXNzZXMgdGhlbSB0b1xuICAgKiBgX2luY3JlbWVudFNlc3Npb25TdGF0dXNDb3VudGAgYWxvbmcgd2l0aCB0aGUgc3RhcnQgZGF0ZVxuICAgKi9cbiAgIGluY3JlbWVudFNlc3Npb25TdGF0dXNDb3VudCgpIHtcbiAgICBpZiAoIXRoaXMuX2lzRW5hYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpc29sYXRpb25TY29wZSA9IGdldElzb2xhdGlvblNjb3BlKCk7XG4gICAgY29uc3QgcmVxdWVzdFNlc3Npb24gPSBpc29sYXRpb25TY29wZS5nZXRSZXF1ZXN0U2Vzc2lvbigpO1xuXG4gICAgaWYgKHJlcXVlc3RTZXNzaW9uICYmIHJlcXVlc3RTZXNzaW9uLnN0YXR1cykge1xuICAgICAgdGhpcy5faW5jcmVtZW50U2Vzc2lvblN0YXR1c0NvdW50KHJlcXVlc3RTZXNzaW9uLnN0YXR1cywgbmV3IERhdGUoKSk7XG4gICAgICAvLyBUaGlzIGlzIG5vdCBlbnRpcmVseSBuZWNlc3NhcmlseSBidXQgaXMgYWRkZWQgYXMgYSBzYWZlIGd1YXJkIHRvIGluZGljYXRlIHRoZSBib3VuZHMgb2YgYSByZXF1ZXN0IGFuZCBzbyBpblxuICAgICAgLy8gY2FzZSBjYXB0dXJlUmVxdWVzdFNlc3Npb24gaXMgY2FsbGVkIG1vcmUgdGhhbiBvbmNlIHRvIHByZXZlbnQgZG91YmxlIGNvdW50XG4gICAgICBpc29sYXRpb25TY29wZS5zZXRSZXF1ZXN0U2Vzc2lvbih1bmRlZmluZWQpO1xuICAgICAgLyogZXNsaW50LWVuYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSW5jcmVtZW50cyBzdGF0dXMgYnVja2V0IGluIHBlbmRpbmdBZ2dyZWdhdGVzIGJ1ZmZlciAoaW50ZXJuYWwgc3RhdGUpIGNvcnJlc3BvbmRpbmcgdG8gc3RhdHVzIG9mXG4gICAqIHRoZSBzZXNzaW9uIHJlY2VpdmVkXG4gICAqL1xuICAgX2luY3JlbWVudFNlc3Npb25TdGF0dXNDb3VudChzdGF0dXMsIGRhdGUpIHtcbiAgICAvLyBUcnVuY2F0ZSBtaW51dGVzIGFuZCBzZWNvbmRzIG9uIFNlc3Npb24gU3RhcnRlZCBhdHRyaWJ1dGUgdG8gaGF2ZSBvbmUgbWludXRlIGJ1Y2tldCBrZXlzXG4gICAgY29uc3Qgc2Vzc2lvblN0YXJ0ZWRUcnVuYyA9IG5ldyBEYXRlKGRhdGUpLnNldFNlY29uZHMoMCwgMCk7XG4gICAgdGhpcy5fcGVuZGluZ0FnZ3JlZ2F0ZXNbc2Vzc2lvblN0YXJ0ZWRUcnVuY10gPSB0aGlzLl9wZW5kaW5nQWdncmVnYXRlc1tzZXNzaW9uU3RhcnRlZFRydW5jXSB8fCB7fTtcblxuICAgIC8vIGNvcnJlc3BvbmRzIHRvIGFnZ3JlZ2F0ZWQgc2Vzc2lvbnMgaW4gb25lIHNwZWNpZmljIG1pbnV0ZSBidWNrZXRcbiAgICAvLyBmb3IgZXhhbXBsZSwge1wic3RhcnRlZFwiOlwiMjAyMS0wMy0xNlQwODowMDowMC4wMDBaXCIsXCJleGl0ZWRcIjo0LCBcImVycm9yZWRcIjogMX1cbiAgICBjb25zdCBhZ2dyZWdhdGlvbkNvdW50cyA9IHRoaXMuX3BlbmRpbmdBZ2dyZWdhdGVzW3Nlc3Npb25TdGFydGVkVHJ1bmNdO1xuICAgIGlmICghYWdncmVnYXRpb25Db3VudHMuc3RhcnRlZCkge1xuICAgICAgYWdncmVnYXRpb25Db3VudHMuc3RhcnRlZCA9IG5ldyBEYXRlKHNlc3Npb25TdGFydGVkVHJ1bmMpLnRvSVNPU3RyaW5nKCk7XG4gICAgfVxuXG4gICAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICAgIGNhc2UgJ2Vycm9yZWQnOlxuICAgICAgICBhZ2dyZWdhdGlvbkNvdW50cy5lcnJvcmVkID0gKGFnZ3JlZ2F0aW9uQ291bnRzLmVycm9yZWQgfHwgMCkgKyAxO1xuICAgICAgICByZXR1cm4gYWdncmVnYXRpb25Db3VudHMuZXJyb3JlZDtcbiAgICAgIGNhc2UgJ29rJzpcbiAgICAgICAgYWdncmVnYXRpb25Db3VudHMuZXhpdGVkID0gKGFnZ3JlZ2F0aW9uQ291bnRzLmV4aXRlZCB8fCAwKSArIDE7XG4gICAgICAgIHJldHVybiBhZ2dyZWdhdGlvbkNvdW50cy5leGl0ZWQ7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBhZ2dyZWdhdGlvbkNvdW50cy5jcmFzaGVkID0gKGFnZ3JlZ2F0aW9uQ291bnRzLmNyYXNoZWQgfHwgMCkgKyAxO1xuICAgICAgICByZXR1cm4gYWdncmVnYXRpb25Db3VudHMuY3Jhc2hlZDtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgU2Vzc2lvbkZsdXNoZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb25mbHVzaGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/sessionflusher.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"freezeDscOnSpan\": function() { return /* binding */ freezeDscOnSpan; },\n/* harmony export */   \"getDynamicSamplingContextFromClient\": function() { return /* binding */ getDynamicSamplingContextFromClient; },\n/* harmony export */   \"getDynamicSamplingContextFromSpan\": function() { return /* binding */ getDynamicSamplingContextFromSpan; },\n/* harmony export */   \"spanToBaggageHeader\": function() { return /* binding */ spanToBaggageHeader; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../semanticAttributes.js */ \"./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n\n\n/**\n * If you change this value, also update the terser plugin config to\n * avoid minification of the object property!\n */\nconst FROZEN_DSC_FIELD = '_frozenDsc';\n\n/**\n * Freeze the given DSC on the given span.\n */\nfunction freezeDscOnSpan(span, dsc) {\n  const spanWithMaybeDsc = span ;\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(spanWithMaybeDsc, FROZEN_DSC_FIELD, dsc);\n}\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(trace_id, client) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n\n  const dsc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    environment: options.environment || _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_ENVIRONMENT,\n    release: options.release,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nfunction getDynamicSamplingContextFromSpan(span) {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_2__.getClient)();\n  if (!client) {\n    return {};\n  }\n\n  const dsc = getDynamicSamplingContextFromClient((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).trace_id || '', client);\n\n  const rootSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.getRootSpan)(span);\n  if (!rootSpan) {\n    return dsc;\n  }\n\n  const frozenDsc = (rootSpan )[FROZEN_DSC_FIELD];\n  if (frozenDsc) {\n    return frozenDsc;\n  }\n\n  const jsonSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(rootSpan);\n  const attributes = jsonSpan.data || {};\n  const maybeSampleRate = attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE];\n\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const source = attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanIsSampled)(rootSpan));\n\n  client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * Convert a Span to a baggage header.\n */\nfunction spanToBaggageHeader(span) {\n  const dsc = getDynamicSamplingContextFromSpan(span);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicSamplingContextToSentryBaggageHeader)(dsc);\n}\n\n\n//# sourceMappingURL=dynamicSamplingContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2R5bmFtaWNTYW1wbGluZ0NvbnRleHQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXlIO0FBQ25FO0FBQ047QUFDbUU7QUFDcEM7O0FBRS9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsdUVBQXdCO0FBQzFCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVUsd0JBQXdCOztBQUVsQyxjQUFjLGdFQUFpQjtBQUMvQix3Q0FBd0MsOERBQW1CO0FBQzNEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDREQUFTO0FBQzFCO0FBQ0E7QUFDQTs7QUFFQSxrREFBa0QsK0RBQVU7O0FBRTVELG1CQUFtQixnRUFBVztBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CLCtEQUFVO0FBQzdCO0FBQ0EscUNBQXFDLHlGQUFxQzs7QUFFMUU7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDOztBQUVBO0FBQ0EsNEJBQTRCLG9GQUFnQzs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLGtFQUFhOztBQUVwQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDBGQUEyQztBQUNwRDs7QUFFd0g7QUFDeEgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy9keW5hbWljU2FtcGxpbmdDb250ZXh0LmpzP2U0NDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHJvcFVuZGVmaW5lZEtleXMsIGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIsIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVGQVVMVF9FTlZJUk9OTUVOVCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBnZXRDbGllbnQgfSBmcm9tICcuLi9jdXJyZW50U2NvcGVzLmpzJztcbmltcG9ydCB7IFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU0FNUExFX1JBVEUsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFIH0gZnJvbSAnLi4vc2VtYW50aWNBdHRyaWJ1dGVzLmpzJztcbmltcG9ydCB7IHNwYW5Ub0pTT04sIGdldFJvb3RTcGFuLCBzcGFuSXNTYW1wbGVkIH0gZnJvbSAnLi4vdXRpbHMvc3BhblV0aWxzLmpzJztcblxuLyoqXG4gKiBJZiB5b3UgY2hhbmdlIHRoaXMgdmFsdWUsIGFsc28gdXBkYXRlIHRoZSB0ZXJzZXIgcGx1Z2luIGNvbmZpZyB0b1xuICogYXZvaWQgbWluaWZpY2F0aW9uIG9mIHRoZSBvYmplY3QgcHJvcGVydHkhXG4gKi9cbmNvbnN0IEZST1pFTl9EU0NfRklFTEQgPSAnX2Zyb3plbkRzYyc7XG5cbi8qKlxuICogRnJlZXplIHRoZSBnaXZlbiBEU0Mgb24gdGhlIGdpdmVuIHNwYW4uXG4gKi9cbmZ1bmN0aW9uIGZyZWV6ZURzY09uU3BhbihzcGFuLCBkc2MpIHtcbiAgY29uc3Qgc3BhbldpdGhNYXliZURzYyA9IHNwYW4gO1xuICBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkoc3BhbldpdGhNYXliZURzYywgRlJPWkVOX0RTQ19GSUVMRCwgZHNjKTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgZHluYW1pYyBzYW1wbGluZyBjb250ZXh0IGZyb20gYSBjbGllbnQuXG4gKlxuICogRGlzcGF0Y2hlcyB0aGUgYGNyZWF0ZURzY2AgbGlmZWN5Y2xlIGhvb2sgYXMgYSBzaWRlIGVmZmVjdC5cbiAqL1xuZnVuY3Rpb24gZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21DbGllbnQodHJhY2VfaWQsIGNsaWVudCkge1xuICBjb25zdCBvcHRpb25zID0gY2xpZW50LmdldE9wdGlvbnMoKTtcblxuICBjb25zdCB7IHB1YmxpY0tleTogcHVibGljX2tleSB9ID0gY2xpZW50LmdldERzbigpIHx8IHt9O1xuXG4gIGNvbnN0IGRzYyA9IGRyb3BVbmRlZmluZWRLZXlzKHtcbiAgICBlbnZpcm9ubWVudDogb3B0aW9ucy5lbnZpcm9ubWVudCB8fCBERUZBVUxUX0VOVklST05NRU5ULFxuICAgIHJlbGVhc2U6IG9wdGlvbnMucmVsZWFzZSxcbiAgICBwdWJsaWNfa2V5LFxuICAgIHRyYWNlX2lkLFxuICB9KSA7XG5cbiAgY2xpZW50LmVtaXQoJ2NyZWF0ZURzYycsIGRzYyk7XG5cbiAgcmV0dXJuIGRzYztcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgZHluYW1pYyBzYW1wbGluZyBjb250ZXh0IGZyb20gYSBzcGFuIChhbmQgY2xpZW50IGFuZCBzY29wZSlcbiAqXG4gKiBAcGFyYW0gc3BhbiB0aGUgc3BhbiBmcm9tIHdoaWNoIGEgZmV3IHZhbHVlcyBsaWtlIHRoZSByb290IHNwYW4gbmFtZSBhbmQgc2FtcGxlIHJhdGUgYXJlIGV4dHJhY3RlZC5cbiAqXG4gKiBAcmV0dXJucyBhIGR5bmFtaWMgc2FtcGxpbmcgY29udGV4dFxuICovXG5mdW5jdGlvbiBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4oc3Bhbikge1xuICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoKTtcbiAgaWYgKCFjbGllbnQpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICBjb25zdCBkc2MgPSBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbUNsaWVudChzcGFuVG9KU09OKHNwYW4pLnRyYWNlX2lkIHx8ICcnLCBjbGllbnQpO1xuXG4gIGNvbnN0IHJvb3RTcGFuID0gZ2V0Um9vdFNwYW4oc3Bhbik7XG4gIGlmICghcm9vdFNwYW4pIHtcbiAgICByZXR1cm4gZHNjO1xuICB9XG5cbiAgY29uc3QgZnJvemVuRHNjID0gKHJvb3RTcGFuIClbRlJPWkVOX0RTQ19GSUVMRF07XG4gIGlmIChmcm96ZW5Ec2MpIHtcbiAgICByZXR1cm4gZnJvemVuRHNjO1xuICB9XG5cbiAgY29uc3QganNvblNwYW4gPSBzcGFuVG9KU09OKHJvb3RTcGFuKTtcbiAgY29uc3QgYXR0cmlidXRlcyA9IGpzb25TcGFuLmRhdGEgfHwge307XG4gIGNvbnN0IG1heWJlU2FtcGxlUmF0ZSA9IGF0dHJpYnV0ZXNbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9TQU1QTEVfUkFURV07XG5cbiAgaWYgKG1heWJlU2FtcGxlUmF0ZSAhPSBudWxsKSB7XG4gICAgZHNjLnNhbXBsZV9yYXRlID0gYCR7bWF5YmVTYW1wbGVSYXRlfWA7XG4gIH1cblxuICAvLyBXZSBkb24ndCB3YW50IHRvIGhhdmUgYSB0cmFuc2FjdGlvbiBuYW1lIGluIHRoZSBEU0MgaWYgdGhlIHNvdXJjZSBpcyBcInVybFwiIGJlY2F1c2UgVVJMcyBtaWdodCBjb250YWluIFBJSVxuICBjb25zdCBzb3VyY2UgPSBhdHRyaWJ1dGVzW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTtcblxuICAvLyBhZnRlciBKU09OIGNvbnZlcnNpb24sIHR4bi5uYW1lIGJlY29tZXMganNvblNwYW4uZGVzY3JpcHRpb25cbiAgaWYgKHNvdXJjZSAmJiBzb3VyY2UgIT09ICd1cmwnKSB7XG4gICAgZHNjLnRyYW5zYWN0aW9uID0ganNvblNwYW4uZGVzY3JpcHRpb247XG4gIH1cblxuICBkc2Muc2FtcGxlZCA9IFN0cmluZyhzcGFuSXNTYW1wbGVkKHJvb3RTcGFuKSk7XG5cbiAgY2xpZW50LmVtaXQoJ2NyZWF0ZURzYycsIGRzYyk7XG5cbiAgcmV0dXJuIGRzYztcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgU3BhbiB0byBhIGJhZ2dhZ2UgaGVhZGVyLlxuICovXG5mdW5jdGlvbiBzcGFuVG9CYWdnYWdlSGVhZGVyKHNwYW4pIHtcbiAgY29uc3QgZHNjID0gZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuKHNwYW4pO1xuICByZXR1cm4gZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlcihkc2MpO1xufVxuXG5leHBvcnQgeyBmcmVlemVEc2NPblNwYW4sIGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tQ2xpZW50LCBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4sIHNwYW5Ub0JhZ2dhZ2VIZWFkZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWR5bmFtaWNTYW1wbGluZ0NvbnRleHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/errors.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/errors.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerSpanErrorInstrumentation\": function() { return /* binding */ registerSpanErrorInstrumentation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _spanstatus_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spanstatus.js */ \"./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n\n\n\n\n\nlet errorsInstrumented = false;\n\n/**\n * Ensure that global errors automatically set the active span status.\n */\nfunction registerSpanErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addGlobalErrorInstrumentationHandler)(errorCallback);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addGlobalUnhandledRejectionInstrumentationHandler)(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active root span as failed\n */\nfunction errorCallback() {\n  const activeSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.getActiveSpan)();\n  const rootSpan = activeSpan && (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.getRootSpan)(activeSpan);\n  if (rootSpan) {\n    const message = 'internal_error';\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`[Tracing] Root span: ${message} -> Global error occured`);\n    rootSpan.setStatus({ code: _spanstatus_js__WEBPACK_IMPORTED_MODULE_3__.SPAN_STATUS_ERROR, message });\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\n\n//# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2Vycm9ycy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnSTtBQUNoRjtBQUNtQjtBQUNmOztBQUVwRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUUsbUZBQW9DO0FBQ3RDLEVBQUUsZ0dBQWlEO0FBQ25EOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGtFQUFhO0FBQ2xDLGlDQUFpQyxnRUFBVztBQUM1QztBQUNBO0FBQ0EsSUFBSSx3REFBVyxJQUFJLHFEQUFVLHlCQUF5QixTQUFTO0FBQy9ELHlCQUF5QixNQUFNLDZEQUFpQixXQUFXO0FBQzNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUU0QztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2Vycm9ycy5qcz9kYjI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZEdsb2JhbEVycm9ySW5zdHJ1bWVudGF0aW9uSGFuZGxlciwgYWRkR2xvYmFsVW5oYW5kbGVkUmVqZWN0aW9uSW5zdHJ1bWVudGF0aW9uSGFuZGxlciwgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4uL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCB7IGdldEFjdGl2ZVNwYW4sIGdldFJvb3RTcGFuIH0gZnJvbSAnLi4vdXRpbHMvc3BhblV0aWxzLmpzJztcbmltcG9ydCB7IFNQQU5fU1RBVFVTX0VSUk9SIH0gZnJvbSAnLi9zcGFuc3RhdHVzLmpzJztcblxubGV0IGVycm9yc0luc3RydW1lbnRlZCA9IGZhbHNlO1xuXG4vKipcbiAqIEVuc3VyZSB0aGF0IGdsb2JhbCBlcnJvcnMgYXV0b21hdGljYWxseSBzZXQgdGhlIGFjdGl2ZSBzcGFuIHN0YXR1cy5cbiAqL1xuZnVuY3Rpb24gcmVnaXN0ZXJTcGFuRXJyb3JJbnN0cnVtZW50YXRpb24oKSB7XG4gIGlmIChlcnJvcnNJbnN0cnVtZW50ZWQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBlcnJvcnNJbnN0cnVtZW50ZWQgPSB0cnVlO1xuICBhZGRHbG9iYWxFcnJvckluc3RydW1lbnRhdGlvbkhhbmRsZXIoZXJyb3JDYWxsYmFjayk7XG4gIGFkZEdsb2JhbFVuaGFuZGxlZFJlamVjdGlvbkluc3RydW1lbnRhdGlvbkhhbmRsZXIoZXJyb3JDYWxsYmFjayk7XG59XG5cbi8qKlxuICogSWYgYW4gZXJyb3Igb3IgdW5oYW5kbGVkIHByb21pc2Ugb2NjdXJzLCB3ZSBtYXJrIHRoZSBhY3RpdmUgcm9vdCBzcGFuIGFzIGZhaWxlZFxuICovXG5mdW5jdGlvbiBlcnJvckNhbGxiYWNrKCkge1xuICBjb25zdCBhY3RpdmVTcGFuID0gZ2V0QWN0aXZlU3BhbigpO1xuICBjb25zdCByb290U3BhbiA9IGFjdGl2ZVNwYW4gJiYgZ2V0Um9vdFNwYW4oYWN0aXZlU3Bhbik7XG4gIGlmIChyb290U3Bhbikge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSAnaW50ZXJuYWxfZXJyb3InO1xuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5sb2coYFtUcmFjaW5nXSBSb290IHNwYW46ICR7bWVzc2FnZX0gLT4gR2xvYmFsIGVycm9yIG9jY3VyZWRgKTtcbiAgICByb290U3Bhbi5zZXRTdGF0dXMoeyBjb2RlOiBTUEFOX1NUQVRVU19FUlJPUiwgbWVzc2FnZSB9KTtcbiAgfVxufVxuXG4vLyBUaGUgZnVuY3Rpb24gbmFtZSB3aWxsIGJlIGxvc3Qgd2hlbiBidW5kbGluZyBidXQgd2UgbmVlZCB0byBiZSBhYmxlIHRvIGlkZW50aWZ5IHRoaXMgbGlzdGVuZXIgbGF0ZXIgdG8gbWFpbnRhaW4gdGhlXG4vLyBub2RlLmpzIGRlZmF1bHQgZXhpdCBiZWhhdmlvdXJcbmVycm9yQ2FsbGJhY2sudGFnID0gJ3NlbnRyeV90cmFjaW5nRXJyb3JDYWxsYmFjayc7XG5cbmV4cG9ydCB7IHJlZ2lzdGVyU3BhbkVycm9ySW5zdHJ1bWVudGF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/errors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/hubextensions.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/hubextensions.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addTracingExtensions\": function() { return /* binding */ addTracingExtensions; }\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/@sentry/core/esm/tracing/errors.js\");\n\n\n/**\n * @deprecated Use `registerSpanErrorInstrumentation()` instead. In v9, this function will be removed. Note that you don't need to call this in Node-based SDKs or when using `browserTracingIntegration`.\n */\nfunction addTracingExtensions() {\n  (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.registerSpanErrorInstrumentation)();\n}\n\n\n//# sourceMappingURL=hubextensions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2h1YmV4dGVuc2lvbnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0Q7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSw0RUFBZ0M7QUFDbEM7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3RyYWNpbmcvaHViZXh0ZW5zaW9ucy5qcz9kN2VhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlZ2lzdGVyU3BhbkVycm9ySW5zdHJ1bWVudGF0aW9uIH0gZnJvbSAnLi9lcnJvcnMuanMnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgcmVnaXN0ZXJTcGFuRXJyb3JJbnN0cnVtZW50YXRpb24oKWAgaW5zdGVhZC4gSW4gdjksIHRoaXMgZnVuY3Rpb24gd2lsbCBiZSByZW1vdmVkLiBOb3RlIHRoYXQgeW91IGRvbid0IG5lZWQgdG8gY2FsbCB0aGlzIGluIE5vZGUtYmFzZWQgU0RLcyBvciB3aGVuIHVzaW5nIGBicm93c2VyVHJhY2luZ0ludGVncmF0aW9uYC5cbiAqL1xuZnVuY3Rpb24gYWRkVHJhY2luZ0V4dGVuc2lvbnMoKSB7XG4gIHJlZ2lzdGVyU3BhbkVycm9ySW5zdHJ1bWVudGF0aW9uKCk7XG59XG5cbmV4cG9ydCB7IGFkZFRyYWNpbmdFeHRlbnNpb25zIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odWJleHRlbnNpb25zLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/hubextensions.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/idleSpan.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/idleSpan.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TRACING_DEFAULTS\": function() { return /* binding */ TRACING_DEFAULTS; },\n/* harmony export */   \"startIdleSpan\": function() { return /* binding */ startIdleSpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../semanticAttributes.js */ \"./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/spanOnScope.js */ \"./node_modules/@sentry/core/esm/utils/spanOnScope.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sentryNonRecordingSpan.js */ \"./node_modules/@sentry/core/esm/tracing/sentryNonRecordingSpan.js\");\n/* harmony import */ var _spanstatus_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./spanstatus.js */ \"./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _trace_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./trace.js */ \"./node_modules/@sentry/core/esm/tracing/trace.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  childSpanTimeout: 15000,\n};\n\nconst FINISH_REASON_HEARTBEAT_FAILED = 'heartbeatFailed';\nconst FINISH_REASON_IDLE_TIMEOUT = 'idleTimeout';\nconst FINISH_REASON_FINAL_TIMEOUT = 'finalTimeout';\nconst FINISH_REASON_EXTERNAL_FINISH = 'externalFinish';\n\n/**\n * An idle span is a span that automatically finishes. It does this by tracking child spans as activities.\n * An idle span is always the active span.\n */\nfunction startIdleSpan(startSpanOptions, options = {}) {\n  // Activities store a list of active spans\n  const activities = new Map();\n\n  // We should not use heartbeat if we finished a span\n  let _finished = false;\n\n  // Timer that tracks idleTimeout\n  let _idleTimeoutID;\n\n  // The reason why the span was finished\n  let _finishReason = FINISH_REASON_EXTERNAL_FINISH;\n\n  let _autoFinishAllowed = !options.disableAutoFinish;\n\n  const {\n    idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    finalTimeout = TRACING_DEFAULTS.finalTimeout,\n    childSpanTimeout = TRACING_DEFAULTS.childSpanTimeout,\n    beforeSpanEnd,\n  } = options;\n\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n\n  if (!client || !(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_1__.hasTracingEnabled)()) {\n    return new _sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_2__.SentryNonRecordingSpan();\n  }\n\n  const scope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n  const previousActiveSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.getActiveSpan)();\n  const span = _startIdleSpan(startSpanOptions);\n\n  // We patch span.end to ensure we can run some things before the span is ended\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  span.end = new Proxy(span.end, {\n    apply(target, thisArg, args) {\n      if (beforeSpanEnd) {\n        beforeSpanEnd(span);\n      }\n\n      // Just ensuring that this keeps working, even if we ever have more arguments here\n      const [definedEndTimestamp, ...rest] = args;\n      const timestamp = definedEndTimestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.timestampInSeconds)();\n      const spanEndTimestamp = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanTimeInputToSeconds)(timestamp);\n\n      // Ensure we end with the last span timestamp, if possible\n      const spans = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.getSpanDescendants)(span).filter(child => child !== span);\n\n      // If we have no spans, we just end, nothing else to do here\n      if (!spans.length) {\n        onIdleSpanEnded(spanEndTimestamp);\n        return Reflect.apply(target, thisArg, [spanEndTimestamp, ...rest]);\n      }\n\n      const childEndTimestamps = spans\n        .map(span => (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).timestamp)\n        .filter(timestamp => !!timestamp) ;\n      const latestSpanEndTimestamp = childEndTimestamps.length ? Math.max(...childEndTimestamps) : undefined;\n\n      // In reality this should always exist here, but type-wise it may be undefined...\n      const spanStartTimestamp = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).start_timestamp;\n\n      // The final endTimestamp should:\n      // * Never be before the span start timestamp\n      // * Be the latestSpanEndTimestamp, if there is one, and it is smaller than the passed span end timestamp\n      // * Otherwise be the passed end timestamp\n      // Final timestamp can never be after finalTimeout\n      const endTimestamp = Math.min(\n        spanStartTimestamp ? spanStartTimestamp + finalTimeout / 1000 : Infinity,\n        Math.max(spanStartTimestamp || -Infinity, Math.min(spanEndTimestamp, latestSpanEndTimestamp || Infinity)),\n      );\n\n      onIdleSpanEnded(endTimestamp);\n      return Reflect.apply(target, thisArg, [endTimestamp, ...rest]);\n    },\n  });\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   */\n  function _cancelIdleTimeout() {\n    if (_idleTimeoutID) {\n      clearTimeout(_idleTimeoutID);\n      _idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  function _restartIdleTimeout(endTimestamp) {\n    _cancelIdleTimeout();\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && activities.size === 0 && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_IDLE_TIMEOUT;\n        span.end(endTimestamp);\n      }\n    }, idleTimeout);\n  }\n\n  /**\n   * Restarts child span timeout, if there is none running it will start one.\n   */\n  function _restartChildSpanTimeout(endTimestamp) {\n    _idleTimeoutID = setTimeout(() => {\n      if (!_finished && _autoFinishAllowed) {\n        _finishReason = FINISH_REASON_HEARTBEAT_FAILED;\n        span.end(endTimestamp);\n      }\n    }, childSpanTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  function _pushActivity(spanId) {\n    _cancelIdleTimeout();\n    activities.set(spanId, true);\n\n    const endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.timestampInSeconds)();\n    // We need to add the timeout here to have the real endtimestamp of the idle span\n    // Remember timestampInSeconds is in seconds, timeout is in ms\n    _restartChildSpanTimeout(endTimestamp + childSpanTimeout / 1000);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  function _popActivity(spanId) {\n    if (activities.has(spanId)) {\n      activities.delete(spanId);\n    }\n\n    if (activities.size === 0) {\n      const endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.timestampInSeconds)();\n      // We need to add the timeout here to have the real endtimestamp of the idle span\n      // Remember timestampInSeconds is in seconds, timeout is in ms\n      _restartIdleTimeout(endTimestamp + idleTimeout / 1000);\n    }\n  }\n\n  function onIdleSpanEnded(endTimestamp) {\n    _finished = true;\n    activities.clear();\n\n    (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_5__._setSpanForScope)(scope, previousActiveSpan);\n\n    const spanJSON = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span);\n\n    const { start_timestamp: startTimestamp } = spanJSON;\n    // This should never happen, but to make TS happy...\n    if (!startTimestamp) {\n      return;\n    }\n\n    const attributes = spanJSON.data || {};\n    if (!attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_6__.SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON]) {\n      span.setAttribute(_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_6__.SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON, _finishReason);\n    }\n\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Tracing] Idle span \"${spanJSON.op}\" finished`);\n\n    const childSpans = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.getSpanDescendants)(span).filter(child => child !== span);\n\n    let discardedSpans = 0;\n    childSpans.forEach(childSpan => {\n      // We cancel all pending spans with status \"cancelled\" to indicate the idle span was finished early\n      if (childSpan.isRecording()) {\n        childSpan.setStatus({ code: _spanstatus_js__WEBPACK_IMPORTED_MODULE_7__.SPAN_STATUS_ERROR, message: 'cancelled' });\n        childSpan.end(endTimestamp);\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] Cancelling span since span ended early', JSON.stringify(childSpan, undefined, 2));\n      }\n\n      const childSpanJSON = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(childSpan);\n      const { timestamp: childEndTimestamp = 0, start_timestamp: childStartTimestamp = 0 } = childSpanJSON;\n\n      const spanStartedBeforeIdleSpanEnd = childStartTimestamp <= endTimestamp;\n\n      // Add a delta with idle timeout so that we prevent false positives\n      const timeoutWithMarginOfError = (finalTimeout + idleTimeout) / 1000;\n      const spanEndedBeforeFinalTimeout = childEndTimestamp - childStartTimestamp <= timeoutWithMarginOfError;\n\n      if (_debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD) {\n        const stringifiedSpan = JSON.stringify(childSpan, undefined, 2);\n        if (!spanStartedBeforeIdleSpanEnd) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] Discarding span since it happened after idle span was finished', stringifiedSpan);\n        } else if (!spanEndedBeforeFinalTimeout) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] Discarding span since it finished after idle span final timeout', stringifiedSpan);\n        }\n      }\n\n      if (!spanEndedBeforeFinalTimeout || !spanStartedBeforeIdleSpanEnd) {\n        (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.removeChildSpanFromSpan)(span, childSpan);\n        discardedSpans++;\n      }\n    });\n\n    if (discardedSpans > 0) {\n      span.setAttribute('sentry.idle_span_discarded_spans', discardedSpans);\n    }\n  }\n\n  client.on('spanStart', startedSpan => {\n    // If we already finished the idle span,\n    // or if this is the idle span itself being started,\n    // or if the started span has already been closed,\n    // we don't care about it for activity\n    if (_finished || startedSpan === span || !!(0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(startedSpan).timestamp) {\n      return;\n    }\n\n    const allSpans = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.getSpanDescendants)(span);\n\n    // If the span that was just started is a child of the idle span, we should track it\n    if (allSpans.includes(startedSpan)) {\n      _pushActivity(startedSpan.spanContext().spanId);\n    }\n  });\n\n  client.on('spanEnd', endedSpan => {\n    if (_finished) {\n      return;\n    }\n\n    _popActivity(endedSpan.spanContext().spanId);\n  });\n\n  client.on('idleSpanEnableAutoFinish', spanToAllowAutoFinish => {\n    if (spanToAllowAutoFinish === span) {\n      _autoFinishAllowed = true;\n      _restartIdleTimeout();\n\n      if (activities.size) {\n        _restartChildSpanTimeout();\n      }\n    }\n  });\n\n  // We only start the initial idle timeout if we are not delaying the auto finish\n  if (!options.disableAutoFinish) {\n    _restartIdleTimeout();\n  }\n\n  setTimeout(() => {\n    if (!_finished) {\n      span.setStatus({ code: _spanstatus_js__WEBPACK_IMPORTED_MODULE_7__.SPAN_STATUS_ERROR, message: 'deadline_exceeded' });\n      _finishReason = FINISH_REASON_FINAL_TIMEOUT;\n      span.end();\n    }\n  }, finalTimeout);\n\n  return span;\n}\n\nfunction _startIdleSpan(options) {\n  const span = (0,_trace_js__WEBPACK_IMPORTED_MODULE_9__.startInactiveSpan)(options);\n\n  (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_5__._setSpanForScope)((0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)(), span);\n\n  _debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log('[Tracing] Started span is an idle span');\n\n  return span;\n}\n\n\n//# sourceMappingURL=idleSpan.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/idleSpan.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/logSpans.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/logSpans.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logSpanEnd\": function() { return /* binding */ logSpanEnd; },\n/* harmony export */   \"logSpanStart\": function() { return /* binding */ logSpanStart; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n/**\n * Print a log message for a started span.\n */\nfunction logSpanStart(span) {\n  if (!_debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >', parent_span_id: parentSpanId } = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(span);\n  const { spanId } = span.spanContext();\n\n  const sampled = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanIsSampled)(span);\n  const rootSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.getRootSpan)(span);\n  const isRootSpan = rootSpan === span;\n\n  const header = `[Tracing] Starting ${sampled ? 'sampled' : 'unsampled'} ${isRootSpan ? 'root ' : ''}span`;\n\n  const infoParts = [`op: ${op}`, `name: ${description}`, `ID: ${spanId}`];\n\n  if (parentSpanId) {\n    infoParts.push(`parent ID: ${parentSpanId}`);\n  }\n\n  if (!isRootSpan) {\n    const { op, description } = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(rootSpan);\n    infoParts.push(`root ID: ${rootSpan.spanContext().spanId}`);\n    if (op) {\n      infoParts.push(`root op: ${op}`);\n    }\n    if (description) {\n      infoParts.push(`root description: ${description}`);\n    }\n  }\n\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`${header}\n  ${infoParts.join('\\n  ')}`);\n}\n\n/**\n * Print a log message for an ended span.\n */\nfunction logSpanEnd(span) {\n  if (!_debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD) return;\n\n  const { description = '< unknown name >', op = '< unknown op >' } = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(span);\n  const { spanId } = span.spanContext();\n  const rootSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.getRootSpan)(span);\n  const isRootSpan = rootSpan === span;\n\n  const msg = `[Tracing] Finishing \"${op}\" ${isRootSpan ? 'root ' : ''}span \"${description}\" with ID ${spanId}`;\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(msg);\n}\n\n\n//# sourceMappingURL=logSpans.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2xvZ1NwYW5zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVDO0FBQ1M7QUFDK0I7O0FBRS9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyx3REFBVzs7QUFFbEIsVUFBVSx3RkFBd0YsRUFBRSwrREFBVTtBQUM5RyxVQUFVLFNBQVM7O0FBRW5CLGtCQUFrQixrRUFBYTtBQUMvQixtQkFBbUIsZ0VBQVc7QUFDOUI7O0FBRUEsdUNBQXVDLG1DQUFtQyxFQUFFLDBCQUEwQjs7QUFFdEcsNEJBQTRCLEdBQUcsWUFBWSxZQUFZLFVBQVUsT0FBTzs7QUFFeEU7QUFDQSxpQ0FBaUMsYUFBYTtBQUM5Qzs7QUFFQTtBQUNBLFlBQVksa0JBQWtCLEVBQUUsK0RBQVU7QUFDMUMsK0JBQStCLDhCQUE4QjtBQUM3RDtBQUNBLGlDQUFpQyxHQUFHO0FBQ3BDO0FBQ0E7QUFDQSwwQ0FBMEMsWUFBWTtBQUN0RDtBQUNBOztBQUVBLEVBQUUscURBQVUsSUFBSTtBQUNoQixJQUFJLHVCQUF1QjtBQUMzQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sd0RBQVc7O0FBRWxCLFVBQVUsMERBQTBELEVBQUUsK0RBQVU7QUFDaEYsVUFBVSxTQUFTO0FBQ25CLG1CQUFtQixnRUFBVztBQUM5Qjs7QUFFQSxzQ0FBc0MsR0FBRyxJQUFJLDBCQUEwQixRQUFRLFlBQVksWUFBWSxPQUFPO0FBQzlHLEVBQUUscURBQVU7QUFDWjs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy9sb2dTcGFucy5qcz9hYzI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBzcGFuVG9KU09OLCBzcGFuSXNTYW1wbGVkLCBnZXRSb290U3BhbiB9IGZyb20gJy4uL3V0aWxzL3NwYW5VdGlscy5qcyc7XG5cbi8qKlxuICogUHJpbnQgYSBsb2cgbWVzc2FnZSBmb3IgYSBzdGFydGVkIHNwYW4uXG4gKi9cbmZ1bmN0aW9uIGxvZ1NwYW5TdGFydChzcGFuKSB7XG4gIGlmICghREVCVUdfQlVJTEQpIHJldHVybjtcblxuICBjb25zdCB7IGRlc2NyaXB0aW9uID0gJzwgdW5rbm93biBuYW1lID4nLCBvcCA9ICc8IHVua25vd24gb3AgPicsIHBhcmVudF9zcGFuX2lkOiBwYXJlbnRTcGFuSWQgfSA9IHNwYW5Ub0pTT04oc3Bhbik7XG4gIGNvbnN0IHsgc3BhbklkIH0gPSBzcGFuLnNwYW5Db250ZXh0KCk7XG5cbiAgY29uc3Qgc2FtcGxlZCA9IHNwYW5Jc1NhbXBsZWQoc3Bhbik7XG4gIGNvbnN0IHJvb3RTcGFuID0gZ2V0Um9vdFNwYW4oc3Bhbik7XG4gIGNvbnN0IGlzUm9vdFNwYW4gPSByb290U3BhbiA9PT0gc3BhbjtcblxuICBjb25zdCBoZWFkZXIgPSBgW1RyYWNpbmddIFN0YXJ0aW5nICR7c2FtcGxlZCA/ICdzYW1wbGVkJyA6ICd1bnNhbXBsZWQnfSAke2lzUm9vdFNwYW4gPyAncm9vdCAnIDogJyd9c3BhbmA7XG5cbiAgY29uc3QgaW5mb1BhcnRzID0gW2BvcDogJHtvcH1gLCBgbmFtZTogJHtkZXNjcmlwdGlvbn1gLCBgSUQ6ICR7c3BhbklkfWBdO1xuXG4gIGlmIChwYXJlbnRTcGFuSWQpIHtcbiAgICBpbmZvUGFydHMucHVzaChgcGFyZW50IElEOiAke3BhcmVudFNwYW5JZH1gKTtcbiAgfVxuXG4gIGlmICghaXNSb290U3Bhbikge1xuICAgIGNvbnN0IHsgb3AsIGRlc2NyaXB0aW9uIH0gPSBzcGFuVG9KU09OKHJvb3RTcGFuKTtcbiAgICBpbmZvUGFydHMucHVzaChgcm9vdCBJRDogJHtyb290U3Bhbi5zcGFuQ29udGV4dCgpLnNwYW5JZH1gKTtcbiAgICBpZiAob3ApIHtcbiAgICAgIGluZm9QYXJ0cy5wdXNoKGByb290IG9wOiAke29wfWApO1xuICAgIH1cbiAgICBpZiAoZGVzY3JpcHRpb24pIHtcbiAgICAgIGluZm9QYXJ0cy5wdXNoKGByb290IGRlc2NyaXB0aW9uOiAke2Rlc2NyaXB0aW9ufWApO1xuICAgIH1cbiAgfVxuXG4gIGxvZ2dlci5sb2coYCR7aGVhZGVyfVxuICAke2luZm9QYXJ0cy5qb2luKCdcXG4gICcpfWApO1xufVxuXG4vKipcbiAqIFByaW50IGEgbG9nIG1lc3NhZ2UgZm9yIGFuIGVuZGVkIHNwYW4uXG4gKi9cbmZ1bmN0aW9uIGxvZ1NwYW5FbmQoc3Bhbikge1xuICBpZiAoIURFQlVHX0JVSUxEKSByZXR1cm47XG5cbiAgY29uc3QgeyBkZXNjcmlwdGlvbiA9ICc8IHVua25vd24gbmFtZSA+Jywgb3AgPSAnPCB1bmtub3duIG9wID4nIH0gPSBzcGFuVG9KU09OKHNwYW4pO1xuICBjb25zdCB7IHNwYW5JZCB9ID0gc3Bhbi5zcGFuQ29udGV4dCgpO1xuICBjb25zdCByb290U3BhbiA9IGdldFJvb3RTcGFuKHNwYW4pO1xuICBjb25zdCBpc1Jvb3RTcGFuID0gcm9vdFNwYW4gPT09IHNwYW47XG5cbiAgY29uc3QgbXNnID0gYFtUcmFjaW5nXSBGaW5pc2hpbmcgXCIke29wfVwiICR7aXNSb290U3BhbiA/ICdyb290ICcgOiAnJ31zcGFuIFwiJHtkZXNjcmlwdGlvbn1cIiB3aXRoIElEICR7c3BhbklkfWA7XG4gIGxvZ2dlci5sb2cobXNnKTtcbn1cblxuZXhwb3J0IHsgbG9nU3BhbkVuZCwgbG9nU3BhblN0YXJ0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dTcGFucy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/logSpans.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/measurement.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/measurement.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setMeasurement\": function() { return /* binding */ setMeasurement; },\n/* harmony export */   \"timedEventsToMeasurements\": function() { return /* binding */ timedEventsToMeasurements; }\n/* harmony export */ });\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../semanticAttributes.js */ \"./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n/**\n * Adds a measurement to the current active transaction.\n */\nfunction setMeasurement(name, value, unit) {\n  const activeSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_0__.getActiveSpan)();\n  const rootSpan = activeSpan && (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_0__.getRootSpan)(activeSpan);\n\n  if (rootSpan) {\n    rootSpan.addEvent(name, {\n      [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: value,\n      [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: unit ,\n    });\n  }\n}\n\n/**\n * Convert timed events to measurements.\n */\nfunction timedEventsToMeasurements(events) {\n  if (!events || events.length === 0) {\n    return undefined;\n  }\n\n  const measurements = {};\n  events.forEach(event => {\n    const attributes = event.attributes || {};\n    const unit = attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT] ;\n    const value = attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE] ;\n\n    if (typeof unit === 'string' && typeof value === 'number') {\n      measurements[event.name] = { value, unit };\n    }\n  });\n\n  return measurements;\n}\n\n\n//# sourceMappingURL=measurement.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL21lYXN1cmVtZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUk7QUFDaEU7O0FBRW5FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGtFQUFhO0FBQ2xDLGlDQUFpQyxnRUFBVzs7QUFFNUM7QUFDQTtBQUNBLE9BQU8sK0ZBQTJDO0FBQ2xELE9BQU8sOEZBQTBDO0FBQ2pELEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw4RkFBMEM7QUFDdEUsNkJBQTZCLCtGQUEyQzs7QUFFeEU7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRXFEO0FBQ3JEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3RyYWNpbmcvbWVhc3VyZW1lbnQuanM/OWEzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX01FQVNVUkVNRU5UX1ZBTFVFLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX01FQVNVUkVNRU5UX1VOSVQgfSBmcm9tICcuLi9zZW1hbnRpY0F0dHJpYnV0ZXMuanMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZlU3BhbiwgZ2V0Um9vdFNwYW4gfSBmcm9tICcuLi91dGlscy9zcGFuVXRpbHMuanMnO1xuXG4vKipcbiAqIEFkZHMgYSBtZWFzdXJlbWVudCB0byB0aGUgY3VycmVudCBhY3RpdmUgdHJhbnNhY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHNldE1lYXN1cmVtZW50KG5hbWUsIHZhbHVlLCB1bml0KSB7XG4gIGNvbnN0IGFjdGl2ZVNwYW4gPSBnZXRBY3RpdmVTcGFuKCk7XG4gIGNvbnN0IHJvb3RTcGFuID0gYWN0aXZlU3BhbiAmJiBnZXRSb290U3BhbihhY3RpdmVTcGFuKTtcblxuICBpZiAocm9vdFNwYW4pIHtcbiAgICByb290U3Bhbi5hZGRFdmVudChuYW1lLCB7XG4gICAgICBbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9NRUFTVVJFTUVOVF9WQUxVRV06IHZhbHVlLFxuICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfTUVBU1VSRU1FTlRfVU5JVF06IHVuaXQgLFxuICAgIH0pO1xuICB9XG59XG5cbi8qKlxuICogQ29udmVydCB0aW1lZCBldmVudHMgdG8gbWVhc3VyZW1lbnRzLlxuICovXG5mdW5jdGlvbiB0aW1lZEV2ZW50c1RvTWVhc3VyZW1lbnRzKGV2ZW50cykge1xuICBpZiAoIWV2ZW50cyB8fCBldmVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGNvbnN0IG1lYXN1cmVtZW50cyA9IHt9O1xuICBldmVudHMuZm9yRWFjaChldmVudCA9PiB7XG4gICAgY29uc3QgYXR0cmlidXRlcyA9IGV2ZW50LmF0dHJpYnV0ZXMgfHwge307XG4gICAgY29uc3QgdW5pdCA9IGF0dHJpYnV0ZXNbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9NRUFTVVJFTUVOVF9VTklUXSA7XG4gICAgY29uc3QgdmFsdWUgPSBhdHRyaWJ1dGVzW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfTUVBU1VSRU1FTlRfVkFMVUVdIDtcblxuICAgIGlmICh0eXBlb2YgdW5pdCA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgbWVhc3VyZW1lbnRzW2V2ZW50Lm5hbWVdID0geyB2YWx1ZSwgdW5pdCB9O1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIG1lYXN1cmVtZW50cztcbn1cblxuZXhwb3J0IHsgc2V0TWVhc3VyZW1lbnQsIHRpbWVkRXZlbnRzVG9NZWFzdXJlbWVudHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lYXN1cmVtZW50LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/measurement.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/sampling.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/sampling.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sampleSpan\": function() { return /* binding */ sampleSpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _utils_parseSampleRate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/parseSampleRate.js */ \"./node_modules/@sentry/core/esm/utils/parseSampleRate.js\");\n\n\n\n\n\n/**\n * Makes a sampling decision for the given options.\n *\n * Called every time a root span is created. Only root spans which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n */\nfunction sampleSpan(\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled)(options)) {\n    return [false];\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get.\n  // (The only valid values are booleans or numbers between 0 and 1.)\n  const parsedSampleRate = (0,_utils_parseSampleRate_js__WEBPACK_IMPORTED_MODULE_1__.parseSampleRate)(sampleRate);\n\n  if (parsedSampleRate === undefined) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    return [false];\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!parsedSampleRate) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    return [false, parsedSampleRate];\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  const shouldSample = Math.random() < parsedSampleRate;\n\n  // if we're not going to keep it, we're done\n  if (!shouldSample) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return [false, parsedSampleRate];\n  }\n\n  return [true, parsedSampleRate];\n}\n\n\n//# sourceMappingURL=sampling.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3NhbXBsaW5nLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVDO0FBQ1M7QUFDa0I7QUFDSjs7QUFFOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sOEVBQWlCO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMkJBQTJCLDBFQUFlOztBQUUxQztBQUNBLElBQUksd0RBQVcsSUFBSSxzREFBVztBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHdEQUFXO0FBQ2YsTUFBTSxxREFBVTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHdEQUFXO0FBQ2YsTUFBTSxxREFBVTtBQUNoQiw0R0FBNEc7QUFDNUc7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3RyYWNpbmcvc2FtcGxpbmcuanM/ZDJjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi4vZGVidWctYnVpbGQuanMnO1xuaW1wb3J0IHsgaGFzVHJhY2luZ0VuYWJsZWQgfSBmcm9tICcuLi91dGlscy9oYXNUcmFjaW5nRW5hYmxlZC5qcyc7XG5pbXBvcnQgeyBwYXJzZVNhbXBsZVJhdGUgfSBmcm9tICcuLi91dGlscy9wYXJzZVNhbXBsZVJhdGUuanMnO1xuXG4vKipcbiAqIE1ha2VzIGEgc2FtcGxpbmcgZGVjaXNpb24gZm9yIHRoZSBnaXZlbiBvcHRpb25zLlxuICpcbiAqIENhbGxlZCBldmVyeSB0aW1lIGEgcm9vdCBzcGFuIGlzIGNyZWF0ZWQuIE9ubHkgcm9vdCBzcGFucyB3aGljaCBlbWVyZ2Ugd2l0aCBhIGBzYW1wbGVkYCB2YWx1ZSBvZiBgdHJ1ZWAgd2lsbCBiZVxuICogc2VudCB0byBTZW50cnkuXG4gKi9cbmZ1bmN0aW9uIHNhbXBsZVNwYW4oXG4gIG9wdGlvbnMsXG4gIHNhbXBsaW5nQ29udGV4dCxcbikge1xuICAvLyBub3RoaW5nIHRvIGRvIGlmIHRyYWNpbmcgaXMgbm90IGVuYWJsZWRcbiAgaWYgKCFoYXNUcmFjaW5nRW5hYmxlZChvcHRpb25zKSkge1xuICAgIHJldHVybiBbZmFsc2VdO1xuICB9XG5cbiAgLy8gd2Ugd291bGQgaGF2ZSBiYWlsZWQgYWxyZWFkeSBpZiBuZWl0aGVyIGB0cmFjZXNTYW1wbGVyYCBub3IgYHRyYWNlc1NhbXBsZVJhdGVgIG5vciBgZW5hYmxlVHJhY2luZ2Agd2VyZSBkZWZpbmVkLCBzbyBvbmUgb2YgdGhlc2Ugc2hvdWxkXG4gIC8vIHdvcms7IHByZWZlciB0aGUgaG9vayBpZiBzb1xuICBsZXQgc2FtcGxlUmF0ZTtcbiAgaWYgKHR5cGVvZiBvcHRpb25zLnRyYWNlc1NhbXBsZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICBzYW1wbGVSYXRlID0gb3B0aW9ucy50cmFjZXNTYW1wbGVyKHNhbXBsaW5nQ29udGV4dCk7XG4gIH0gZWxzZSBpZiAoc2FtcGxpbmdDb250ZXh0LnBhcmVudFNhbXBsZWQgIT09IHVuZGVmaW5lZCkge1xuICAgIHNhbXBsZVJhdGUgPSBzYW1wbGluZ0NvbnRleHQucGFyZW50U2FtcGxlZDtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy50cmFjZXNTYW1wbGVSYXRlICE9PSAndW5kZWZpbmVkJykge1xuICAgIHNhbXBsZVJhdGUgPSBvcHRpb25zLnRyYWNlc1NhbXBsZVJhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiBgZW5hYmxlVHJhY2luZyA9PT0gdHJ1ZWAsIHdlIHVzZSBhIHNhbXBsZSByYXRlIG9mIDEwMCVcbiAgICBzYW1wbGVSYXRlID0gMTtcbiAgfVxuXG4gIC8vIFNpbmNlIHRoaXMgaXMgY29taW5nIGZyb20gdGhlIHVzZXIgKG9yIGZyb20gYSBmdW5jdGlvbiBwcm92aWRlZCBieSB0aGUgdXNlciksIHdobyBrbm93cyB3aGF0IHdlIG1pZ2h0IGdldC5cbiAgLy8gKFRoZSBvbmx5IHZhbGlkIHZhbHVlcyBhcmUgYm9vbGVhbnMgb3IgbnVtYmVycyBiZXR3ZWVuIDAgYW5kIDEuKVxuICBjb25zdCBwYXJzZWRTYW1wbGVSYXRlID0gcGFyc2VTYW1wbGVSYXRlKHNhbXBsZVJhdGUpO1xuXG4gIGlmIChwYXJzZWRTYW1wbGVSYXRlID09PSB1bmRlZmluZWQpIHtcbiAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIud2FybignW1RyYWNpbmddIERpc2NhcmRpbmcgdHJhbnNhY3Rpb24gYmVjYXVzZSBvZiBpbnZhbGlkIHNhbXBsZSByYXRlLicpO1xuICAgIHJldHVybiBbZmFsc2VdO1xuICB9XG5cbiAgLy8gaWYgdGhlIGZ1bmN0aW9uIHJldHVybmVkIDAgKG9yIGZhbHNlKSwgb3IgaWYgYHRyYWNlc1NhbXBsZVJhdGVgIGlzIDAsIGl0J3MgYSBzaWduIHRoZSB0cmFuc2FjdGlvbiBzaG91bGQgYmUgZHJvcHBlZFxuICBpZiAoIXBhcnNlZFNhbXBsZVJhdGUpIHtcbiAgICBERUJVR19CVUlMRCAmJlxuICAgICAgbG9nZ2VyLmxvZyhcbiAgICAgICAgYFtUcmFjaW5nXSBEaXNjYXJkaW5nIHRyYW5zYWN0aW9uIGJlY2F1c2UgJHtcbiAgICAgICAgICB0eXBlb2Ygb3B0aW9ucy50cmFjZXNTYW1wbGVyID09PSAnZnVuY3Rpb24nXG4gICAgICAgICAgICA/ICd0cmFjZXNTYW1wbGVyIHJldHVybmVkIDAgb3IgZmFsc2UnXG4gICAgICAgICAgICA6ICdhIG5lZ2F0aXZlIHNhbXBsaW5nIGRlY2lzaW9uIHdhcyBpbmhlcml0ZWQgb3IgdHJhY2VzU2FtcGxlUmF0ZSBpcyBzZXQgdG8gMCdcbiAgICAgICAgfWAsXG4gICAgICApO1xuICAgIHJldHVybiBbZmFsc2UsIHBhcnNlZFNhbXBsZVJhdGVdO1xuICB9XG5cbiAgLy8gTm93IHdlIHJvbGwgdGhlIGRpY2UuIE1hdGgucmFuZG9tIGlzIGluY2x1c2l2ZSBvZiAwLCBidXQgbm90IG9mIDEsIHNvIHN0cmljdCA8IGlzIHNhZmUgaGVyZS4gSW4gY2FzZSBzYW1wbGVSYXRlIGlzXG4gIC8vIGEgYm9vbGVhbiwgdGhlIDwgY29tcGFyaXNvbiB3aWxsIGNhdXNlIGl0IHRvIGJlIGF1dG9tYXRpY2FsbHkgY2FzdCB0byAxIGlmIGl0J3MgdHJ1ZSBhbmQgMCBpZiBpdCdzIGZhbHNlLlxuICBjb25zdCBzaG91bGRTYW1wbGUgPSBNYXRoLnJhbmRvbSgpIDwgcGFyc2VkU2FtcGxlUmF0ZTtcblxuICAvLyBpZiB3ZSdyZSBub3QgZ29pbmcgdG8ga2VlcCBpdCwgd2UncmUgZG9uZVxuICBpZiAoIXNob3VsZFNhbXBsZSkge1xuICAgIERFQlVHX0JVSUxEICYmXG4gICAgICBsb2dnZXIubG9nKFxuICAgICAgICBgW1RyYWNpbmddIERpc2NhcmRpbmcgdHJhbnNhY3Rpb24gYmVjYXVzZSBpdCdzIG5vdCBpbmNsdWRlZCBpbiB0aGUgcmFuZG9tIHNhbXBsZSAoc2FtcGxpbmcgcmF0ZSA9ICR7TnVtYmVyKFxuICAgICAgICAgIHNhbXBsZVJhdGUsXG4gICAgICAgICl9KWAsXG4gICAgICApO1xuICAgIHJldHVybiBbZmFsc2UsIHBhcnNlZFNhbXBsZVJhdGVdO1xuICB9XG5cbiAgcmV0dXJuIFt0cnVlLCBwYXJzZWRTYW1wbGVSYXRlXTtcbn1cblxuZXhwb3J0IHsgc2FtcGxlU3BhbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2FtcGxpbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/sampling.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/sentryNonRecordingSpan.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/sentryNonRecordingSpan.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SentryNonRecordingSpan\": function() { return /* binding */ SentryNonRecordingSpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n/**\n * A Sentry Span that is non-recording, meaning it will not be sent to Sentry.\n */\nclass SentryNonRecordingSpan  {\n\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n    this._spanId = spanContext.spanId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16);\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    return {\n      spanId: this._spanId,\n      traceId: this._traceId,\n      traceFlags: _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n   end(_timestamp) {}\n\n  /** @inheritdoc */\n   setAttribute(_key, _value) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setAttributes(_values) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   setStatus(_status) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   updateName(_name) {\n    return this;\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return false;\n  }\n\n  /** @inheritdoc */\n   addEvent(\n    _name,\n    _attributesOrStartTime,\n    _startTime,\n  ) {\n    return this;\n  }\n}\n\n\n//# sourceMappingURL=sentryNonRecordingSpan.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3NlbnRyeU5vblJlY29yZGluZ1NwYW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNDO0FBQ2tCOztBQUV4RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwrQkFBK0I7QUFDL0IsMkNBQTJDLG9EQUFLO0FBQ2hELHlDQUF5QyxvREFBSztBQUM5Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGdFQUFlO0FBQ2pDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFa0M7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy9zZW50cnlOb25SZWNvcmRpbmdTcGFuLmpzP2QyOTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXVpZDQgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IFRSQUNFX0ZMQUdfTk9ORSB9IGZyb20gJy4uL3V0aWxzL3NwYW5VdGlscy5qcyc7XG5cbi8qKlxuICogQSBTZW50cnkgU3BhbiB0aGF0IGlzIG5vbi1yZWNvcmRpbmcsIG1lYW5pbmcgaXQgd2lsbCBub3QgYmUgc2VudCB0byBTZW50cnkuXG4gKi9cbmNsYXNzIFNlbnRyeU5vblJlY29yZGluZ1NwYW4gIHtcblxuICAgY29uc3RydWN0b3Ioc3BhbkNvbnRleHQgPSB7fSkge1xuICAgIHRoaXMuX3RyYWNlSWQgPSBzcGFuQ29udGV4dC50cmFjZUlkIHx8IHV1aWQ0KCk7XG4gICAgdGhpcy5fc3BhbklkID0gc3BhbkNvbnRleHQuc3BhbklkIHx8IHV1aWQ0KCkuc3Vic3RyaW5nKDE2KTtcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdGRvYyAqL1xuICAgc3BhbkNvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNwYW5JZDogdGhpcy5fc3BhbklkLFxuICAgICAgdHJhY2VJZDogdGhpcy5fdHJhY2VJZCxcbiAgICAgIHRyYWNlRmxhZ3M6IFRSQUNFX0ZMQUdfTk9ORSxcbiAgICB9O1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cbiAgIGVuZChfdGltZXN0YW1wKSB7fVxuXG4gIC8qKiBAaW5oZXJpdGRvYyAqL1xuICAgc2V0QXR0cmlidXRlKF9rZXksIF92YWx1ZSkge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gICBzZXRBdHRyaWJ1dGVzKF92YWx1ZXMpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdGRvYyAqL1xuICAgc2V0U3RhdHVzKF9zdGF0dXMpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKiBAaW5oZXJpdGRvYyAqL1xuICAgdXBkYXRlTmFtZShfbmFtZSkge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gICBpc1JlY29yZGluZygpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKiogQGluaGVyaXRkb2MgKi9cbiAgIGFkZEV2ZW50KFxuICAgIF9uYW1lLFxuICAgIF9hdHRyaWJ1dGVzT3JTdGFydFRpbWUsXG4gICAgX3N0YXJ0VGltZSxcbiAgKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IHsgU2VudHJ5Tm9uUmVjb3JkaW5nU3BhbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VudHJ5Tm9uUmVjb3JkaW5nU3Bhbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/sentryNonRecordingSpan.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/sentrySpan.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/sentrySpan.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SentrySpan\": function() { return /* binding */ SentrySpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../envelope.js */ \"./node_modules/@sentry/core/esm/envelope.js\");\n/* harmony import */ var _metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../metrics/metric-summary.js */ \"./node_modules/@sentry/core/esm/metrics/metric-summary.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../semanticAttributes.js */ \"./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _logSpans_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logSpans.js */ \"./node_modules/@sentry/core/esm/tracing/logSpans.js\");\n/* harmony import */ var _measurement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./measurement.js */ \"./node_modules/@sentry/core/esm/tracing/measurement.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst MAX_SPAN_COUNT = 1000;\n\n/**\n * Span contains all data about a span\n */\nclass SentrySpan  {\n\n  /** Epoch timestamp in seconds when the span started. */\n\n  /** Epoch timestamp in seconds when the span ended. */\n\n  /** Internal keeper of the status */\n\n  /** The timed events added to this span. */\n\n  /** if true, treat span as a standalone span (not part of a transaction) */\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startSpan()`\n   * or other span methods.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext = {}) {\n    this._traceId = spanContext.traceId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n    this._spanId = spanContext.spanId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16);\n    this._startTime = spanContext.startTimestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n    this._attributes = {};\n    this.setAttributes({\n      [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'manual',\n      [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    this._name = spanContext.name;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n\n    this._events = [];\n\n    this._isStandaloneSpan = spanContext.isStandalone;\n\n    // If the span is already ended, ensure we finalize the span immediately\n    if (this._endTime) {\n      this._onSpanEnded();\n    }\n  }\n\n  /** @inheritdoc */\n   spanContext() {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.TRACE_FLAG_SAMPLED : _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.TRACE_FLAG_NONE,\n    };\n  }\n\n  /** @inheritdoc */\n   setAttribute(key, value) {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n  }\n\n  /** @inheritdoc */\n   setAttributes(attributes) {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n  }\n\n  /**\n   * This should generally not be used,\n   * but we need it for browser tracing where we want to adjust the start time afterwards.\n   * USE THIS WITH CAUTION!\n   *\n   * @hidden\n   * @internal\n   */\n   updateStartTime(timeInput) {\n    this._startTime = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.spanTimeInputToSeconds)(timeInput);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateName(name) {\n    this._name = name;\n    return this;\n  }\n\n  /** @inheritdoc */\n   end(endTimestamp) {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n\n    this._endTime = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.spanTimeInputToSeconds)(endTimestamp);\n    (0,_logSpans_js__WEBPACK_IMPORTED_MODULE_3__.logSpanEnd)(this);\n\n    this._onSpanEnded();\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n   getSpanJSON() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n      data: this._attributes,\n      description: this._name,\n      op: this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_OP],\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.getStatusMessage)(this._status),\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n      _metrics_summary: (0,_metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_4__.getMetricSummaryJsonForSpan)(this),\n      profile_id: this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_PROFILE_ID] ,\n      exclusive_time: this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME] ,\n      measurements: (0,_measurement_js__WEBPACK_IMPORTED_MODULE_5__.timedEventsToMeasurements)(this._events),\n      is_segment: (this._isStandaloneSpan && (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(this) === this) || undefined,\n      segment_id: this._isStandaloneSpan ? (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(this).spanContext().spanId : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n   isRecording() {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * @inheritdoc\n   */\n   addEvent(\n    name,\n    attributesOrStartTime,\n    startTime,\n  ) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Tracing] Adding an event to span:', name);\n\n    const time = isSpanTimeInput(attributesOrStartTime) ? attributesOrStartTime : startTime || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n    const attributes = isSpanTimeInput(attributesOrStartTime) ? {} : attributesOrStartTime || {};\n\n    const event = {\n      name,\n      time: (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.spanTimeInputToSeconds)(time),\n      attributes,\n    };\n\n    this._events.push(event);\n\n    return this;\n  }\n\n  /**\n   * This method should generally not be used,\n   * but for now we need a way to publicly check if the `_isStandaloneSpan` flag is set.\n   * USE THIS WITH CAUTION!\n   * @internal\n   * @hidden\n   * @experimental\n   */\n   isStandaloneSpan() {\n    return !!this._isStandaloneSpan;\n  }\n\n  /** Emit `spanEnd` when the span is ended. */\n   _onSpanEnded() {\n    const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_7__.getClient)();\n    if (client) {\n      client.emit('spanEnd', this);\n    }\n\n    // A segment span is basically the root span of a local span tree.\n    // So for now, this is either what we previously refer to as the root span,\n    // or a standalone span.\n    const isSegmentSpan = this._isStandaloneSpan || this === (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(this);\n\n    if (!isSegmentSpan) {\n      return;\n    }\n\n    // if this is a standalone span, we send it immediately\n    if (this._isStandaloneSpan) {\n      sendSpanEnvelope((0,_envelope_js__WEBPACK_IMPORTED_MODULE_8__.createSpanEnvelope)([this], client));\n      return;\n    }\n\n    const transactionEvent = this._convertSpanToTransaction();\n    if (transactionEvent) {\n      const scope = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getCapturedScopesOnSpan)(this).scope || (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_7__.getCurrentScope)();\n      scope.captureEvent(transactionEvent);\n    }\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n   _convertSpanToTransaction() {\n    // We can only convert finished spans\n    if (!isFullFinishedSpan((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.spanToJSON)(this))) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.getCapturedScopesOnSpan)(this);\n    const scope = capturedSpanScope || (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_7__.getCurrentScope)();\n    const client = scope.getClient() || (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_7__.getClient)();\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // The transaction span itself as well as any potential standalone spans should be filtered out\n    const finishedSpans = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.getSpanDescendants)(this).filter(span => span !== this && !isStandaloneSpan(span));\n\n    const spans = finishedSpans.map(span => (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.spanToJSON)(span)).filter(isFullFinishedSpan);\n\n    const source = this._attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] ;\n\n    const transaction = {\n      contexts: {\n        trace: (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_2__.spanToTransactionTraceContext)(this),\n      },\n      spans:\n        // spans.sort() mutates the array, but `spans` is already a copy so we can safely do this here\n        // we do not use spans anymore after this point\n        spans.length > MAX_SPAN_COUNT\n          ? spans.sort((a, b) => a.start_timestamp - b.start_timestamp).slice(0, MAX_SPAN_COUNT)\n          : spans,\n      start_timestamp: this._startTime,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n          dynamicSamplingContext: (0,_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_10__.getDynamicSamplingContextFromSpan)(this),\n        }),\n      },\n      _metrics_summary: (0,_metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_4__.getMetricSummaryJsonForSpan)(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const measurements = (0,_measurement_js__WEBPACK_IMPORTED_MODULE_5__.timedEventsToMeasurements)(this._events);\n    const hasMeasurements = measurements && Object.keys(measurements).length;\n\n    if (hasMeasurements) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n          '[Measurements] Adding measurements to transaction event',\n          JSON.stringify(measurements, undefined, 2),\n        );\n      transaction.measurements = measurements;\n    }\n\n    return transaction;\n  }\n}\n\nfunction isSpanTimeInput(value) {\n  return (value && typeof value === 'number') || value instanceof Date || Array.isArray(value);\n}\n\n// We want to filter out any incomplete SpanJSON objects\nfunction isFullFinishedSpan(input) {\n  return !!input.start_timestamp && !!input.timestamp && !!input.span_id && !!input.trace_id;\n}\n\n/** `SentrySpan`s can be sent as a standalone span rather than belonging to a transaction */\nfunction isStandaloneSpan(span) {\n  return span instanceof SentrySpan && span.isStandaloneSpan();\n}\n\n/**\n * Sends a `SpanEnvelope`.\n *\n * Note: If the envelope's spans are dropped, e.g. via `beforeSendSpan`,\n * the envelope will not be sent either.\n */\nfunction sendSpanEnvelope(envelope) {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_7__.getClient)();\n  if (!client) {\n    return;\n  }\n\n  const spanItems = envelope[1];\n  if (!spanItems || spanItems.length === 0) {\n    client.recordDroppedEvent('before_send', 'span');\n    return;\n  }\n\n  const transport = client.getTransport();\n  if (transport) {\n    transport.send(envelope).then(null, reason => {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('Error while sending span:', reason);\n    });\n  }\n}\n\n\n//# sourceMappingURL=sentrySpan.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/sentrySpan.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/spanstatus.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/spanstatus.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SPAN_STATUS_ERROR\": function() { return /* binding */ SPAN_STATUS_ERROR; },\n/* harmony export */   \"SPAN_STATUS_OK\": function() { return /* binding */ SPAN_STATUS_OK; },\n/* harmony export */   \"SPAN_STATUS_UNSET\": function() { return /* binding */ SPAN_STATUS_UNSET; },\n/* harmony export */   \"getSpanStatusFromHttpCode\": function() { return /* binding */ getSpanStatusFromHttpCode; },\n/* harmony export */   \"setHttpStatus\": function() { return /* binding */ setHttpStatus; }\n/* harmony export */ });\nconst SPAN_STATUS_UNSET = 0;\nconst SPAN_STATUS_OK = 1;\nconst SPAN_STATUS_ERROR = 2;\n\n/**\n * Converts a HTTP status code into a sentry status with a message.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\n// https://develop.sentry.dev/sdk/event-payloads/span/\nfunction getSpanStatusFromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return { code: SPAN_STATUS_OK };\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return { code: SPAN_STATUS_ERROR, message: 'unauthenticated' };\n      case 403:\n        return { code: SPAN_STATUS_ERROR, message: 'permission_denied' };\n      case 404:\n        return { code: SPAN_STATUS_ERROR, message: 'not_found' };\n      case 409:\n        return { code: SPAN_STATUS_ERROR, message: 'already_exists' };\n      case 413:\n        return { code: SPAN_STATUS_ERROR, message: 'failed_precondition' };\n      case 429:\n        return { code: SPAN_STATUS_ERROR, message: 'resource_exhausted' };\n      case 499:\n        return { code: SPAN_STATUS_ERROR, message: 'cancelled' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'invalid_argument' };\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return { code: SPAN_STATUS_ERROR, message: 'unimplemented' };\n      case 503:\n        return { code: SPAN_STATUS_ERROR, message: 'unavailable' };\n      case 504:\n        return { code: SPAN_STATUS_ERROR, message: 'deadline_exceeded' };\n      default:\n        return { code: SPAN_STATUS_ERROR, message: 'internal_error' };\n    }\n  }\n\n  return { code: SPAN_STATUS_ERROR, message: 'unknown_error' };\n}\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nfunction setHttpStatus(span, httpStatus) {\n  span.setAttribute('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus.message !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n\n\n//# sourceMappingURL=spanstatus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3NwYW5zdGF0dXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBOztBQUVBLFdBQVc7QUFDWDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEc7QUFDMUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy9zcGFuc3RhdHVzLmpzPzAyMmYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU1BBTl9TVEFUVVNfVU5TRVQgPSAwO1xuY29uc3QgU1BBTl9TVEFUVVNfT0sgPSAxO1xuY29uc3QgU1BBTl9TVEFUVVNfRVJST1IgPSAyO1xuXG4vKipcbiAqIENvbnZlcnRzIGEgSFRUUCBzdGF0dXMgY29kZSBpbnRvIGEgc2VudHJ5IHN0YXR1cyB3aXRoIGEgbWVzc2FnZS5cbiAqXG4gKiBAcGFyYW0gaHR0cFN0YXR1cyBUaGUgSFRUUCByZXNwb25zZSBzdGF0dXMgY29kZS5cbiAqIEByZXR1cm5zIFRoZSBzcGFuIHN0YXR1cyBvciB1bmtub3duX2Vycm9yLlxuICovXG4vLyBodHRwczovL2RldmVsb3Auc2VudHJ5LmRldi9zZGsvZXZlbnQtcGF5bG9hZHMvc3Bhbi9cbmZ1bmN0aW9uIGdldFNwYW5TdGF0dXNGcm9tSHR0cENvZGUoaHR0cFN0YXR1cykge1xuICBpZiAoaHR0cFN0YXR1cyA8IDQwMCAmJiBodHRwU3RhdHVzID49IDEwMCkge1xuICAgIHJldHVybiB7IGNvZGU6IFNQQU5fU1RBVFVTX09LIH07XG4gIH1cblxuICBpZiAoaHR0cFN0YXR1cyA+PSA0MDAgJiYgaHR0cFN0YXR1cyA8IDUwMCkge1xuICAgIHN3aXRjaCAoaHR0cFN0YXR1cykge1xuICAgICAgY2FzZSA0MDE6XG4gICAgICAgIHJldHVybiB7IGNvZGU6IFNQQU5fU1RBVFVTX0VSUk9SLCBtZXNzYWdlOiAndW5hdXRoZW50aWNhdGVkJyB9O1xuICAgICAgY2FzZSA0MDM6XG4gICAgICAgIHJldHVybiB7IGNvZGU6IFNQQU5fU1RBVFVTX0VSUk9SLCBtZXNzYWdlOiAncGVybWlzc2lvbl9kZW5pZWQnIH07XG4gICAgICBjYXNlIDQwNDpcbiAgICAgICAgcmV0dXJuIHsgY29kZTogU1BBTl9TVEFUVVNfRVJST1IsIG1lc3NhZ2U6ICdub3RfZm91bmQnIH07XG4gICAgICBjYXNlIDQwOTpcbiAgICAgICAgcmV0dXJuIHsgY29kZTogU1BBTl9TVEFUVVNfRVJST1IsIG1lc3NhZ2U6ICdhbHJlYWR5X2V4aXN0cycgfTtcbiAgICAgIGNhc2UgNDEzOlxuICAgICAgICByZXR1cm4geyBjb2RlOiBTUEFOX1NUQVRVU19FUlJPUiwgbWVzc2FnZTogJ2ZhaWxlZF9wcmVjb25kaXRpb24nIH07XG4gICAgICBjYXNlIDQyOTpcbiAgICAgICAgcmV0dXJuIHsgY29kZTogU1BBTl9TVEFUVVNfRVJST1IsIG1lc3NhZ2U6ICdyZXNvdXJjZV9leGhhdXN0ZWQnIH07XG4gICAgICBjYXNlIDQ5OTpcbiAgICAgICAgcmV0dXJuIHsgY29kZTogU1BBTl9TVEFUVVNfRVJST1IsIG1lc3NhZ2U6ICdjYW5jZWxsZWQnIH07XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4geyBjb2RlOiBTUEFOX1NUQVRVU19FUlJPUiwgbWVzc2FnZTogJ2ludmFsaWRfYXJndW1lbnQnIH07XG4gICAgfVxuICB9XG5cbiAgaWYgKGh0dHBTdGF0dXMgPj0gNTAwICYmIGh0dHBTdGF0dXMgPCA2MDApIHtcbiAgICBzd2l0Y2ggKGh0dHBTdGF0dXMpIHtcbiAgICAgIGNhc2UgNTAxOlxuICAgICAgICByZXR1cm4geyBjb2RlOiBTUEFOX1NUQVRVU19FUlJPUiwgbWVzc2FnZTogJ3VuaW1wbGVtZW50ZWQnIH07XG4gICAgICBjYXNlIDUwMzpcbiAgICAgICAgcmV0dXJuIHsgY29kZTogU1BBTl9TVEFUVVNfRVJST1IsIG1lc3NhZ2U6ICd1bmF2YWlsYWJsZScgfTtcbiAgICAgIGNhc2UgNTA0OlxuICAgICAgICByZXR1cm4geyBjb2RlOiBTUEFOX1NUQVRVU19FUlJPUiwgbWVzc2FnZTogJ2RlYWRsaW5lX2V4Y2VlZGVkJyB9O1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHsgY29kZTogU1BBTl9TVEFUVVNfRVJST1IsIG1lc3NhZ2U6ICdpbnRlcm5hbF9lcnJvcicgfTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4geyBjb2RlOiBTUEFOX1NUQVRVU19FUlJPUiwgbWVzc2FnZTogJ3Vua25vd25fZXJyb3InIH07XG59XG5cbi8qKlxuICogU2V0cyB0aGUgSHR0cCBzdGF0dXMgYXR0cmlidXRlcyBvbiB0aGUgY3VycmVudCBzcGFuIGJhc2VkIG9uIHRoZSBodHRwIGNvZGUuXG4gKiBBZGRpdGlvbmFsbHksIHRoZSBzcGFuJ3Mgc3RhdHVzIGlzIHVwZGF0ZWQsIGRlcGVuZGluZyBvbiB0aGUgaHR0cCBjb2RlLlxuICovXG5mdW5jdGlvbiBzZXRIdHRwU3RhdHVzKHNwYW4sIGh0dHBTdGF0dXMpIHtcbiAgc3Bhbi5zZXRBdHRyaWJ1dGUoJ2h0dHAucmVzcG9uc2Uuc3RhdHVzX2NvZGUnLCBodHRwU3RhdHVzKTtcblxuICBjb25zdCBzcGFuU3RhdHVzID0gZ2V0U3BhblN0YXR1c0Zyb21IdHRwQ29kZShodHRwU3RhdHVzKTtcbiAgaWYgKHNwYW5TdGF0dXMubWVzc2FnZSAhPT0gJ3Vua25vd25fZXJyb3InKSB7XG4gICAgc3Bhbi5zZXRTdGF0dXMoc3BhblN0YXR1cyk7XG4gIH1cbn1cblxuZXhwb3J0IHsgU1BBTl9TVEFUVVNfRVJST1IsIFNQQU5fU1RBVFVTX09LLCBTUEFOX1NUQVRVU19VTlNFVCwgZ2V0U3BhblN0YXR1c0Zyb21IdHRwQ29kZSwgc2V0SHR0cFN0YXR1cyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BhbnN0YXR1cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/spanstatus.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/trace.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/trace.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"continueTrace\": function() { return /* binding */ continueTrace; },\n/* harmony export */   \"startInactiveSpan\": function() { return /* binding */ startInactiveSpan; },\n/* harmony export */   \"startNewTrace\": function() { return /* binding */ startNewTrace; },\n/* harmony export */   \"startSpan\": function() { return /* binding */ startSpan; },\n/* harmony export */   \"startSpanManual\": function() { return /* binding */ startSpanManual; },\n/* harmony export */   \"suppressTracing\": function() { return /* binding */ suppressTracing; },\n/* harmony export */   \"withActiveSpan\": function() { return /* binding */ withActiveSpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _carrier_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../carrier.js */ \"./node_modules/@sentry/core/esm/carrier.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _asyncContext_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../asyncContext/index.js */ \"./node_modules/@sentry/core/esm/asyncContext/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../semanticAttributes.js */ \"./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/handleCallbackErrors.js */ \"./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/spanOnScope.js */ \"./node_modules/@sentry/core/esm/utils/spanOnScope.js\");\n/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _logSpans_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./logSpans.js */ \"./node_modules/@sentry/core/esm/tracing/logSpans.js\");\n/* harmony import */ var _sampling_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./sampling.js */ \"./node_modules/@sentry/core/esm/tracing/sampling.js\");\n/* harmony import */ var _sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sentryNonRecordingSpan.js */ \"./node_modules/@sentry/core/esm/tracing/sentryNonRecordingSpan.js\");\n/* harmony import */ var _sentrySpan_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./sentrySpan.js */ \"./node_modules/@sentry/core/esm/tracing/sentrySpan.js\");\n/* harmony import */ var _spanstatus_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./spanstatus.js */ \"./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst SUPPRESS_TRACING_KEY = '__SENTRY_SUPPRESS_TRACING__';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpan(context, callback) {\n  const acs = getAcs();\n  if (acs.startSpan) {\n    return acs.startSpan(context, callback);\n  }\n\n  const spanContext = normalizeContext(context);\n\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.withScope)(context.scope, scope => {\n    const parentSpan = getParentSpan(scope);\n\n    const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n    const activeSpan = shouldSkipSpan\n      ? new _sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_1__.SentryNonRecordingSpan()\n      : createChildOrRootSpan({\n          parentSpan,\n          spanContext,\n          forceTransaction: context.forceTransaction,\n          scope,\n        });\n\n    (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_2__._setSpanForScope)(scope, activeSpan);\n\n    return (0,_utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_3__.handleCallbackErrors)(\n      () => callback(activeSpan),\n      () => {\n        // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n        const { status } = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.spanToJSON)(activeSpan);\n        if (activeSpan.isRecording() && (!status || status === 'ok')) {\n          activeSpan.setStatus({ code: _spanstatus_js__WEBPACK_IMPORTED_MODULE_5__.SPAN_STATUS_ERROR, message: 'internal_error' });\n        }\n      },\n      () => activeSpan.end(),\n    );\n  });\n}\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * You'll always get a span passed to the callback,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startSpanManual(context, callback) {\n  const acs = getAcs();\n  if (acs.startSpanManual) {\n    return acs.startSpanManual(context, callback);\n  }\n\n  const spanContext = normalizeContext(context);\n\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.withScope)(context.scope, scope => {\n    const parentSpan = getParentSpan(scope);\n\n    const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n    const activeSpan = shouldSkipSpan\n      ? new _sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_1__.SentryNonRecordingSpan()\n      : createChildOrRootSpan({\n          parentSpan,\n          spanContext,\n          forceTransaction: context.forceTransaction,\n          scope,\n        });\n\n    (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_2__._setSpanForScope)(scope, activeSpan);\n\n    function finishAndSetSpan() {\n      activeSpan.end();\n    }\n\n    return (0,_utils_handleCallbackErrors_js__WEBPACK_IMPORTED_MODULE_3__.handleCallbackErrors)(\n      () => callback(activeSpan, finishAndSetSpan),\n      () => {\n        // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n        const { status } = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.spanToJSON)(activeSpan);\n        if (activeSpan.isRecording() && (!status || status === 'ok')) {\n          activeSpan.setStatus({ code: _spanstatus_js__WEBPACK_IMPORTED_MODULE_5__.SPAN_STATUS_ERROR, message: 'internal_error' });\n        }\n      },\n    );\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getActiveSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * This function will always return a span,\n * it may just be a non-recording span if the span is not sampled or if tracing is disabled.\n */\nfunction startInactiveSpan(context) {\n  const acs = getAcs();\n  if (acs.startInactiveSpan) {\n    return acs.startInactiveSpan(context);\n  }\n\n  const spanContext = normalizeContext(context);\n\n  const scope = context.scope || (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n  const parentSpan = getParentSpan(scope);\n\n  const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n\n  if (shouldSkipSpan) {\n    return new _sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_1__.SentryNonRecordingSpan();\n  }\n\n  return createChildOrRootSpan({\n    parentSpan,\n    spanContext,\n    forceTransaction: context.forceTransaction,\n    scope,\n  });\n}\n\n/**\n * Continue a trace from `sentry-trace` and `baggage` values.\n * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n * and `<meta name=\"baggage\">` HTML tags.\n *\n * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n * be attached to the incoming trace.\n */\nconst continueTrace = (\n  {\n    sentryTrace,\n    baggage,\n  }\n\n,\n  callback,\n) => {\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.withScope)(scope => {\n    const propagationContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.propagationContextFromHeaders)(sentryTrace, baggage);\n    scope.setPropagationContext(propagationContext);\n    return callback();\n  });\n};\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback. Can be\n * passed `null` to start an entirely new span tree.\n *\n * @param span Spans started in the context of the provided callback will be children of this span. If `null` is passed,\n * spans started within the callback will not be attached to a parent span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nfunction withActiveSpan(span, callback) {\n  const acs = getAcs();\n  if (acs.withActiveSpan) {\n    return acs.withActiveSpan(span, callback);\n  }\n\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.withScope)(scope => {\n    (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_2__._setSpanForScope)(scope, span || undefined);\n    return callback(scope);\n  });\n}\n\n/** Suppress tracing in the given callback, ensuring no spans are generated inside of it. */\nfunction suppressTracing(callback) {\n  const acs = getAcs();\n\n  if (acs.suppressTracing) {\n    return acs.suppressTracing(callback);\n  }\n\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.withScope)(scope => {\n    scope.setSDKProcessingMetadata({ [SUPPRESS_TRACING_KEY]: true });\n    return callback();\n  });\n}\n\n/**\n * Starts a new trace for the duration of the provided callback. Spans started within the\n * callback will be part of the new trace instead of a potentially previously started trace.\n *\n * Important: Only use this function if you want to override the default trace lifetime and\n * propagation mechanism of the SDK for the duration and scope of the provided callback.\n * The newly created trace will also be the root of a new distributed trace, for example if\n * you make http requests within the callback.\n * This function might be useful if the operation you want to instrument should not be part\n * of a potentially ongoing trace.\n *\n * Default behavior:\n * - Server-side: A new trace is started for each incoming request.\n * - Browser: A new trace is started for each page our route. Navigating to a new route\n *            or page will automatically create a new trace.\n */\nfunction startNewTrace(callback) {\n  return (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.withScope)(scope => {\n    scope.setPropagationContext((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.generatePropagationContext)());\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_7__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.info(`Starting a new trace with id ${scope.getPropagationContext().traceId}`);\n    return withActiveSpan(null, callback);\n  });\n}\n\nfunction createChildOrRootSpan({\n  parentSpan,\n  spanContext,\n  forceTransaction,\n  scope,\n}\n\n) {\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_8__.hasTracingEnabled)()) {\n    return new _sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_1__.SentryNonRecordingSpan();\n  }\n\n  const isolationScope = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();\n\n  let span;\n  if (parentSpan && !forceTransaction) {\n    span = _startChildSpan(parentSpan, scope, spanContext);\n    (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.addChildSpanToSpan)(parentSpan, span);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = (0,_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromSpan)(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const parentSampled = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.spanIsSampled)(parentSpan);\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanContext,\n      },\n      scope,\n      parentSampled,\n    );\n\n    (0,_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__.freezeDscOnSpan)(span, dsc);\n  } else {\n    const {\n      traceId,\n      dsc,\n      parentSpanId,\n      sampled: parentSampled,\n    } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    span = _startRootSpan(\n      {\n        traceId,\n        parentSpanId,\n        ...spanContext,\n      },\n      scope,\n      parentSampled,\n    );\n\n    if (dsc) {\n      (0,_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_9__.freezeDscOnSpan)(span, dsc);\n    }\n  }\n\n  (0,_logSpans_js__WEBPACK_IMPORTED_MODULE_10__.logSpanStart)(span);\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_11__.setCapturedScopesOnSpan)(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to SentrySpanArguments.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n *\n * Eventually the StartSpanOptions will be more aligned with OpenTelemetry.\n */\nfunction normalizeContext(context) {\n  const exp = context.experimental || {};\n  const initialCtx = {\n    isStandalone: exp.standalone,\n    ...context,\n  };\n\n  if (context.startTime) {\n    const ctx = { ...initialCtx };\n    ctx.startTimestamp = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.spanTimeInputToSeconds)(context.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return initialCtx;\n}\n\nfunction getAcs() {\n  const carrier = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_12__.getMainCarrier)();\n  return (0,_asyncContext_index_js__WEBPACK_IMPORTED_MODULE_13__.getAsyncContextStrategy)(carrier);\n}\n\nfunction _startRootSpan(spanArguments, scope, parentSampled) {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  const options = (client && client.getOptions()) || {};\n\n  const { name = '', attributes } = spanArguments;\n  const [sampled, sampleRate] = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY]\n    ? [false]\n    : (0,_sampling_js__WEBPACK_IMPORTED_MODULE_14__.sampleSpan)(options, {\n        name,\n        parentSampled,\n        attributes,\n        transactionContext: {\n          name,\n          parentSampled,\n        },\n      });\n\n  const rootSpan = new _sentrySpan_js__WEBPACK_IMPORTED_MODULE_15__.SentrySpan({\n    ...spanArguments,\n    attributes: {\n      [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_16__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'custom',\n      ...spanArguments.attributes,\n    },\n    sampled,\n  });\n  if (sampleRate !== undefined) {\n    rootSpan.setAttribute(_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_16__.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  if (client) {\n    client.emit('spanStart', rootSpan);\n  }\n\n  return rootSpan;\n}\n\n/**\n * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n * This inherits the sampling decision from the parent span.\n */\nfunction _startChildSpan(parentSpan, scope, spanArguments) {\n  const { spanId, traceId } = parentSpan.spanContext();\n  const sampled = scope.getScopeData().sdkProcessingMetadata[SUPPRESS_TRACING_KEY] ? false : (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.spanIsSampled)(parentSpan);\n\n  const childSpan = sampled\n    ? new _sentrySpan_js__WEBPACK_IMPORTED_MODULE_15__.SentrySpan({\n        ...spanArguments,\n        parentSpanId: spanId,\n        traceId,\n        sampled,\n      })\n    : new _sentryNonRecordingSpan_js__WEBPACK_IMPORTED_MODULE_1__.SentryNonRecordingSpan({ traceId });\n\n  (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.addChildSpanToSpan)(parentSpan, childSpan);\n\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  if (client) {\n    client.emit('spanStart', childSpan);\n    // If it has an endTimestamp, it's already ended\n    if (spanArguments.endTimestamp) {\n      client.emit('spanEnd', childSpan);\n    }\n  }\n\n  return childSpan;\n}\n\nfunction getParentSpan(scope) {\n  const span = (0,_utils_spanOnScope_js__WEBPACK_IMPORTED_MODULE_2__._getSpanForScope)(scope) ;\n\n  if (!span) {\n    return undefined;\n  }\n\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  const options = client ? client.getOptions() : {};\n  if (options.parentSpanIsAlwaysRootSpan) {\n    return (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_4__.getRootSpan)(span) ;\n  }\n\n  return span;\n}\n\n\n//# sourceMappingURL=trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/trace.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/utils.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCapturedScopesOnSpan\": function() { return /* binding */ getCapturedScopesOnSpan; },\n/* harmony export */   \"setCapturedScopesOnSpan\": function() { return /* binding */ setCapturedScopesOnSpan; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nfunction setCapturedScopesOnSpan(span, scope, isolationScope) {\n  if (span) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nfunction getCapturedScopesOnSpan(span) {\n  return {\n    scope: (span )[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span )[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUQ7QUFDQTs7QUFFekQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVFQUF3QjtBQUM1QixJQUFJLHVFQUF3QjtBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEQ7QUFDNUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy91dGlscy5qcz84YWRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuZXhwb3J0IHsgc3RyaXBVcmxRdWVyeUFuZEZyYWdtZW50IH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IFNDT1BFX09OX1NUQVJUX1NQQU5fRklFTEQgPSAnX3NlbnRyeVNjb3BlJztcbmNvbnN0IElTT0xBVElPTl9TQ09QRV9PTl9TVEFSVF9TUEFOX0ZJRUxEID0gJ19zZW50cnlJc29sYXRpb25TY29wZSc7XG5cbi8qKiBTdG9yZSB0aGUgc2NvcGUgJiBpc29sYXRpb24gc2NvcGUgZm9yIGEgc3Bhbiwgd2hpY2ggY2FuIHRoZSBiZSB1c2VkIHdoZW4gaXQgaXMgZmluaXNoZWQuICovXG5mdW5jdGlvbiBzZXRDYXB0dXJlZFNjb3Blc09uU3BhbihzcGFuLCBzY29wZSwgaXNvbGF0aW9uU2NvcGUpIHtcbiAgaWYgKHNwYW4pIHtcbiAgICBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkoc3BhbiwgSVNPTEFUSU9OX1NDT1BFX09OX1NUQVJUX1NQQU5fRklFTEQsIGlzb2xhdGlvblNjb3BlKTtcbiAgICBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkoc3BhbiwgU0NPUEVfT05fU1RBUlRfU1BBTl9GSUVMRCwgc2NvcGUpO1xuICB9XG59XG5cbi8qKlxuICogR3JhYnMgdGhlIHNjb3BlIGFuZCBpc29sYXRpb24gc2NvcGUgb2ZmIGEgc3BhbiB0aGF0IHdlcmUgYWN0aXZlIHdoZW4gdGhlIHNwYW4gd2FzIHN0YXJ0ZWQuXG4gKi9cbmZ1bmN0aW9uIGdldENhcHR1cmVkU2NvcGVzT25TcGFuKHNwYW4pIHtcbiAgcmV0dXJuIHtcbiAgICBzY29wZTogKHNwYW4gKVtTQ09QRV9PTl9TVEFSVF9TUEFOX0ZJRUxEXSxcbiAgICBpc29sYXRpb25TY29wZTogKHNwYW4gKVtJU09MQVRJT05fU0NPUEVfT05fU1RBUlRfU1BBTl9GSUVMRF0sXG4gIH07XG59XG5cbmV4cG9ydCB7IGdldENhcHR1cmVkU2NvcGVzT25TcGFuLCBzZXRDYXB0dXJlZFNjb3Blc09uU3BhbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/utils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/transports/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/base.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_TRANSPORT_BUFFER_SIZE\": function() { return /* binding */ DEFAULT_TRANSPORT_BUFFER_SIZE; },\n/* harmony export */   \"createTransport\": function() { return /* binding */ createTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makePromiseBuffer)(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(envelope, (item, type) => {\n      const dataCategory = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.envelopeItemTypeToDataCategory)(type);\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isRateLimited)(rateLimits, dataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)({});\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.envelopeItemTypeToDataCategory)(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.serializeEnvelope)(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.updateRateLimits)(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError) {\n          _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\n\n//# sourceMappingURL=base.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL2Jhc2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxTjtBQUNySzs7QUFFaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRUFBaUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxrRUFBbUI7QUFDdkIsMkJBQTJCLDZFQUE4QjtBQUN6RCxVQUFVLDREQUFhO0FBQ3ZCO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLGFBQWEsa0VBQW1CLEdBQUc7QUFDbkM7O0FBRUE7QUFDQSw2QkFBNkIsNkRBQWM7O0FBRTNDO0FBQ0E7QUFDQSxNQUFNLGtFQUFtQjtBQUN6QjtBQUNBLDJDQUEyQyw2RUFBOEI7QUFDekUsT0FBTztBQUNQOztBQUVBO0FBQ0Esb0JBQW9CLE1BQU0sZ0VBQWlCLG9CQUFvQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQSxZQUFZLHdEQUFXLElBQUksc0RBQVcsc0NBQXNDLHFCQUFxQjtBQUNqRzs7QUFFQSx1QkFBdUIsK0RBQWdCO0FBQ3ZDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsc0RBQVc7QUFDeEMsVUFBVSx3REFBVyxJQUFJLHVEQUFZO0FBQ3JDO0FBQ0EsaUJBQWlCLGtFQUFtQixHQUFHO0FBQ3ZDLFVBQVU7QUFDVjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUUwRDtBQUMxRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL2Jhc2UuanM/OTU4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlUHJvbWlzZUJ1ZmZlciwgZm9yRWFjaEVudmVsb3BlSXRlbSwgZW52ZWxvcGVJdGVtVHlwZVRvRGF0YUNhdGVnb3J5LCBpc1JhdGVMaW1pdGVkLCByZXNvbHZlZFN5bmNQcm9taXNlLCBjcmVhdGVFbnZlbG9wZSwgU2VudHJ5RXJyb3IsIGxvZ2dlciwgc2VyaWFsaXplRW52ZWxvcGUsIHVwZGF0ZVJhdGVMaW1pdHMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi4vZGVidWctYnVpbGQuanMnO1xuXG5jb25zdCBERUZBVUxUX1RSQU5TUE9SVF9CVUZGRVJfU0laRSA9IDY0O1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBTZW50cnkgYFRyYW5zcG9ydGBcbiAqXG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHBhcmFtIG1ha2VSZXF1ZXN0XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zcG9ydChcbiAgb3B0aW9ucyxcbiAgbWFrZVJlcXVlc3QsXG4gIGJ1ZmZlciA9IG1ha2VQcm9taXNlQnVmZmVyKFxuICAgIG9wdGlvbnMuYnVmZmVyU2l6ZSB8fCBERUZBVUxUX1RSQU5TUE9SVF9CVUZGRVJfU0laRSxcbiAgKSxcbikge1xuICBsZXQgcmF0ZUxpbWl0cyA9IHt9O1xuICBjb25zdCBmbHVzaCA9ICh0aW1lb3V0KSA9PiBidWZmZXIuZHJhaW4odGltZW91dCk7XG5cbiAgZnVuY3Rpb24gc2VuZChlbnZlbG9wZSkge1xuICAgIGNvbnN0IGZpbHRlcmVkRW52ZWxvcGVJdGVtcyA9IFtdO1xuXG4gICAgLy8gRHJvcCByYXRlIGxpbWl0ZWQgaXRlbXMgZnJvbSBlbnZlbG9wZVxuICAgIGZvckVhY2hFbnZlbG9wZUl0ZW0oZW52ZWxvcGUsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgICBjb25zdCBkYXRhQ2F0ZWdvcnkgPSBlbnZlbG9wZUl0ZW1UeXBlVG9EYXRhQ2F0ZWdvcnkodHlwZSk7XG4gICAgICBpZiAoaXNSYXRlTGltaXRlZChyYXRlTGltaXRzLCBkYXRhQ2F0ZWdvcnkpKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gZ2V0RXZlbnRGb3JFbnZlbG9wZUl0ZW0oaXRlbSwgdHlwZSk7XG4gICAgICAgIG9wdGlvbnMucmVjb3JkRHJvcHBlZEV2ZW50KCdyYXRlbGltaXRfYmFja29mZicsIGRhdGFDYXRlZ29yeSwgZXZlbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZmlsdGVyZWRFbnZlbG9wZUl0ZW1zLnB1c2goaXRlbSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBTa2lwIHNlbmRpbmcgaWYgZW52ZWxvcGUgaXMgZW1wdHkgYWZ0ZXIgZmlsdGVyaW5nIG91dCByYXRlIGxpbWl0ZWQgZXZlbnRzXG4gICAgaWYgKGZpbHRlcmVkRW52ZWxvcGVJdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiByZXNvbHZlZFN5bmNQcm9taXNlKHt9KTtcbiAgICB9XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGNvbnN0IGZpbHRlcmVkRW52ZWxvcGUgPSBjcmVhdGVFbnZlbG9wZShlbnZlbG9wZVswXSwgZmlsdGVyZWRFbnZlbG9wZUl0ZW1zICk7XG5cbiAgICAvLyBDcmVhdGVzIGNsaWVudCByZXBvcnQgZm9yIGVhY2ggaXRlbSBpbiBhbiBlbnZlbG9wZVxuICAgIGNvbnN0IHJlY29yZEVudmVsb3BlTG9zcyA9IChyZWFzb24pID0+IHtcbiAgICAgIGZvckVhY2hFbnZlbG9wZUl0ZW0oZmlsdGVyZWRFbnZlbG9wZSwgKGl0ZW0sIHR5cGUpID0+IHtcbiAgICAgICAgY29uc3QgZXZlbnQgPSBnZXRFdmVudEZvckVudmVsb3BlSXRlbShpdGVtLCB0eXBlKTtcbiAgICAgICAgb3B0aW9ucy5yZWNvcmREcm9wcGVkRXZlbnQocmVhc29uLCBlbnZlbG9wZUl0ZW1UeXBlVG9EYXRhQ2F0ZWdvcnkodHlwZSksIGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCByZXF1ZXN0VGFzayA9ICgpID0+XG4gICAgICBtYWtlUmVxdWVzdCh7IGJvZHk6IHNlcmlhbGl6ZUVudmVsb3BlKGZpbHRlcmVkRW52ZWxvcGUpIH0pLnRoZW4oXG4gICAgICAgIHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIHRocm93IG9uIE5PSyByZXNwb25zZXMsIGJ1dCB3ZSB3YW50IHRvIGF0IGxlYXN0IGxvZyB0aGVtXG4gICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgIT09IHVuZGVmaW5lZCAmJiAocmVzcG9uc2Uuc3RhdHVzQ29kZSA8IDIwMCB8fCByZXNwb25zZS5zdGF0dXNDb2RlID49IDMwMCkpIHtcbiAgICAgICAgICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci53YXJuKGBTZW50cnkgcmVzcG9uZGVkIHdpdGggc3RhdHVzIGNvZGUgJHtyZXNwb25zZS5zdGF0dXNDb2RlfSB0byBzZW50IGV2ZW50LmApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJhdGVMaW1pdHMgPSB1cGRhdGVSYXRlTGltaXRzKHJhdGVMaW1pdHMsIHJlc3BvbnNlKTtcbiAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICByZWNvcmRFbnZlbG9wZUxvc3MoJ25ldHdvcmtfZXJyb3InKTtcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfSxcbiAgICAgICk7XG5cbiAgICByZXR1cm4gYnVmZmVyLmFkZChyZXF1ZXN0VGFzaykudGhlbihcbiAgICAgIHJlc3VsdCA9PiByZXN1bHQsXG4gICAgICBlcnJvciA9PiB7XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIFNlbnRyeUVycm9yKSB7XG4gICAgICAgICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmVycm9yKCdTa2lwcGVkIHNlbmRpbmcgZXZlbnQgYmVjYXVzZSBidWZmZXIgaXMgZnVsbC4nKTtcbiAgICAgICAgICByZWNvcmRFbnZlbG9wZUxvc3MoJ3F1ZXVlX292ZXJmbG93Jyk7XG4gICAgICAgICAgcmV0dXJuIHJlc29sdmVkU3luY1Byb21pc2Uoe30pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNlbmQsXG4gICAgZmx1c2gsXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldEV2ZW50Rm9yRW52ZWxvcGVJdGVtKGl0ZW0sIHR5cGUpIHtcbiAgaWYgKHR5cGUgIT09ICdldmVudCcgJiYgdHlwZSAhPT0gJ3RyYW5zYWN0aW9uJykge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICByZXR1cm4gQXJyYXkuaXNBcnJheShpdGVtKSA/IChpdGVtIClbMV0gOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCB7IERFRkFVTFRfVFJBTlNQT1JUX0JVRkZFUl9TSVpFLCBjcmVhdGVUcmFuc3BvcnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/transports/base.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/transports/multiplexed.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/multiplexed.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eventFromEnvelope\": function() { return /* binding */ eventFromEnvelope; },\n/* harmony export */   \"makeMultiplexedTransport\": function() { return /* binding */ makeMultiplexedTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../api.js */ \"./node_modules/@sentry/core/esm/api.js\");\n\n\n\n/**\n * Gets an event from an envelope.\n *\n * This is only exported for use in the tests\n */\nfunction eventFromEnvelope(env, types) {\n  let event;\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(env, (item, type) => {\n    if (types.includes(type)) {\n      event = Array.isArray(item) ? (item )[1] : undefined;\n    }\n    // bail out if we found an event\n    return !!event;\n  });\n\n  return event;\n}\n\n/**\n * Creates a transport that overrides the release on all events.\n */\nfunction makeOverrideReleaseTransport(\n  createTransport,\n  release,\n) {\n  return options => {\n    const transport = createTransport(options);\n\n    return {\n      ...transport,\n      send: async (envelope) => {\n        const event = eventFromEnvelope(envelope, ['event', 'transaction', 'profile', 'replay_event']);\n\n        if (event) {\n          event.release = release;\n        }\n        return transport.send(envelope);\n      },\n    };\n  };\n}\n\n/** Overrides the DSN in the envelope header  */\nfunction overrideDsn(envelope, dsn) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(\n    dsn\n      ? {\n          ...envelope[0],\n          dsn,\n        }\n      : envelope[0],\n    envelope[1],\n  );\n}\n\n/**\n * Creates a transport that can send events to different DSNs depending on the envelope contents.\n */\nfunction makeMultiplexedTransport(\n  createTransport,\n  matcher,\n) {\n  return options => {\n    const fallbackTransport = createTransport(options);\n    const otherTransports = new Map();\n\n    function getTransport(dsn, release) {\n      // We create a transport for every unique dsn/release combination as there may be code from multiple releases in\n      // use at the same time\n      const key = release ? `${dsn}:${release}` : dsn;\n\n      let transport = otherTransports.get(key);\n\n      if (!transport) {\n        const validatedDsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnFromString)(dsn);\n        if (!validatedDsn) {\n          return undefined;\n        }\n        const url = (0,_api_js__WEBPACK_IMPORTED_MODULE_1__.getEnvelopeEndpointWithUrlEncodedAuth)(validatedDsn, options.tunnel);\n\n        transport = release\n          ? makeOverrideReleaseTransport(createTransport, release)({ ...options, url })\n          : createTransport({ ...options, url });\n\n        otherTransports.set(key, transport);\n      }\n\n      return [dsn, transport];\n    }\n\n    async function send(envelope) {\n      function getEvent(types) {\n        const eventTypes = types && types.length ? types : ['event'];\n        return eventFromEnvelope(envelope, eventTypes);\n      }\n\n      const transports = matcher({ envelope, getEvent })\n        .map(result => {\n          if (typeof result === 'string') {\n            return getTransport(result, undefined);\n          } else {\n            return getTransport(result.dsn, result.release);\n          }\n        })\n        .filter((t) => !!t);\n\n      // If we have no transports to send to, use the fallback transport\n      if (transports.length === 0) {\n        // Don't override the DSN in the header for the fallback transport. '' is falsy\n        transports.push(['', fallbackTransport]);\n      }\n\n      const results = await Promise.all(\n        transports.map(([dsn, transport]) => transport.send(overrideDsn(envelope, dsn))),\n      );\n\n      return results[0];\n    }\n\n    async function flush(timeout) {\n      const allTransports = [...otherTransports.values(), fallbackTransport];\n      const results = await Promise.all(allTransports.map(transport => transport.flush(timeout)));\n      return results.every(r => r);\n    }\n\n    return {\n      send,\n      flush,\n    };\n  };\n}\n\n\n//# sourceMappingURL=multiplexed.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL211bHRpcGxleGVkLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUY7QUFDakI7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsa0VBQW1CO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUyw2REFBYztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLElBQUksR0FBRyxRQUFROztBQUU5Qzs7QUFFQTtBQUNBLDZCQUE2Qiw0REFBYTtBQUMxQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsOEVBQXFDOztBQUV6RDtBQUNBLHFFQUFxRSxpQkFBaUI7QUFDdEYsOEJBQThCLGlCQUFpQjs7QUFFL0M7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbUNBQW1DLG9CQUFvQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1RDtBQUN2RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL211bHRpcGxleGVkLmpzP2YwNWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRW52ZWxvcGUsIGRzbkZyb21TdHJpbmcsIGZvckVhY2hFbnZlbG9wZUl0ZW0gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEVudmVsb3BlRW5kcG9pbnRXaXRoVXJsRW5jb2RlZEF1dGggfSBmcm9tICcuLi9hcGkuanMnO1xuXG4vKipcbiAqIEdldHMgYW4gZXZlbnQgZnJvbSBhbiBlbnZlbG9wZS5cbiAqXG4gKiBUaGlzIGlzIG9ubHkgZXhwb3J0ZWQgZm9yIHVzZSBpbiB0aGUgdGVzdHNcbiAqL1xuZnVuY3Rpb24gZXZlbnRGcm9tRW52ZWxvcGUoZW52LCB0eXBlcykge1xuICBsZXQgZXZlbnQ7XG5cbiAgZm9yRWFjaEVudmVsb3BlSXRlbShlbnYsIChpdGVtLCB0eXBlKSA9PiB7XG4gICAgaWYgKHR5cGVzLmluY2x1ZGVzKHR5cGUpKSB7XG4gICAgICBldmVudCA9IEFycmF5LmlzQXJyYXkoaXRlbSkgPyAoaXRlbSApWzFdIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvLyBiYWlsIG91dCBpZiB3ZSBmb3VuZCBhbiBldmVudFxuICAgIHJldHVybiAhIWV2ZW50O1xuICB9KTtcblxuICByZXR1cm4gZXZlbnQ7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHRyYW5zcG9ydCB0aGF0IG92ZXJyaWRlcyB0aGUgcmVsZWFzZSBvbiBhbGwgZXZlbnRzLlxuICovXG5mdW5jdGlvbiBtYWtlT3ZlcnJpZGVSZWxlYXNlVHJhbnNwb3J0KFxuICBjcmVhdGVUcmFuc3BvcnQsXG4gIHJlbGVhc2UsXG4pIHtcbiAgcmV0dXJuIG9wdGlvbnMgPT4ge1xuICAgIGNvbnN0IHRyYW5zcG9ydCA9IGNyZWF0ZVRyYW5zcG9ydChvcHRpb25zKTtcblxuICAgIHJldHVybiB7XG4gICAgICAuLi50cmFuc3BvcnQsXG4gICAgICBzZW5kOiBhc3luYyAoZW52ZWxvcGUpID0+IHtcbiAgICAgICAgY29uc3QgZXZlbnQgPSBldmVudEZyb21FbnZlbG9wZShlbnZlbG9wZSwgWydldmVudCcsICd0cmFuc2FjdGlvbicsICdwcm9maWxlJywgJ3JlcGxheV9ldmVudCddKTtcblxuICAgICAgICBpZiAoZXZlbnQpIHtcbiAgICAgICAgICBldmVudC5yZWxlYXNlID0gcmVsZWFzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJhbnNwb3J0LnNlbmQoZW52ZWxvcGUpO1xuICAgICAgfSxcbiAgICB9O1xuICB9O1xufVxuXG4vKiogT3ZlcnJpZGVzIHRoZSBEU04gaW4gdGhlIGVudmVsb3BlIGhlYWRlciAgKi9cbmZ1bmN0aW9uIG92ZXJyaWRlRHNuKGVudmVsb3BlLCBkc24pIHtcbiAgcmV0dXJuIGNyZWF0ZUVudmVsb3BlKFxuICAgIGRzblxuICAgICAgPyB7XG4gICAgICAgICAgLi4uZW52ZWxvcGVbMF0sXG4gICAgICAgICAgZHNuLFxuICAgICAgICB9XG4gICAgICA6IGVudmVsb3BlWzBdLFxuICAgIGVudmVsb3BlWzFdLFxuICApO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSB0cmFuc3BvcnQgdGhhdCBjYW4gc2VuZCBldmVudHMgdG8gZGlmZmVyZW50IERTTnMgZGVwZW5kaW5nIG9uIHRoZSBlbnZlbG9wZSBjb250ZW50cy5cbiAqL1xuZnVuY3Rpb24gbWFrZU11bHRpcGxleGVkVHJhbnNwb3J0KFxuICBjcmVhdGVUcmFuc3BvcnQsXG4gIG1hdGNoZXIsXG4pIHtcbiAgcmV0dXJuIG9wdGlvbnMgPT4ge1xuICAgIGNvbnN0IGZhbGxiYWNrVHJhbnNwb3J0ID0gY3JlYXRlVHJhbnNwb3J0KG9wdGlvbnMpO1xuICAgIGNvbnN0IG90aGVyVHJhbnNwb3J0cyA9IG5ldyBNYXAoKTtcblxuICAgIGZ1bmN0aW9uIGdldFRyYW5zcG9ydChkc24sIHJlbGVhc2UpIHtcbiAgICAgIC8vIFdlIGNyZWF0ZSBhIHRyYW5zcG9ydCBmb3IgZXZlcnkgdW5pcXVlIGRzbi9yZWxlYXNlIGNvbWJpbmF0aW9uIGFzIHRoZXJlIG1heSBiZSBjb2RlIGZyb20gbXVsdGlwbGUgcmVsZWFzZXMgaW5cbiAgICAgIC8vIHVzZSBhdCB0aGUgc2FtZSB0aW1lXG4gICAgICBjb25zdCBrZXkgPSByZWxlYXNlID8gYCR7ZHNufToke3JlbGVhc2V9YCA6IGRzbjtcblxuICAgICAgbGV0IHRyYW5zcG9ydCA9IG90aGVyVHJhbnNwb3J0cy5nZXQoa2V5KTtcblxuICAgICAgaWYgKCF0cmFuc3BvcnQpIHtcbiAgICAgICAgY29uc3QgdmFsaWRhdGVkRHNuID0gZHNuRnJvbVN0cmluZyhkc24pO1xuICAgICAgICBpZiAoIXZhbGlkYXRlZERzbikge1xuICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdXJsID0gZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCh2YWxpZGF0ZWREc24sIG9wdGlvbnMudHVubmVsKTtcblxuICAgICAgICB0cmFuc3BvcnQgPSByZWxlYXNlXG4gICAgICAgICAgPyBtYWtlT3ZlcnJpZGVSZWxlYXNlVHJhbnNwb3J0KGNyZWF0ZVRyYW5zcG9ydCwgcmVsZWFzZSkoeyAuLi5vcHRpb25zLCB1cmwgfSlcbiAgICAgICAgICA6IGNyZWF0ZVRyYW5zcG9ydCh7IC4uLm9wdGlvbnMsIHVybCB9KTtcblxuICAgICAgICBvdGhlclRyYW5zcG9ydHMuc2V0KGtleSwgdHJhbnNwb3J0KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFtkc24sIHRyYW5zcG9ydF07XG4gICAgfVxuXG4gICAgYXN5bmMgZnVuY3Rpb24gc2VuZChlbnZlbG9wZSkge1xuICAgICAgZnVuY3Rpb24gZ2V0RXZlbnQodHlwZXMpIHtcbiAgICAgICAgY29uc3QgZXZlbnRUeXBlcyA9IHR5cGVzICYmIHR5cGVzLmxlbmd0aCA/IHR5cGVzIDogWydldmVudCddO1xuICAgICAgICByZXR1cm4gZXZlbnRGcm9tRW52ZWxvcGUoZW52ZWxvcGUsIGV2ZW50VHlwZXMpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCB0cmFuc3BvcnRzID0gbWF0Y2hlcih7IGVudmVsb3BlLCBnZXRFdmVudCB9KVxuICAgICAgICAubWFwKHJlc3VsdCA9PiB7XG4gICAgICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0VHJhbnNwb3J0KHJlc3VsdCwgdW5kZWZpbmVkKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGdldFRyYW5zcG9ydChyZXN1bHQuZHNuLCByZXN1bHQucmVsZWFzZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuZmlsdGVyKCh0KSA9PiAhIXQpO1xuXG4gICAgICAvLyBJZiB3ZSBoYXZlIG5vIHRyYW5zcG9ydHMgdG8gc2VuZCB0bywgdXNlIHRoZSBmYWxsYmFjayB0cmFuc3BvcnRcbiAgICAgIGlmICh0cmFuc3BvcnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAvLyBEb24ndCBvdmVycmlkZSB0aGUgRFNOIGluIHRoZSBoZWFkZXIgZm9yIHRoZSBmYWxsYmFjayB0cmFuc3BvcnQuICcnIGlzIGZhbHN5XG4gICAgICAgIHRyYW5zcG9ydHMucHVzaChbJycsIGZhbGxiYWNrVHJhbnNwb3J0XSk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbChcbiAgICAgICAgdHJhbnNwb3J0cy5tYXAoKFtkc24sIHRyYW5zcG9ydF0pID0+IHRyYW5zcG9ydC5zZW5kKG92ZXJyaWRlRHNuKGVudmVsb3BlLCBkc24pKSksXG4gICAgICApO1xuXG4gICAgICByZXR1cm4gcmVzdWx0c1swXTtcbiAgICB9XG5cbiAgICBhc3luYyBmdW5jdGlvbiBmbHVzaCh0aW1lb3V0KSB7XG4gICAgICBjb25zdCBhbGxUcmFuc3BvcnRzID0gWy4uLm90aGVyVHJhbnNwb3J0cy52YWx1ZXMoKSwgZmFsbGJhY2tUcmFuc3BvcnRdO1xuICAgICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsKGFsbFRyYW5zcG9ydHMubWFwKHRyYW5zcG9ydCA9PiB0cmFuc3BvcnQuZmx1c2godGltZW91dCkpKTtcbiAgICAgIHJldHVybiByZXN1bHRzLmV2ZXJ5KHIgPT4gcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbmQsXG4gICAgICBmbHVzaCxcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgeyBldmVudEZyb21FbnZlbG9wZSwgbWFrZU11bHRpcGxleGVkVHJhbnNwb3J0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWx0aXBsZXhlZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/transports/multiplexed.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/transports/offline.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/offline.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MIN_DELAY\": function() { return /* binding */ MIN_DELAY; },\n/* harmony export */   \"START_DELAY\": function() { return /* binding */ START_DELAY; },\n/* harmony export */   \"makeOfflineTransport\": function() { return /* binding */ makeOfflineTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\nconst MIN_DELAY = 100; // 100 ms\nconst START_DELAY = 5000; // 5 seconds\nconst MAX_DELAY = 3.6e6; // 1 hour\n\n/**\n * Wraps a transport and stores and retries events when they fail to send.\n *\n * @param createTransport The transport to wrap.\n */\nfunction makeOfflineTransport(\n  createTransport,\n) {\n  function log(...args) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.info('[Offline]:', ...args);\n  }\n\n  return options => {\n    const transport = createTransport(options);\n\n    if (!options.createStore) {\n      throw new Error('No `createStore` function was provided');\n    }\n\n    const store = options.createStore(options);\n\n    let retryDelay = START_DELAY;\n    let flushTimer;\n\n    function shouldQueue(env, error, retryDelay) {\n      // We want to drop client reports because they can be generated when we retry sending events while offline.\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeContainsItemType)(env, ['client_report'])) {\n        return false;\n      }\n\n      if (options.shouldStore) {\n        return options.shouldStore(env, error, retryDelay);\n      }\n\n      return true;\n    }\n\n    function flushIn(delay) {\n      if (flushTimer) {\n        clearTimeout(flushTimer );\n      }\n\n      flushTimer = setTimeout(async () => {\n        flushTimer = undefined;\n\n        const found = await store.shift();\n        if (found) {\n          log('Attempting to send previously queued event');\n\n          // We should to update the sent_at timestamp to the current time.\n          found[0].sent_at = new Date().toISOString();\n\n          void send(found, true).catch(e => {\n            log('Failed to retry sending', e);\n          });\n        }\n      }, delay) ;\n\n      // We need to unref the timer in node.js, otherwise the node process never exit.\n      if (typeof flushTimer !== 'number' && flushTimer.unref) {\n        flushTimer.unref();\n      }\n    }\n\n    function flushWithBackOff() {\n      if (flushTimer) {\n        return;\n      }\n\n      flushIn(retryDelay);\n\n      retryDelay = Math.min(retryDelay * 2, MAX_DELAY);\n    }\n\n    async function send(envelope, isRetry = false) {\n      // We queue all replay envelopes to avoid multiple replay envelopes being sent at the same time. If one fails, we\n      // need to retry them in order.\n      if (!isRetry && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeContainsItemType)(envelope, ['replay_event', 'replay_recording'])) {\n        await store.push(envelope);\n        flushIn(MIN_DELAY);\n        return {};\n      }\n\n      try {\n        const result = await transport.send(envelope);\n\n        let delay = MIN_DELAY;\n\n        if (result) {\n          // If there's a retry-after header, use that as the next delay.\n          if (result.headers && result.headers['retry-after']) {\n            delay = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.parseRetryAfterHeader)(result.headers['retry-after']);\n          } else if (result.headers && result.headers['x-sentry-rate-limits']) {\n            delay = 60000; // 60 seconds\n          } // If we have a server error, return now so we don't flush the queue.\n          else if ((result.statusCode || 0) >= 400) {\n            return result;\n          }\n        }\n\n        flushIn(delay);\n        retryDelay = START_DELAY;\n        return result;\n      } catch (e) {\n        if (await shouldQueue(envelope, e , retryDelay)) {\n          // If this envelope was a retry, we want to add it to the front of the queue so it's retried again first.\n          if (isRetry) {\n            await store.unshift(envelope);\n          } else {\n            await store.push(envelope);\n          }\n          flushWithBackOff();\n          log('Error sending. Event queued.', e );\n          return {};\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    if (options.flushAtStartup) {\n      flushWithBackOff();\n    }\n\n    return {\n      send,\n      flush: t => transport.flush(t),\n    };\n  };\n}\n\n\n//# sourceMappingURL=offline.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0Y7QUFDeEM7O0FBRWhELHVCQUF1QjtBQUN2QiwwQkFBMEI7QUFDMUIseUJBQXlCOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHdEQUFXLElBQUksc0RBQVc7QUFDOUI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsVUFBVSx1RUFBd0I7QUFDbEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdUVBQXdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9FQUFxQjtBQUN6QyxZQUFZO0FBQ1osMkJBQTJCO0FBQzNCLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RDtBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanM/MTIyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbnZlbG9wZUNvbnRhaW5zSXRlbVR5cGUsIHBhcnNlUmV0cnlBZnRlckhlYWRlciwgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4uL2RlYnVnLWJ1aWxkLmpzJztcblxuY29uc3QgTUlOX0RFTEFZID0gMTAwOyAvLyAxMDAgbXNcbmNvbnN0IFNUQVJUX0RFTEFZID0gNTAwMDsgLy8gNSBzZWNvbmRzXG5jb25zdCBNQVhfREVMQVkgPSAzLjZlNjsgLy8gMSBob3VyXG5cbi8qKlxuICogV3JhcHMgYSB0cmFuc3BvcnQgYW5kIHN0b3JlcyBhbmQgcmV0cmllcyBldmVudHMgd2hlbiB0aGV5IGZhaWwgdG8gc2VuZC5cbiAqXG4gKiBAcGFyYW0gY3JlYXRlVHJhbnNwb3J0IFRoZSB0cmFuc3BvcnQgdG8gd3JhcC5cbiAqL1xuZnVuY3Rpb24gbWFrZU9mZmxpbmVUcmFuc3BvcnQoXG4gIGNyZWF0ZVRyYW5zcG9ydCxcbikge1xuICBmdW5jdGlvbiBsb2coLi4uYXJncykge1xuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5pbmZvKCdbT2ZmbGluZV06JywgLi4uYXJncyk7XG4gIH1cblxuICByZXR1cm4gb3B0aW9ucyA9PiB7XG4gICAgY29uc3QgdHJhbnNwb3J0ID0gY3JlYXRlVHJhbnNwb3J0KG9wdGlvbnMpO1xuXG4gICAgaWYgKCFvcHRpb25zLmNyZWF0ZVN0b3JlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGBjcmVhdGVTdG9yZWAgZnVuY3Rpb24gd2FzIHByb3ZpZGVkJyk7XG4gICAgfVxuXG4gICAgY29uc3Qgc3RvcmUgPSBvcHRpb25zLmNyZWF0ZVN0b3JlKG9wdGlvbnMpO1xuXG4gICAgbGV0IHJldHJ5RGVsYXkgPSBTVEFSVF9ERUxBWTtcbiAgICBsZXQgZmx1c2hUaW1lcjtcblxuICAgIGZ1bmN0aW9uIHNob3VsZFF1ZXVlKGVudiwgZXJyb3IsIHJldHJ5RGVsYXkpIHtcbiAgICAgIC8vIFdlIHdhbnQgdG8gZHJvcCBjbGllbnQgcmVwb3J0cyBiZWNhdXNlIHRoZXkgY2FuIGJlIGdlbmVyYXRlZCB3aGVuIHdlIHJldHJ5IHNlbmRpbmcgZXZlbnRzIHdoaWxlIG9mZmxpbmUuXG4gICAgICBpZiAoZW52ZWxvcGVDb250YWluc0l0ZW1UeXBlKGVudiwgWydjbGllbnRfcmVwb3J0J10pKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG9wdGlvbnMuc2hvdWxkU3RvcmUpIHtcbiAgICAgICAgcmV0dXJuIG9wdGlvbnMuc2hvdWxkU3RvcmUoZW52LCBlcnJvciwgcmV0cnlEZWxheSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGZsdXNoSW4oZGVsYXkpIHtcbiAgICAgIGlmIChmbHVzaFRpbWVyKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChmbHVzaFRpbWVyICk7XG4gICAgICB9XG5cbiAgICAgIGZsdXNoVGltZXIgPSBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcbiAgICAgICAgZmx1c2hUaW1lciA9IHVuZGVmaW5lZDtcblxuICAgICAgICBjb25zdCBmb3VuZCA9IGF3YWl0IHN0b3JlLnNoaWZ0KCk7XG4gICAgICAgIGlmIChmb3VuZCkge1xuICAgICAgICAgIGxvZygnQXR0ZW1wdGluZyB0byBzZW5kIHByZXZpb3VzbHkgcXVldWVkIGV2ZW50Jyk7XG5cbiAgICAgICAgICAvLyBXZSBzaG91bGQgdG8gdXBkYXRlIHRoZSBzZW50X2F0IHRpbWVzdGFtcCB0byB0aGUgY3VycmVudCB0aW1lLlxuICAgICAgICAgIGZvdW5kWzBdLnNlbnRfYXQgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG5cbiAgICAgICAgICB2b2lkIHNlbmQoZm91bmQsIHRydWUpLmNhdGNoKGUgPT4ge1xuICAgICAgICAgICAgbG9nKCdGYWlsZWQgdG8gcmV0cnkgc2VuZGluZycsIGUpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9LCBkZWxheSkgO1xuXG4gICAgICAvLyBXZSBuZWVkIHRvIHVucmVmIHRoZSB0aW1lciBpbiBub2RlLmpzLCBvdGhlcndpc2UgdGhlIG5vZGUgcHJvY2VzcyBuZXZlciBleGl0LlxuICAgICAgaWYgKHR5cGVvZiBmbHVzaFRpbWVyICE9PSAnbnVtYmVyJyAmJiBmbHVzaFRpbWVyLnVucmVmKSB7XG4gICAgICAgIGZsdXNoVGltZXIudW5yZWYoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmbHVzaFdpdGhCYWNrT2ZmKCkge1xuICAgICAgaWYgKGZsdXNoVGltZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmbHVzaEluKHJldHJ5RGVsYXkpO1xuXG4gICAgICByZXRyeURlbGF5ID0gTWF0aC5taW4ocmV0cnlEZWxheSAqIDIsIE1BWF9ERUxBWSk7XG4gICAgfVxuXG4gICAgYXN5bmMgZnVuY3Rpb24gc2VuZChlbnZlbG9wZSwgaXNSZXRyeSA9IGZhbHNlKSB7XG4gICAgICAvLyBXZSBxdWV1ZSBhbGwgcmVwbGF5IGVudmVsb3BlcyB0byBhdm9pZCBtdWx0aXBsZSByZXBsYXkgZW52ZWxvcGVzIGJlaW5nIHNlbnQgYXQgdGhlIHNhbWUgdGltZS4gSWYgb25lIGZhaWxzLCB3ZVxuICAgICAgLy8gbmVlZCB0byByZXRyeSB0aGVtIGluIG9yZGVyLlxuICAgICAgaWYgKCFpc1JldHJ5ICYmIGVudmVsb3BlQ29udGFpbnNJdGVtVHlwZShlbnZlbG9wZSwgWydyZXBsYXlfZXZlbnQnLCAncmVwbGF5X3JlY29yZGluZyddKSkge1xuICAgICAgICBhd2FpdCBzdG9yZS5wdXNoKGVudmVsb3BlKTtcbiAgICAgICAgZmx1c2hJbihNSU5fREVMQVkpO1xuICAgICAgICByZXR1cm4ge307XG4gICAgICB9XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRyYW5zcG9ydC5zZW5kKGVudmVsb3BlKTtcblxuICAgICAgICBsZXQgZGVsYXkgPSBNSU5fREVMQVk7XG5cbiAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgIC8vIElmIHRoZXJlJ3MgYSByZXRyeS1hZnRlciBoZWFkZXIsIHVzZSB0aGF0IGFzIHRoZSBuZXh0IGRlbGF5LlxuICAgICAgICAgIGlmIChyZXN1bHQuaGVhZGVycyAmJiByZXN1bHQuaGVhZGVyc1sncmV0cnktYWZ0ZXInXSkge1xuICAgICAgICAgICAgZGVsYXkgPSBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIocmVzdWx0LmhlYWRlcnNbJ3JldHJ5LWFmdGVyJ10pO1xuICAgICAgICAgIH0gZWxzZSBpZiAocmVzdWx0LmhlYWRlcnMgJiYgcmVzdWx0LmhlYWRlcnNbJ3gtc2VudHJ5LXJhdGUtbGltaXRzJ10pIHtcbiAgICAgICAgICAgIGRlbGF5ID0gNjAwMDA7IC8vIDYwIHNlY29uZHNcbiAgICAgICAgICB9IC8vIElmIHdlIGhhdmUgYSBzZXJ2ZXIgZXJyb3IsIHJldHVybiBub3cgc28gd2UgZG9uJ3QgZmx1c2ggdGhlIHF1ZXVlLlxuICAgICAgICAgIGVsc2UgaWYgKChyZXN1bHQuc3RhdHVzQ29kZSB8fCAwKSA+PSA0MDApIHtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZmx1c2hJbihkZWxheSk7XG4gICAgICAgIHJldHJ5RGVsYXkgPSBTVEFSVF9ERUxBWTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGF3YWl0IHNob3VsZFF1ZXVlKGVudmVsb3BlLCBlICwgcmV0cnlEZWxheSkpIHtcbiAgICAgICAgICAvLyBJZiB0aGlzIGVudmVsb3BlIHdhcyBhIHJldHJ5LCB3ZSB3YW50IHRvIGFkZCBpdCB0byB0aGUgZnJvbnQgb2YgdGhlIHF1ZXVlIHNvIGl0J3MgcmV0cmllZCBhZ2FpbiBmaXJzdC5cbiAgICAgICAgICBpZiAoaXNSZXRyeSkge1xuICAgICAgICAgICAgYXdhaXQgc3RvcmUudW5zaGlmdChlbnZlbG9wZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGF3YWl0IHN0b3JlLnB1c2goZW52ZWxvcGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBmbHVzaFdpdGhCYWNrT2ZmKCk7XG4gICAgICAgICAgbG9nKCdFcnJvciBzZW5kaW5nLiBFdmVudCBxdWV1ZWQuJywgZSApO1xuICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuZmx1c2hBdFN0YXJ0dXApIHtcbiAgICAgIGZsdXNoV2l0aEJhY2tPZmYoKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgc2VuZCxcbiAgICAgIGZsdXNoOiB0ID0+IHRyYW5zcG9ydC5mbHVzaCh0KSxcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgeyBNSU5fREVMQVksIFNUQVJUX0RFTEFZLCBtYWtlT2ZmbGluZVRyYW5zcG9ydCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2ZmbGluZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/transports/offline.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/trpc.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/core/esm/trpc.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"trpcMiddleware\": function() { return /* binding */ trpcMiddleware; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./exports.js */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./semanticAttributes.js */ \"./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _tracing_trace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tracing/trace.js */ \"./node_modules/@sentry/core/esm/tracing/trace.js\");\n\n\n\n\n\n\n\n\nconst trpcCaptureContext = { mechanism: { handled: false, data: { function: 'trpcMiddleware' } } };\n\n/**\n * Sentry tRPC middleware that captures errors and creates spans for tRPC procedures.\n */\nfunction trpcMiddleware(options = {}) {\n  return function (opts) {\n    const { path, type, next, rawInput } = opts;\n    const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n    const clientOptions = client && client.getOptions();\n\n    const trpcContext = {\n      procedure_type: type,\n    };\n\n    if (options.attachRpcInput !== undefined ? options.attachRpcInput : clientOptions && clientOptions.sendDefaultPii) {\n      trpcContext.input = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.normalize)(rawInput);\n    }\n\n    (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.setContext)('trpc', trpcContext);\n\n    function captureIfError(nextResult) {\n      // TODO: Set span status based on what TRPCError was encountered\n      if (\n        typeof nextResult === 'object' &&\n        nextResult !== null &&\n        'ok' in nextResult &&\n        !nextResult.ok &&\n        'error' in nextResult\n      ) {\n        (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.captureException)(nextResult.error, trpcCaptureContext);\n      }\n    }\n\n    return (0,_tracing_trace_js__WEBPACK_IMPORTED_MODULE_3__.startSpanManual)(\n      {\n        name: `trpc/${path}`,\n        op: 'rpc.server',\n        attributes: {\n          [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n          [_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.rpc.trpc',\n        },\n      },\n      span => {\n        let maybePromiseResult;\n        try {\n          maybePromiseResult = next();\n        } catch (e) {\n          (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.captureException)(e, trpcCaptureContext);\n          span.end();\n          throw e;\n        }\n\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(maybePromiseResult)) {\n          return maybePromiseResult.then(\n            nextResult => {\n              captureIfError(nextResult);\n              span.end();\n              return nextResult;\n            },\n            e => {\n              (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.captureException)(e, trpcCaptureContext);\n              span.end();\n              throw e;\n            },\n          ) ;\n        } else {\n          captureIfError(maybePromiseResult);\n          span.end();\n          return maybePromiseResult;\n        }\n      },\n    );\n  };\n}\n\n\n//# sourceMappingURL=trpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cnBjLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRDtBQUNQO0FBQ2E7QUFDaUQ7QUFDaEY7QUFDSDtBQUMyQjs7QUFFckQsNkJBQTZCLGFBQWEsd0JBQXdCOztBQUVsRTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQSxZQUFZLDZCQUE2QjtBQUN6QyxtQkFBbUIsNERBQVM7QUFDNUI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCLHdEQUFTO0FBQ25DOztBQUVBLElBQUksdURBQVU7O0FBRWQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw2REFBZ0I7QUFDeEI7QUFDQTs7QUFFQSxXQUFXLGtFQUFlO0FBQzFCO0FBQ0Esc0JBQXNCLEtBQUs7QUFDM0I7QUFDQTtBQUNBLFdBQVcsb0ZBQWdDO0FBQzNDLFdBQVcsb0ZBQWdDO0FBQzNDLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsVUFBVSw2REFBZ0I7QUFDMUI7QUFDQTtBQUNBOztBQUVBLFlBQVkseURBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLGNBQWMsNkRBQWdCO0FBQzlCO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUUwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cnBjLmpzPzAyMWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm9ybWFsaXplLCBpc1RoZW5hYmxlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBnZXRDbGllbnQgfSBmcm9tICcuL2N1cnJlbnRTY29wZXMuanMnO1xuaW1wb3J0IHsgc2V0Q29udGV4dCwgY2FwdHVyZUV4Y2VwdGlvbiB9IGZyb20gJy4vZXhwb3J0cy5qcyc7XG5pbXBvcnQgeyBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRSwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4gfSBmcm9tICcuL3NlbWFudGljQXR0cmlidXRlcy5qcyc7XG5pbXBvcnQgJy4vdHJhY2luZy9lcnJvcnMuanMnO1xuaW1wb3J0ICcuL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCB7IHN0YXJ0U3Bhbk1hbnVhbCB9IGZyb20gJy4vdHJhY2luZy90cmFjZS5qcyc7XG5cbmNvbnN0IHRycGNDYXB0dXJlQ29udGV4dCA9IHsgbWVjaGFuaXNtOiB7IGhhbmRsZWQ6IGZhbHNlLCBkYXRhOiB7IGZ1bmN0aW9uOiAndHJwY01pZGRsZXdhcmUnIH0gfSB9O1xuXG4vKipcbiAqIFNlbnRyeSB0UlBDIG1pZGRsZXdhcmUgdGhhdCBjYXB0dXJlcyBlcnJvcnMgYW5kIGNyZWF0ZXMgc3BhbnMgZm9yIHRSUEMgcHJvY2VkdXJlcy5cbiAqL1xuZnVuY3Rpb24gdHJwY01pZGRsZXdhcmUob3B0aW9ucyA9IHt9KSB7XG4gIHJldHVybiBmdW5jdGlvbiAob3B0cykge1xuICAgIGNvbnN0IHsgcGF0aCwgdHlwZSwgbmV4dCwgcmF3SW5wdXQgfSA9IG9wdHM7XG4gICAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCk7XG4gICAgY29uc3QgY2xpZW50T3B0aW9ucyA9IGNsaWVudCAmJiBjbGllbnQuZ2V0T3B0aW9ucygpO1xuXG4gICAgY29uc3QgdHJwY0NvbnRleHQgPSB7XG4gICAgICBwcm9jZWR1cmVfdHlwZTogdHlwZSxcbiAgICB9O1xuXG4gICAgaWYgKG9wdGlvbnMuYXR0YWNoUnBjSW5wdXQgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMuYXR0YWNoUnBjSW5wdXQgOiBjbGllbnRPcHRpb25zICYmIGNsaWVudE9wdGlvbnMuc2VuZERlZmF1bHRQaWkpIHtcbiAgICAgIHRycGNDb250ZXh0LmlucHV0ID0gbm9ybWFsaXplKHJhd0lucHV0KTtcbiAgICB9XG5cbiAgICBzZXRDb250ZXh0KCd0cnBjJywgdHJwY0NvbnRleHQpO1xuXG4gICAgZnVuY3Rpb24gY2FwdHVyZUlmRXJyb3IobmV4dFJlc3VsdCkge1xuICAgICAgLy8gVE9ETzogU2V0IHNwYW4gc3RhdHVzIGJhc2VkIG9uIHdoYXQgVFJQQ0Vycm9yIHdhcyBlbmNvdW50ZXJlZFxuICAgICAgaWYgKFxuICAgICAgICB0eXBlb2YgbmV4dFJlc3VsdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgbmV4dFJlc3VsdCAhPT0gbnVsbCAmJlxuICAgICAgICAnb2snIGluIG5leHRSZXN1bHQgJiZcbiAgICAgICAgIW5leHRSZXN1bHQub2sgJiZcbiAgICAgICAgJ2Vycm9yJyBpbiBuZXh0UmVzdWx0XG4gICAgICApIHtcbiAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihuZXh0UmVzdWx0LmVycm9yLCB0cnBjQ2FwdHVyZUNvbnRleHQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzdGFydFNwYW5NYW51YWwoXG4gICAgICB7XG4gICAgICAgIG5hbWU6IGB0cnBjLyR7cGF0aH1gLFxuICAgICAgICBvcDogJ3JwYy5zZXJ2ZXInLFxuICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTogJ3JvdXRlJyxcbiAgICAgICAgICBbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU5dOiAnYXV0by5ycGMudHJwYycsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgc3BhbiA9PiB7XG4gICAgICAgIGxldCBtYXliZVByb21pc2VSZXN1bHQ7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgbWF5YmVQcm9taXNlUmVzdWx0ID0gbmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlLCB0cnBjQ2FwdHVyZUNvbnRleHQpO1xuICAgICAgICAgIHNwYW4uZW5kKCk7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpc1RoZW5hYmxlKG1heWJlUHJvbWlzZVJlc3VsdCkpIHtcbiAgICAgICAgICByZXR1cm4gbWF5YmVQcm9taXNlUmVzdWx0LnRoZW4oXG4gICAgICAgICAgICBuZXh0UmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgY2FwdHVyZUlmRXJyb3IobmV4dFJlc3VsdCk7XG4gICAgICAgICAgICAgIHNwYW4uZW5kKCk7XG4gICAgICAgICAgICAgIHJldHVybiBuZXh0UmVzdWx0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGUgPT4ge1xuICAgICAgICAgICAgICBjYXB0dXJlRXhjZXB0aW9uKGUsIHRycGNDYXB0dXJlQ29udGV4dCk7XG4gICAgICAgICAgICAgIHNwYW4uZW5kKCk7XG4gICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICkgO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmVJZkVycm9yKG1heWJlUHJvbWlzZVJlc3VsdCk7XG4gICAgICAgICAgc3Bhbi5lbmQoKTtcbiAgICAgICAgICByZXR1cm4gbWF5YmVQcm9taXNlUmVzdWx0O1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCB7IHRycGNNaWRkbGV3YXJlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cnBjLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/trpc.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyScopeDataToEvent\": function() { return /* binding */ applyScopeDataToEvent; },\n/* harmony export */   \"mergeAndOverwriteScopeData\": function() { return /* binding */ mergeAndOverwriteScopeData; },\n/* harmony export */   \"mergeScopeData\": function() { return /* binding */ mergeScopeData; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tracing/dynamicSamplingContext.js */ \"./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _spanUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./spanUtils.js */ \"./node_modules/@sentry/core/esm/utils/spanUtils.js\");\n\n\n\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nfunction applyScopeDataToEvent(event, data) {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nfunction mergeScopeData(data, mergeData) {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nfunction mergeAndOverwriteScopeData\n\n(data, prop, mergeVal) {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\nfunction applyDataToEvent(event, data) {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  const cleanedExtra = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  // transaction events get their `transaction` from the root span name\n  if (transactionName && event.type !== 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event, breadcrumbs) {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event, sdkProcessingMetadata) {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event, span) {\n  event.contexts = {\n    trace: (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToTraceContext)(span),\n    ...event.contexts,\n  };\n\n  event.sdkProcessingMetadata = {\n    dynamicSamplingContext: (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_2__.getDynamicSamplingContextFromSpan)(span),\n    ...event.sdkProcessingMetadata,\n  };\n\n  const rootSpan = (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.getRootSpan)(span);\n  const transactionName = (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(rootSpan).description;\n  if (transactionName && !event.transaction && event.type === 'transaction') {\n    event.transaction = transactionName;\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event, fingerprint) {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.arrayify)(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n\n\n//# sourceMappingURL=applyScopeDataToEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleCallbackErrors\": function() { return /* binding */ handleCallbackErrors; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Wrap a callback function with error handling.\n * If an error is thrown, it will be passed to the `onError` callback and re-thrown.\n *\n * If the return value of the function is a promise, it will be handled with `maybeHandlePromiseRejection`.\n *\n * If an `onFinally` callback is provided, this will be called when the callback has finished\n * - so if it returns a promise, once the promise resolved/rejected,\n * else once the callback has finished executing.\n * The `onFinally` callback will _always_ be called, no matter if an error was thrown or not.\n */\nfunction handleCallbackErrors\n\n(\n  fn,\n  onError,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onFinally = () => {},\n) {\n  let maybePromiseResult;\n  try {\n    maybePromiseResult = fn();\n  } catch (e) {\n    onError(e);\n    onFinally();\n    throw e;\n  }\n\n  return maybeHandlePromiseRejection(maybePromiseResult, onError, onFinally);\n}\n\n/**\n * Maybe handle a promise rejection.\n * This expects to be given a value that _may_ be a promise, or any other value.\n * If it is a promise, and it rejects, it will call the `onError` callback.\n * Other than this, it will generally return the given value as-is.\n */\nfunction maybeHandlePromiseRejection(\n  value,\n  onError,\n  onFinally,\n) {\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {\n    // @ts-expect-error - the isThenable check returns the \"wrong\" type here\n    return value.then(\n      res => {\n        onFinally();\n        return res;\n      },\n      e => {\n        onError(e);\n        onFinally();\n        throw e;\n      },\n    );\n  }\n\n  onFinally();\n  return value;\n}\n\n\n//# sourceMappingURL=handleCallbackErrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9oYW5kbGVDYWxsYmFja0Vycm9ycy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQzs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0seURBQVU7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdXRpbHMvaGFuZGxlQ2FsbGJhY2tFcnJvcnMuanM/OGU0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1RoZW5hYmxlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogV3JhcCBhIGNhbGxiYWNrIGZ1bmN0aW9uIHdpdGggZXJyb3IgaGFuZGxpbmcuXG4gKiBJZiBhbiBlcnJvciBpcyB0aHJvd24sIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSBgb25FcnJvcmAgY2FsbGJhY2sgYW5kIHJlLXRocm93bi5cbiAqXG4gKiBJZiB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBmdW5jdGlvbiBpcyBhIHByb21pc2UsIGl0IHdpbGwgYmUgaGFuZGxlZCB3aXRoIGBtYXliZUhhbmRsZVByb21pc2VSZWplY3Rpb25gLlxuICpcbiAqIElmIGFuIGBvbkZpbmFsbHlgIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCB0aGlzIHdpbGwgYmUgY2FsbGVkIHdoZW4gdGhlIGNhbGxiYWNrIGhhcyBmaW5pc2hlZFxuICogLSBzbyBpZiBpdCByZXR1cm5zIGEgcHJvbWlzZSwgb25jZSB0aGUgcHJvbWlzZSByZXNvbHZlZC9yZWplY3RlZCxcbiAqIGVsc2Ugb25jZSB0aGUgY2FsbGJhY2sgaGFzIGZpbmlzaGVkIGV4ZWN1dGluZy5cbiAqIFRoZSBgb25GaW5hbGx5YCBjYWxsYmFjayB3aWxsIF9hbHdheXNfIGJlIGNhbGxlZCwgbm8gbWF0dGVyIGlmIGFuIGVycm9yIHdhcyB0aHJvd24gb3Igbm90LlxuICovXG5mdW5jdGlvbiBoYW5kbGVDYWxsYmFja0Vycm9yc1xuXG4oXG4gIGZuLFxuICBvbkVycm9yLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gIG9uRmluYWxseSA9ICgpID0+IHt9LFxuKSB7XG4gIGxldCBtYXliZVByb21pc2VSZXN1bHQ7XG4gIHRyeSB7XG4gICAgbWF5YmVQcm9taXNlUmVzdWx0ID0gZm4oKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIG9uRXJyb3IoZSk7XG4gICAgb25GaW5hbGx5KCk7XG4gICAgdGhyb3cgZTtcbiAgfVxuXG4gIHJldHVybiBtYXliZUhhbmRsZVByb21pc2VSZWplY3Rpb24obWF5YmVQcm9taXNlUmVzdWx0LCBvbkVycm9yLCBvbkZpbmFsbHkpO1xufVxuXG4vKipcbiAqIE1heWJlIGhhbmRsZSBhIHByb21pc2UgcmVqZWN0aW9uLlxuICogVGhpcyBleHBlY3RzIHRvIGJlIGdpdmVuIGEgdmFsdWUgdGhhdCBfbWF5XyBiZSBhIHByb21pc2UsIG9yIGFueSBvdGhlciB2YWx1ZS5cbiAqIElmIGl0IGlzIGEgcHJvbWlzZSwgYW5kIGl0IHJlamVjdHMsIGl0IHdpbGwgY2FsbCB0aGUgYG9uRXJyb3JgIGNhbGxiYWNrLlxuICogT3RoZXIgdGhhbiB0aGlzLCBpdCB3aWxsIGdlbmVyYWxseSByZXR1cm4gdGhlIGdpdmVuIHZhbHVlIGFzLWlzLlxuICovXG5mdW5jdGlvbiBtYXliZUhhbmRsZVByb21pc2VSZWplY3Rpb24oXG4gIHZhbHVlLFxuICBvbkVycm9yLFxuICBvbkZpbmFsbHksXG4pIHtcbiAgaWYgKGlzVGhlbmFibGUodmFsdWUpKSB7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIHRoZSBpc1RoZW5hYmxlIGNoZWNrIHJldHVybnMgdGhlIFwid3JvbmdcIiB0eXBlIGhlcmVcbiAgICByZXR1cm4gdmFsdWUudGhlbihcbiAgICAgIHJlcyA9PiB7XG4gICAgICAgIG9uRmluYWxseSgpO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgfSxcbiAgICAgIGUgPT4ge1xuICAgICAgICBvbkVycm9yKGUpO1xuICAgICAgICBvbkZpbmFsbHkoKTtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH0sXG4gICAgKTtcbiAgfVxuXG4gIG9uRmluYWxseSgpO1xuICByZXR1cm4gdmFsdWU7XG59XG5cbmV4cG9ydCB7IGhhbmRsZUNhbGxiYWNrRXJyb3JzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYW5kbGVDYWxsYmFja0Vycm9ycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/handleCallbackErrors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hasTracingEnabled\": function() { return /* binding */ hasTracingEnabled; }\n/* harmony export */ });\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const options = maybeOptions || getClientOptions();\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\nfunction getClientOptions() {\n  const client = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n  return client && client.getOptions();\n}\n\n\n//# sourceMappingURL=hasTracingEnabled.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9oYXNUcmFjaW5nRW5hYmxlZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDs7QUFFaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsNERBQVM7QUFDMUI7QUFDQTs7QUFFNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdXRpbHMvaGFzVHJhY2luZ0VuYWJsZWQuanM/MzIxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDbGllbnQgfSBmcm9tICcuLi9jdXJyZW50U2NvcGVzLmpzJztcblxuLy8gVHJlZXNoYWthYmxlIGd1YXJkIHRvIHJlbW92ZSBhbGwgY29kZSByZWxhdGVkIHRvIHRyYWNpbmdcblxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIHRyYWNpbmcgaXMgY3VycmVudGx5IGVuYWJsZWQuXG4gKlxuICogVHJhY2luZyBpcyBlbmFibGVkIHdoZW4gYXQgbGVhc3Qgb25lIG9mIGB0cmFjZXNTYW1wbGVSYXRlYCBhbmQgYHRyYWNlc1NhbXBsZXJgIGlzIGRlZmluZWQgaW4gdGhlIFNESyBjb25maWcuXG4gKi9cbmZ1bmN0aW9uIGhhc1RyYWNpbmdFbmFibGVkKFxuICBtYXliZU9wdGlvbnMsXG4pIHtcbiAgaWYgKHR5cGVvZiBfX1NFTlRSWV9UUkFDSU5HX18gPT09ICdib29sZWFuJyAmJiAhX19TRU5UUllfVFJBQ0lOR19fKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3Qgb3B0aW9ucyA9IG1heWJlT3B0aW9ucyB8fCBnZXRDbGllbnRPcHRpb25zKCk7XG4gIHJldHVybiAhIW9wdGlvbnMgJiYgKG9wdGlvbnMuZW5hYmxlVHJhY2luZyB8fCAndHJhY2VzU2FtcGxlUmF0ZScgaW4gb3B0aW9ucyB8fCAndHJhY2VzU2FtcGxlcicgaW4gb3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGdldENsaWVudE9wdGlvbnMoKSB7XG4gIGNvbnN0IGNsaWVudCA9IGdldENsaWVudCgpO1xuICByZXR1cm4gY2xpZW50ICYmIGNsaWVudC5nZXRPcHRpb25zKCk7XG59XG5cbmV4cG9ydCB7IGhhc1RyYWNpbmdFbmFibGVkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNUcmFjaW5nRW5hYmxlZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isSentryRequestUrl\": function() { return /* binding */ isSentryRequestUrl; }\n/* harmony export */ });\n/**\n * Checks whether given url points to Sentry server\n *\n * @param url url to verify\n */\nfunction isSentryRequestUrl(url, client) {\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url, tunnel) {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url, dsn) {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str) {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n\n//# sourceMappingURL=isSentryRequestUrl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9pc1NlbnRyeVJlcXVlc3RVcmwuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdXRpbHMvaXNTZW50cnlSZXF1ZXN0VXJsLmpzPzQ3MWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB1cmwgcG9pbnRzIHRvIFNlbnRyeSBzZXJ2ZXJcbiAqXG4gKiBAcGFyYW0gdXJsIHVybCB0byB2ZXJpZnlcbiAqL1xuZnVuY3Rpb24gaXNTZW50cnlSZXF1ZXN0VXJsKHVybCwgY2xpZW50KSB7XG4gIGNvbnN0IGRzbiA9IGNsaWVudCAmJiBjbGllbnQuZ2V0RHNuKCk7XG4gIGNvbnN0IHR1bm5lbCA9IGNsaWVudCAmJiBjbGllbnQuZ2V0T3B0aW9ucygpLnR1bm5lbDtcbiAgcmV0dXJuIGNoZWNrRHNuKHVybCwgZHNuKSB8fCBjaGVja1R1bm5lbCh1cmwsIHR1bm5lbCk7XG59XG5cbmZ1bmN0aW9uIGNoZWNrVHVubmVsKHVybCwgdHVubmVsKSB7XG4gIGlmICghdHVubmVsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHJlbW92ZVRyYWlsaW5nU2xhc2godXJsKSA9PT0gcmVtb3ZlVHJhaWxpbmdTbGFzaCh0dW5uZWwpO1xufVxuXG5mdW5jdGlvbiBjaGVja0Rzbih1cmwsIGRzbikge1xuICByZXR1cm4gZHNuID8gdXJsLmluY2x1ZGVzKGRzbi5ob3N0KSA6IGZhbHNlO1xufVxuXG5mdW5jdGlvbiByZW1vdmVUcmFpbGluZ1NsYXNoKHN0cikge1xuICByZXR1cm4gc3RyW3N0ci5sZW5ndGggLSAxXSA9PT0gJy8nID8gc3RyLnNsaWNlKDAsIC0xKSA6IHN0cjtcbn1cblxuZXhwb3J0IHsgaXNTZW50cnlSZXF1ZXN0VXJsIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc1NlbnRyeVJlcXVlc3RVcmwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/isSentryRequestUrl.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/parameterize.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/parameterize.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parameterize\": function() { return /* binding */ parameterize; }\n/* harmony export */ });\n/**\n * Tagged template function which returns paramaterized representation of the message\n * For example: parameterize`This is a log statement with ${x} and ${y} params`, would return:\n * \"__sentry_template_string__\": 'This is a log statement with %s and %s params',\n * \"__sentry_template_values__\": ['first', 'second']\n * @param strings An array of string values splitted between expressions\n * @param values Expressions extracted from template string\n * @returns String with template information in __sentry_template_string__ and __sentry_template_values__ properties\n */\nfunction parameterize(strings, ...values) {\n  const formatted = new String(String.raw(strings, ...values)) ;\n  formatted.__sentry_template_string__ = strings.join('\\x00').replace(/%/g, '%%').replace(/\\0/g, '%s');\n  formatted.__sentry_template_values__ = values;\n  return formatted;\n}\n\n\n//# sourceMappingURL=parameterize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9wYXJhbWV0ZXJpemUuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSw0REFBNEQsR0FBRyxNQUFNLEdBQUc7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9wYXJhbWV0ZXJpemUuanM/OWJkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRhZ2dlZCB0ZW1wbGF0ZSBmdW5jdGlvbiB3aGljaCByZXR1cm5zIHBhcmFtYXRlcml6ZWQgcmVwcmVzZW50YXRpb24gb2YgdGhlIG1lc3NhZ2VcbiAqIEZvciBleGFtcGxlOiBwYXJhbWV0ZXJpemVgVGhpcyBpcyBhIGxvZyBzdGF0ZW1lbnQgd2l0aCAke3h9IGFuZCAke3l9IHBhcmFtc2AsIHdvdWxkIHJldHVybjpcbiAqIFwiX19zZW50cnlfdGVtcGxhdGVfc3RyaW5nX19cIjogJ1RoaXMgaXMgYSBsb2cgc3RhdGVtZW50IHdpdGggJXMgYW5kICVzIHBhcmFtcycsXG4gKiBcIl9fc2VudHJ5X3RlbXBsYXRlX3ZhbHVlc19fXCI6IFsnZmlyc3QnLCAnc2Vjb25kJ11cbiAqIEBwYXJhbSBzdHJpbmdzIEFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMgc3BsaXR0ZWQgYmV0d2VlbiBleHByZXNzaW9uc1xuICogQHBhcmFtIHZhbHVlcyBFeHByZXNzaW9ucyBleHRyYWN0ZWQgZnJvbSB0ZW1wbGF0ZSBzdHJpbmdcbiAqIEByZXR1cm5zIFN0cmluZyB3aXRoIHRlbXBsYXRlIGluZm9ybWF0aW9uIGluIF9fc2VudHJ5X3RlbXBsYXRlX3N0cmluZ19fIGFuZCBfX3NlbnRyeV90ZW1wbGF0ZV92YWx1ZXNfXyBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIHBhcmFtZXRlcml6ZShzdHJpbmdzLCAuLi52YWx1ZXMpIHtcbiAgY29uc3QgZm9ybWF0dGVkID0gbmV3IFN0cmluZyhTdHJpbmcucmF3KHN0cmluZ3MsIC4uLnZhbHVlcykpIDtcbiAgZm9ybWF0dGVkLl9fc2VudHJ5X3RlbXBsYXRlX3N0cmluZ19fID0gc3RyaW5ncy5qb2luKCdcXHgwMCcpLnJlcGxhY2UoLyUvZywgJyUlJykucmVwbGFjZSgvXFwwL2csICclcycpO1xuICBmb3JtYXR0ZWQuX19zZW50cnlfdGVtcGxhdGVfdmFsdWVzX18gPSB2YWx1ZXM7XG4gIHJldHVybiBmb3JtYXR0ZWQ7XG59XG5cbmV4cG9ydCB7IHBhcmFtZXRlcml6ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyYW1ldGVyaXplLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/parameterize.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/parseSampleRate.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/parseSampleRate.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseSampleRate\": function() { return /* binding */ parseSampleRate; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/core/esm/debug-build.js\");\n\n\n\n/**\n * Parse a sample rate from a given value.\n * This will either return a boolean or number sample rate, if the sample rate is valid (between 0 and 1).\n * If a string is passed, we try to convert it to a number.\n *\n * Any invalid sample rate will return `undefined`.\n */\nfunction parseSampleRate(sampleRate) {\n  if (typeof sampleRate === 'boolean') {\n    return Number(sampleRate);\n  }\n\n  const rate = typeof sampleRate === 'string' ? parseFloat(sampleRate) : sampleRate;\n  if (typeof rate !== 'number' || isNaN(rate) || rate < 0 || rate > 1) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          sampleRate,\n        )} of type ${JSON.stringify(typeof sampleRate)}.`,\n      );\n    return undefined;\n  }\n\n  return rate;\n}\n\n\n//# sourceMappingURL=parseSampleRate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9wYXJzZVNhbXBsZVJhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVDO0FBQ1M7O0FBRWhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksd0RBQVc7QUFDZixNQUFNLHNEQUFXO0FBQ2pCLGtIQUFrSDtBQUNsSDtBQUNBLFdBQVcsVUFBVSxrQ0FBa0M7QUFDdkQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3V0aWxzL3BhcnNlU2FtcGxlUmF0ZS5qcz9kMmZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuLi9kZWJ1Zy1idWlsZC5qcyc7XG5cbi8qKlxuICogUGFyc2UgYSBzYW1wbGUgcmF0ZSBmcm9tIGEgZ2l2ZW4gdmFsdWUuXG4gKiBUaGlzIHdpbGwgZWl0aGVyIHJldHVybiBhIGJvb2xlYW4gb3IgbnVtYmVyIHNhbXBsZSByYXRlLCBpZiB0aGUgc2FtcGxlIHJhdGUgaXMgdmFsaWQgKGJldHdlZW4gMCBhbmQgMSkuXG4gKiBJZiBhIHN0cmluZyBpcyBwYXNzZWQsIHdlIHRyeSB0byBjb252ZXJ0IGl0IHRvIGEgbnVtYmVyLlxuICpcbiAqIEFueSBpbnZhbGlkIHNhbXBsZSByYXRlIHdpbGwgcmV0dXJuIGB1bmRlZmluZWRgLlxuICovXG5mdW5jdGlvbiBwYXJzZVNhbXBsZVJhdGUoc2FtcGxlUmF0ZSkge1xuICBpZiAodHlwZW9mIHNhbXBsZVJhdGUgPT09ICdib29sZWFuJykge1xuICAgIHJldHVybiBOdW1iZXIoc2FtcGxlUmF0ZSk7XG4gIH1cblxuICBjb25zdCByYXRlID0gdHlwZW9mIHNhbXBsZVJhdGUgPT09ICdzdHJpbmcnID8gcGFyc2VGbG9hdChzYW1wbGVSYXRlKSA6IHNhbXBsZVJhdGU7XG4gIGlmICh0eXBlb2YgcmF0ZSAhPT0gJ251bWJlcicgfHwgaXNOYU4ocmF0ZSkgfHwgcmF0ZSA8IDAgfHwgcmF0ZSA+IDEpIHtcbiAgICBERUJVR19CVUlMRCAmJlxuICAgICAgbG9nZ2VyLndhcm4oXG4gICAgICAgIGBbVHJhY2luZ10gR2l2ZW4gc2FtcGxlIHJhdGUgaXMgaW52YWxpZC4gU2FtcGxlIHJhdGUgbXVzdCBiZSBhIGJvb2xlYW4gb3IgYSBudW1iZXIgYmV0d2VlbiAwIGFuZCAxLiBHb3QgJHtKU09OLnN0cmluZ2lmeShcbiAgICAgICAgICBzYW1wbGVSYXRlLFxuICAgICAgICApfSBvZiB0eXBlICR7SlNPTi5zdHJpbmdpZnkodHlwZW9mIHNhbXBsZVJhdGUpfS5gLFxuICAgICAgKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgcmV0dXJuIHJhdGU7XG59XG5cbmV4cG9ydCB7IHBhcnNlU2FtcGxlUmF0ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2VTYW1wbGVSYXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/parseSampleRate.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/prepareEvent.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/prepareEvent.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyDebugIds\": function() { return /* binding */ applyDebugIds; },\n/* harmony export */   \"applyDebugMeta\": function() { return /* binding */ applyDebugMeta; },\n/* harmony export */   \"parseEventHintOrCaptureContext\": function() { return /* binding */ parseEventHintOrCaptureContext; },\n/* harmony export */   \"prepareEvent\": function() { return /* binding */ prepareEvent; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../eventProcessors.js */ \"./node_modules/@sentry/core/esm/eventProcessors.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./applyScopeDataToEvent.js */ \"./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js\");\n\n\n\n\n\n\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n  isolationScope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n    timestamp: event.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dateTimestampInSeconds)(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Scope.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = (0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_1__.getGlobalScope)().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_2__.mergeScopeData)(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_2__.mergeScopeData)(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_2__.applyScopeDataToEvent)(prepared, data);\n\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = (0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__.notifyEventProcessors)(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : _constants_js__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.truncate)(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.truncate)(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.truncate)(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      return {\n        ...span,\n        ...(span.data && {\n          data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(span.data, depth, maxBreadth),\n        }),\n      };\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(\n  scope,\n  captureContext,\n) {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new _scope_js__WEBPACK_IMPORTED_MODULE_5__.Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nfunction parseEventHintOrCaptureContext(\n  hint,\n) {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint,\n) {\n  return hint instanceof _scope_js__WEBPACK_IMPORTED_MODULE_5__.Scope || typeof hint === 'function';\n}\n\nconst captureContextKeys = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] ;\n\nfunction hintIsScopeContext(hint) {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key ));\n}\n\n\n//# sourceMappingURL=prepareEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/prepareEvent.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/sdkMetadata.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/sdkMetadata.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applySdkMetadata\": function() { return /* binding */ applySdkMetadata; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nfunction applySdkMetadata(options, name, names = [name], source = 'npm') {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n      })),\n      version: _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n\n\n//# sourceMappingURL=sdkMetadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zZGtNZXRhZGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0Qzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQ0FBaUMsS0FBSztBQUN0QztBQUNBLGlCQUFpQixPQUFPLFdBQVcsS0FBSztBQUN4QyxpQkFBaUIsc0RBQVc7QUFDNUIsT0FBTztBQUNQLGVBQWUsc0RBQVc7QUFDMUI7QUFDQTs7QUFFQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zZGtNZXRhZGF0YS5qcz8wNmE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNES19WRVJTSU9OIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogQSBidWlsZGVyIGZvciB0aGUgU0RLIG1ldGFkYXRhIGluIHRoZSBvcHRpb25zIGZvciB0aGUgU0RLIGluaXRpYWxpemF0aW9uLlxuICpcbiAqIE5vdGU6IFRoaXMgZnVuY3Rpb24gaXMgaWRlbnRpY2FsIHRvIGBidWlsZE1ldGFkYXRhYCBpbiBSZW1peCBhbmQgTmV4dEpTIGFuZCBTdmVsdGVLaXQuXG4gKiBXZSBkb24ndCBleHRyYWN0IGl0IGZvciBidW5kbGUgc2l6ZSByZWFzb25zLlxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L3B1bGwvNzQwNFxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L3B1bGwvNDE5NlxuICpcbiAqIElmIHlvdSBtYWtlIGNoYW5nZXMgdG8gdGhpcyBmdW5jdGlvbiBjb25zaWRlciB1cGRhdGluZyB0aGUgb3RoZXJzIGFzIHdlbGwuXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgU0RLIG9wdGlvbnMgb2JqZWN0IHRoYXQgZ2V0cyBtdXRhdGVkXG4gKiBAcGFyYW0gbmFtZXMgbGlzdCBvZiBwYWNrYWdlIG5hbWVzXG4gKi9cbmZ1bmN0aW9uIGFwcGx5U2RrTWV0YWRhdGEob3B0aW9ucywgbmFtZSwgbmFtZXMgPSBbbmFtZV0sIHNvdXJjZSA9ICducG0nKSB7XG4gIGNvbnN0IG1ldGFkYXRhID0gb3B0aW9ucy5fbWV0YWRhdGEgfHwge307XG5cbiAgaWYgKCFtZXRhZGF0YS5zZGspIHtcbiAgICBtZXRhZGF0YS5zZGsgPSB7XG4gICAgICBuYW1lOiBgc2VudHJ5LmphdmFzY3JpcHQuJHtuYW1lfWAsXG4gICAgICBwYWNrYWdlczogbmFtZXMubWFwKG5hbWUgPT4gKHtcbiAgICAgICAgbmFtZTogYCR7c291cmNlfTpAc2VudHJ5LyR7bmFtZX1gLFxuICAgICAgICB2ZXJzaW9uOiBTREtfVkVSU0lPTixcbiAgICAgIH0pKSxcbiAgICAgIHZlcnNpb246IFNES19WRVJTSU9OLFxuICAgIH07XG4gIH1cblxuICBvcHRpb25zLl9tZXRhZGF0YSA9IG1ldGFkYXRhO1xufVxuXG5leHBvcnQgeyBhcHBseVNka01ldGFkYXRhIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZGtNZXRhZGF0YS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/sdkMetadata.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/spanOnScope.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/spanOnScope.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_getSpanForScope\": function() { return /* binding */ _getSpanForScope; },\n/* harmony export */   \"_setSpanForScope\": function() { return /* binding */ _setSpanForScope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst SCOPE_SPAN_FIELD = '_sentrySpan';\n\n/**\n * Set the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nfunction _setSpanForScope(scope, span) {\n  if (span) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(scope , SCOPE_SPAN_FIELD, span);\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete (scope )[SCOPE_SPAN_FIELD];\n  }\n}\n\n/**\n * Get the active span for a given scope.\n * NOTE: This should NOT be used directly, but is only used internally by the trace methods.\n */\nfunction _getSpanForScope(scope) {\n  return scope[SCOPE_SPAN_FIELD];\n}\n\n\n//# sourceMappingURL=spanOnScope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zcGFuT25TY29wZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUQ7O0FBRXpEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdUVBQXdCO0FBQzVCLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFOEM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdXRpbHMvc3Bhbk9uU2NvcGUuanM/NjQ3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuY29uc3QgU0NPUEVfU1BBTl9GSUVMRCA9ICdfc2VudHJ5U3Bhbic7XG5cbi8qKlxuICogU2V0IHRoZSBhY3RpdmUgc3BhbiBmb3IgYSBnaXZlbiBzY29wZS5cbiAqIE5PVEU6IFRoaXMgc2hvdWxkIE5PVCBiZSB1c2VkIGRpcmVjdGx5LCBidXQgaXMgb25seSB1c2VkIGludGVybmFsbHkgYnkgdGhlIHRyYWNlIG1ldGhvZHMuXG4gKi9cbmZ1bmN0aW9uIF9zZXRTcGFuRm9yU2NvcGUoc2NvcGUsIHNwYW4pIHtcbiAgaWYgKHNwYW4pIHtcbiAgICBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkoc2NvcGUgLCBTQ09QRV9TUEFOX0ZJRUxELCBzcGFuKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWR5bmFtaWMtZGVsZXRlXG4gICAgZGVsZXRlIChzY29wZSApW1NDT1BFX1NQQU5fRklFTERdO1xuICB9XG59XG5cbi8qKlxuICogR2V0IHRoZSBhY3RpdmUgc3BhbiBmb3IgYSBnaXZlbiBzY29wZS5cbiAqIE5PVEU6IFRoaXMgc2hvdWxkIE5PVCBiZSB1c2VkIGRpcmVjdGx5LCBidXQgaXMgb25seSB1c2VkIGludGVybmFsbHkgYnkgdGhlIHRyYWNlIG1ldGhvZHMuXG4gKi9cbmZ1bmN0aW9uIF9nZXRTcGFuRm9yU2NvcGUoc2NvcGUpIHtcbiAgcmV0dXJuIHNjb3BlW1NDT1BFX1NQQU5fRklFTERdO1xufVxuXG5leHBvcnQgeyBfZ2V0U3BhbkZvclNjb3BlLCBfc2V0U3BhbkZvclNjb3BlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGFuT25TY29wZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/spanOnScope.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/spanUtils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/spanUtils.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TRACE_FLAG_NONE\": function() { return /* binding */ TRACE_FLAG_NONE; },\n/* harmony export */   \"TRACE_FLAG_SAMPLED\": function() { return /* binding */ TRACE_FLAG_SAMPLED; },\n/* harmony export */   \"addChildSpanToSpan\": function() { return /* binding */ addChildSpanToSpan; },\n/* harmony export */   \"getActiveSpan\": function() { return /* binding */ getActiveSpan; },\n/* harmony export */   \"getRootSpan\": function() { return /* binding */ getRootSpan; },\n/* harmony export */   \"getSpanDescendants\": function() { return /* binding */ getSpanDescendants; },\n/* harmony export */   \"getStatusMessage\": function() { return /* binding */ getStatusMessage; },\n/* harmony export */   \"removeChildSpanFromSpan\": function() { return /* binding */ removeChildSpanFromSpan; },\n/* harmony export */   \"spanIsSampled\": function() { return /* binding */ spanIsSampled; },\n/* harmony export */   \"spanTimeInputToSeconds\": function() { return /* binding */ spanTimeInputToSeconds; },\n/* harmony export */   \"spanToJSON\": function() { return /* binding */ spanToJSON; },\n/* harmony export */   \"spanToTraceContext\": function() { return /* binding */ spanToTraceContext; },\n/* harmony export */   \"spanToTraceHeader\": function() { return /* binding */ spanToTraceHeader; },\n/* harmony export */   \"spanToTransactionTraceContext\": function() { return /* binding */ spanToTransactionTraceContext; },\n/* harmony export */   \"updateMetricSummaryOnActiveSpan\": function() { return /* binding */ updateMetricSummaryOnActiveSpan; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _asyncContext_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../asyncContext/index.js */ \"./node_modules/@sentry/core/esm/asyncContext/index.js\");\n/* harmony import */ var _carrier_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../carrier.js */ \"./node_modules/@sentry/core/esm/carrier.js\");\n/* harmony import */ var _currentScopes_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../currentScopes.js */ \"./node_modules/@sentry/core/esm/currentScopes.js\");\n/* harmony import */ var _metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../metrics/metric-summary.js */ \"./node_modules/@sentry/core/esm/metrics/metric-summary.js\");\n/* harmony import */ var _semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../semanticAttributes.js */ \"./node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tracing/spanstatus.js */ \"./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _spanOnScope_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./spanOnScope.js */ \"./node_modules/@sentry/core/esm/utils/spanOnScope.js\");\n\n\n\n\n\n\n\n\n\n// These are aligned with OpenTelemetry trace flags\nconst TRACE_FLAG_NONE = 0x0;\nconst TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n * By default, this will only include trace_id, span_id & parent_span_id.\n * If `includeAllData` is true, it will also include data, op, status & origin.\n */\nfunction spanToTransactionTraceContext(span) {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, origin } = spanToJSON(span);\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    parent_span_id,\n    span_id,\n    trace_id,\n    data,\n    op,\n    status,\n    origin,\n  });\n}\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in a non-transaction event.\n */\nfunction spanToTraceContext(span) {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { parent_span_id } = spanToJSON(span);\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({ parent_span_id, span_id, trace_id });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nfunction spanToTraceHeader(span) {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.generateSentryTraceHeader)(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nfunction spanTimeInputToSeconds(input) {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp) {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n */\n// Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n// This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n// And `spanToJSON` needs the Span class from `span.ts` to check here.\nfunction spanToJSON(span) {\n  if (spanIsSentrySpan(span)) {\n    return span.getSpanJSON();\n  }\n\n  try {\n    const { spanId: span_id, traceId: trace_id } = span.spanContext();\n\n    // Handle a span from @opentelemetry/sdk-base-trace's `Span` class\n    if (spanIsOpenTelemetrySdkTraceBaseSpan(span)) {\n      const { attributes, startTime, name, endTime, parentSpanId, status } = span;\n\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n        span_id,\n        trace_id,\n        data: attributes,\n        description: name,\n        parent_span_id: parentSpanId,\n        start_timestamp: spanTimeInputToSeconds(startTime),\n        // This is [0,0] by default in OTEL, in which case we want to interpret this as no end time\n        timestamp: spanTimeInputToSeconds(endTime) || undefined,\n        status: getStatusMessage(status),\n        op: attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_OP],\n        origin: attributes[_semanticAttributes_js__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] ,\n        _metrics_summary: (0,_metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_2__.getMetricSummaryJsonForSpan)(span),\n      });\n    }\n\n    // Finally, at least we have `spanContext()`....\n    return {\n      span_id,\n      trace_id,\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction spanIsOpenTelemetrySdkTraceBaseSpan(span) {\n  const castSpan = span ;\n  return !!castSpan.attributes && !!castSpan.startTime && !!castSpan.name && !!castSpan.endTime && !!castSpan.status;\n}\n\n/** Exported only for tests. */\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSentrySpan(span) {\n  return typeof (span ).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nfunction spanIsSampled(span) {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  return traceFlags === TRACE_FLAG_SAMPLED;\n}\n\n/** Get the status message to use for a JSON representation of a span. */\nfunction getStatusMessage(status) {\n  if (!status || status.code === _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_3__.SPAN_STATUS_UNSET) {\n    return undefined;\n  }\n\n  if (status.code === _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_3__.SPAN_STATUS_OK) {\n    return 'ok';\n  }\n\n  return status.message || 'unknown_error';\n}\n\nconst CHILD_SPANS_FIELD = '_sentryChildSpans';\nconst ROOT_SPAN_FIELD = '_sentryRootSpan';\n\n/**\n * Adds an opaque child span reference to a span.\n */\nfunction addChildSpanToSpan(span, childSpan) {\n  // We store the root span reference on the child span\n  // We need this for `getRootSpan()` to work\n  const rootSpan = span[ROOT_SPAN_FIELD] || span;\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(childSpan , ROOT_SPAN_FIELD, rootSpan);\n\n  // We store a list of child spans on the parent span\n  // We need this for `getSpanDescendants()` to work\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].add(childSpan);\n  } else {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(span, CHILD_SPANS_FIELD, new Set([childSpan]));\n  }\n}\n\n/** This is only used internally by Idle Spans. */\nfunction removeChildSpanFromSpan(span, childSpan) {\n  if (span[CHILD_SPANS_FIELD]) {\n    span[CHILD_SPANS_FIELD].delete(childSpan);\n  }\n}\n\n/**\n * Returns an array of the given span and all of its descendants.\n */\nfunction getSpanDescendants(span) {\n  const resultSet = new Set();\n\n  function addSpanChildren(span) {\n    // This exit condition is required to not infinitely loop in case of a circular dependency.\n    if (resultSet.has(span)) {\n      return;\n      // We want to ignore unsampled spans (e.g. non recording spans)\n    } else if (spanIsSampled(span)) {\n      resultSet.add(span);\n      const childSpans = span[CHILD_SPANS_FIELD] ? Array.from(span[CHILD_SPANS_FIELD]) : [];\n      for (const childSpan of childSpans) {\n        addSpanChildren(childSpan);\n      }\n    }\n  }\n\n  addSpanChildren(span);\n\n  return Array.from(resultSet);\n}\n\n/**\n * Returns the root span of a given span.\n */\nfunction getRootSpan(span) {\n  return span[ROOT_SPAN_FIELD] || span;\n}\n\n/**\n * Returns the currently active span.\n */\nfunction getActiveSpan() {\n  const carrier = (0,_carrier_js__WEBPACK_IMPORTED_MODULE_4__.getMainCarrier)();\n  const acs = (0,_asyncContext_index_js__WEBPACK_IMPORTED_MODULE_5__.getAsyncContextStrategy)(carrier);\n  if (acs.getActiveSpan) {\n    return acs.getActiveSpan();\n  }\n\n  return (0,_spanOnScope_js__WEBPACK_IMPORTED_MODULE_6__._getSpanForScope)((0,_currentScopes_js__WEBPACK_IMPORTED_MODULE_7__.getCurrentScope)());\n}\n\n/**\n * Updates the metric summary on the currently active span\n */\nfunction updateMetricSummaryOnActiveSpan(\n  metricType,\n  sanitizedName,\n  value,\n  unit,\n  tags,\n  bucketKey,\n) {\n  const span = getActiveSpan();\n  if (span) {\n    (0,_metrics_metric_summary_js__WEBPACK_IMPORTED_MODULE_2__.updateMetricSummaryOnSpan)(span, metricType, sanitizedName, value, unit, tags, bucketKey);\n  }\n}\n\n\n//# sourceMappingURL=spanUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zcGFuVXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkg7QUFDeEQ7QUFDcEI7QUFDTztBQUNnRDtBQUNJO0FBQzdCO0FBQ3pCOztBQUVwRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxxQ0FBcUM7QUFDL0MsVUFBVSwyQ0FBMkM7O0FBRXJELFNBQVMsZ0VBQWlCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxxQ0FBcUM7QUFDL0MsVUFBVSxpQkFBaUI7O0FBRTNCLFNBQVMsZ0VBQWlCLEdBQUcsbUNBQW1DO0FBQ2hFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxrQkFBa0I7QUFDNUI7QUFDQSxTQUFTLHdFQUF5QjtBQUNsQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksY0FBYztBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLGlFQUFrQjtBQUMzQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVkscUNBQXFDOztBQUVqRDtBQUNBO0FBQ0EsY0FBYyw2REFBNkQ7O0FBRTNFLGFBQWEsZ0VBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnRkFBNEI7QUFDbkQsMkJBQTJCLG9GQUFnQztBQUMzRCwwQkFBMEIsdUZBQTJCO0FBQ3JELE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGFBQWE7QUFDdkI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUNBQWlDLHFFQUFpQjtBQUNsRDtBQUNBOztBQUVBLHNCQUFzQixrRUFBYztBQUNwQztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsdUVBQXdCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixJQUFJLHVFQUF3QjtBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMkRBQWM7QUFDaEMsY0FBYywrRUFBdUI7QUFDckM7QUFDQTtBQUNBOztBQUVBLFNBQVMsaUVBQWdCLENBQUMsa0VBQWU7QUFDekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHFGQUF5QjtBQUM3QjtBQUNBOztBQUV3VDtBQUN4VCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9zcGFuVXRpbHMuanM/OTU4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkcm9wVW5kZWZpbmVkS2V5cywgZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlciwgYWRkTm9uRW51bWVyYWJsZVByb3BlcnR5LCB0aW1lc3RhbXBJblNlY29uZHMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEFzeW5jQ29udGV4dFN0cmF0ZWd5IH0gZnJvbSAnLi4vYXN5bmNDb250ZXh0L2luZGV4LmpzJztcbmltcG9ydCB7IGdldE1haW5DYXJyaWVyIH0gZnJvbSAnLi4vY2Fycmllci5qcyc7XG5pbXBvcnQgeyBnZXRDdXJyZW50U2NvcGUgfSBmcm9tICcuLi9jdXJyZW50U2NvcGVzLmpzJztcbmltcG9ydCB7IGdldE1ldHJpY1N1bW1hcnlKc29uRm9yU3BhbiwgdXBkYXRlTWV0cmljU3VtbWFyeU9uU3BhbiB9IGZyb20gJy4uL21ldHJpY3MvbWV0cmljLXN1bW1hcnkuanMnO1xuaW1wb3J0IHsgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUCwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4gfSBmcm9tICcuLi9zZW1hbnRpY0F0dHJpYnV0ZXMuanMnO1xuaW1wb3J0IHsgU1BBTl9TVEFUVVNfVU5TRVQsIFNQQU5fU1RBVFVTX09LIH0gZnJvbSAnLi4vdHJhY2luZy9zcGFuc3RhdHVzLmpzJztcbmltcG9ydCB7IF9nZXRTcGFuRm9yU2NvcGUgfSBmcm9tICcuL3NwYW5PblNjb3BlLmpzJztcblxuLy8gVGhlc2UgYXJlIGFsaWduZWQgd2l0aCBPcGVuVGVsZW1ldHJ5IHRyYWNlIGZsYWdzXG5jb25zdCBUUkFDRV9GTEFHX05PTkUgPSAweDA7XG5jb25zdCBUUkFDRV9GTEFHX1NBTVBMRUQgPSAweDE7XG5cbi8qKlxuICogQ29udmVydCBhIHNwYW4gdG8gYSB0cmFjZSBjb250ZXh0LCB3aGljaCBjYW4gYmUgc2VudCBhcyB0aGUgYHRyYWNlYCBjb250ZXh0IGluIGFuIGV2ZW50LlxuICogQnkgZGVmYXVsdCwgdGhpcyB3aWxsIG9ubHkgaW5jbHVkZSB0cmFjZV9pZCwgc3Bhbl9pZCAmIHBhcmVudF9zcGFuX2lkLlxuICogSWYgYGluY2x1ZGVBbGxEYXRhYCBpcyB0cnVlLCBpdCB3aWxsIGFsc28gaW5jbHVkZSBkYXRhLCBvcCwgc3RhdHVzICYgb3JpZ2luLlxuICovXG5mdW5jdGlvbiBzcGFuVG9UcmFuc2FjdGlvblRyYWNlQ29udGV4dChzcGFuKSB7XG4gIGNvbnN0IHsgc3BhbklkOiBzcGFuX2lkLCB0cmFjZUlkOiB0cmFjZV9pZCB9ID0gc3Bhbi5zcGFuQ29udGV4dCgpO1xuICBjb25zdCB7IGRhdGEsIG9wLCBwYXJlbnRfc3Bhbl9pZCwgc3RhdHVzLCBvcmlnaW4gfSA9IHNwYW5Ub0pTT04oc3Bhbik7XG5cbiAgcmV0dXJuIGRyb3BVbmRlZmluZWRLZXlzKHtcbiAgICBwYXJlbnRfc3Bhbl9pZCxcbiAgICBzcGFuX2lkLFxuICAgIHRyYWNlX2lkLFxuICAgIGRhdGEsXG4gICAgb3AsXG4gICAgc3RhdHVzLFxuICAgIG9yaWdpbixcbiAgfSk7XG59XG5cbi8qKlxuICogQ29udmVydCBhIHNwYW4gdG8gYSB0cmFjZSBjb250ZXh0LCB3aGljaCBjYW4gYmUgc2VudCBhcyB0aGUgYHRyYWNlYCBjb250ZXh0IGluIGEgbm9uLXRyYW5zYWN0aW9uIGV2ZW50LlxuICovXG5mdW5jdGlvbiBzcGFuVG9UcmFjZUNvbnRleHQoc3Bhbikge1xuICBjb25zdCB7IHNwYW5JZDogc3Bhbl9pZCwgdHJhY2VJZDogdHJhY2VfaWQgfSA9IHNwYW4uc3BhbkNvbnRleHQoKTtcbiAgY29uc3QgeyBwYXJlbnRfc3Bhbl9pZCB9ID0gc3BhblRvSlNPTihzcGFuKTtcblxuICByZXR1cm4gZHJvcFVuZGVmaW5lZEtleXMoeyBwYXJlbnRfc3Bhbl9pZCwgc3Bhbl9pZCwgdHJhY2VfaWQgfSk7XG59XG5cbi8qKlxuICogQ29udmVydCBhIFNwYW4gdG8gYSBTZW50cnkgdHJhY2UgaGVhZGVyLlxuICovXG5mdW5jdGlvbiBzcGFuVG9UcmFjZUhlYWRlcihzcGFuKSB7XG4gIGNvbnN0IHsgdHJhY2VJZCwgc3BhbklkIH0gPSBzcGFuLnNwYW5Db250ZXh0KCk7XG4gIGNvbnN0IHNhbXBsZWQgPSBzcGFuSXNTYW1wbGVkKHNwYW4pO1xuICByZXR1cm4gZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlcih0cmFjZUlkLCBzcGFuSWQsIHNhbXBsZWQpO1xufVxuXG4vKipcbiAqIENvbnZlcnQgYSBzcGFuIHRpbWUgaW5wdXQgaW50cCBhIHRpbWVzdGFtcCBpbiBzZWNvbmRzLlxuICovXG5mdW5jdGlvbiBzcGFuVGltZUlucHV0VG9TZWNvbmRzKGlucHV0KSB7XG4gIGlmICh0eXBlb2YgaW5wdXQgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIGVuc3VyZVRpbWVzdGFtcEluU2Vjb25kcyhpbnB1dCk7XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcbiAgICAvLyBTZWUge0BsaW5rIEhyVGltZX0gZm9yIHRoZSBhcnJheS1iYXNlZCB0aW1lIGZvcm1hdFxuICAgIHJldHVybiBpbnB1dFswXSArIGlucHV0WzFdIC8gMWU5O1xuICB9XG5cbiAgaWYgKGlucHV0IGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIHJldHVybiBlbnN1cmVUaW1lc3RhbXBJblNlY29uZHMoaW5wdXQuZ2V0VGltZSgpKTtcbiAgfVxuXG4gIHJldHVybiB0aW1lc3RhbXBJblNlY29uZHMoKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBhIHRpbWVzdGFtcCB0byBzZWNvbmQsIGlmIGl0IHdhcyBpbiBtaWxsaXNlY29uZHMsIG9yIGtlZXBzIGl0IGFzIHNlY29uZC5cbiAqL1xuZnVuY3Rpb24gZW5zdXJlVGltZXN0YW1wSW5TZWNvbmRzKHRpbWVzdGFtcCkge1xuICBjb25zdCBpc01zID0gdGltZXN0YW1wID4gOTk5OTk5OTk5OTtcbiAgcmV0dXJuIGlzTXMgPyB0aW1lc3RhbXAgLyAxMDAwIDogdGltZXN0YW1wO1xufVxuXG4vKipcbiAqIENvbnZlcnQgYSBzcGFuIHRvIGEgSlNPTiByZXByZXNlbnRhdGlvbi5cbiAqL1xuLy8gTm90ZTogQmVjYXVzZSBvZiB0aGlzLCB3ZSBjdXJyZW50bHkgaGF2ZSBhIGNpcmN1bGFyIHR5cGUgZGVwZW5kZW5jeSAod2hpY2ggd2Ugb3B0ZWQgb3V0IG9mIGluIHBhY2thZ2UuanNvbikuXG4vLyBUaGlzIGlzIG5vdCBhdm9pZGFibGUgYXMgd2UgbmVlZCBgc3BhblRvSlNPTmAgaW4gYHNwYW5VdGlscy50c2AsIHdoaWNoIGluIHR1cm4gaXMgbmVlZGVkIGJ5IGBzcGFuLnRzYCBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkuXG4vLyBBbmQgYHNwYW5Ub0pTT05gIG5lZWRzIHRoZSBTcGFuIGNsYXNzIGZyb20gYHNwYW4udHNgIHRvIGNoZWNrIGhlcmUuXG5mdW5jdGlvbiBzcGFuVG9KU09OKHNwYW4pIHtcbiAgaWYgKHNwYW5Jc1NlbnRyeVNwYW4oc3BhbikpIHtcbiAgICByZXR1cm4gc3Bhbi5nZXRTcGFuSlNPTigpO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB7IHNwYW5JZDogc3Bhbl9pZCwgdHJhY2VJZDogdHJhY2VfaWQgfSA9IHNwYW4uc3BhbkNvbnRleHQoKTtcblxuICAgIC8vIEhhbmRsZSBhIHNwYW4gZnJvbSBAb3BlbnRlbGVtZXRyeS9zZGstYmFzZS10cmFjZSdzIGBTcGFuYCBjbGFzc1xuICAgIGlmIChzcGFuSXNPcGVuVGVsZW1ldHJ5U2RrVHJhY2VCYXNlU3BhbihzcGFuKSkge1xuICAgICAgY29uc3QgeyBhdHRyaWJ1dGVzLCBzdGFydFRpbWUsIG5hbWUsIGVuZFRpbWUsIHBhcmVudFNwYW5JZCwgc3RhdHVzIH0gPSBzcGFuO1xuXG4gICAgICByZXR1cm4gZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgICAgICBzcGFuX2lkLFxuICAgICAgICB0cmFjZV9pZCxcbiAgICAgICAgZGF0YTogYXR0cmlidXRlcyxcbiAgICAgICAgZGVzY3JpcHRpb246IG5hbWUsXG4gICAgICAgIHBhcmVudF9zcGFuX2lkOiBwYXJlbnRTcGFuSWQsXG4gICAgICAgIHN0YXJ0X3RpbWVzdGFtcDogc3BhblRpbWVJbnB1dFRvU2Vjb25kcyhzdGFydFRpbWUpLFxuICAgICAgICAvLyBUaGlzIGlzIFswLDBdIGJ5IGRlZmF1bHQgaW4gT1RFTCwgaW4gd2hpY2ggY2FzZSB3ZSB3YW50IHRvIGludGVycHJldCB0aGlzIGFzIG5vIGVuZCB0aW1lXG4gICAgICAgIHRpbWVzdGFtcDogc3BhblRpbWVJbnB1dFRvU2Vjb25kcyhlbmRUaW1lKSB8fCB1bmRlZmluZWQsXG4gICAgICAgIHN0YXR1czogZ2V0U3RhdHVzTWVzc2FnZShzdGF0dXMpLFxuICAgICAgICBvcDogYXR0cmlidXRlc1tTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09QXSxcbiAgICAgICAgb3JpZ2luOiBhdHRyaWJ1dGVzW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOXSAsXG4gICAgICAgIF9tZXRyaWNzX3N1bW1hcnk6IGdldE1ldHJpY1N1bW1hcnlKc29uRm9yU3BhbihzcGFuKSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEZpbmFsbHksIGF0IGxlYXN0IHdlIGhhdmUgYHNwYW5Db250ZXh0KClgLi4uLlxuICAgIHJldHVybiB7XG4gICAgICBzcGFuX2lkLFxuICAgICAgdHJhY2VfaWQsXG4gICAgfTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB7fTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzcGFuSXNPcGVuVGVsZW1ldHJ5U2RrVHJhY2VCYXNlU3BhbihzcGFuKSB7XG4gIGNvbnN0IGNhc3RTcGFuID0gc3BhbiA7XG4gIHJldHVybiAhIWNhc3RTcGFuLmF0dHJpYnV0ZXMgJiYgISFjYXN0U3Bhbi5zdGFydFRpbWUgJiYgISFjYXN0U3Bhbi5uYW1lICYmICEhY2FzdFNwYW4uZW5kVGltZSAmJiAhIWNhc3RTcGFuLnN0YXR1cztcbn1cblxuLyoqIEV4cG9ydGVkIG9ubHkgZm9yIHRlc3RzLiAqL1xuXG4vKipcbiAqIFNhZGx5LCBkdWUgdG8gY2lyY3VsYXIgZGVwZW5kZW5jeSBjaGVja3Mgd2UgY2Fubm90IGFjdHVhbGx5IGltcG9ydCB0aGUgU3BhbiBjbGFzcyBoZXJlIGFuZCBjaGVjayBmb3IgaW5zdGFuY2VvZi5cbiAqIDooIFNvIGluc3RlYWQgd2UgYXBwcm94aW1hdGUgdGhpcyBieSBjaGVja2luZyBpZiBpdCBoYXMgdGhlIGBnZXRTcGFuSlNPTmAgbWV0aG9kLlxuICovXG5mdW5jdGlvbiBzcGFuSXNTZW50cnlTcGFuKHNwYW4pIHtcbiAgcmV0dXJuIHR5cGVvZiAoc3BhbiApLmdldFNwYW5KU09OID09PSAnZnVuY3Rpb24nO1xufVxuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIHNwYW4gaXMgc2FtcGxlZC5cbiAqIEluIG1vc3QgY2FzZXMsIHlvdSBzaG91bGQganVzdCB1c2UgYHNwYW4uaXNSZWNvcmRpbmcoKWAgaW5zdGVhZC5cbiAqIEhvd2V2ZXIsIHRoaXMgaGFzIGEgc2xpZ2h0bHkgZGlmZmVyZW50IHNlbWFudGljLCBhcyBpdCBhbHNvIHJldHVybnMgZmFsc2UgaWYgdGhlIHNwYW4gaXMgZmluaXNoZWQuXG4gKiBTbyBpbiB0aGUgY2FzZSB3aGVyZSB0aGlzIGRpc3RpbmN0aW9uIGlzIGltcG9ydGFudCwgdXNlIHRoaXMgbWV0aG9kLlxuICovXG5mdW5jdGlvbiBzcGFuSXNTYW1wbGVkKHNwYW4pIHtcbiAgLy8gV2UgYWxpZ24gb3VyIHRyYWNlIGZsYWdzIHdpdGggdGhlIG9uZXMgT3BlblRlbGVtZXRyeSB1c2VcbiAgLy8gU28gd2UgYWxzbyBjaGVjayBmb3Igc2FtcGxlZCB0aGUgc2FtZSB3YXkgdGhleSBkby5cbiAgY29uc3QgeyB0cmFjZUZsYWdzIH0gPSBzcGFuLnNwYW5Db250ZXh0KCk7XG4gIHJldHVybiB0cmFjZUZsYWdzID09PSBUUkFDRV9GTEFHX1NBTVBMRUQ7XG59XG5cbi8qKiBHZXQgdGhlIHN0YXR1cyBtZXNzYWdlIHRvIHVzZSBmb3IgYSBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgc3Bhbi4gKi9cbmZ1bmN0aW9uIGdldFN0YXR1c01lc3NhZ2Uoc3RhdHVzKSB7XG4gIGlmICghc3RhdHVzIHx8IHN0YXR1cy5jb2RlID09PSBTUEFOX1NUQVRVU19VTlNFVCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAoc3RhdHVzLmNvZGUgPT09IFNQQU5fU1RBVFVTX09LKSB7XG4gICAgcmV0dXJuICdvayc7XG4gIH1cblxuICByZXR1cm4gc3RhdHVzLm1lc3NhZ2UgfHwgJ3Vua25vd25fZXJyb3InO1xufVxuXG5jb25zdCBDSElMRF9TUEFOU19GSUVMRCA9ICdfc2VudHJ5Q2hpbGRTcGFucyc7XG5jb25zdCBST09UX1NQQU5fRklFTEQgPSAnX3NlbnRyeVJvb3RTcGFuJztcblxuLyoqXG4gKiBBZGRzIGFuIG9wYXF1ZSBjaGlsZCBzcGFuIHJlZmVyZW5jZSB0byBhIHNwYW4uXG4gKi9cbmZ1bmN0aW9uIGFkZENoaWxkU3BhblRvU3BhbihzcGFuLCBjaGlsZFNwYW4pIHtcbiAgLy8gV2Ugc3RvcmUgdGhlIHJvb3Qgc3BhbiByZWZlcmVuY2Ugb24gdGhlIGNoaWxkIHNwYW5cbiAgLy8gV2UgbmVlZCB0aGlzIGZvciBgZ2V0Um9vdFNwYW4oKWAgdG8gd29ya1xuICBjb25zdCByb290U3BhbiA9IHNwYW5bUk9PVF9TUEFOX0ZJRUxEXSB8fCBzcGFuO1xuICBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkoY2hpbGRTcGFuICwgUk9PVF9TUEFOX0ZJRUxELCByb290U3Bhbik7XG5cbiAgLy8gV2Ugc3RvcmUgYSBsaXN0IG9mIGNoaWxkIHNwYW5zIG9uIHRoZSBwYXJlbnQgc3BhblxuICAvLyBXZSBuZWVkIHRoaXMgZm9yIGBnZXRTcGFuRGVzY2VuZGFudHMoKWAgdG8gd29ya1xuICBpZiAoc3BhbltDSElMRF9TUEFOU19GSUVMRF0pIHtcbiAgICBzcGFuW0NISUxEX1NQQU5TX0ZJRUxEXS5hZGQoY2hpbGRTcGFuKTtcbiAgfSBlbHNlIHtcbiAgICBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkoc3BhbiwgQ0hJTERfU1BBTlNfRklFTEQsIG5ldyBTZXQoW2NoaWxkU3Bhbl0pKTtcbiAgfVxufVxuXG4vKiogVGhpcyBpcyBvbmx5IHVzZWQgaW50ZXJuYWxseSBieSBJZGxlIFNwYW5zLiAqL1xuZnVuY3Rpb24gcmVtb3ZlQ2hpbGRTcGFuRnJvbVNwYW4oc3BhbiwgY2hpbGRTcGFuKSB7XG4gIGlmIChzcGFuW0NISUxEX1NQQU5TX0ZJRUxEXSkge1xuICAgIHNwYW5bQ0hJTERfU1BBTlNfRklFTERdLmRlbGV0ZShjaGlsZFNwYW4pO1xuICB9XG59XG5cbi8qKlxuICogUmV0dXJucyBhbiBhcnJheSBvZiB0aGUgZ2l2ZW4gc3BhbiBhbmQgYWxsIG9mIGl0cyBkZXNjZW5kYW50cy5cbiAqL1xuZnVuY3Rpb24gZ2V0U3BhbkRlc2NlbmRhbnRzKHNwYW4pIHtcbiAgY29uc3QgcmVzdWx0U2V0ID0gbmV3IFNldCgpO1xuXG4gIGZ1bmN0aW9uIGFkZFNwYW5DaGlsZHJlbihzcGFuKSB7XG4gICAgLy8gVGhpcyBleGl0IGNvbmRpdGlvbiBpcyByZXF1aXJlZCB0byBub3QgaW5maW5pdGVseSBsb29wIGluIGNhc2Ugb2YgYSBjaXJjdWxhciBkZXBlbmRlbmN5LlxuICAgIGlmIChyZXN1bHRTZXQuaGFzKHNwYW4pKSB7XG4gICAgICByZXR1cm47XG4gICAgICAvLyBXZSB3YW50IHRvIGlnbm9yZSB1bnNhbXBsZWQgc3BhbnMgKGUuZy4gbm9uIHJlY29yZGluZyBzcGFucylcbiAgICB9IGVsc2UgaWYgKHNwYW5Jc1NhbXBsZWQoc3BhbikpIHtcbiAgICAgIHJlc3VsdFNldC5hZGQoc3Bhbik7XG4gICAgICBjb25zdCBjaGlsZFNwYW5zID0gc3BhbltDSElMRF9TUEFOU19GSUVMRF0gPyBBcnJheS5mcm9tKHNwYW5bQ0hJTERfU1BBTlNfRklFTERdKSA6IFtdO1xuICAgICAgZm9yIChjb25zdCBjaGlsZFNwYW4gb2YgY2hpbGRTcGFucykge1xuICAgICAgICBhZGRTcGFuQ2hpbGRyZW4oY2hpbGRTcGFuKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBhZGRTcGFuQ2hpbGRyZW4oc3Bhbik7XG5cbiAgcmV0dXJuIEFycmF5LmZyb20ocmVzdWx0U2V0KTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSByb290IHNwYW4gb2YgYSBnaXZlbiBzcGFuLlxuICovXG5mdW5jdGlvbiBnZXRSb290U3BhbihzcGFuKSB7XG4gIHJldHVybiBzcGFuW1JPT1RfU1BBTl9GSUVMRF0gfHwgc3Bhbjtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBjdXJyZW50bHkgYWN0aXZlIHNwYW4uXG4gKi9cbmZ1bmN0aW9uIGdldEFjdGl2ZVNwYW4oKSB7XG4gIGNvbnN0IGNhcnJpZXIgPSBnZXRNYWluQ2FycmllcigpO1xuICBjb25zdCBhY3MgPSBnZXRBc3luY0NvbnRleHRTdHJhdGVneShjYXJyaWVyKTtcbiAgaWYgKGFjcy5nZXRBY3RpdmVTcGFuKSB7XG4gICAgcmV0dXJuIGFjcy5nZXRBY3RpdmVTcGFuKCk7XG4gIH1cblxuICByZXR1cm4gX2dldFNwYW5Gb3JTY29wZShnZXRDdXJyZW50U2NvcGUoKSk7XG59XG5cbi8qKlxuICogVXBkYXRlcyB0aGUgbWV0cmljIHN1bW1hcnkgb24gdGhlIGN1cnJlbnRseSBhY3RpdmUgc3BhblxuICovXG5mdW5jdGlvbiB1cGRhdGVNZXRyaWNTdW1tYXJ5T25BY3RpdmVTcGFuKFxuICBtZXRyaWNUeXBlLFxuICBzYW5pdGl6ZWROYW1lLFxuICB2YWx1ZSxcbiAgdW5pdCxcbiAgdGFncyxcbiAgYnVja2V0S2V5LFxuKSB7XG4gIGNvbnN0IHNwYW4gPSBnZXRBY3RpdmVTcGFuKCk7XG4gIGlmIChzcGFuKSB7XG4gICAgdXBkYXRlTWV0cmljU3VtbWFyeU9uU3BhbihzcGFuLCBtZXRyaWNUeXBlLCBzYW5pdGl6ZWROYW1lLCB2YWx1ZSwgdW5pdCwgdGFncywgYnVja2V0S2V5KTtcbiAgfVxufVxuXG5leHBvcnQgeyBUUkFDRV9GTEFHX05PTkUsIFRSQUNFX0ZMQUdfU0FNUExFRCwgYWRkQ2hpbGRTcGFuVG9TcGFuLCBnZXRBY3RpdmVTcGFuLCBnZXRSb290U3BhbiwgZ2V0U3BhbkRlc2NlbmRhbnRzLCBnZXRTdGF0dXNNZXNzYWdlLCByZW1vdmVDaGlsZFNwYW5Gcm9tU3Bhbiwgc3BhbklzU2FtcGxlZCwgc3BhblRpbWVJbnB1dFRvU2Vjb25kcywgc3BhblRvSlNPTiwgc3BhblRvVHJhY2VDb250ZXh0LCBzcGFuVG9UcmFjZUhlYWRlciwgc3BhblRvVHJhbnNhY3Rpb25UcmFjZUNvbnRleHQsIHVwZGF0ZU1ldHJpY1N1bW1hcnlPbkFjdGl2ZVNwYW4gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNwYW5VdGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/spanUtils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/browserTracingIntegration.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/browserTracingIntegration.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"browserTracingIntegration\": function() { return /* binding */ browserTracingIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/react */ \"./node_modules/@sentry/react/esm/index.js\");\n/* harmony import */ var _routing_nextRoutingInstrumentation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./routing/nextRoutingInstrumentation.js */ \"./node_modules/@sentry/nextjs/esm/client/routing/nextRoutingInstrumentation.js\");\n\n\n\n/**\n * A custom browser tracing integration for Next.js.\n */\nfunction browserTracingIntegration(\n  options = {},\n) {\n  const browserTracingIntegrationInstance = (0,_sentry_react__WEBPACK_IMPORTED_MODULE_0__.browserTracingIntegration)({\n    ...options,\n    instrumentNavigation: false,\n    instrumentPageLoad: false,\n  });\n\n  const { instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...browserTracingIntegrationInstance,\n    afterAllSetup(client) {\n      // We need to run the navigation span instrumentation before the `afterAllSetup` hook on the normal browser\n      // tracing integration because we need to ensure the order of execution is as follows:\n      // Instrumentation to start span on RSC fetch request runs -> Instrumentation to put tracing headers from active span on fetch runs\n      // If it were the other way around, the RSC fetch request would not receive the tracing headers from the navigation transaction.\n      if (instrumentNavigation) {\n        (0,_routing_nextRoutingInstrumentation_js__WEBPACK_IMPORTED_MODULE_1__.nextRouterInstrumentNavigation)(client);\n      }\n\n      browserTracingIntegrationInstance.afterAllSetup(client);\n\n      if (instrumentPageLoad) {\n        (0,_routing_nextRoutingInstrumentation_js__WEBPACK_IMPORTED_MODULE_1__.nextRouterInstrumentPageLoad)(client);\n      }\n    },\n  };\n}\n\n\n//# sourceMappingURL=browserTracingIntegration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC9icm93c2VyVHJhY2luZ0ludGVncmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5RjtBQUM4Qjs7QUFFdkg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSw0Q0FBNEMsd0VBQTJCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUgsVUFBVSx5REFBeUQ7O0FBRW5FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNHQUE4QjtBQUN0Qzs7QUFFQTs7QUFFQTtBQUNBLFFBQVEsb0dBQTRCO0FBQ3BDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRXFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY2xpZW50L2Jyb3dzZXJUcmFjaW5nSW50ZWdyYXRpb24uanM/OWFkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBicm93c2VyVHJhY2luZ0ludGVncmF0aW9uIGFzIGJyb3dzZXJUcmFjaW5nSW50ZWdyYXRpb24kMSB9IGZyb20gJ0BzZW50cnkvcmVhY3QnO1xuaW1wb3J0IHsgbmV4dFJvdXRlckluc3RydW1lbnROYXZpZ2F0aW9uLCBuZXh0Um91dGVySW5zdHJ1bWVudFBhZ2VMb2FkIH0gZnJvbSAnLi9yb3V0aW5nL25leHRSb3V0aW5nSW5zdHJ1bWVudGF0aW9uLmpzJztcblxuLyoqXG4gKiBBIGN1c3RvbSBicm93c2VyIHRyYWNpbmcgaW50ZWdyYXRpb24gZm9yIE5leHQuanMuXG4gKi9cbmZ1bmN0aW9uIGJyb3dzZXJUcmFjaW5nSW50ZWdyYXRpb24oXG4gIG9wdGlvbnMgPSB7fSxcbikge1xuICBjb25zdCBicm93c2VyVHJhY2luZ0ludGVncmF0aW9uSW5zdGFuY2UgPSBicm93c2VyVHJhY2luZ0ludGVncmF0aW9uJDEoe1xuICAgIC4uLm9wdGlvbnMsXG4gICAgaW5zdHJ1bWVudE5hdmlnYXRpb246IGZhbHNlLFxuICAgIGluc3RydW1lbnRQYWdlTG9hZDogZmFsc2UsXG4gIH0pO1xuXG4gIGNvbnN0IHsgaW5zdHJ1bWVudFBhZ2VMb2FkID0gdHJ1ZSwgaW5zdHJ1bWVudE5hdmlnYXRpb24gPSB0cnVlIH0gPSBvcHRpb25zO1xuXG4gIHJldHVybiB7XG4gICAgLi4uYnJvd3NlclRyYWNpbmdJbnRlZ3JhdGlvbkluc3RhbmNlLFxuICAgIGFmdGVyQWxsU2V0dXAoY2xpZW50KSB7XG4gICAgICAvLyBXZSBuZWVkIHRvIHJ1biB0aGUgbmF2aWdhdGlvbiBzcGFuIGluc3RydW1lbnRhdGlvbiBiZWZvcmUgdGhlIGBhZnRlckFsbFNldHVwYCBob29rIG9uIHRoZSBub3JtYWwgYnJvd3NlclxuICAgICAgLy8gdHJhY2luZyBpbnRlZ3JhdGlvbiBiZWNhdXNlIHdlIG5lZWQgdG8gZW5zdXJlIHRoZSBvcmRlciBvZiBleGVjdXRpb24gaXMgYXMgZm9sbG93czpcbiAgICAgIC8vIEluc3RydW1lbnRhdGlvbiB0byBzdGFydCBzcGFuIG9uIFJTQyBmZXRjaCByZXF1ZXN0IHJ1bnMgLT4gSW5zdHJ1bWVudGF0aW9uIHRvIHB1dCB0cmFjaW5nIGhlYWRlcnMgZnJvbSBhY3RpdmUgc3BhbiBvbiBmZXRjaCBydW5zXG4gICAgICAvLyBJZiBpdCB3ZXJlIHRoZSBvdGhlciB3YXkgYXJvdW5kLCB0aGUgUlNDIGZldGNoIHJlcXVlc3Qgd291bGQgbm90IHJlY2VpdmUgdGhlIHRyYWNpbmcgaGVhZGVycyBmcm9tIHRoZSBuYXZpZ2F0aW9uIHRyYW5zYWN0aW9uLlxuICAgICAgaWYgKGluc3RydW1lbnROYXZpZ2F0aW9uKSB7XG4gICAgICAgIG5leHRSb3V0ZXJJbnN0cnVtZW50TmF2aWdhdGlvbihjbGllbnQpO1xuICAgICAgfVxuXG4gICAgICBicm93c2VyVHJhY2luZ0ludGVncmF0aW9uSW5zdGFuY2UuYWZ0ZXJBbGxTZXR1cChjbGllbnQpO1xuXG4gICAgICBpZiAoaW5zdHJ1bWVudFBhZ2VMb2FkKSB7XG4gICAgICAgIG5leHRSb3V0ZXJJbnN0cnVtZW50UGFnZUxvYWQoY2xpZW50KTtcbiAgICAgIH1cbiAgICB9LFxuICB9O1xufVxuXG5leHBvcnQgeyBicm93c2VyVHJhY2luZ0ludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1icm93c2VyVHJhY2luZ0ludGVncmF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/browserTracingIntegration.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/clientNormalizationIntegration.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/clientNormalizationIntegration.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nextjsClientStackFrameNormalizationIntegration\": function() { return /* binding */ nextjsClientStackFrameNormalizationIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n\n\n\nconst nextjsClientStackFrameNormalizationIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(\n  ({ assetPrefixPath }) => {\n    const rewriteFramesInstance = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.rewriteFramesIntegration)({\n      // Turn `<origin>/<path>/_next/static/...` into `app:///_next/static/...`\n      iteratee: frame => {\n        try {\n          const { origin } = new URL(frame.filename );\n          frame.filename = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([frame, 'access', _ => _.filename, 'optionalAccess', _2 => _2.replace, 'call', _3 => _3(origin, 'app://'), 'access', _4 => _4.replace, 'call', _5 => _5(assetPrefixPath, '')]);\n        } catch (err) {\n          // Filename wasn't a properly formed URL, so there's nothing we can do\n        }\n\n        // We need to URI-decode the filename because Next.js has wildcard routes like \"/users/[id].js\" which show up as \"/users/%5id%5.js\" in Error stacktraces.\n        // The corresponding sources that Next.js generates have proper brackets so we also need proper brackets in the frame so that source map resolving works.\n        if (frame.filename && frame.filename.startsWith('app:///_next')) {\n          frame.filename = decodeURI(frame.filename);\n        }\n\n        if (\n          frame.filename &&\n          frame.filename.match(\n            /^app:\\/\\/\\/_next\\/static\\/chunks\\/(main-|main-app-|polyfills-|webpack-|framework-|framework\\.)[0-9a-f]+\\.js$/,\n          )\n        ) {\n          // We don't care about these frames. It's Next.js internal code.\n          frame.in_app = false;\n        }\n\n        return frame;\n      },\n    });\n\n    return {\n      ...rewriteFramesInstance,\n      name: 'NextjsClientStackFrameNormalization',\n    };\n  },\n);\n\n\n//# sourceMappingURL=clientNormalizationIntegration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC9jbGllbnROb3JtYWxpemF0aW9uSW50ZWdyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBQzRCOztBQUUzRSx1REFBdUQsK0RBQWlCO0FBQ3hFLEtBQUssaUJBQWlCO0FBQ3RCLGtDQUFrQyxzRUFBd0I7QUFDMUQ7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFNBQVM7QUFDM0IsMkJBQTJCLDZEQUFjO0FBQ3pDLFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRTBEO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY2xpZW50L2NsaWVudE5vcm1hbGl6YXRpb25JbnRlZ3JhdGlvbi5qcz8xYjcxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBkZWZpbmVJbnRlZ3JhdGlvbiwgcmV3cml0ZUZyYW1lc0ludGVncmF0aW9uIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcblxuY29uc3QgbmV4dGpzQ2xpZW50U3RhY2tGcmFtZU5vcm1hbGl6YXRpb25JbnRlZ3JhdGlvbiA9IGRlZmluZUludGVncmF0aW9uKFxuICAoeyBhc3NldFByZWZpeFBhdGggfSkgPT4ge1xuICAgIGNvbnN0IHJld3JpdGVGcmFtZXNJbnN0YW5jZSA9IHJld3JpdGVGcmFtZXNJbnRlZ3JhdGlvbih7XG4gICAgICAvLyBUdXJuIGA8b3JpZ2luPi88cGF0aD4vX25leHQvc3RhdGljLy4uLmAgaW50byBgYXBwOi8vL19uZXh0L3N0YXRpYy8uLi5gXG4gICAgICBpdGVyYXRlZTogZnJhbWUgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHsgb3JpZ2luIH0gPSBuZXcgVVJMKGZyYW1lLmZpbGVuYW1lICk7XG4gICAgICAgICAgZnJhbWUuZmlsZW5hbWUgPSBfb3B0aW9uYWxDaGFpbihbZnJhbWUsICdhY2Nlc3MnLCBfID0+IF8uZmlsZW5hbWUsICdvcHRpb25hbEFjY2VzcycsIF8yID0+IF8yLnJlcGxhY2UsICdjYWxsJywgXzMgPT4gXzMob3JpZ2luLCAnYXBwOi8vJyksICdhY2Nlc3MnLCBfNCA9PiBfNC5yZXBsYWNlLCAnY2FsbCcsIF81ID0+IF81KGFzc2V0UHJlZml4UGF0aCwgJycpXSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIC8vIEZpbGVuYW1lIHdhc24ndCBhIHByb3Blcmx5IGZvcm1lZCBVUkwsIHNvIHRoZXJlJ3Mgbm90aGluZyB3ZSBjYW4gZG9cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFdlIG5lZWQgdG8gVVJJLWRlY29kZSB0aGUgZmlsZW5hbWUgYmVjYXVzZSBOZXh0LmpzIGhhcyB3aWxkY2FyZCByb3V0ZXMgbGlrZSBcIi91c2Vycy9baWRdLmpzXCIgd2hpY2ggc2hvdyB1cCBhcyBcIi91c2Vycy8lNWlkJTUuanNcIiBpbiBFcnJvciBzdGFja3RyYWNlcy5cbiAgICAgICAgLy8gVGhlIGNvcnJlc3BvbmRpbmcgc291cmNlcyB0aGF0IE5leHQuanMgZ2VuZXJhdGVzIGhhdmUgcHJvcGVyIGJyYWNrZXRzIHNvIHdlIGFsc28gbmVlZCBwcm9wZXIgYnJhY2tldHMgaW4gdGhlIGZyYW1lIHNvIHRoYXQgc291cmNlIG1hcCByZXNvbHZpbmcgd29ya3MuXG4gICAgICAgIGlmIChmcmFtZS5maWxlbmFtZSAmJiBmcmFtZS5maWxlbmFtZS5zdGFydHNXaXRoKCdhcHA6Ly8vX25leHQnKSkge1xuICAgICAgICAgIGZyYW1lLmZpbGVuYW1lID0gZGVjb2RlVVJJKGZyYW1lLmZpbGVuYW1lKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcbiAgICAgICAgICBmcmFtZS5maWxlbmFtZSAmJlxuICAgICAgICAgIGZyYW1lLmZpbGVuYW1lLm1hdGNoKFxuICAgICAgICAgICAgL15hcHA6XFwvXFwvXFwvX25leHRcXC9zdGF0aWNcXC9jaHVua3NcXC8obWFpbi18bWFpbi1hcHAtfHBvbHlmaWxscy18d2VicGFjay18ZnJhbWV3b3JrLXxmcmFtZXdvcmtcXC4pWzAtOWEtZl0rXFwuanMkLyxcbiAgICAgICAgICApXG4gICAgICAgICkge1xuICAgICAgICAgIC8vIFdlIGRvbid0IGNhcmUgYWJvdXQgdGhlc2UgZnJhbWVzLiBJdCdzIE5leHQuanMgaW50ZXJuYWwgY29kZS5cbiAgICAgICAgICBmcmFtZS5pbl9hcHAgPSBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmcmFtZTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgLi4ucmV3cml0ZUZyYW1lc0luc3RhbmNlLFxuICAgICAgbmFtZTogJ05leHRqc0NsaWVudFN0YWNrRnJhbWVOb3JtYWxpemF0aW9uJyxcbiAgICB9O1xuICB9LFxuKTtcblxuZXhwb3J0IHsgbmV4dGpzQ2xpZW50U3RhY2tGcmFtZU5vcm1hbGl6YXRpb25JbnRlZ3JhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50Tm9ybWFsaXphdGlvbkludGVncmF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/clientNormalizationIntegration.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"browserTracingIntegration\": function() { return /* reexport safe */ _browserTracingIntegration_js__WEBPACK_IMPORTED_MODULE_20__.browserTracingIntegration; },\n/* harmony export */   \"captureUnderscoreErrorException\": function() { return /* reexport safe */ _common_error_js__WEBPACK_IMPORTED_MODULE_1__.captureUnderscoreErrorException; },\n/* harmony export */   \"init\": function() { return /* binding */ init; },\n/* harmony export */   \"withSentryConfig\": function() { return /* binding */ withSentryConfig; },\n/* harmony export */   \"withServerActionInstrumentation\": function() { return /* reexport safe */ _common_withServerActionInstrumentation_js__WEBPACK_IMPORTED_MODULE_14__.withServerActionInstrumentation; },\n/* harmony export */   \"wrapApiHandlerWithSentryVercelCrons\": function() { return /* reexport safe */ _common_wrapApiHandlerWithSentryVercelCrons_js__WEBPACK_IMPORTED_MODULE_10__.wrapApiHandlerWithSentryVercelCrons; },\n/* harmony export */   \"wrapAppGetInitialPropsWithSentry\": function() { return /* reexport safe */ _common_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__.wrapAppGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapDocumentGetInitialPropsWithSentry\": function() { return /* reexport safe */ _common_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__.wrapDocumentGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapErrorGetInitialPropsWithSentry\": function() { return /* reexport safe */ _common_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__.wrapErrorGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapGenerationFunctionWithSentry\": function() { return /* reexport safe */ _common_wrapGenerationFunctionWithSentry_js__WEBPACK_IMPORTED_MODULE_13__.wrapGenerationFunctionWithSentry; },\n/* harmony export */   \"wrapGetInitialPropsWithSentry\": function() { return /* reexport safe */ _common_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__.wrapGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapGetServerSidePropsWithSentry\": function() { return /* reexport safe */ _common_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__.wrapGetServerSidePropsWithSentry; },\n/* harmony export */   \"wrapGetStaticPropsWithSentry\": function() { return /* reexport safe */ _common_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_2__.wrapGetStaticPropsWithSentry; },\n/* harmony export */   \"wrapMiddlewareWithSentry\": function() { return /* reexport safe */ _common_wrapMiddlewareWithSentry_js__WEBPACK_IMPORTED_MODULE_11__.wrapMiddlewareWithSentry; },\n/* harmony export */   \"wrapPageComponentWithSentry\": function() { return /* reexport safe */ _common_wrapPageComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_12__.wrapPageComponentWithSentry; },\n/* harmony export */   \"wrapRouteHandlerWithSentry\": function() { return /* reexport safe */ _common_wrapRouteHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_9__.wrapRouteHandlerWithSentry; },\n/* harmony export */   \"wrapServerComponentWithSentry\": function() { return /* reexport safe */ _common_wrapServerComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_8__.wrapServerComponentWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/react */ \"./node_modules/@sentry/react/esm/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _sentry_react__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"captureUnderscoreErrorException\",\"wrapGetStaticPropsWithSentry\",\"wrapGetInitialPropsWithSentry\",\"wrapAppGetInitialPropsWithSentry\",\"wrapDocumentGetInitialPropsWithSentry\",\"wrapErrorGetInitialPropsWithSentry\",\"wrapGetServerSidePropsWithSentry\",\"wrapServerComponentWithSentry\",\"wrapRouteHandlerWithSentry\",\"wrapApiHandlerWithSentryVercelCrons\",\"wrapMiddlewareWithSentry\",\"wrapPageComponentWithSentry\",\"wrapGenerationFunctionWithSentry\",\"withServerActionInstrumentation\",\"browserTracingIntegration\",\"init\",\"withSentryConfig\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _sentry_react__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _common_devErrorSymbolicationEventProcessor_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../common/devErrorSymbolicationEventProcessor.js */ \"./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js\");\n/* harmony import */ var _common_getVercelEnv_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../common/getVercelEnv.js */ \"./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js\");\n/* harmony import */ var _browserTracingIntegration_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./browserTracingIntegration.js */ \"./node_modules/@sentry/nextjs/esm/client/browserTracingIntegration.js\");\n/* harmony import */ var _clientNormalizationIntegration_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./clientNormalizationIntegration.js */ \"./node_modules/@sentry/nextjs/esm/client/clientNormalizationIntegration.js\");\n/* harmony import */ var _tunnelRoute_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tunnelRoute.js */ \"./node_modules/@sentry/nextjs/esm/client/tunnelRoute.js\");\n/* harmony import */ var _common_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/_error.js */ \"./node_modules/@sentry/nextjs/esm/common/_error.js\");\n/* harmony import */ var _common_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/wrapGetStaticPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapGetStaticPropsWithSentry.js\");\n/* harmony import */ var _common_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/wrapGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/wrapAppGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapAppGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/wrapDocumentGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapDocumentGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/wrapErrorGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapErrorGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/wrapGetServerSidePropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapGetServerSidePropsWithSentry.js\");\n/* harmony import */ var _common_wrapServerComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/wrapServerComponentWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapServerComponentWithSentry.js\");\n/* harmony import */ var _common_wrapRouteHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/wrapRouteHandlerWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapRouteHandlerWithSentry.js\");\n/* harmony import */ var _common_wrapApiHandlerWithSentryVercelCrons_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../common/wrapApiHandlerWithSentryVercelCrons.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentryVercelCrons.js\");\n/* harmony import */ var _common_wrapMiddlewareWithSentry_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../common/wrapMiddlewareWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapMiddlewareWithSentry.js\");\n/* harmony import */ var _common_wrapPageComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../common/wrapPageComponentWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapPageComponentWithSentry.js\");\n/* harmony import */ var _common_wrapGenerationFunctionWithSentry_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../common/wrapGenerationFunctionWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapGenerationFunctionWithSentry.js\");\n/* harmony import */ var _common_withServerActionInstrumentation_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../common/withServerActionInstrumentation.js */ \"./node_modules/@sentry/nextjs/esm/common/withServerActionInstrumentation.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst globalWithInjectedValues = _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.GLOBAL_OBJ\n\n;\n\n// Treeshakable guard to remove all code related to tracing\n\n/** Inits the Sentry NextJS SDK on the browser with the React SDK. */\nfunction init(options) {\n  const opts = {\n    environment: (0,_common_getVercelEnv_js__WEBPACK_IMPORTED_MODULE_16__.getVercelEnv)(true) || \"development\",\n    defaultIntegrations: getDefaultIntegrations(options),\n    ...options,\n  } ;\n\n  (0,_tunnelRoute_js__WEBPACK_IMPORTED_MODULE_17__.applyTunnelRouteOption)(opts);\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_18__.applySdkMetadata)(opts, 'nextjs', ['nextjs', 'react']);\n\n  (0,_sentry_react__WEBPACK_IMPORTED_MODULE_0__.init)(opts);\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_18__.setTag)('runtime', 'browser');\n  const filterTransactions = event =>\n    event.type === 'transaction' && event.transaction === '/404' ? null : event;\n  filterTransactions.id = 'NextClient404Filter';\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_18__.addEventProcessor)(filterTransactions);\n\n  if (true) {\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_18__.addEventProcessor)(_common_devErrorSymbolicationEventProcessor_js__WEBPACK_IMPORTED_MODULE_19__.devErrorSymbolicationEventProcessor);\n  }\n}\n\nfunction getDefaultIntegrations(options) {\n  const customDefaultIntegrations = (0,_sentry_react__WEBPACK_IMPORTED_MODULE_0__.getDefaultIntegrations)(options);\n\n  // This evaluates to true unless __SENTRY_TRACING__ is text-replaced with \"false\", in which case everything inside\n  // will get treeshaken away\n  if (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_18__.hasTracingEnabled)(options)) {\n      customDefaultIntegrations.push((0,_browserTracingIntegration_js__WEBPACK_IMPORTED_MODULE_20__.browserTracingIntegration)());\n    }\n  }\n\n  // This value is injected at build time, based on the output directory specified in the build config. Though a default\n  // is set there, we set it here as well, just in case something has gone wrong with the injection.\n  const assetPrefixPath = globalWithInjectedValues.__rewriteFramesAssetPrefixPath__ || '';\n  customDefaultIntegrations.push((0,_clientNormalizationIntegration_js__WEBPACK_IMPORTED_MODULE_21__.nextjsClientStackFrameNormalizationIntegration)({ assetPrefixPath }));\n\n  return customDefaultIntegrations;\n}\n\n/**\n * Just a passthrough in case this is imported from the client.\n */\nfunction withSentryConfig(exportedUserNextConfig) {\n  return exportedUserNextConfig;\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBOEY7QUFDSztBQUNyRTtBQUNhO0FBQzREO0FBQzlDO0FBQ2tCO0FBQzBCO0FBQzNDO0FBQ1k7QUFDbUI7QUFDRTtBQUNNO0FBQ1U7QUFDTjtBQUNKO0FBQ047QUFDTjtBQUNrQjtBQUN0QjtBQUNNO0FBQ1U7QUFDRjs7QUFFL0YsaUNBQWlDLHNEQUFVOztBQUUzQzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsc0VBQVksVUFBVSxhQUFvQjtBQUMzRDtBQUNBO0FBQ0E7O0FBRUEsRUFBRSx3RUFBc0I7QUFDeEIsRUFBRSwrREFBZ0I7O0FBRWxCLEVBQUUsbURBQU07O0FBRVIsRUFBRSxxREFBTTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEVBQUUsZ0VBQWlCOztBQUVuQixNQUFNLElBQXNDO0FBQzVDLElBQUksZ0VBQWlCLENBQUMsZ0hBQW1DO0FBQ3pEO0FBQ0E7O0FBRUE7QUFDQSxvQ0FBb0MscUVBQXdCOztBQUU1RDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGdFQUFpQjtBQUN6QixxQ0FBcUMseUZBQXlCO0FBQzlEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLG1IQUE4QyxHQUFHLGlCQUFpQjs7QUFFbkc7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZEO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY2xpZW50L2luZGV4LmpzP2MyMTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBwbHlTZGtNZXRhZGF0YSwgc2V0VGFnLCBhZGRFdmVudFByb2Nlc3NvciwgaGFzVHJhY2luZ0VuYWJsZWQgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgaW5pdCBhcyBpbml0JDEsIGdldERlZmF1bHRJbnRlZ3JhdGlvbnMgYXMgZ2V0RGVmYXVsdEludGVncmF0aW9ucyQxIH0gZnJvbSAnQHNlbnRyeS9yZWFjdCc7XG5leHBvcnQgKiBmcm9tICdAc2VudHJ5L3JlYWN0JztcbmltcG9ydCB7IEdMT0JBTF9PQkogfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGRldkVycm9yU3ltYm9saWNhdGlvbkV2ZW50UHJvY2Vzc29yIH0gZnJvbSAnLi4vY29tbW9uL2RldkVycm9yU3ltYm9saWNhdGlvbkV2ZW50UHJvY2Vzc29yLmpzJztcbmltcG9ydCB7IGdldFZlcmNlbEVudiB9IGZyb20gJy4uL2NvbW1vbi9nZXRWZXJjZWxFbnYuanMnO1xuaW1wb3J0IHsgYnJvd3NlclRyYWNpbmdJbnRlZ3JhdGlvbiB9IGZyb20gJy4vYnJvd3NlclRyYWNpbmdJbnRlZ3JhdGlvbi5qcyc7XG5pbXBvcnQgeyBuZXh0anNDbGllbnRTdGFja0ZyYW1lTm9ybWFsaXphdGlvbkludGVncmF0aW9uIH0gZnJvbSAnLi9jbGllbnROb3JtYWxpemF0aW9uSW50ZWdyYXRpb24uanMnO1xuaW1wb3J0IHsgYXBwbHlUdW5uZWxSb3V0ZU9wdGlvbiB9IGZyb20gJy4vdHVubmVsUm91dGUuanMnO1xuZXhwb3J0IHsgY2FwdHVyZVVuZGVyc2NvcmVFcnJvckV4Y2VwdGlvbiB9IGZyb20gJy4uL2NvbW1vbi9fZXJyb3IuanMnO1xuZXhwb3J0IHsgd3JhcEdldFN0YXRpY1Byb3BzV2l0aFNlbnRyeSB9IGZyb20gJy4uL2NvbW1vbi93cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdyYXBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH0gZnJvbSAnLi4vY29tbW9uL3dyYXBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH0gZnJvbSAnLi4vY29tbW9uL3dyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdyYXBEb2N1bWVudEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkgfSBmcm9tICcuLi9jb21tb24vd3JhcERvY3VtZW50R2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcyc7XG5leHBvcnQgeyB3cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH0gZnJvbSAnLi4vY29tbW9uL3dyYXBFcnJvckdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd3JhcEdldFNlcnZlclNpZGVQcm9wc1dpdGhTZW50cnkgfSBmcm9tICcuLi9jb21tb24vd3JhcEdldFNlcnZlclNpZGVQcm9wc1dpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd3JhcFNlcnZlckNvbXBvbmVudFdpdGhTZW50cnkgfSBmcm9tICcuLi9jb21tb24vd3JhcFNlcnZlckNvbXBvbmVudFdpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd3JhcFJvdXRlSGFuZGxlcldpdGhTZW50cnkgfSBmcm9tICcuLi9jb21tb24vd3JhcFJvdXRlSGFuZGxlcldpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd3JhcEFwaUhhbmRsZXJXaXRoU2VudHJ5VmVyY2VsQ3JvbnMgfSBmcm9tICcuLi9jb21tb24vd3JhcEFwaUhhbmRsZXJXaXRoU2VudHJ5VmVyY2VsQ3JvbnMuanMnO1xuZXhwb3J0IHsgd3JhcE1pZGRsZXdhcmVXaXRoU2VudHJ5IH0gZnJvbSAnLi4vY29tbW9uL3dyYXBNaWRkbGV3YXJlV2l0aFNlbnRyeS5qcyc7XG5leHBvcnQgeyB3cmFwUGFnZUNvbXBvbmVudFdpdGhTZW50cnkgfSBmcm9tICcuLi9jb21tb24vd3JhcFBhZ2VDb21wb25lbnRXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdyYXBHZW5lcmF0aW9uRnVuY3Rpb25XaXRoU2VudHJ5IH0gZnJvbSAnLi4vY29tbW9uL3dyYXBHZW5lcmF0aW9uRnVuY3Rpb25XaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdpdGhTZXJ2ZXJBY3Rpb25JbnN0cnVtZW50YXRpb24gfSBmcm9tICcuLi9jb21tb24vd2l0aFNlcnZlckFjdGlvbkluc3RydW1lbnRhdGlvbi5qcyc7XG5cbmNvbnN0IGdsb2JhbFdpdGhJbmplY3RlZFZhbHVlcyA9IEdMT0JBTF9PQkpcblxuO1xuXG4vLyBUcmVlc2hha2FibGUgZ3VhcmQgdG8gcmVtb3ZlIGFsbCBjb2RlIHJlbGF0ZWQgdG8gdHJhY2luZ1xuXG4vKiogSW5pdHMgdGhlIFNlbnRyeSBOZXh0SlMgU0RLIG9uIHRoZSBicm93c2VyIHdpdGggdGhlIFJlYWN0IFNESy4gKi9cbmZ1bmN0aW9uIGluaXQob3B0aW9ucykge1xuICBjb25zdCBvcHRzID0ge1xuICAgIGVudmlyb25tZW50OiBnZXRWZXJjZWxFbnYodHJ1ZSkgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYsXG4gICAgZGVmYXVsdEludGVncmF0aW9uczogZ2V0RGVmYXVsdEludGVncmF0aW9ucyhvcHRpb25zKSxcbiAgICAuLi5vcHRpb25zLFxuICB9IDtcblxuICBhcHBseVR1bm5lbFJvdXRlT3B0aW9uKG9wdHMpO1xuICBhcHBseVNka01ldGFkYXRhKG9wdHMsICduZXh0anMnLCBbJ25leHRqcycsICdyZWFjdCddKTtcblxuICBpbml0JDEob3B0cyk7XG5cbiAgc2V0VGFnKCdydW50aW1lJywgJ2Jyb3dzZXInKTtcbiAgY29uc3QgZmlsdGVyVHJhbnNhY3Rpb25zID0gZXZlbnQgPT5cbiAgICBldmVudC50eXBlID09PSAndHJhbnNhY3Rpb24nICYmIGV2ZW50LnRyYW5zYWN0aW9uID09PSAnLzQwNCcgPyBudWxsIDogZXZlbnQ7XG4gIGZpbHRlclRyYW5zYWN0aW9ucy5pZCA9ICdOZXh0Q2xpZW50NDA0RmlsdGVyJztcbiAgYWRkRXZlbnRQcm9jZXNzb3IoZmlsdGVyVHJhbnNhY3Rpb25zKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICBhZGRFdmVudFByb2Nlc3NvcihkZXZFcnJvclN5bWJvbGljYXRpb25FdmVudFByb2Nlc3Nvcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEludGVncmF0aW9ucyhvcHRpb25zKSB7XG4gIGNvbnN0IGN1c3RvbURlZmF1bHRJbnRlZ3JhdGlvbnMgPSBnZXREZWZhdWx0SW50ZWdyYXRpb25zJDEob3B0aW9ucyk7XG5cbiAgLy8gVGhpcyBldmFsdWF0ZXMgdG8gdHJ1ZSB1bmxlc3MgX19TRU5UUllfVFJBQ0lOR19fIGlzIHRleHQtcmVwbGFjZWQgd2l0aCBcImZhbHNlXCIsIGluIHdoaWNoIGNhc2UgZXZlcnl0aGluZyBpbnNpZGVcbiAgLy8gd2lsbCBnZXQgdHJlZXNoYWtlbiBhd2F5XG4gIGlmICh0eXBlb2YgX19TRU5UUllfVFJBQ0lOR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9UUkFDSU5HX18pIHtcbiAgICBpZiAoaGFzVHJhY2luZ0VuYWJsZWQob3B0aW9ucykpIHtcbiAgICAgIGN1c3RvbURlZmF1bHRJbnRlZ3JhdGlvbnMucHVzaChicm93c2VyVHJhY2luZ0ludGVncmF0aW9uKCkpO1xuICAgIH1cbiAgfVxuXG4gIC8vIFRoaXMgdmFsdWUgaXMgaW5qZWN0ZWQgYXQgYnVpbGQgdGltZSwgYmFzZWQgb24gdGhlIG91dHB1dCBkaXJlY3Rvcnkgc3BlY2lmaWVkIGluIHRoZSBidWlsZCBjb25maWcuIFRob3VnaCBhIGRlZmF1bHRcbiAgLy8gaXMgc2V0IHRoZXJlLCB3ZSBzZXQgaXQgaGVyZSBhcyB3ZWxsLCBqdXN0IGluIGNhc2Ugc29tZXRoaW5nIGhhcyBnb25lIHdyb25nIHdpdGggdGhlIGluamVjdGlvbi5cbiAgY29uc3QgYXNzZXRQcmVmaXhQYXRoID0gZ2xvYmFsV2l0aEluamVjdGVkVmFsdWVzLl9fcmV3cml0ZUZyYW1lc0Fzc2V0UHJlZml4UGF0aF9fIHx8ICcnO1xuICBjdXN0b21EZWZhdWx0SW50ZWdyYXRpb25zLnB1c2gobmV4dGpzQ2xpZW50U3RhY2tGcmFtZU5vcm1hbGl6YXRpb25JbnRlZ3JhdGlvbih7IGFzc2V0UHJlZml4UGF0aCB9KSk7XG5cbiAgcmV0dXJuIGN1c3RvbURlZmF1bHRJbnRlZ3JhdGlvbnM7XG59XG5cbi8qKlxuICogSnVzdCBhIHBhc3N0aHJvdWdoIGluIGNhc2UgdGhpcyBpcyBpbXBvcnRlZCBmcm9tIHRoZSBjbGllbnQuXG4gKi9cbmZ1bmN0aW9uIHdpdGhTZW50cnlDb25maWcoZXhwb3J0ZWRVc2VyTmV4dENvbmZpZykge1xuICByZXR1cm4gZXhwb3J0ZWRVc2VyTmV4dENvbmZpZztcbn1cblxuZXhwb3J0IHsgYnJvd3NlclRyYWNpbmdJbnRlZ3JhdGlvbiwgaW5pdCwgd2l0aFNlbnRyeUNvbmZpZyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/routing/appRouterRoutingInstrumentation.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/routing/appRouterRoutingInstrumentation.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"appRouterInstrumentNavigation\": function() { return /* binding */ appRouterInstrumentNavigation; },\n/* harmony export */   \"appRouterInstrumentPageLoad\": function() { return /* binding */ appRouterInstrumentPageLoad; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/react */ \"./node_modules/@sentry/react/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n\n/** Instruments the Next.js app router for pageloads. */\nfunction appRouterInstrumentPageLoad(client) {\n  (0,_sentry_react__WEBPACK_IMPORTED_MODULE_0__.startBrowserTracingPageLoadSpan)(client, {\n    name: _sentry_react__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.pathname,\n    // pageload should always start at timeOrigin (and needs to be in s, not ms)\n    startTime: _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ? _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin / 1000 : undefined,\n    attributes: {\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.nextjs.app_router_instrumentation',\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n    },\n  });\n}\n\n/** Instruments the Next.js app router for navigation. */\nfunction appRouterInstrumentNavigation(client) {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addFetchInstrumentationHandler)(handlerData => {\n    // The instrumentation handler is invoked twice - once for starting a request and once when the req finishes\n    // We can use the existence of the end-timestamp to filter out \"finishing\"-events.\n    if (handlerData.endTimestamp !== undefined) {\n      return;\n    }\n\n    // Only GET requests can be navigating RSC requests\n    if (handlerData.fetchData.method !== 'GET') {\n      return;\n    }\n\n    const parsedNavigatingRscFetchArgs = parseNavigatingRscFetchArgs(handlerData.args);\n\n    if (parsedNavigatingRscFetchArgs === null) {\n      return;\n    }\n\n    const newPathname = parsedNavigatingRscFetchArgs.targetPathname;\n\n    (0,_sentry_react__WEBPACK_IMPORTED_MODULE_0__.startBrowserTracingNavigationSpan)(client, {\n      name: newPathname,\n      attributes: {\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.nextjs.app_router_instrumentation',\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n      },\n    });\n  });\n}\n\nfunction parseNavigatingRscFetchArgs(fetchArgs)\n\n {\n  // Make sure the first arg is a URL object\n  if (!fetchArgs[0] || typeof fetchArgs[0] !== 'object' || (fetchArgs[0] ).searchParams === undefined) {\n    return null;\n  }\n\n  // Make sure the second argument is some kind of fetch config obj that contains headers\n  if (!fetchArgs[1] || typeof fetchArgs[1] !== 'object' || !('headers' in fetchArgs[1])) {\n    return null;\n  }\n\n  try {\n    const url = fetchArgs[0] ;\n    const headers = fetchArgs[1].headers ;\n\n    // Not an RSC request\n    if (headers['RSC'] !== '1') {\n      return null;\n    }\n\n    // Prefetch requests are not navigating RSC requests\n    if (headers['Next-Router-Prefetch'] === '1') {\n      return null;\n    }\n\n    return {\n      targetPathname: url.pathname,\n    };\n  } catch (e) {\n    return null;\n  }\n}\n\n\n//# sourceMappingURL=appRouterRoutingInstrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC9yb3V0aW5nL2FwcFJvdXRlclJvdXRpbmdJbnN0cnVtZW50YXRpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0k7QUFDckI7QUFDZDs7QUFFN0Y7QUFDQTtBQUNBLEVBQUUsOEVBQStCO0FBQ2pDLFVBQVUsbUVBQXdCO0FBQ2xDO0FBQ0EsZUFBZSx1RUFBNEIsR0FBRyx1RUFBNEI7QUFDMUU7QUFDQSxPQUFPLHNFQUE0QjtBQUNuQyxPQUFPLDBFQUFnQztBQUN2QyxPQUFPLDBFQUFnQztBQUN2QyxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQSxFQUFFLDZFQUE4QjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxJQUFJLGdGQUFpQztBQUNyQztBQUNBO0FBQ0EsU0FBUyxzRUFBNEI7QUFDckMsU0FBUywwRUFBZ0M7QUFDekMsU0FBUywwRUFBZ0M7QUFDekMsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFc0U7QUFDdEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jbGllbnQvcm91dGluZy9hcHBSb3V0ZXJSb3V0aW5nSW5zdHJ1bWVudGF0aW9uLmpzP2JkN2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUCwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4sIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IHN0YXJ0QnJvd3NlclRyYWNpbmdQYWdlTG9hZFNwYW4sIFdJTkRPVywgc3RhcnRCcm93c2VyVHJhY2luZ05hdmlnYXRpb25TcGFuIH0gZnJvbSAnQHNlbnRyeS9yZWFjdCc7XG5pbXBvcnQgeyBicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luLCBhZGRGZXRjaEluc3RydW1lbnRhdGlvbkhhbmRsZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqIEluc3RydW1lbnRzIHRoZSBOZXh0LmpzIGFwcCByb3V0ZXIgZm9yIHBhZ2Vsb2Fkcy4gKi9cbmZ1bmN0aW9uIGFwcFJvdXRlckluc3RydW1lbnRQYWdlTG9hZChjbGllbnQpIHtcbiAgc3RhcnRCcm93c2VyVHJhY2luZ1BhZ2VMb2FkU3BhbihjbGllbnQsIHtcbiAgICBuYW1lOiBXSU5ET1cubG9jYXRpb24ucGF0aG5hbWUsXG4gICAgLy8gcGFnZWxvYWQgc2hvdWxkIGFsd2F5cyBzdGFydCBhdCB0aW1lT3JpZ2luIChhbmQgbmVlZHMgdG8gYmUgaW4gcywgbm90IG1zKVxuICAgIHN0YXJ0VGltZTogYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbiA/IGJyb3dzZXJQZXJmb3JtYW5jZVRpbWVPcmlnaW4gLyAxMDAwIDogdW5kZWZpbmVkLFxuICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09QXTogJ3BhZ2Vsb2FkJyxcbiAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTl06ICdhdXRvLnBhZ2Vsb2FkLm5leHRqcy5hcHBfcm91dGVyX2luc3RydW1lbnRhdGlvbicsXG4gICAgICBbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9TT1VSQ0VdOiAndXJsJyxcbiAgICB9LFxuICB9KTtcbn1cblxuLyoqIEluc3RydW1lbnRzIHRoZSBOZXh0LmpzIGFwcCByb3V0ZXIgZm9yIG5hdmlnYXRpb24uICovXG5mdW5jdGlvbiBhcHBSb3V0ZXJJbnN0cnVtZW50TmF2aWdhdGlvbihjbGllbnQpIHtcbiAgYWRkRmV0Y2hJbnN0cnVtZW50YXRpb25IYW5kbGVyKGhhbmRsZXJEYXRhID0+IHtcbiAgICAvLyBUaGUgaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXIgaXMgaW52b2tlZCB0d2ljZSAtIG9uY2UgZm9yIHN0YXJ0aW5nIGEgcmVxdWVzdCBhbmQgb25jZSB3aGVuIHRoZSByZXEgZmluaXNoZXNcbiAgICAvLyBXZSBjYW4gdXNlIHRoZSBleGlzdGVuY2Ugb2YgdGhlIGVuZC10aW1lc3RhbXAgdG8gZmlsdGVyIG91dCBcImZpbmlzaGluZ1wiLWV2ZW50cy5cbiAgICBpZiAoaGFuZGxlckRhdGEuZW5kVGltZXN0YW1wICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBPbmx5IEdFVCByZXF1ZXN0cyBjYW4gYmUgbmF2aWdhdGluZyBSU0MgcmVxdWVzdHNcbiAgICBpZiAoaGFuZGxlckRhdGEuZmV0Y2hEYXRhLm1ldGhvZCAhPT0gJ0dFVCcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBwYXJzZWROYXZpZ2F0aW5nUnNjRmV0Y2hBcmdzID0gcGFyc2VOYXZpZ2F0aW5nUnNjRmV0Y2hBcmdzKGhhbmRsZXJEYXRhLmFyZ3MpO1xuXG4gICAgaWYgKHBhcnNlZE5hdmlnYXRpbmdSc2NGZXRjaEFyZ3MgPT09IG51bGwpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBuZXdQYXRobmFtZSA9IHBhcnNlZE5hdmlnYXRpbmdSc2NGZXRjaEFyZ3MudGFyZ2V0UGF0aG5hbWU7XG5cbiAgICBzdGFydEJyb3dzZXJUcmFjaW5nTmF2aWdhdGlvblNwYW4oY2xpZW50LCB7XG4gICAgICBuYW1lOiBuZXdQYXRobmFtZSxcbiAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1BdOiAnbmF2aWdhdGlvbicsXG4gICAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTl06ICdhdXRvLm5hdmlnYXRpb24ubmV4dGpzLmFwcF9yb3V0ZXJfaW5zdHJ1bWVudGF0aW9uJyxcbiAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTogJ3VybCcsXG4gICAgICB9LFxuICAgIH0pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gcGFyc2VOYXZpZ2F0aW5nUnNjRmV0Y2hBcmdzKGZldGNoQXJncylcblxuIHtcbiAgLy8gTWFrZSBzdXJlIHRoZSBmaXJzdCBhcmcgaXMgYSBVUkwgb2JqZWN0XG4gIGlmICghZmV0Y2hBcmdzWzBdIHx8IHR5cGVvZiBmZXRjaEFyZ3NbMF0gIT09ICdvYmplY3QnIHx8IChmZXRjaEFyZ3NbMF0gKS5zZWFyY2hQYXJhbXMgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLy8gTWFrZSBzdXJlIHRoZSBzZWNvbmQgYXJndW1lbnQgaXMgc29tZSBraW5kIG9mIGZldGNoIGNvbmZpZyBvYmogdGhhdCBjb250YWlucyBoZWFkZXJzXG4gIGlmICghZmV0Y2hBcmdzWzFdIHx8IHR5cGVvZiBmZXRjaEFyZ3NbMV0gIT09ICdvYmplY3QnIHx8ICEoJ2hlYWRlcnMnIGluIGZldGNoQXJnc1sxXSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgdXJsID0gZmV0Y2hBcmdzWzBdIDtcbiAgICBjb25zdCBoZWFkZXJzID0gZmV0Y2hBcmdzWzFdLmhlYWRlcnMgO1xuXG4gICAgLy8gTm90IGFuIFJTQyByZXF1ZXN0XG4gICAgaWYgKGhlYWRlcnNbJ1JTQyddICE9PSAnMScpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIC8vIFByZWZldGNoIHJlcXVlc3RzIGFyZSBub3QgbmF2aWdhdGluZyBSU0MgcmVxdWVzdHNcbiAgICBpZiAoaGVhZGVyc1snTmV4dC1Sb3V0ZXItUHJlZmV0Y2gnXSA9PT0gJzEnKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdGFyZ2V0UGF0aG5hbWU6IHVybC5wYXRobmFtZSxcbiAgICB9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IHsgYXBwUm91dGVySW5zdHJ1bWVudE5hdmlnYXRpb24sIGFwcFJvdXRlckluc3RydW1lbnRQYWdlTG9hZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwUm91dGVyUm91dGluZ0luc3RydW1lbnRhdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/routing/appRouterRoutingInstrumentation.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/routing/nextRoutingInstrumentation.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/routing/nextRoutingInstrumentation.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nextRouterInstrumentNavigation\": function() { return /* binding */ nextRouterInstrumentNavigation; },\n/* harmony export */   \"nextRouterInstrumentPageLoad\": function() { return /* binding */ nextRouterInstrumentPageLoad; }\n/* harmony export */ });\n/* harmony import */ var _sentry_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/react */ \"./node_modules/@sentry/react/esm/index.js\");\n/* harmony import */ var _appRouterRoutingInstrumentation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appRouterRoutingInstrumentation.js */ \"./node_modules/@sentry/nextjs/esm/client/routing/appRouterRoutingInstrumentation.js\");\n/* harmony import */ var _pagesRouterRoutingInstrumentation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pagesRouterRoutingInstrumentation.js */ \"./node_modules/@sentry/nextjs/esm/client/routing/pagesRouterRoutingInstrumentation.js\");\n\n\n\n\n/**\n * Instruments the Next.js Client Router for page loads.\n */\nfunction nextRouterInstrumentPageLoad(client) {\n  const isAppRouter = !_sentry_react__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.getElementById('__NEXT_DATA__');\n  if (isAppRouter) {\n    (0,_appRouterRoutingInstrumentation_js__WEBPACK_IMPORTED_MODULE_1__.appRouterInstrumentPageLoad)(client);\n  } else {\n    (0,_pagesRouterRoutingInstrumentation_js__WEBPACK_IMPORTED_MODULE_2__.pagesRouterInstrumentPageLoad)(client);\n  }\n}\n\n/**\n * Instruments the Next.js Client Router for navigation.\n */\nfunction nextRouterInstrumentNavigation(client) {\n  const isAppRouter = !_sentry_react__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.getElementById('__NEXT_DATA__');\n  if (isAppRouter) {\n    (0,_appRouterRoutingInstrumentation_js__WEBPACK_IMPORTED_MODULE_1__.appRouterInstrumentNavigation)(client);\n  } else {\n    (0,_pagesRouterRoutingInstrumentation_js__WEBPACK_IMPORTED_MODULE_2__.pagesRouterInstrumentNavigation)(client);\n  }\n}\n\n\n//# sourceMappingURL=nextRoutingInstrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC9yb3V0aW5nL25leHRSb3V0aW5nSW5zdHJ1bWVudGF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVDO0FBQzJFO0FBQ007O0FBRXhIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHlFQUE4QjtBQUNyRDtBQUNBLElBQUksZ0dBQTJCO0FBQy9CLElBQUk7QUFDSixJQUFJLG9HQUE2QjtBQUNqQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHlFQUE4QjtBQUNyRDtBQUNBLElBQUksa0dBQTZCO0FBQ2pDLElBQUk7QUFDSixJQUFJLHNHQUErQjtBQUNuQztBQUNBOztBQUV3RTtBQUN4RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC9yb3V0aW5nL25leHRSb3V0aW5nSW5zdHJ1bWVudGF0aW9uLmpzPzQ5YTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnQHNlbnRyeS9yZWFjdCc7XG5pbXBvcnQgeyBhcHBSb3V0ZXJJbnN0cnVtZW50UGFnZUxvYWQsIGFwcFJvdXRlckluc3RydW1lbnROYXZpZ2F0aW9uIH0gZnJvbSAnLi9hcHBSb3V0ZXJSb3V0aW5nSW5zdHJ1bWVudGF0aW9uLmpzJztcbmltcG9ydCB7IHBhZ2VzUm91dGVySW5zdHJ1bWVudFBhZ2VMb2FkLCBwYWdlc1JvdXRlckluc3RydW1lbnROYXZpZ2F0aW9uIH0gZnJvbSAnLi9wYWdlc1JvdXRlclJvdXRpbmdJbnN0cnVtZW50YXRpb24uanMnO1xuXG4vKipcbiAqIEluc3RydW1lbnRzIHRoZSBOZXh0LmpzIENsaWVudCBSb3V0ZXIgZm9yIHBhZ2UgbG9hZHMuXG4gKi9cbmZ1bmN0aW9uIG5leHRSb3V0ZXJJbnN0cnVtZW50UGFnZUxvYWQoY2xpZW50KSB7XG4gIGNvbnN0IGlzQXBwUm91dGVyID0gIVdJTkRPVy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnX19ORVhUX0RBVEFfXycpO1xuICBpZiAoaXNBcHBSb3V0ZXIpIHtcbiAgICBhcHBSb3V0ZXJJbnN0cnVtZW50UGFnZUxvYWQoY2xpZW50KTtcbiAgfSBlbHNlIHtcbiAgICBwYWdlc1JvdXRlckluc3RydW1lbnRQYWdlTG9hZChjbGllbnQpO1xuICB9XG59XG5cbi8qKlxuICogSW5zdHJ1bWVudHMgdGhlIE5leHQuanMgQ2xpZW50IFJvdXRlciBmb3IgbmF2aWdhdGlvbi5cbiAqL1xuZnVuY3Rpb24gbmV4dFJvdXRlckluc3RydW1lbnROYXZpZ2F0aW9uKGNsaWVudCkge1xuICBjb25zdCBpc0FwcFJvdXRlciA9ICFXSU5ET1cuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ19fTkVYVF9EQVRBX18nKTtcbiAgaWYgKGlzQXBwUm91dGVyKSB7XG4gICAgYXBwUm91dGVySW5zdHJ1bWVudE5hdmlnYXRpb24oY2xpZW50KTtcbiAgfSBlbHNlIHtcbiAgICBwYWdlc1JvdXRlckluc3RydW1lbnROYXZpZ2F0aW9uKGNsaWVudCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgbmV4dFJvdXRlckluc3RydW1lbnROYXZpZ2F0aW9uLCBuZXh0Um91dGVySW5zdHJ1bWVudFBhZ2VMb2FkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZXh0Um91dGluZ0luc3RydW1lbnRhdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/routing/nextRoutingInstrumentation.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/routing/pagesRouterRoutingInstrumentation.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/routing/pagesRouterRoutingInstrumentation.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pagesRouterInstrumentNavigation\": function() { return /* binding */ pagesRouterInstrumentNavigation; },\n/* harmony export */   \"pagesRouterInstrumentPageLoad\": function() { return /* binding */ pagesRouterInstrumentPageLoad; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/react */ \"./node_modules/@sentry/react/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/debug-build.js */ \"./node_modules/@sentry/nextjs/esm/common/debug-build.js\");\n\n\n\n\n\n\n// next/router v10 is CJS\n//\n// For ESM/CJS interoperability 'reasons', depending on how this file is loaded, Router might be on the default export\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\nconst Router = next_router__WEBPACK_IMPORTED_MODULE_0__.events ? next_router__WEBPACK_IMPORTED_MODULE_0__ : next_router__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\nconst globalObject = _sentry_react__WEBPACK_IMPORTED_MODULE_1__.WINDOW\n\n;\n\n/**\n * Describes data located in the __NEXT_DATA__ script tag. This tag is present on every page of a Next.js app.\n */\n\n/**\n * Every Next.js page (static and dynamic ones) comes with a script tag with the id \"__NEXT_DATA__\". This script tag\n * contains a JSON object with data that was either generated at build time for static pages (`getStaticProps`), or at\n * runtime with data fetchers like `getServerSideProps.`.\n *\n * We can use this information to:\n * - Always get the parameterized route we're in when loading a page.\n * - Send trace information (trace-id, baggage) from the server to the client.\n *\n * This function extracts this information.\n */\nfunction extractNextDataTagInformation() {\n  let nextData;\n  // Let's be on the safe side and actually check first if there is really a __NEXT_DATA__ script tag on the page.\n  // Theoretically this should always be the case though.\n  const nextDataTag = globalObject.document.getElementById('__NEXT_DATA__');\n  if (nextDataTag && nextDataTag.innerHTML) {\n    try {\n      nextData = JSON.parse(nextDataTag.innerHTML);\n    } catch (e) {\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Could not extract __NEXT_DATA__');\n    }\n  }\n\n  if (!nextData) {\n    return {};\n  }\n\n  const nextDataTagInfo = {};\n\n  const { page, query, props } = nextData;\n\n  // `nextData.page` always contains the parameterized route - except for when an error occurs in a data fetching\n  // function, then it is \"/_error\", but that isn't a problem since users know which route threw by looking at the\n  // parent transaction\n  // TODO: Actually this is a problem (even though it is not that big), because the DSC and the transaction payload will contain\n  // a different transaction name. Maybe we can fix this. Idea: Also send transaction name via pageProps when available.\n  nextDataTagInfo.route = page;\n  nextDataTagInfo.params = query;\n\n  if (props && props.pageProps) {\n    nextDataTagInfo.sentryTrace = props.pageProps._sentryTraceData;\n    nextDataTagInfo.baggage = props.pageProps._sentryBaggage;\n  }\n\n  return nextDataTagInfo;\n}\n\n/**\n * Instruments the Next.js pages router for pageloads.\n * Only supported for client side routing. Works for Next >= 10.\n *\n * Leverages the SingletonRouter from the `next/router` to\n * generate pageload/navigation transactions and parameterize\n * transaction names.\n */\nfunction pagesRouterInstrumentPageLoad(client) {\n  const { route, params, sentryTrace, baggage } = extractNextDataTagInformation();\n  const name = route || globalObject.location.pathname;\n\n  (0,_sentry_react__WEBPACK_IMPORTED_MODULE_1__.startBrowserTracingPageLoadSpan)(\n    client,\n    {\n      name,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTime: _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.browserPerformanceTimeOrigin ? _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.browserPerformanceTimeOrigin / 1000 : undefined,\n      attributes: {\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.nextjs.pages_router_instrumentation',\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: route ? 'route' : 'url',\n        ...(params && client.getOptions().sendDefaultPii && { ...params }),\n      },\n    },\n    { sentryTrace, baggage },\n  );\n}\n\n/**\n * Instruments the Next.js pages router for navigation.\n * Only supported for client side routing. Works for Next >= 10.\n *\n * Leverages the SingletonRouter from the `next/router` to\n * generate pageload/navigation transactions and parameterize\n * transaction names.\n */\nfunction pagesRouterInstrumentNavigation(client) {\n  Router.events.on('routeChangeStart', (navigationTarget) => {\n    const strippedNavigationTarget = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.stripUrlQueryAndFragment)(navigationTarget);\n    const matchedRoute = getNextRouteFromPathname(strippedNavigationTarget);\n\n    let newLocation;\n    let spanSource;\n\n    if (matchedRoute) {\n      newLocation = matchedRoute;\n      spanSource = 'route';\n    } else {\n      newLocation = strippedNavigationTarget;\n      spanSource = 'url';\n    }\n\n    (0,_sentry_react__WEBPACK_IMPORTED_MODULE_1__.startBrowserTracingNavigationSpan)(client, {\n      name: newLocation,\n      attributes: {\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.nextjs.pages_router_instrumentation',\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: spanSource,\n      },\n    });\n  });\n}\n\nfunction getNextRouteFromPathname(pathname) {\n  const pageRoutes = (globalObject.__BUILD_MANIFEST || {}).sortedPages;\n\n  // Page route should in 99.999% of the cases be defined by now but just to be sure we make a check here\n  if (!pageRoutes) {\n    return;\n  }\n\n  return pageRoutes.find(route => {\n    const routeRegExp = convertNextRouteToRegExp(route);\n    return pathname.match(routeRegExp);\n  });\n}\n\n/**\n * Converts a Next.js style route to a regular expression that matches on pathnames (no query params or URL fragments).\n *\n * In general this involves replacing any instances of square brackets in a route with a wildcard:\n * e.g. \"/users/[id]/info\" becomes /\\/users\\/([^/]+?)\\/info/\n *\n * Some additional edgecases need to be considered:\n * - All routes have an optional slash at the end, meaning users can navigate to \"/users/[id]/info\" or\n *   \"/users/[id]/info/\" - both will be resolved to \"/users/[id]/info\".\n * - Non-optional \"catchall\"s at the end of a route must be considered when matching (e.g. \"/users/[...params]\").\n * - Optional \"catchall\"s at the end of a route must be considered when matching (e.g. \"/users/[[...params]]\").\n *\n * @param route A Next.js style route as it is found in `global.__BUILD_MANIFEST.sortedPages`\n */\nfunction convertNextRouteToRegExp(route) {\n  // We can assume a route is at least \"/\".\n  const routeParts = route.split('/');\n\n  let optionalCatchallWildcardRegex = '';\n  if (routeParts[routeParts.length - 1].match(/^\\[\\[\\.\\.\\..+\\]\\]$/)) {\n    // If last route part has pattern \"[[...xyz]]\" we pop the latest route part to get rid of the required trailing\n    // slash that would come before it if we didn't pop it.\n    routeParts.pop();\n    optionalCatchallWildcardRegex = '(?:/(.+?))?';\n  }\n\n  const rejoinedRouteParts = routeParts\n    .map(\n      routePart =>\n        routePart\n          .replace(/^\\[\\.\\.\\..+\\]$/, '(.+?)') // Replace catch all wildcard with regex wildcard\n          .replace(/^\\[.*\\]$/, '([^/]+?)'), // Replace route wildcards with lazy regex wildcards\n    )\n    .join('/');\n\n  // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- routeParts are from the build manifest, so no raw user input\n  return new RegExp(\n    `^${rejoinedRouteParts}${optionalCatchallWildcardRegex}(?:/)?$`, // optional slash at the end\n  );\n}\n\n\n//# sourceMappingURL=pagesRouterRoutingInstrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/routing/pagesRouterRoutingInstrumentation.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/tunnelRoute.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/tunnelRoute.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyTunnelRouteOption\": function() { return /* binding */ applyTunnelRouteOption; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _common_debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/debug-build.js */ \"./node_modules/@sentry/nextjs/esm/common/debug-build.js\");\n\n\n\nconst globalWithInjectedValues = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ\n\n;\n\n/**\n * Applies the `tunnel` option to the Next.js SDK options based on `withSentryConfig`'s `tunnelRoute` option.\n */\nfunction applyTunnelRouteOption(options) {\n  const tunnelRouteOption = globalWithInjectedValues.__sentryRewritesTunnelPath__;\n  if (tunnelRouteOption && options.dsn) {\n    const dsnComponents = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnFromString)(options.dsn);\n    if (!dsnComponents) {\n      return;\n    }\n    const sentrySaasDsnMatch = dsnComponents.host.match(/^o(\\d+)\\.ingest(?:\\.([a-z]{2}))?\\.sentry\\.io$/);\n    if (sentrySaasDsnMatch) {\n      const orgId = sentrySaasDsnMatch[1];\n      const regionCode = sentrySaasDsnMatch[2];\n      let tunnelPath = `${tunnelRouteOption}?o=${orgId}&p=${dsnComponents.projectId}`;\n      if (regionCode) {\n        tunnelPath += `&r=${regionCode}`;\n      }\n      options.tunnel = tunnelPath;\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.info(`Tunneling events to \"${tunnelPath}\"`);\n    } else {\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Provided DSN is not a Sentry SaaS DSN. Will not tunnel events.');\n    }\n  }\n}\n\n\n//# sourceMappingURL=tunnelRoute.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC90dW5uZWxSb3V0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0U7QUFDWDs7QUFFdkQsaUNBQWlDLHFEQUFVOztBQUUzQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNERBQWE7QUFDdkM7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLEVBQUU7QUFDdEY7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGtCQUFrQixLQUFLLE1BQU0sS0FBSyx3QkFBd0I7QUFDcEY7QUFDQSw0QkFBNEIsV0FBVztBQUN2QztBQUNBO0FBQ0EsTUFBTSwrREFBVyxJQUFJLHNEQUFXLHlCQUF5QixXQUFXO0FBQ3BFLE1BQU07QUFDTixNQUFNLCtEQUFXLElBQUksc0RBQVc7QUFDaEM7QUFDQTtBQUNBOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC90dW5uZWxSb3V0ZS5qcz8yZjQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRzbkZyb21TdHJpbmcsIGxvZ2dlciwgR0xPQkFMX09CSiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuLi9jb21tb24vZGVidWctYnVpbGQuanMnO1xuXG5jb25zdCBnbG9iYWxXaXRoSW5qZWN0ZWRWYWx1ZXMgPSBHTE9CQUxfT0JKXG5cbjtcblxuLyoqXG4gKiBBcHBsaWVzIHRoZSBgdHVubmVsYCBvcHRpb24gdG8gdGhlIE5leHQuanMgU0RLIG9wdGlvbnMgYmFzZWQgb24gYHdpdGhTZW50cnlDb25maWdgJ3MgYHR1bm5lbFJvdXRlYCBvcHRpb24uXG4gKi9cbmZ1bmN0aW9uIGFwcGx5VHVubmVsUm91dGVPcHRpb24ob3B0aW9ucykge1xuICBjb25zdCB0dW5uZWxSb3V0ZU9wdGlvbiA9IGdsb2JhbFdpdGhJbmplY3RlZFZhbHVlcy5fX3NlbnRyeVJld3JpdGVzVHVubmVsUGF0aF9fO1xuICBpZiAodHVubmVsUm91dGVPcHRpb24gJiYgb3B0aW9ucy5kc24pIHtcbiAgICBjb25zdCBkc25Db21wb25lbnRzID0gZHNuRnJvbVN0cmluZyhvcHRpb25zLmRzbik7XG4gICAgaWYgKCFkc25Db21wb25lbnRzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHNlbnRyeVNhYXNEc25NYXRjaCA9IGRzbkNvbXBvbmVudHMuaG9zdC5tYXRjaCgvXm8oXFxkKylcXC5pbmdlc3QoPzpcXC4oW2Etel17Mn0pKT9cXC5zZW50cnlcXC5pbyQvKTtcbiAgICBpZiAoc2VudHJ5U2Fhc0Rzbk1hdGNoKSB7XG4gICAgICBjb25zdCBvcmdJZCA9IHNlbnRyeVNhYXNEc25NYXRjaFsxXTtcbiAgICAgIGNvbnN0IHJlZ2lvbkNvZGUgPSBzZW50cnlTYWFzRHNuTWF0Y2hbMl07XG4gICAgICBsZXQgdHVubmVsUGF0aCA9IGAke3R1bm5lbFJvdXRlT3B0aW9ufT9vPSR7b3JnSWR9JnA9JHtkc25Db21wb25lbnRzLnByb2plY3RJZH1gO1xuICAgICAgaWYgKHJlZ2lvbkNvZGUpIHtcbiAgICAgICAgdHVubmVsUGF0aCArPSBgJnI9JHtyZWdpb25Db2RlfWA7XG4gICAgICB9XG4gICAgICBvcHRpb25zLnR1bm5lbCA9IHR1bm5lbFBhdGg7XG4gICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIuaW5mbyhgVHVubmVsaW5nIGV2ZW50cyB0byBcIiR7dHVubmVsUGF0aH1cImApO1xuICAgIH0gZWxzZSB7XG4gICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIud2FybignUHJvdmlkZWQgRFNOIGlzIG5vdCBhIFNlbnRyeSBTYWFTIERTTi4gV2lsbCBub3QgdHVubmVsIGV2ZW50cy4nKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgYXBwbHlUdW5uZWxSb3V0ZU9wdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHVubmVsUm91dGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/tunnelRoute.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/_error.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/_error.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"captureUnderscoreErrorException\": function() { return /* binding */ captureUnderscoreErrorException; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/responseEnd.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n/* harmony import */ var _utils_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/vercelWaitUntil.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/vercelWaitUntil.js\");\n\n\n\n\n/**\n * Capture the exception passed by nextjs to the `_error` page, adding context data as appropriate.\n *\n * @param contextOrProps The data passed to either `getInitialProps` or `render` by nextjs\n */\nasync function captureUnderscoreErrorException(contextOrProps) {\n  const { req, res, err } = contextOrProps;\n\n  // 404s (and other 400-y friends) can trigger `_error`, but we don't want to send them to Sentry\n  const statusCode = (res && res.statusCode) || contextOrProps.statusCode;\n  if (statusCode && statusCode < 500) {\n    return Promise.resolve();\n  }\n\n  // In previous versions of the suggested `_error.js` page in which this function is meant to be used, there was a\n  // workaround for https://github.com/vercel/next.js/issues/8592 which involved an extra call to this function, in the\n  // custom error component's `render` method, just in case it hadn't been called by `getInitialProps`. Now that that\n  // issue has been fixed, the second call is unnecessary, but since it lives in user code rather than our code, users\n  // have to be the ones to get rid of it, and guaraneteedly, not all of them will. So, rather than capture the error\n  // twice, we just bail if we sense we're in that now-extraneous second call. (We can tell which function we're in\n  // because Nextjs passes `pathname` to `getInitialProps` but not to `render`.)\n  if (!contextOrProps.pathname) {\n    return Promise.resolve();\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.withScope)(scope => {\n    if (req) {\n      scope.setSDKProcessingMetadata({ request: req });\n    }\n\n    // If third-party libraries (or users themselves) throw something falsy, we want to capture it as a message (which\n    // is what passing a string to `captureException` will wind up doing)\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException)(err || `_error.js called with falsy error (${err})`, {\n      mechanism: {\n        type: 'instrument',\n        handled: false,\n        data: {\n          function: '_error.getInitialProps',\n        },\n      },\n    });\n  });\n\n  (0,_utils_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_1__.vercelWaitUntil)((0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_2__.flushSafelyWithTimeout)());\n}\n\n\n//# sourceMappingURL=_error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9fZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyRDtBQUNLO0FBQ0g7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0JBQWdCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsdURBQVM7QUFDWDtBQUNBLHVDQUF1QyxjQUFjO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQSxJQUFJLDhEQUFnQiw4Q0FBOEMsSUFBSTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRzs7QUFFSCxFQUFFLDBFQUFlLENBQUMsNkVBQXNCO0FBQ3hDOztBQUUyQztBQUMzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9fZXJyb3IuanM/NWM4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3aXRoU2NvcGUsIGNhcHR1cmVFeGNlcHRpb24gfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgZmx1c2hTYWZlbHlXaXRoVGltZW91dCB9IGZyb20gJy4vdXRpbHMvcmVzcG9uc2VFbmQuanMnO1xuaW1wb3J0IHsgdmVyY2VsV2FpdFVudGlsIH0gZnJvbSAnLi91dGlscy92ZXJjZWxXYWl0VW50aWwuanMnO1xuXG4vKipcbiAqIENhcHR1cmUgdGhlIGV4Y2VwdGlvbiBwYXNzZWQgYnkgbmV4dGpzIHRvIHRoZSBgX2Vycm9yYCBwYWdlLCBhZGRpbmcgY29udGV4dCBkYXRhIGFzIGFwcHJvcHJpYXRlLlxuICpcbiAqIEBwYXJhbSBjb250ZXh0T3JQcm9wcyBUaGUgZGF0YSBwYXNzZWQgdG8gZWl0aGVyIGBnZXRJbml0aWFsUHJvcHNgIG9yIGByZW5kZXJgIGJ5IG5leHRqc1xuICovXG5hc3luYyBmdW5jdGlvbiBjYXB0dXJlVW5kZXJzY29yZUVycm9yRXhjZXB0aW9uKGNvbnRleHRPclByb3BzKSB7XG4gIGNvbnN0IHsgcmVxLCByZXMsIGVyciB9ID0gY29udGV4dE9yUHJvcHM7XG5cbiAgLy8gNDA0cyAoYW5kIG90aGVyIDQwMC15IGZyaWVuZHMpIGNhbiB0cmlnZ2VyIGBfZXJyb3JgLCBidXQgd2UgZG9uJ3Qgd2FudCB0byBzZW5kIHRoZW0gdG8gU2VudHJ5XG4gIGNvbnN0IHN0YXR1c0NvZGUgPSAocmVzICYmIHJlcy5zdGF0dXNDb2RlKSB8fCBjb250ZXh0T3JQcm9wcy5zdGF0dXNDb2RlO1xuICBpZiAoc3RhdHVzQ29kZSAmJiBzdGF0dXNDb2RlIDwgNTAwKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG5cbiAgLy8gSW4gcHJldmlvdXMgdmVyc2lvbnMgb2YgdGhlIHN1Z2dlc3RlZCBgX2Vycm9yLmpzYCBwYWdlIGluIHdoaWNoIHRoaXMgZnVuY3Rpb24gaXMgbWVhbnQgdG8gYmUgdXNlZCwgdGhlcmUgd2FzIGFcbiAgLy8gd29ya2Fyb3VuZCBmb3IgaHR0cHM6Ly9naXRodWIuY29tL3ZlcmNlbC9uZXh0LmpzL2lzc3Vlcy84NTkyIHdoaWNoIGludm9sdmVkIGFuIGV4dHJhIGNhbGwgdG8gdGhpcyBmdW5jdGlvbiwgaW4gdGhlXG4gIC8vIGN1c3RvbSBlcnJvciBjb21wb25lbnQncyBgcmVuZGVyYCBtZXRob2QsIGp1c3QgaW4gY2FzZSBpdCBoYWRuJ3QgYmVlbiBjYWxsZWQgYnkgYGdldEluaXRpYWxQcm9wc2AuIE5vdyB0aGF0IHRoYXRcbiAgLy8gaXNzdWUgaGFzIGJlZW4gZml4ZWQsIHRoZSBzZWNvbmQgY2FsbCBpcyB1bm5lY2Vzc2FyeSwgYnV0IHNpbmNlIGl0IGxpdmVzIGluIHVzZXIgY29kZSByYXRoZXIgdGhhbiBvdXIgY29kZSwgdXNlcnNcbiAgLy8gaGF2ZSB0byBiZSB0aGUgb25lcyB0byBnZXQgcmlkIG9mIGl0LCBhbmQgZ3VhcmFuZXRlZWRseSwgbm90IGFsbCBvZiB0aGVtIHdpbGwuIFNvLCByYXRoZXIgdGhhbiBjYXB0dXJlIHRoZSBlcnJvclxuICAvLyB0d2ljZSwgd2UganVzdCBiYWlsIGlmIHdlIHNlbnNlIHdlJ3JlIGluIHRoYXQgbm93LWV4dHJhbmVvdXMgc2Vjb25kIGNhbGwuIChXZSBjYW4gdGVsbCB3aGljaCBmdW5jdGlvbiB3ZSdyZSBpblxuICAvLyBiZWNhdXNlIE5leHRqcyBwYXNzZXMgYHBhdGhuYW1lYCB0byBgZ2V0SW5pdGlhbFByb3BzYCBidXQgbm90IHRvIGByZW5kZXJgLilcbiAgaWYgKCFjb250ZXh0T3JQcm9wcy5wYXRobmFtZSkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgfVxuXG4gIHdpdGhTY29wZShzY29wZSA9PiB7XG4gICAgaWYgKHJlcSkge1xuICAgICAgc2NvcGUuc2V0U0RLUHJvY2Vzc2luZ01ldGFkYXRhKHsgcmVxdWVzdDogcmVxIH0pO1xuICAgIH1cblxuICAgIC8vIElmIHRoaXJkLXBhcnR5IGxpYnJhcmllcyAob3IgdXNlcnMgdGhlbXNlbHZlcykgdGhyb3cgc29tZXRoaW5nIGZhbHN5LCB3ZSB3YW50IHRvIGNhcHR1cmUgaXQgYXMgYSBtZXNzYWdlICh3aGljaFxuICAgIC8vIGlzIHdoYXQgcGFzc2luZyBhIHN0cmluZyB0byBgY2FwdHVyZUV4Y2VwdGlvbmAgd2lsbCB3aW5kIHVwIGRvaW5nKVxuICAgIGNhcHR1cmVFeGNlcHRpb24oZXJyIHx8IGBfZXJyb3IuanMgY2FsbGVkIHdpdGggZmFsc3kgZXJyb3IgKCR7ZXJyfSlgLCB7XG4gICAgICBtZWNoYW5pc206IHtcbiAgICAgICAgdHlwZTogJ2luc3RydW1lbnQnLFxuICAgICAgICBoYW5kbGVkOiBmYWxzZSxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIGZ1bmN0aW9uOiAnX2Vycm9yLmdldEluaXRpYWxQcm9wcycsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pO1xuICB9KTtcblxuICB2ZXJjZWxXYWl0VW50aWwoZmx1c2hTYWZlbHlXaXRoVGltZW91dCgpKTtcbn1cblxuZXhwb3J0IHsgY2FwdHVyZVVuZGVyc2NvcmVFcnJvckV4Y2VwdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2Vycm9yLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/_error.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/debug-build.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/debug-build.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEBUG_BUILD\": function() { return /* binding */ DEBUG_BUILD; }\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9kZWJ1Zy1idWlsZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUF1QyxJQUFJLEtBQWdCOztBQUV6RDtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9kZWJ1Zy1idWlsZC5qcz80YTA3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBzZXJ2ZXMgYXMgYSBidWlsZCB0aW1lIGZsYWcgdGhhdCB3aWxsIGJlIHRydWUgYnkgZGVmYXVsdCwgYnV0IGZhbHNlIGluIG5vbi1kZWJ1ZyBidWlsZHMgb3IgaWYgdXNlcnMgcmVwbGFjZSBgX19TRU5UUllfREVCVUdfX2AgaW4gdGhlaXIgZ2VuZXJhdGVkIGNvZGUuXG4gKlxuICogQVRURU5USU9OOiBUaGlzIGNvbnN0YW50IG11c3QgbmV2ZXIgY3Jvc3MgcGFja2FnZSBib3VuZGFyaWVzIChpLmUuIGJlIGV4cG9ydGVkKSB0byBndWFyYW50ZWUgdGhhdCBpdCBjYW4gYmUgdXNlZCBmb3IgdHJlZSBzaGFraW5nLlxuICovXG5jb25zdCBERUJVR19CVUlMRCA9ICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXyk7XG5cbmV4cG9ydCB7IERFQlVHX0JVSUxEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy1idWlsZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/debug-build.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"devErrorSymbolicationEventProcessor\": function() { return /* binding */ devErrorSymbolicationEventProcessor; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var stacktrace_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stacktrace-parser */ \"./node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js\");\n\n\n\n\n\nconst globalWithInjectedValues = _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ\n\n;\n\nasync function resolveStackFrame(\n  frame,\n  error,\n) {\n  try {\n    if (!((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([frame, 'access', _ => _.file, 'optionalAccess', _2 => _2.startsWith, 'call', _3 => _3('webpack-internal:')]) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([frame, 'access', _4 => _4.file, 'optionalAccess', _5 => _5.startsWith, 'call', _6 => _6('file:')]))) {\n      return null;\n    }\n\n    const params = new URLSearchParams();\n    params.append('isServer', String(false)); // doesn't matter since it is overwritten by isAppDirectory\n    params.append('isEdgeServer', String(false)); // doesn't matter since it is overwritten by isAppDirectory\n    params.append('isAppDirectory', String(true)); // will force server to do more thorough checking\n    params.append('errorMessage', error.toString());\n    Object.keys(frame).forEach(key => {\n      params.append(key, ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._nullishCoalesce)(frame[key ], () => ( ''))).toString());\n    });\n\n    let basePath = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._nullishCoalesce)(globalWithInjectedValues.__sentryBasePath, () => ( ''));\n\n    // Prefix the basepath with a slash if it doesn't have one\n    if (basePath !== '' && !basePath.match(/^\\//)) {\n      basePath = `/${basePath}`;\n    }\n\n    const controller = new AbortController();\n    const timer = setTimeout(() => controller.abort(), 3000);\n    const res = await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.suppressTracing)(() =>\n      fetch(\n        `${\n          // eslint-disable-next-line no-restricted-globals\n          typeof window === 'undefined' ? 'http://localhost:3000' : '' // TODO: handle the case where users define a different port\n        }${basePath}/__nextjs_original-stack-frame?${params.toString()}`,\n        {\n          signal: controller.signal,\n        },\n      ).finally(() => {\n        clearTimeout(timer);\n      }),\n    );\n\n    if (!res.ok || res.status === 204) {\n      return null;\n    }\n\n    const body = await res.json();\n\n    return {\n      originalCodeFrame: body.originalCodeFrame,\n      originalStackFrame: body.originalStackFrame,\n    };\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction parseOriginalCodeFrame(codeFrame)\n\n {\n  const preProcessedLines = codeFrame\n    // Remove ASCII control characters that are used for syntax highlighting\n    .replace(\n      // eslint-disable-next-line no-control-regex\n      /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, // https://stackoverflow.com/a/29497680\n      '',\n    )\n    .split('\\n')\n    // Remove line that is supposed to indicate where the error happened\n    .filter(line => !line.match(/^\\s*\\|/))\n    // Find the error line\n    .map(line => ({\n      line,\n      isErrorLine: !!line.match(/^>/),\n    }))\n    // Remove the leading part that is just for prettier output\n    .map(lineObj => ({\n      ...lineObj,\n      line: lineObj.line.replace(/^.*\\|/, ''),\n    }));\n\n  const preContextLines = [];\n  let contextLine = undefined;\n  const postContextLines = [];\n\n  let reachedContextLine = false;\n\n  for (const preProcessedLine of preProcessedLines) {\n    if (preProcessedLine.isErrorLine) {\n      contextLine = preProcessedLine.line;\n      reachedContextLine = true;\n    } else if (reachedContextLine) {\n      postContextLines.push(preProcessedLine.line);\n    } else {\n      preContextLines.push(preProcessedLine.line);\n    }\n  }\n\n  return {\n    contextLine,\n    preContextLines,\n    postContextLines,\n  };\n}\n\n/**\n * Event processor that will symbolicate errors by using the webpack/nextjs dev server that is used to show stack traces\n * in the dev overlay.\n */\nasync function devErrorSymbolicationEventProcessor(event, hint) {\n  // Filter out spans for requests resolving source maps for stack frames in dev mode\n  if (event.type === 'transaction') {\n    event.spans = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([event, 'access', _7 => _7.spans, 'optionalAccess', _8 => _8.filter, 'call', _9 => _9(span => {\n      const httpUrlAttribute = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([span, 'access', _10 => _10.data, 'optionalAccess', _11 => _11['http.url']]);\n      if (typeof httpUrlAttribute === 'string') {\n        return !httpUrlAttribute.includes('__nextjs_original-stack-frame');\n      }\n\n      return true;\n    })]);\n  }\n\n  // Due to changes across Next.js versions, there are a million things that can go wrong here so we just try-catch the  // entire event processor.Symbolicated stack traces are just a nice to have.\n  try {\n    if (hint.originalException && hint.originalException instanceof Error && hint.originalException.stack) {\n      const frames = stacktrace_parser__WEBPACK_IMPORTED_MODULE_0__.parse(hint.originalException.stack);\n\n      const resolvedFrames = await Promise.all(\n        frames.map(frame => resolveStackFrame(frame, hint.originalException )),\n      );\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([event, 'access', _12 => _12.exception, 'optionalAccess', _13 => _13.values, 'optionalAccess', _14 => _14[0], 'access', _15 => _15.stacktrace, 'optionalAccess', _16 => _16.frames])) {\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames.map(\n          (frame, i, frames) => {\n            const resolvedFrame = resolvedFrames[frames.length - 1 - i];\n            if (!resolvedFrame || !resolvedFrame.originalStackFrame || !resolvedFrame.originalCodeFrame) {\n              return {\n                ...frame,\n                platform: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([frame, 'access', _17 => _17.filename, 'optionalAccess', _18 => _18.startsWith, 'call', _19 => _19('node:internal')]) ? 'nodejs' : undefined, // simple hack that will prevent a source mapping error from showing up\n                in_app: false,\n              };\n            }\n\n            const { contextLine, preContextLines, postContextLines } = parseOriginalCodeFrame(\n              resolvedFrame.originalCodeFrame,\n            );\n\n            return {\n              ...frame,\n              pre_context: preContextLines,\n              context_line: contextLine,\n              post_context: postContextLines,\n              function: resolvedFrame.originalStackFrame.methodName,\n              filename: resolvedFrame.originalStackFrame.file || undefined,\n              lineno: resolvedFrame.originalStackFrame.lineNumber || undefined,\n              colno: resolvedFrame.originalStackFrame.column || undefined,\n            };\n          },\n        );\n      }\n    }\n  } catch (e) {\n    return event;\n  }\n\n  return event;\n}\n\n\n//# sourceMappingURL=devErrorSymbolicationEventProcessor.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getVercelEnv\": function() { return /* binding */ getVercelEnv; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * Returns an environment setting value determined by Vercel's `VERCEL_ENV` environment variable.\n *\n * @param isClient Flag to indicate whether to use the `NEXT_PUBLIC_` prefixed version of the environment variable.\n */\nfunction getVercelEnv(isClient) {\n  const vercelEnvVar = isClient ? process.env.NEXT_PUBLIC_VERCEL_ENV : process.env.VERCEL_ENV;\n  return vercelEnvVar ? `vercel-${vercelEnvVar}` : undefined;\n}\n\n\n//# sourceMappingURL=getVercelEnv.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9nZXRWZXJjZWxFbnYuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsT0FBTyw4QkFBOEIsT0FBTztBQUM5RSxrQ0FBa0MsYUFBYTtBQUMvQzs7QUFFd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vZ2V0VmVyY2VsRW52LmpzPzQ4NzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIGFuIGVudmlyb25tZW50IHNldHRpbmcgdmFsdWUgZGV0ZXJtaW5lZCBieSBWZXJjZWwncyBgVkVSQ0VMX0VOVmAgZW52aXJvbm1lbnQgdmFyaWFibGUuXG4gKlxuICogQHBhcmFtIGlzQ2xpZW50IEZsYWcgdG8gaW5kaWNhdGUgd2hldGhlciB0byB1c2UgdGhlIGBORVhUX1BVQkxJQ19gIHByZWZpeGVkIHZlcnNpb24gb2YgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlLlxuICovXG5mdW5jdGlvbiBnZXRWZXJjZWxFbnYoaXNDbGllbnQpIHtcbiAgY29uc3QgdmVyY2VsRW52VmFyID0gaXNDbGllbnQgPyBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19WRVJDRUxfRU5WIDogcHJvY2Vzcy5lbnYuVkVSQ0VMX0VOVjtcbiAgcmV0dXJuIHZlcmNlbEVudlZhciA/IGB2ZXJjZWwtJHt2ZXJjZWxFbnZWYXJ9YCA6IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IHsgZ2V0VmVyY2VsRW52IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRWZXJjZWxFbnYuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNotFoundNavigationError\": function() { return /* binding */ isNotFoundNavigationError; },\n/* harmony export */   \"isRedirectNavigationError\": function() { return /* binding */ isRedirectNavigationError; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Determines whether input is a Next.js not-found error.\n * https://beta.nextjs.org/docs/api-reference/notfound#notfound\n */\nfunction isNotFoundNavigationError(subject) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isError)(subject) && (subject ).digest === 'NEXT_NOT_FOUND';\n}\n\n/**\n * Determines whether input is a Next.js redirect error.\n * https://beta.nextjs.org/docs/api-reference/redirect#redirect\n */\nfunction isRedirectNavigationError(subject) {\n  return (\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isError)(subject) &&\n    typeof (subject ).digest === 'string' &&\n    (subject ).digest.startsWith('NEXT_REDIRECT;') // a redirect digest looks like \"NEXT_REDIRECT;[redirect path]\"\n  );\n}\n\n\n//# sourceMappingURL=nextNavigationErrorUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9uZXh0TmF2aWdhdGlvbkVycm9yVXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdDOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzREFBTztBQUNoQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHNEQUFPO0FBQ1g7QUFDQSxnREFBZ0Qsa0RBQWtEO0FBQ2xHO0FBQ0E7O0FBRWdFO0FBQ2hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL25leHROYXZpZ2F0aW9uRXJyb3JVdGlscy5qcz9jMThmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzRXJyb3IgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgaW5wdXQgaXMgYSBOZXh0LmpzIG5vdC1mb3VuZCBlcnJvci5cbiAqIGh0dHBzOi8vYmV0YS5uZXh0anMub3JnL2RvY3MvYXBpLXJlZmVyZW5jZS9ub3Rmb3VuZCNub3Rmb3VuZFxuICovXG5mdW5jdGlvbiBpc05vdEZvdW5kTmF2aWdhdGlvbkVycm9yKHN1YmplY3QpIHtcbiAgcmV0dXJuIGlzRXJyb3Ioc3ViamVjdCkgJiYgKHN1YmplY3QgKS5kaWdlc3QgPT09ICdORVhUX05PVF9GT1VORCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIGlucHV0IGlzIGEgTmV4dC5qcyByZWRpcmVjdCBlcnJvci5cbiAqIGh0dHBzOi8vYmV0YS5uZXh0anMub3JnL2RvY3MvYXBpLXJlZmVyZW5jZS9yZWRpcmVjdCNyZWRpcmVjdFxuICovXG5mdW5jdGlvbiBpc1JlZGlyZWN0TmF2aWdhdGlvbkVycm9yKHN1YmplY3QpIHtcbiAgcmV0dXJuIChcbiAgICBpc0Vycm9yKHN1YmplY3QpICYmXG4gICAgdHlwZW9mIChzdWJqZWN0ICkuZGlnZXN0ID09PSAnc3RyaW5nJyAmJlxuICAgIChzdWJqZWN0ICkuZGlnZXN0LnN0YXJ0c1dpdGgoJ05FWFRfUkVESVJFQ1Q7JykgLy8gYSByZWRpcmVjdCBkaWdlc3QgbG9va3MgbGlrZSBcIk5FWFRfUkVESVJFQ1Q7W3JlZGlyZWN0IHBhdGhdXCJcbiAgKTtcbn1cblxuZXhwb3J0IHsgaXNOb3RGb3VuZE5hdmlnYXRpb25FcnJvciwgaXNSZWRpcmVjdE5hdmlnYXRpb25FcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmV4dE5hdmlnYXRpb25FcnJvclV0aWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/utils/edgeWrapperUtils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/edgeWrapperUtils.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"withEdgeWrapping\": function() { return /* binding */ withEdgeWrapping; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _responseEnd_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./responseEnd.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n/* harmony import */ var _tracingUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracingUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js\");\n/* harmony import */ var _vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vercelWaitUntil.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/vercelWaitUntil.js\");\n\n\n\n\n\n\n/**\n * Wraps a function on the edge runtime with error and performance monitoring.\n */\nfunction withEdgeWrapping(\n  handler,\n  options,\n) {\n  return async function ( ...args) {\n    return (0,_tracingUtils_js__WEBPACK_IMPORTED_MODULE_0__.escapeNextjsTracing)(() => {\n      const req = args[0];\n      return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withIsolationScope)((0,_tracingUtils_js__WEBPACK_IMPORTED_MODULE_0__.commonObjectToIsolationScope)(req), isolationScope => {\n        let sentryTrace;\n        let baggage;\n\n        if (req instanceof Request) {\n          sentryTrace = req.headers.get('sentry-trace') || '';\n          baggage = req.headers.get('baggage');\n\n          isolationScope.setSDKProcessingMetadata({\n            request: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.winterCGRequestToRequestData)(req),\n          });\n        }\n\n        isolationScope.setTransactionName(options.spanDescription);\n\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.continueTrace)(\n          {\n            sentryTrace,\n            baggage,\n          },\n          () => {\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.startSpan)(\n              {\n                name: options.spanDescription,\n                op: options.spanOp,\n                forceTransaction: true,\n                attributes: {\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs.withEdgeWrapping',\n                },\n              },\n              async span => {\n                const handlerResult = await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.handleCallbackErrors)(\n                  () => handler.apply(this, args),\n                  error => {\n                    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(error, {\n                      mechanism: {\n                        type: 'instrument',\n                        handled: false,\n                        data: {\n                          function: options.mechanismFunctionName,\n                        },\n                      },\n                    });\n                  },\n                );\n\n                if (handlerResult instanceof Response) {\n                  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setHttpStatus)(span, handlerResult.status);\n                } else {\n                  span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_OK });\n                }\n\n                return handlerResult;\n              },\n            );\n          },\n        ).finally(() => {\n          (0,_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_3__.vercelWaitUntil)((0,_responseEnd_js__WEBPACK_IMPORTED_MODULE_4__.flushSafelyWithTimeout)());\n        });\n      });\n    });\n  };\n}\n\n\n//# sourceMappingURL=edgeWrapperUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9lZGdlV3JhcHBlclV0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1TjtBQUMxSjtBQUNIO0FBQzRCO0FBQy9COztBQUV2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxRUFBbUI7QUFDOUI7QUFDQSxhQUFhLGdFQUFrQixDQUFDLDhFQUE0QjtBQUM1RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQiwyRUFBNEI7QUFDakQsV0FBVztBQUNYOztBQUVBOztBQUVBLGVBQWUsMkRBQWE7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsbUJBQW1CLHVEQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMEVBQWdDO0FBQ25ELG1CQUFtQiwwRUFBZ0M7QUFDbkQsaUJBQWlCO0FBQ2pCLGVBQWU7QUFDZjtBQUNBLDRDQUE0QyxrRUFBb0I7QUFDaEU7QUFDQTtBQUNBLG9CQUFvQiw4REFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6Qix1QkFBdUI7QUFDdkIscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQjs7QUFFQTtBQUNBLGtCQUFrQiwyREFBYTtBQUMvQixrQkFBa0I7QUFDbEIsbUNBQW1DLE1BQU0sd0RBQWMsRUFBRTtBQUN6RDs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBLFVBQVUsb0VBQWUsQ0FBQyx1RUFBc0I7QUFDaEQsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTs7QUFFNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vdXRpbHMvZWRnZVdyYXBwZXJVdGlscy5qcz9kNzIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhJc29sYXRpb25TY29wZSwgY29udGludWVUcmFjZSwgc3RhcnRTcGFuLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRSwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4sIGhhbmRsZUNhbGxiYWNrRXJyb3JzLCBjYXB0dXJlRXhjZXB0aW9uLCBzZXRIdHRwU3RhdHVzLCBTUEFOX1NUQVRVU19PSyB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyB3aW50ZXJDR1JlcXVlc3RUb1JlcXVlc3REYXRhIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBmbHVzaFNhZmVseVdpdGhUaW1lb3V0IH0gZnJvbSAnLi9yZXNwb25zZUVuZC5qcyc7XG5pbXBvcnQgeyBlc2NhcGVOZXh0anNUcmFjaW5nLCBjb21tb25PYmplY3RUb0lzb2xhdGlvblNjb3BlIH0gZnJvbSAnLi90cmFjaW5nVXRpbHMuanMnO1xuaW1wb3J0IHsgdmVyY2VsV2FpdFVudGlsIH0gZnJvbSAnLi92ZXJjZWxXYWl0VW50aWwuanMnO1xuXG4vKipcbiAqIFdyYXBzIGEgZnVuY3Rpb24gb24gdGhlIGVkZ2UgcnVudGltZSB3aXRoIGVycm9yIGFuZCBwZXJmb3JtYW5jZSBtb25pdG9yaW5nLlxuICovXG5mdW5jdGlvbiB3aXRoRWRnZVdyYXBwaW5nKFxuICBoYW5kbGVyLFxuICBvcHRpb25zLFxuKSB7XG4gIHJldHVybiBhc3luYyBmdW5jdGlvbiAoIC4uLmFyZ3MpIHtcbiAgICByZXR1cm4gZXNjYXBlTmV4dGpzVHJhY2luZygoKSA9PiB7XG4gICAgICBjb25zdCByZXEgPSBhcmdzWzBdO1xuICAgICAgcmV0dXJuIHdpdGhJc29sYXRpb25TY29wZShjb21tb25PYmplY3RUb0lzb2xhdGlvblNjb3BlKHJlcSksIGlzb2xhdGlvblNjb3BlID0+IHtcbiAgICAgICAgbGV0IHNlbnRyeVRyYWNlO1xuICAgICAgICBsZXQgYmFnZ2FnZTtcblxuICAgICAgICBpZiAocmVxIGluc3RhbmNlb2YgUmVxdWVzdCkge1xuICAgICAgICAgIHNlbnRyeVRyYWNlID0gcmVxLmhlYWRlcnMuZ2V0KCdzZW50cnktdHJhY2UnKSB8fCAnJztcbiAgICAgICAgICBiYWdnYWdlID0gcmVxLmhlYWRlcnMuZ2V0KCdiYWdnYWdlJyk7XG5cbiAgICAgICAgICBpc29sYXRpb25TY29wZS5zZXRTREtQcm9jZXNzaW5nTWV0YWRhdGEoe1xuICAgICAgICAgICAgcmVxdWVzdDogd2ludGVyQ0dSZXF1ZXN0VG9SZXF1ZXN0RGF0YShyZXEpLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaXNvbGF0aW9uU2NvcGUuc2V0VHJhbnNhY3Rpb25OYW1lKG9wdGlvbnMuc3BhbkRlc2NyaXB0aW9uKTtcblxuICAgICAgICByZXR1cm4gY29udGludWVUcmFjZShcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZW50cnlUcmFjZSxcbiAgICAgICAgICAgIGJhZ2dhZ2UsXG4gICAgICAgICAgfSxcbiAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gc3RhcnRTcGFuKFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogb3B0aW9ucy5zcGFuRGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgb3A6IG9wdGlvbnMuc3Bhbk9wLFxuICAgICAgICAgICAgICAgIGZvcmNlVHJhbnNhY3Rpb246IHRydWUsXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTogJ3JvdXRlJyxcbiAgICAgICAgICAgICAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTl06ICdhdXRvLmZ1bmN0aW9uLm5leHRqcy53aXRoRWRnZVdyYXBwaW5nJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBhc3luYyBzcGFuID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBoYW5kbGVyUmVzdWx0ID0gYXdhaXQgaGFuZGxlQ2FsbGJhY2tFcnJvcnMoXG4gICAgICAgICAgICAgICAgICAoKSA9PiBoYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3MpLFxuICAgICAgICAgICAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjYXB0dXJlRXhjZXB0aW9uKGVycm9yLCB7XG4gICAgICAgICAgICAgICAgICAgICAgbWVjaGFuaXNtOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaW5zdHJ1bWVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb246IG9wdGlvbnMubWVjaGFuaXNtRnVuY3Rpb25OYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgIGlmIChoYW5kbGVyUmVzdWx0IGluc3RhbmNlb2YgUmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgIHNldEh0dHBTdGF0dXMoc3BhbiwgaGFuZGxlclJlc3VsdC5zdGF0dXMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBzcGFuLnNldFN0YXR1cyh7IGNvZGU6IFNQQU5fU1RBVFVTX09LIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVyUmVzdWx0O1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9LFxuICAgICAgICApLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgIHZlcmNlbFdhaXRVbnRpbChmbHVzaFNhZmVseVdpdGhUaW1lb3V0KCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xufVxuXG5leHBvcnQgeyB3aXRoRWRnZVdyYXBwaW5nIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lZGdlV3JhcHBlclV0aWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/utils/edgeWrapperUtils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isBuild\": function() { return /* binding */ isBuild; }\n/* harmony export */ });\n/* harmony import */ var next_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/constants */ \"./node_modules/next/constants.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n/**\n * Decide if the currently running process is part of the build phase or happening at runtime.\n */\nfunction isBuild() {\n  return process.env.NEXT_PHASE === next_constants__WEBPACK_IMPORTED_MODULE_0__.PHASE_PRODUCTION_BUILD;\n}\n\n\n//# sourceMappingURL=isBuild.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9pc0J1aWxkLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RDs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLE9BQU8sb0JBQW9CLGtFQUFzQjtBQUMxRDs7QUFFbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vdXRpbHMvaXNCdWlsZC5qcz9mMTAzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBIQVNFX1BST0RVQ1RJT05fQlVJTEQgfSBmcm9tICduZXh0L2NvbnN0YW50cyc7XG5cbi8qKlxuICogRGVjaWRlIGlmIHRoZSBjdXJyZW50bHkgcnVubmluZyBwcm9jZXNzIGlzIHBhcnQgb2YgdGhlIGJ1aWxkIHBoYXNlIG9yIGhhcHBlbmluZyBhdCBydW50aW1lLlxuICovXG5mdW5jdGlvbiBpc0J1aWxkKCkge1xuICByZXR1cm4gcHJvY2Vzcy5lbnYuTkVYVF9QSEFTRSA9PT0gUEhBU0VfUFJPRFVDVElPTl9CVUlMRDtcbn1cblxuZXhwb3J0IHsgaXNCdWlsZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNCdWlsZC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"autoEndSpanOnResponseEnd\": function() { return /* binding */ autoEndSpanOnResponseEnd; },\n/* harmony export */   \"finishSpan\": function() { return /* binding */ finishSpan; },\n/* harmony export */   \"flushSafelyWithTimeout\": function() { return /* binding */ flushSafelyWithTimeout; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/nextjs/esm/common/debug-build.js\");\n\n\n\n\n/**\n * Wrap `res.end()` so that it ends the span and flushes events before letting the request finish.\n *\n * Note: This wraps a sync method with an async method. While in general that's not a great idea in terms of keeping\n * things in the right order, in this case it's safe, because the native `.end()` actually *is* (effectively) async, and\n * its run actually *is* (literally) awaited, just manually so (which reflects the fact that the core of the\n * request/response code in Node by far predates the introduction of `async`/`await`). When `.end()` is done, it emits\n * the `prefinish` event, and only once that fires does request processing continue. See\n * https://github.com/nodejs/node/commit/7c9b607048f13741173d397795bac37707405ba7.\n *\n * Also note: `res.end()` isn't called until *after* all response data and headers have been sent, so blocking inside of\n * `end` doesn't delay data getting to the end user. See\n * https://nodejs.org/api/http.html#responseenddata-encoding-callback.\n *\n * @param span The span tracking the request\n * @param res: The request's corresponding response\n */\nfunction autoEndSpanOnResponseEnd(span, res) {\n  const wrapEndMethod = (origEnd) => {\n    return function sentryWrappedEnd( ...args) {\n      finishSpan(span, this);\n      return origEnd.call(this, ...args);\n    };\n  };\n\n  // Prevent double-wrapping\n  // res.end may be undefined during build when using `next export` to statically export a Next.js app\n  if (res.end && !(res.end ).__sentry_original__) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(res, 'end', wrapEndMethod);\n  }\n}\n\n/** Finish the given response's span and set HTTP status data */\nfunction finishSpan(span, res) {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setHttpStatus)(span, res.statusCode);\n  span.end();\n}\n\n/**\n * Flushes pending Sentry events with a 2 second timeout and in a way that cannot create unhandled promise rejections.\n */\nasync function flushSafelyWithTimeout() {\n  try {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('Flushing events...');\n    await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.flush)(2000);\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('Done flushing events');\n  } catch (e) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('Error while flushing events:\\n', e);\n  }\n}\n\n\n//# sourceMappingURL=responseEnd.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy9yZXNwb25zZUVuZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0Q7QUFDUDtBQUNHOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSSxtREFBSTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUUsMkRBQWE7QUFDZjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHdEQUFXLElBQUkscURBQVU7QUFDN0IsVUFBVSxtREFBSztBQUNmLElBQUksd0RBQVcsSUFBSSxxREFBVTtBQUM3QixJQUFJO0FBQ0osSUFBSSx3REFBVyxJQUFJLHFEQUFVO0FBQzdCO0FBQ0E7O0FBRXdFO0FBQ3hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3V0aWxzL3Jlc3BvbnNlRW5kLmpzPzA0NTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmx1c2gsIHNldEh0dHBTdGF0dXMgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgbG9nZ2VyLCBmaWxsIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBERUJVR19CVUlMRCB9IGZyb20gJy4uL2RlYnVnLWJ1aWxkLmpzJztcblxuLyoqXG4gKiBXcmFwIGByZXMuZW5kKClgIHNvIHRoYXQgaXQgZW5kcyB0aGUgc3BhbiBhbmQgZmx1c2hlcyBldmVudHMgYmVmb3JlIGxldHRpbmcgdGhlIHJlcXVlc3QgZmluaXNoLlxuICpcbiAqIE5vdGU6IFRoaXMgd3JhcHMgYSBzeW5jIG1ldGhvZCB3aXRoIGFuIGFzeW5jIG1ldGhvZC4gV2hpbGUgaW4gZ2VuZXJhbCB0aGF0J3Mgbm90IGEgZ3JlYXQgaWRlYSBpbiB0ZXJtcyBvZiBrZWVwaW5nXG4gKiB0aGluZ3MgaW4gdGhlIHJpZ2h0IG9yZGVyLCBpbiB0aGlzIGNhc2UgaXQncyBzYWZlLCBiZWNhdXNlIHRoZSBuYXRpdmUgYC5lbmQoKWAgYWN0dWFsbHkgKmlzKiAoZWZmZWN0aXZlbHkpIGFzeW5jLCBhbmRcbiAqIGl0cyBydW4gYWN0dWFsbHkgKmlzKiAobGl0ZXJhbGx5KSBhd2FpdGVkLCBqdXN0IG1hbnVhbGx5IHNvICh3aGljaCByZWZsZWN0cyB0aGUgZmFjdCB0aGF0IHRoZSBjb3JlIG9mIHRoZVxuICogcmVxdWVzdC9yZXNwb25zZSBjb2RlIGluIE5vZGUgYnkgZmFyIHByZWRhdGVzIHRoZSBpbnRyb2R1Y3Rpb24gb2YgYGFzeW5jYC9gYXdhaXRgKS4gV2hlbiBgLmVuZCgpYCBpcyBkb25lLCBpdCBlbWl0c1xuICogdGhlIGBwcmVmaW5pc2hgIGV2ZW50LCBhbmQgb25seSBvbmNlIHRoYXQgZmlyZXMgZG9lcyByZXF1ZXN0IHByb2Nlc3NpbmcgY29udGludWUuIFNlZVxuICogaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2NvbW1pdC83YzliNjA3MDQ4ZjEzNzQxMTczZDM5Nzc5NWJhYzM3NzA3NDA1YmE3LlxuICpcbiAqIEFsc28gbm90ZTogYHJlcy5lbmQoKWAgaXNuJ3QgY2FsbGVkIHVudGlsICphZnRlciogYWxsIHJlc3BvbnNlIGRhdGEgYW5kIGhlYWRlcnMgaGF2ZSBiZWVuIHNlbnQsIHNvIGJsb2NraW5nIGluc2lkZSBvZlxuICogYGVuZGAgZG9lc24ndCBkZWxheSBkYXRhIGdldHRpbmcgdG8gdGhlIGVuZCB1c2VyLiBTZWVcbiAqIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI3Jlc3BvbnNlZW5kZGF0YS1lbmNvZGluZy1jYWxsYmFjay5cbiAqXG4gKiBAcGFyYW0gc3BhbiBUaGUgc3BhbiB0cmFja2luZyB0aGUgcmVxdWVzdFxuICogQHBhcmFtIHJlczogVGhlIHJlcXVlc3QncyBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG4gKi9cbmZ1bmN0aW9uIGF1dG9FbmRTcGFuT25SZXNwb25zZUVuZChzcGFuLCByZXMpIHtcbiAgY29uc3Qgd3JhcEVuZE1ldGhvZCA9IChvcmlnRW5kKSA9PiB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHNlbnRyeVdyYXBwZWRFbmQoIC4uLmFyZ3MpIHtcbiAgICAgIGZpbmlzaFNwYW4oc3BhbiwgdGhpcyk7XG4gICAgICByZXR1cm4gb3JpZ0VuZC5jYWxsKHRoaXMsIC4uLmFyZ3MpO1xuICAgIH07XG4gIH07XG5cbiAgLy8gUHJldmVudCBkb3VibGUtd3JhcHBpbmdcbiAgLy8gcmVzLmVuZCBtYXkgYmUgdW5kZWZpbmVkIGR1cmluZyBidWlsZCB3aGVuIHVzaW5nIGBuZXh0IGV4cG9ydGAgdG8gc3RhdGljYWxseSBleHBvcnQgYSBOZXh0LmpzIGFwcFxuICBpZiAocmVzLmVuZCAmJiAhKHJlcy5lbmQgKS5fX3NlbnRyeV9vcmlnaW5hbF9fKSB7XG4gICAgZmlsbChyZXMsICdlbmQnLCB3cmFwRW5kTWV0aG9kKTtcbiAgfVxufVxuXG4vKiogRmluaXNoIHRoZSBnaXZlbiByZXNwb25zZSdzIHNwYW4gYW5kIHNldCBIVFRQIHN0YXR1cyBkYXRhICovXG5mdW5jdGlvbiBmaW5pc2hTcGFuKHNwYW4sIHJlcykge1xuICBzZXRIdHRwU3RhdHVzKHNwYW4sIHJlcy5zdGF0dXNDb2RlKTtcbiAgc3Bhbi5lbmQoKTtcbn1cblxuLyoqXG4gKiBGbHVzaGVzIHBlbmRpbmcgU2VudHJ5IGV2ZW50cyB3aXRoIGEgMiBzZWNvbmQgdGltZW91dCBhbmQgaW4gYSB3YXkgdGhhdCBjYW5ub3QgY3JlYXRlIHVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbnMuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGZsdXNoU2FmZWx5V2l0aFRpbWVvdXQoKSB7XG4gIHRyeSB7XG4gICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmxvZygnRmx1c2hpbmcgZXZlbnRzLi4uJyk7XG4gICAgYXdhaXQgZmx1c2goMjAwMCk7XG4gICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLmxvZygnRG9uZSBmbHVzaGluZyBldmVudHMnKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci5sb2coJ0Vycm9yIHdoaWxlIGZsdXNoaW5nIGV2ZW50czpcXG4nLCBlKTtcbiAgfVxufVxuXG5leHBvcnQgeyBhdXRvRW5kU3Bhbk9uUmVzcG9uc2VFbmQsIGZpbmlzaFNwYW4sIGZsdXNoU2FmZWx5V2l0aFRpbWVvdXQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc3BvbnNlRW5kLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"commonObjectToIsolationScope\": function() { return /* binding */ commonObjectToIsolationScope; },\n/* harmony export */   \"commonObjectToPropagationContext\": function() { return /* binding */ commonObjectToPropagationContext; },\n/* harmony export */   \"escapeNextjsTracing\": function() { return /* binding */ escapeNextjsTracing; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/nextjs/esm/common/debug-build.js\");\n\n\n\n\nconst commonPropagationContextMap = new WeakMap();\n\n/**\n * Takes a shared (garbage collectable) object between resources, e.g. a headers object shared between Next.js server components and returns a common propagation context.\n *\n * @param commonObject The shared object.\n * @param propagationContext The propagation context that should be shared between all the resources if no propagation context was registered yet.\n * @returns the shared propagation context.\n */\nfunction commonObjectToPropagationContext(\n  commonObject,\n  propagationContext,\n) {\n  if (typeof commonObject === 'object' && commonObject) {\n    const memoPropagationContext = commonPropagationContextMap.get(commonObject);\n    if (memoPropagationContext) {\n      return memoPropagationContext;\n    } else {\n      commonPropagationContextMap.set(commonObject, propagationContext);\n      return propagationContext;\n    }\n  } else {\n    return propagationContext;\n  }\n}\n\nconst commonIsolationScopeMap = new WeakMap();\n\n/**\n * Takes a shared (garbage collectable) object between resources, e.g. a headers object shared between Next.js server components and returns a common propagation context.\n *\n * @param commonObject The shared object.\n * @param isolationScope The isolationScope that should be shared between all the resources if no isolation scope was created yet.\n * @returns the shared isolation scope.\n */\nfunction commonObjectToIsolationScope(commonObject) {\n  if (typeof commonObject === 'object' && commonObject) {\n    const memoIsolationScope = commonIsolationScopeMap.get(commonObject);\n    if (memoIsolationScope) {\n      return memoIsolationScope;\n    } else {\n      const newIsolationScope = new _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Scope();\n      commonIsolationScopeMap.set(commonObject, newIsolationScope);\n      return newIsolationScope;\n    }\n  } else {\n    return new _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Scope();\n  }\n}\n\nlet nextjsEscapedAsyncStorage;\n\n/**\n * Will mark the execution context of the callback as \"escaped\" from Next.js internal tracing by unsetting the active\n * span and propagation context. When an execution passes through this function multiple times, it is a noop after the\n * first time.\n */\nfunction escapeNextjsTracing(cb) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n  const MaybeGlobalAsyncLocalStorage = _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.AsyncLocalStorage;\n\n  if (!MaybeGlobalAsyncLocalStorage) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n        \"Tried to register AsyncLocalStorage async context strategy in a runtime that doesn't support AsyncLocalStorage.\",\n      );\n    return cb();\n  }\n\n  if (!nextjsEscapedAsyncStorage) {\n    nextjsEscapedAsyncStorage = new MaybeGlobalAsyncLocalStorage();\n  }\n\n  if (nextjsEscapedAsyncStorage.getStore()) {\n    return cb();\n  } else {\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startNewTrace)(() => {\n      return nextjsEscapedAsyncStorage.run(true, () => {\n        return cb();\n      });\n    });\n  }\n}\n\n\n//# sourceMappingURL=tracingUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy90cmFjaW5nVXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9EO0FBQ0Q7QUFDSDs7QUFFaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLG9DQUFvQywrQ0FBSztBQUN6QztBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osZUFBZSwrQ0FBSztBQUNwQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVFQUErQjs7QUFFdEU7QUFDQSxJQUFJLHdEQUFXO0FBQ2YsTUFBTSxzREFBVztBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSixXQUFXLDJEQUFhO0FBQ3hCO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7O0FBRStGO0FBQy9GIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3V0aWxzL3RyYWNpbmdVdGlscy5qcz81MjA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0YXJ0TmV3VHJhY2UsIFNjb3BlIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IEdMT0JBTF9PQkosIGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuLi9kZWJ1Zy1idWlsZC5qcyc7XG5cbmNvbnN0IGNvbW1vblByb3BhZ2F0aW9uQ29udGV4dE1hcCA9IG5ldyBXZWFrTWFwKCk7XG5cbi8qKlxuICogVGFrZXMgYSBzaGFyZWQgKGdhcmJhZ2UgY29sbGVjdGFibGUpIG9iamVjdCBiZXR3ZWVuIHJlc291cmNlcywgZS5nLiBhIGhlYWRlcnMgb2JqZWN0IHNoYXJlZCBiZXR3ZWVuIE5leHQuanMgc2VydmVyIGNvbXBvbmVudHMgYW5kIHJldHVybnMgYSBjb21tb24gcHJvcGFnYXRpb24gY29udGV4dC5cbiAqXG4gKiBAcGFyYW0gY29tbW9uT2JqZWN0IFRoZSBzaGFyZWQgb2JqZWN0LlxuICogQHBhcmFtIHByb3BhZ2F0aW9uQ29udGV4dCBUaGUgcHJvcGFnYXRpb24gY29udGV4dCB0aGF0IHNob3VsZCBiZSBzaGFyZWQgYmV0d2VlbiBhbGwgdGhlIHJlc291cmNlcyBpZiBubyBwcm9wYWdhdGlvbiBjb250ZXh0IHdhcyByZWdpc3RlcmVkIHlldC5cbiAqIEByZXR1cm5zIHRoZSBzaGFyZWQgcHJvcGFnYXRpb24gY29udGV4dC5cbiAqL1xuZnVuY3Rpb24gY29tbW9uT2JqZWN0VG9Qcm9wYWdhdGlvbkNvbnRleHQoXG4gIGNvbW1vbk9iamVjdCxcbiAgcHJvcGFnYXRpb25Db250ZXh0LFxuKSB7XG4gIGlmICh0eXBlb2YgY29tbW9uT2JqZWN0ID09PSAnb2JqZWN0JyAmJiBjb21tb25PYmplY3QpIHtcbiAgICBjb25zdCBtZW1vUHJvcGFnYXRpb25Db250ZXh0ID0gY29tbW9uUHJvcGFnYXRpb25Db250ZXh0TWFwLmdldChjb21tb25PYmplY3QpO1xuICAgIGlmIChtZW1vUHJvcGFnYXRpb25Db250ZXh0KSB7XG4gICAgICByZXR1cm4gbWVtb1Byb3BhZ2F0aW9uQ29udGV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29tbW9uUHJvcGFnYXRpb25Db250ZXh0TWFwLnNldChjb21tb25PYmplY3QsIHByb3BhZ2F0aW9uQ29udGV4dCk7XG4gICAgICByZXR1cm4gcHJvcGFnYXRpb25Db250ZXh0O1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gcHJvcGFnYXRpb25Db250ZXh0O1xuICB9XG59XG5cbmNvbnN0IGNvbW1vbklzb2xhdGlvblNjb3BlTWFwID0gbmV3IFdlYWtNYXAoKTtcblxuLyoqXG4gKiBUYWtlcyBhIHNoYXJlZCAoZ2FyYmFnZSBjb2xsZWN0YWJsZSkgb2JqZWN0IGJldHdlZW4gcmVzb3VyY2VzLCBlLmcuIGEgaGVhZGVycyBvYmplY3Qgc2hhcmVkIGJldHdlZW4gTmV4dC5qcyBzZXJ2ZXIgY29tcG9uZW50cyBhbmQgcmV0dXJucyBhIGNvbW1vbiBwcm9wYWdhdGlvbiBjb250ZXh0LlxuICpcbiAqIEBwYXJhbSBjb21tb25PYmplY3QgVGhlIHNoYXJlZCBvYmplY3QuXG4gKiBAcGFyYW0gaXNvbGF0aW9uU2NvcGUgVGhlIGlzb2xhdGlvblNjb3BlIHRoYXQgc2hvdWxkIGJlIHNoYXJlZCBiZXR3ZWVuIGFsbCB0aGUgcmVzb3VyY2VzIGlmIG5vIGlzb2xhdGlvbiBzY29wZSB3YXMgY3JlYXRlZCB5ZXQuXG4gKiBAcmV0dXJucyB0aGUgc2hhcmVkIGlzb2xhdGlvbiBzY29wZS5cbiAqL1xuZnVuY3Rpb24gY29tbW9uT2JqZWN0VG9Jc29sYXRpb25TY29wZShjb21tb25PYmplY3QpIHtcbiAgaWYgKHR5cGVvZiBjb21tb25PYmplY3QgPT09ICdvYmplY3QnICYmIGNvbW1vbk9iamVjdCkge1xuICAgIGNvbnN0IG1lbW9Jc29sYXRpb25TY29wZSA9IGNvbW1vbklzb2xhdGlvblNjb3BlTWFwLmdldChjb21tb25PYmplY3QpO1xuICAgIGlmIChtZW1vSXNvbGF0aW9uU2NvcGUpIHtcbiAgICAgIHJldHVybiBtZW1vSXNvbGF0aW9uU2NvcGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IG5ld0lzb2xhdGlvblNjb3BlID0gbmV3IFNjb3BlKCk7XG4gICAgICBjb21tb25Jc29sYXRpb25TY29wZU1hcC5zZXQoY29tbW9uT2JqZWN0LCBuZXdJc29sYXRpb25TY29wZSk7XG4gICAgICByZXR1cm4gbmV3SXNvbGF0aW9uU2NvcGU7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgU2NvcGUoKTtcbiAgfVxufVxuXG5sZXQgbmV4dGpzRXNjYXBlZEFzeW5jU3RvcmFnZTtcblxuLyoqXG4gKiBXaWxsIG1hcmsgdGhlIGV4ZWN1dGlvbiBjb250ZXh0IG9mIHRoZSBjYWxsYmFjayBhcyBcImVzY2FwZWRcIiBmcm9tIE5leHQuanMgaW50ZXJuYWwgdHJhY2luZyBieSB1bnNldHRpbmcgdGhlIGFjdGl2ZVxuICogc3BhbiBhbmQgcHJvcGFnYXRpb24gY29udGV4dC4gV2hlbiBhbiBleGVjdXRpb24gcGFzc2VzIHRocm91Z2ggdGhpcyBmdW5jdGlvbiBtdWx0aXBsZSB0aW1lcywgaXQgaXMgYSBub29wIGFmdGVyIHRoZVxuICogZmlyc3QgdGltZS5cbiAqL1xuZnVuY3Rpb24gZXNjYXBlTmV4dGpzVHJhY2luZyhjYikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIGNvbnN0IE1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UgPSAoR0xPQkFMX09CSiApLkFzeW5jTG9jYWxTdG9yYWdlO1xuXG4gIGlmICghTWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSkge1xuICAgIERFQlVHX0JVSUxEICYmXG4gICAgICBsb2dnZXIud2FybihcbiAgICAgICAgXCJUcmllZCB0byByZWdpc3RlciBBc3luY0xvY2FsU3RvcmFnZSBhc3luYyBjb250ZXh0IHN0cmF0ZWd5IGluIGEgcnVudGltZSB0aGF0IGRvZXNuJ3Qgc3VwcG9ydCBBc3luY0xvY2FsU3RvcmFnZS5cIixcbiAgICAgICk7XG4gICAgcmV0dXJuIGNiKCk7XG4gIH1cblxuICBpZiAoIW5leHRqc0VzY2FwZWRBc3luY1N0b3JhZ2UpIHtcbiAgICBuZXh0anNFc2NhcGVkQXN5bmNTdG9yYWdlID0gbmV3IE1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbiAgfVxuXG4gIGlmIChuZXh0anNFc2NhcGVkQXN5bmNTdG9yYWdlLmdldFN0b3JlKCkpIHtcbiAgICByZXR1cm4gY2IoKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gc3RhcnROZXdUcmFjZSgoKSA9PiB7XG4gICAgICByZXR1cm4gbmV4dGpzRXNjYXBlZEFzeW5jU3RvcmFnZS5ydW4odHJ1ZSwgKCkgPT4ge1xuICAgICAgICByZXR1cm4gY2IoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCB7IGNvbW1vbk9iamVjdFRvSXNvbGF0aW9uU2NvcGUsIGNvbW1vbk9iamVjdFRvUHJvcGFnYXRpb25Db250ZXh0LCBlc2NhcGVOZXh0anNUcmFjaW5nIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjaW5nVXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/utils/vercelWaitUntil.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/vercelWaitUntil.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"vercelWaitUntil\": function() { return /* binding */ vercelWaitUntil; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/**\n * Function that delays closing of a Vercel lambda until the provided promise is resolved.\n *\n * Vendored from https://www.npmjs.com/package/@vercel/functions\n */\nfunction vercelWaitUntil(task) {\n  const vercelRequestContextGlobal =\n    // @ts-expect-error This is not typed\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ[Symbol.for('@vercel/request-context')];\n\n  const ctx = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._nullishCoalesce)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([vercelRequestContextGlobal, 'optionalAccess', _ => _.get, 'optionalCall', _2 => _2()]), () => ( {}));\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([ctx, 'access', _3 => _3.waitUntil, 'optionalCall', _4 => _4(task)]);\n}\n\n\n//# sourceMappingURL=vercelWaitUntil.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91dGlscy92ZXJjZWxXYWl0VW50aWwuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUU7QUFDdEI7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHFEQUFVOztBQUVkLGNBQWMsK0RBQWdCLENBQUMsNkRBQWMsb0dBQW9HO0FBQ2pKLEVBQUUsNkRBQWM7QUFDaEI7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3V0aWxzL3ZlcmNlbFdhaXRVbnRpbC5qcz9jZjk4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9udWxsaXNoQ29hbGVzY2UsIF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBHTE9CQUxfT0JKIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogRnVuY3Rpb24gdGhhdCBkZWxheXMgY2xvc2luZyBvZiBhIFZlcmNlbCBsYW1iZGEgdW50aWwgdGhlIHByb3ZpZGVkIHByb21pc2UgaXMgcmVzb2x2ZWQuXG4gKlxuICogVmVuZG9yZWQgZnJvbSBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9AdmVyY2VsL2Z1bmN0aW9uc1xuICovXG5mdW5jdGlvbiB2ZXJjZWxXYWl0VW50aWwodGFzaykge1xuICBjb25zdCB2ZXJjZWxSZXF1ZXN0Q29udGV4dEdsb2JhbCA9XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBUaGlzIGlzIG5vdCB0eXBlZFxuICAgIEdMT0JBTF9PQkpbU3ltYm9sLmZvcignQHZlcmNlbC9yZXF1ZXN0LWNvbnRleHQnKV07XG5cbiAgY29uc3QgY3R4ID0gX251bGxpc2hDb2FsZXNjZShfb3B0aW9uYWxDaGFpbihbdmVyY2VsUmVxdWVzdENvbnRleHRHbG9iYWwsICdvcHRpb25hbEFjY2VzcycsIF8gPT4gXy5nZXQsICdvcHRpb25hbENhbGwnLCBfMiA9PiBfMigpXSksICgpID0+ICgge30pKTtcbiAgX29wdGlvbmFsQ2hhaW4oW2N0eCwgJ2FjY2VzcycsIF8zID0+IF8zLndhaXRVbnRpbCwgJ29wdGlvbmFsQ2FsbCcsIF80ID0+IF80KHRhc2spXSk7XG59XG5cbmV4cG9ydCB7IHZlcmNlbFdhaXRVbnRpbCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyY2VsV2FpdFVudGlsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/utils/vercelWaitUntil.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"callDataFetcherTraced\": function() { return /* binding */ callDataFetcherTraced; },\n/* harmony export */   \"getSpanFromRequest\": function() { return /* binding */ getSpanFromRequest; },\n/* harmony export */   \"withErrorInstrumentation\": function() { return /* binding */ withErrorInstrumentation; },\n/* harmony export */   \"withTracedServerSideDataFetcher\": function() { return /* binding */ withTracedServerSideDataFetcher; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _responseEnd_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./responseEnd.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n/* harmony import */ var _tracingUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracingUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js\");\n/* harmony import */ var _vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vercelWaitUntil.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/vercelWaitUntil.js\");\n\n\n\n\n\n\n\n/**\n * Grabs a span off a Next.js datafetcher request object, if it was previously put there via\n * `setSpanOnRequest`.\n *\n * @param req The Next.js datafetcher request object\n * @returns the span on the request object if there is one, or `undefined` if the request object didn't have one.\n */\nfunction getSpanFromRequest(req) {\n  return req._sentrySpan;\n}\n\nfunction setSpanOnRequest(span, req) {\n  req._sentrySpan = span;\n}\n\n/**\n * Wraps a function that potentially throws. If it does, the error is passed to `captureException` and rethrown.\n *\n * Note: This function turns the wrapped function into an asynchronous one.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorInstrumentation(\n  origFunction,\n) {\n  return async function ( ...origFunctionArguments) {\n    try {\n      return await origFunction.apply(this, origFunctionArguments);\n    } catch (e) {\n      // TODO: Extract error logic from `withSentry` in here or create a new wrapper with said logic or something like that.\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException)(e, { mechanism: { handled: false } });\n\n      throw e;\n    }\n  };\n}\n\n/**\n * Calls a server-side data fetching function (that takes a `req` and `res` object in its context) with tracing\n * instrumentation. A transaction will be created for the incoming request (if it doesn't already exist) in addition to\n * a span for the wrapped data fetching function.\n *\n * All of the above happens in an isolated domain, meaning all thrown errors will be associated with the correct span.\n *\n * @param origDataFetcher The data fetching method to call.\n * @param origFunctionArguments The arguments to call the data fetching method with.\n * @param req The data fetching function's request object.\n * @param res The data fetching function's response object.\n * @param options Options providing details for the created transaction and span.\n * @returns what the data fetching method call returned.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withTracedServerSideDataFetcher(\n  origDataFetcher,\n  req,\n  res,\n  options\n\n,\n) {\n  return async function ( ...args) {\n    return (0,_tracingUtils_js__WEBPACK_IMPORTED_MODULE_1__.escapeNextjsTracing)(() => {\n      const isolationScope = (0,_tracingUtils_js__WEBPACK_IMPORTED_MODULE_1__.commonObjectToIsolationScope)(req);\n      return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.withIsolationScope)(isolationScope, () => {\n        isolationScope.setTransactionName(`${options.dataFetchingMethodName} (${options.dataFetcherRouteName})`);\n        isolationScope.setSDKProcessingMetadata({\n          request: req,\n        });\n\n        const sentryTrace =\n          req.headers && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isString)(req.headers['sentry-trace']) ? req.headers['sentry-trace'] : undefined;\n        const baggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([req, 'access', _ => _.headers, 'optionalAccess', _2 => _2.baggage]);\n\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.continueTrace)({ sentryTrace, baggage }, () => {\n          const requestSpan = getOrStartRequestSpan(req, res, options.requestedRouteName);\n          return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.withActiveSpan)(requestSpan, () => {\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startSpanManual)(\n              {\n                op: 'function.nextjs',\n                name: `${options.dataFetchingMethodName} (${options.dataFetcherRouteName})`,\n                attributes: {\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n                },\n              },\n              async dataFetcherSpan => {\n                dataFetcherSpan.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SPAN_STATUS_OK });\n                try {\n                  return await origDataFetcher.apply(this, args);\n                } catch (e) {\n                  dataFetcherSpan.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SPAN_STATUS_ERROR, message: 'internal_error' });\n                  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([requestSpan, 'optionalAccess', _3 => _3.setStatus, 'call', _4 => _4({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SPAN_STATUS_ERROR, message: 'internal_error' })]);\n                  throw e;\n                } finally {\n                  dataFetcherSpan.end();\n                }\n              },\n            );\n          });\n        });\n      });\n    }).finally(() => {\n      (0,_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_3__.vercelWaitUntil)((0,_responseEnd_js__WEBPACK_IMPORTED_MODULE_4__.flushSafelyWithTimeout)());\n    });\n  };\n}\n\nfunction getOrStartRequestSpan(req, res, name) {\n  const existingSpan = getSpanFromRequest(req);\n  if (existingSpan) {\n    return existingSpan;\n  }\n\n  const requestSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startInactiveSpan)({\n    name,\n    forceTransaction: true,\n    op: 'http.server',\n    attributes: {\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n      [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n    },\n  });\n\n  requestSpan.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SPAN_STATUS_OK });\n  setSpanOnRequest(requestSpan, req);\n  (0,_responseEnd_js__WEBPACK_IMPORTED_MODULE_4__.autoEndSpanOnResponseEnd)(requestSpan, res);\n\n  return requestSpan;\n}\n\n/**\n * Call a data fetcher and trace it. Only traces the function if there is an active transaction on the scope.\n *\n * We only do the following until we move transaction creation into this function: When called, the wrapped function\n * will also update the name of the active transaction with a parameterized route provided via the `options` argument.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function callDataFetcherTraced(\n  origFunction,\n  origFunctionArgs,\n  options\n\n,\n) {\n  const { parameterizedRoute, dataFetchingMethodName } = options;\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startSpan)(\n    {\n      op: 'function.nextjs',\n      name: `${dataFetchingMethodName} (${parameterizedRoute})`,\n      onlyIfParent: true,\n      attributes: {\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_0__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n      },\n    },\n    async dataFetcherSpan => {\n      dataFetcherSpan.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SPAN_STATUS_OK });\n\n      try {\n        return await origFunction(...origFunctionArgs);\n      } catch (e) {\n        dataFetcherSpan.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SPAN_STATUS_ERROR, message: 'internal_error' });\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException)(e, { mechanism: { handled: false } });\n        throw e;\n      } finally {\n        dataFetcherSpan.end();\n      }\n    },\n  ).finally(() => {\n    (0,_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_3__.vercelWaitUntil)((0,_responseEnd_js__WEBPACK_IMPORTED_MODULE_4__.flushSafelyWithTimeout)());\n  });\n}\n\n\n//# sourceMappingURL=wrapperUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/withServerActionInstrumentation.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/withServerActionInstrumentation.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"withServerActionInstrumentation\": function() { return /* binding */ withServerActionInstrumentation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/nextjs/esm/common/debug-build.js\");\n/* harmony import */ var _nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nextNavigationErrorUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\");\n/* harmony import */ var _utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/responseEnd.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n/* harmony import */ var _utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/tracingUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js\");\n/* harmony import */ var _utils_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/vercelWaitUntil.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/vercelWaitUntil.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Wraps a Next.js Server Action implementation with Sentry Error and Performance instrumentation.\n */\nfunction withServerActionInstrumentation(\n  ...args\n) {\n  if (typeof args[1] === 'function') {\n    const [serverActionName, callback] = args;\n    return withServerActionInstrumentationImplementation(serverActionName, {}, callback);\n  } else {\n    const [serverActionName, options, callback] = args;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return withServerActionInstrumentationImplementation(serverActionName, options, callback);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function withServerActionInstrumentationImplementation(\n  serverActionName,\n  options,\n  callback,\n) {\n  return (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_0__.escapeNextjsTracing)(() => {\n    return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withIsolationScope)(isolationScope => {\n      const sendDefaultPii = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient, 'call', _ => _(), 'optionalAccess', _2 => _2.getOptions, 'call', _3 => _3(), 'access', _4 => _4.sendDefaultPii]);\n\n      let sentryTraceHeader;\n      let baggageHeader;\n      const fullHeadersObject = {};\n      try {\n        sentryTraceHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._nullishCoalesce)((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, 'access', _5 => _5.headers, 'optionalAccess', _6 => _6.get, 'call', _7 => _7('sentry-trace')]), () => ( undefined));\n        baggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, 'access', _8 => _8.headers, 'optionalAccess', _9 => _9.get, 'call', _10 => _10('baggage')]);\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([options, 'access', _11 => _11.headers, 'optionalAccess', _12 => _12.forEach, 'call', _13 => _13((value, key) => {\n          fullHeadersObject[key] = value;\n        })]);\n      } catch (e) {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n            \"Sentry wasn't able to extract the tracing headers for a server action. Will not trace this request.\",\n          );\n      }\n\n      isolationScope.setTransactionName(`serverAction/${serverActionName}`);\n      isolationScope.setSDKProcessingMetadata({\n        request: {\n          headers: fullHeadersObject,\n        },\n      });\n\n      return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.continueTrace)(\n        {\n          sentryTrace: sentryTraceHeader,\n          baggage: baggageHeader,\n        },\n        async () => {\n          try {\n            return await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.startSpan)(\n              {\n                op: 'function.server_action',\n                name: `serverAction/${serverActionName}`,\n                forceTransaction: true,\n                attributes: {\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n                },\n              },\n              async span => {\n                const result = await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.handleCallbackErrors)(callback, error => {\n                  if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_4__.isNotFoundNavigationError)(error)) {\n                    // We don't want to report \"not-found\"s\n                    span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_ERROR, message: 'not_found' });\n                  } else if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_4__.isRedirectNavigationError)(error)) {\n                    // Don't do anything for redirects\n                  } else {\n                    span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_ERROR, message: 'internal_error' });\n                    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(error, {\n                      mechanism: {\n                        handled: false,\n                      },\n                    });\n                  }\n                });\n\n                if (options.recordResponse !== undefined ? options.recordResponse : sendDefaultPii) {\n                  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getIsolationScope)().setExtra('server_action_result', result);\n                }\n\n                if (options.formData) {\n                  options.formData.forEach((value, key) => {\n                    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getIsolationScope)().setExtra(\n                      `server_action_form_data.${key}`,\n                      typeof value === 'string' ? value : '[non-string value]',\n                    );\n                  });\n                }\n\n                return result;\n              },\n            );\n          } finally {\n            (0,_utils_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_5__.vercelWaitUntil)((0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_6__.flushSafelyWithTimeout)());\n          }\n        },\n      );\n    });\n  });\n}\n\n\n//# sourceMappingURL=withServerActionInstrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/withServerActionInstrumentation.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentryVercelCrons.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentryVercelCrons.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapApiHandlerWithSentryVercelCrons\": function() { return /* binding */ wrapApiHandlerWithSentryVercelCrons; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n\n\n\n/**\n * Wraps a function with Sentry crons instrumentation by automaticaly sending check-ins for the given Vercel crons config.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapApiHandlerWithSentryVercelCrons(\n  handler,\n  vercelCronsConfig,\n) {\n  return new Proxy(handler, {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    apply: (originalFunction, thisArg, args) => {\n      if (!args || !args[0]) {\n        return originalFunction.apply(thisArg, args);\n      }\n\n      const [req] = args ;\n\n      let maybePromiseResult;\n      const cronsKey = 'nextUrl' in req ? req.nextUrl.pathname : req.url;\n      const userAgentHeader = 'nextUrl' in req ? req.headers.get('user-agent') : req.headers['user-agent'];\n\n      if (\n        !vercelCronsConfig || // do nothing if vercel crons config is missing\n        !(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([userAgentHeader, 'optionalAccess', _ => _.includes, 'call', _2 => _2('vercel-cron')]) // do nothing if endpoint is not called from vercel crons\n      ) {\n        return originalFunction.apply(thisArg, args);\n      }\n\n      const vercelCron = vercelCronsConfig.find(vercelCron => vercelCron.path === cronsKey);\n\n      if (!vercelCron || !vercelCron.path || !vercelCron.schedule) {\n        return originalFunction.apply(thisArg, args);\n      }\n\n      const monitorSlug = vercelCron.path;\n\n      const checkInId = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureCheckIn)(\n        {\n          monitorSlug,\n          status: 'in_progress',\n        },\n        {\n          maxRuntime: 60 * 12, // (minutes) so 12 hours - just a very high arbitrary number since we don't know the actual duration of the users cron job\n          schedule: {\n            type: 'crontab',\n            value: vercelCron.schedule,\n          },\n        },\n      );\n\n      const startTime = Date.now() / 1000;\n\n      const handleErrorCase = () => {\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureCheckIn)({\n          checkInId,\n          monitorSlug,\n          status: 'error',\n          duration: Date.now() / 1000 - startTime,\n        });\n      };\n\n      try {\n        maybePromiseResult = originalFunction.apply(thisArg, args);\n      } catch (e) {\n        handleErrorCase();\n        throw e;\n      }\n\n      if (typeof maybePromiseResult === 'object' && maybePromiseResult !== null && 'then' in maybePromiseResult) {\n        Promise.resolve(maybePromiseResult).then(\n          () => {\n            (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureCheckIn)({\n              checkInId,\n              monitorSlug,\n              status: 'ok',\n              duration: Date.now() / 1000 - startTime,\n            });\n          },\n          () => {\n            handleErrorCase();\n          },\n        );\n\n        // It is very important that we return the original promise here, because Next.js attaches various properties\n        // to that promise and will throw if they are not on the returned value.\n        return maybePromiseResult;\n      } else {\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureCheckIn)({\n          checkInId,\n          monitorSlug,\n          status: 'ok',\n          duration: Date.now() / 1000 - startTime,\n        });\n        return maybePromiseResult;\n      }\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapApiHandlerWithSentryVercelCrons.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwQXBpSGFuZGxlcldpdGhTZW50cnlWZXJjZWxDcm9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0M7QUFDRDs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVMsNkRBQWM7QUFDdkI7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSx3QkFBd0IsNERBQWM7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUOztBQUVBOztBQUVBO0FBQ0EsUUFBUSw0REFBYztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDREQUFjO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWDtBQUNBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixRQUFRLDREQUFjO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUUrQztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwQXBpSGFuZGxlcldpdGhTZW50cnlWZXJjZWxDcm9ucy5qcz9mNmFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBjYXB0dXJlQ2hlY2tJbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5cbi8qKlxuICogV3JhcHMgYSBmdW5jdGlvbiB3aXRoIFNlbnRyeSBjcm9ucyBpbnN0cnVtZW50YXRpb24gYnkgYXV0b21hdGljYWx5IHNlbmRpbmcgY2hlY2staW5zIGZvciB0aGUgZ2l2ZW4gVmVyY2VsIGNyb25zIGNvbmZpZy5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmZ1bmN0aW9uIHdyYXBBcGlIYW5kbGVyV2l0aFNlbnRyeVZlcmNlbENyb25zKFxuICBoYW5kbGVyLFxuICB2ZXJjZWxDcm9uc0NvbmZpZyxcbikge1xuICByZXR1cm4gbmV3IFByb3h5KGhhbmRsZXIsIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGFwcGx5OiAob3JpZ2luYWxGdW5jdGlvbiwgdGhpc0FyZywgYXJncykgPT4ge1xuICAgICAgaWYgKCFhcmdzIHx8ICFhcmdzWzBdKSB7XG4gICAgICAgIHJldHVybiBvcmlnaW5hbEZ1bmN0aW9uLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBbcmVxXSA9IGFyZ3MgO1xuXG4gICAgICBsZXQgbWF5YmVQcm9taXNlUmVzdWx0O1xuICAgICAgY29uc3QgY3JvbnNLZXkgPSAnbmV4dFVybCcgaW4gcmVxID8gcmVxLm5leHRVcmwucGF0aG5hbWUgOiByZXEudXJsO1xuICAgICAgY29uc3QgdXNlckFnZW50SGVhZGVyID0gJ25leHRVcmwnIGluIHJlcSA/IHJlcS5oZWFkZXJzLmdldCgndXNlci1hZ2VudCcpIDogcmVxLmhlYWRlcnNbJ3VzZXItYWdlbnQnXTtcblxuICAgICAgaWYgKFxuICAgICAgICAhdmVyY2VsQ3JvbnNDb25maWcgfHwgLy8gZG8gbm90aGluZyBpZiB2ZXJjZWwgY3JvbnMgY29uZmlnIGlzIG1pc3NpbmdcbiAgICAgICAgIV9vcHRpb25hbENoYWluKFt1c2VyQWdlbnRIZWFkZXIsICdvcHRpb25hbEFjY2VzcycsIF8gPT4gXy5pbmNsdWRlcywgJ2NhbGwnLCBfMiA9PiBfMigndmVyY2VsLWNyb24nKV0pIC8vIGRvIG5vdGhpbmcgaWYgZW5kcG9pbnQgaXMgbm90IGNhbGxlZCBmcm9tIHZlcmNlbCBjcm9uc1xuICAgICAgKSB7XG4gICAgICAgIHJldHVybiBvcmlnaW5hbEZ1bmN0aW9uLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCB2ZXJjZWxDcm9uID0gdmVyY2VsQ3JvbnNDb25maWcuZmluZCh2ZXJjZWxDcm9uID0+IHZlcmNlbENyb24ucGF0aCA9PT0gY3JvbnNLZXkpO1xuXG4gICAgICBpZiAoIXZlcmNlbENyb24gfHwgIXZlcmNlbENyb24ucGF0aCB8fCAhdmVyY2VsQ3Jvbi5zY2hlZHVsZSkge1xuICAgICAgICByZXR1cm4gb3JpZ2luYWxGdW5jdGlvbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgbW9uaXRvclNsdWcgPSB2ZXJjZWxDcm9uLnBhdGg7XG5cbiAgICAgIGNvbnN0IGNoZWNrSW5JZCA9IGNhcHR1cmVDaGVja0luKFxuICAgICAgICB7XG4gICAgICAgICAgbW9uaXRvclNsdWcsXG4gICAgICAgICAgc3RhdHVzOiAnaW5fcHJvZ3Jlc3MnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbWF4UnVudGltZTogNjAgKiAxMiwgLy8gKG1pbnV0ZXMpIHNvIDEyIGhvdXJzIC0ganVzdCBhIHZlcnkgaGlnaCBhcmJpdHJhcnkgbnVtYmVyIHNpbmNlIHdlIGRvbid0IGtub3cgdGhlIGFjdHVhbCBkdXJhdGlvbiBvZiB0aGUgdXNlcnMgY3JvbiBqb2JcbiAgICAgICAgICBzY2hlZHVsZToge1xuICAgICAgICAgICAgdHlwZTogJ2Nyb250YWInLFxuICAgICAgICAgICAgdmFsdWU6IHZlcmNlbENyb24uc2NoZWR1bGUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCkgLyAxMDAwO1xuXG4gICAgICBjb25zdCBoYW5kbGVFcnJvckNhc2UgPSAoKSA9PiB7XG4gICAgICAgIGNhcHR1cmVDaGVja0luKHtcbiAgICAgICAgICBjaGVja0luSWQsXG4gICAgICAgICAgbW9uaXRvclNsdWcsXG4gICAgICAgICAgc3RhdHVzOiAnZXJyb3InLFxuICAgICAgICAgIGR1cmF0aW9uOiBEYXRlLm5vdygpIC8gMTAwMCAtIHN0YXJ0VGltZSxcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICB0cnkge1xuICAgICAgICBtYXliZVByb21pc2VSZXN1bHQgPSBvcmlnaW5hbEZ1bmN0aW9uLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBoYW5kbGVFcnJvckNhc2UoKTtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBtYXliZVByb21pc2VSZXN1bHQgPT09ICdvYmplY3QnICYmIG1heWJlUHJvbWlzZVJlc3VsdCAhPT0gbnVsbCAmJiAndGhlbicgaW4gbWF5YmVQcm9taXNlUmVzdWx0KSB7XG4gICAgICAgIFByb21pc2UucmVzb2x2ZShtYXliZVByb21pc2VSZXN1bHQpLnRoZW4oXG4gICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgY2FwdHVyZUNoZWNrSW4oe1xuICAgICAgICAgICAgICBjaGVja0luSWQsXG4gICAgICAgICAgICAgIG1vbml0b3JTbHVnLFxuICAgICAgICAgICAgICBzdGF0dXM6ICdvaycsXG4gICAgICAgICAgICAgIGR1cmF0aW9uOiBEYXRlLm5vdygpIC8gMTAwMCAtIHN0YXJ0VGltZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgaGFuZGxlRXJyb3JDYXNlKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBJdCBpcyB2ZXJ5IGltcG9ydGFudCB0aGF0IHdlIHJldHVybiB0aGUgb3JpZ2luYWwgcHJvbWlzZSBoZXJlLCBiZWNhdXNlIE5leHQuanMgYXR0YWNoZXMgdmFyaW91cyBwcm9wZXJ0aWVzXG4gICAgICAgIC8vIHRvIHRoYXQgcHJvbWlzZSBhbmQgd2lsbCB0aHJvdyBpZiB0aGV5IGFyZSBub3Qgb24gdGhlIHJldHVybmVkIHZhbHVlLlxuICAgICAgICByZXR1cm4gbWF5YmVQcm9taXNlUmVzdWx0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZUNoZWNrSW4oe1xuICAgICAgICAgIGNoZWNrSW5JZCxcbiAgICAgICAgICBtb25pdG9yU2x1ZyxcbiAgICAgICAgICBzdGF0dXM6ICdvaycsXG4gICAgICAgICAgZHVyYXRpb246IERhdGUubm93KCkgLyAxMDAwIC0gc3RhcnRUaW1lLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG1heWJlUHJvbWlzZVJlc3VsdDtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IHsgd3JhcEFwaUhhbmRsZXJXaXRoU2VudHJ5VmVyY2VsQ3JvbnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBBcGlIYW5kbGVyV2l0aFNlbnRyeVZlcmNlbENyb25zLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentryVercelCrons.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapAppGetInitialPropsWithSentry.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapAppGetInitialPropsWithSentry.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapAppGetInitialPropsWithSentry\": function() { return /* binding */ wrapAppGetInitialPropsWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom app (\"_app.js\").\n *\n * @param origAppGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapAppGetInitialPropsWithSentry(origAppGetInitialProps) {\n  return new Proxy(origAppGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context.ctx;\n\n      const errorWrappedAppGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withErrorInstrumentation)(wrappingTarget);\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res) {\n        const tracedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withTracedServerSideDataFetcher)(errorWrappedAppGetInitialProps, req, res, {\n          dataFetcherRouteName: '/_app',\n          requestedRouteName: context.ctx.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const appGetInitialProps\n\n = await tracedGetInitialProps.apply(thisArg, args);\n\n        const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveSpan)();\n        const requestSpan = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._nullishCoalesce)((0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.getSpanFromRequest)(req), () => ( (activeSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(activeSpan) : undefined)));\n\n        // Per definition, `pageProps` is not optional, however an increased amount of users doesn't seem to call\n        // `App.getInitialProps(appContext)` in their custom `_app` pages which is required as per\n        // https://nextjs.org/docs/advanced-features/custom-app - resulting in missing `pageProps`.\n        // For this reason, we just handle the case where `pageProps` doesn't exist explicitly.\n        if (!appGetInitialProps.pageProps) {\n          appGetInitialProps.pageProps = {};\n        }\n\n        if (requestSpan) {\n          const sentryTrace = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.spanToTraceHeader)(requestSpan);\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (sentryTrace) {\n            appGetInitialProps.pageProps._sentryTraceData = sentryTrace;\n          }\n\n          const dynamicSamplingContext = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getDynamicSamplingContextFromSpan)(requestSpan);\n          const baggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (baggage) {\n            appGetInitialProps.pageProps._sentryBaggage = baggage;\n          }\n        }\n\n        return appGetInitialProps;\n      } else {\n        return errorWrappedAppGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapAppGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwQXBwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUMrRDtBQUNwQztBQUMvQjtBQUMyRTs7QUFFeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMERBQU87QUFDakI7QUFDQTs7QUFFQTtBQUNBLGNBQWMsV0FBVzs7QUFFekIsNkNBQTZDLGdGQUF3QjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHVGQUErQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUOztBQUVBOztBQUVBLDJCQUEyQiwyREFBYTtBQUN4Qyw0QkFBNEIsK0RBQWdCLENBQUMsMEVBQWtCLDZCQUE2Qix5REFBVzs7QUFFdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEIsK0RBQWlCOztBQUUvQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5Q0FBeUMsK0VBQWlDO0FBQzFFLDBCQUEwQiwwRkFBMkM7O0FBRXJFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRTRDO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzPzZhNmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX251bGxpc2hDb2FsZXNjZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZlU3Bhbiwgc3BhblRvVHJhY2VIZWFkZXIsIGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tU3BhbiwgZ2V0Um9vdFNwYW4gfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgaXNCdWlsZCB9IGZyb20gJy4vdXRpbHMvaXNCdWlsZC5qcyc7XG5pbXBvcnQgeyB3aXRoVHJhY2VkU2VydmVyU2lkZURhdGFGZXRjaGVyLCBnZXRTcGFuRnJvbVJlcXVlc3QsIHdpdGhFcnJvckluc3RydW1lbnRhdGlvbiB9IGZyb20gJy4vdXRpbHMvd3JhcHBlclV0aWxzLmpzJztcblxuLyoqXG4gKiBDcmVhdGUgYSB3cmFwcGVkIHZlcnNpb24gb2YgdGhlIHVzZXIncyBleHBvcnRlZCBgZ2V0SW5pdGlhbFByb3BzYCBmdW5jdGlvbiBpblxuICogYSBjdXN0b20gYXBwIChcIl9hcHAuanNcIikuXG4gKlxuICogQHBhcmFtIG9yaWdBcHBHZXRJbml0aWFsUHJvcHMgVGhlIHVzZXIncyBgZ2V0SW5pdGlhbFByb3BzYCBmdW5jdGlvblxuICogQHBhcmFtIHBhcmFtZXRlcml6ZWRSb3V0ZSBUaGUgcGFnZSdzIHBhcmFtZXRlcml6ZWQgcm91dGVcbiAqIEByZXR1cm5zIEEgd3JhcHBlZCB2ZXJzaW9uIG9mIHRoZSBmdW5jdGlvblxuICovXG5mdW5jdGlvbiB3cmFwQXBwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeShvcmlnQXBwR2V0SW5pdGlhbFByb3BzKSB7XG4gIHJldHVybiBuZXcgUHJveHkob3JpZ0FwcEdldEluaXRpYWxQcm9wcywge1xuICAgIGFwcGx5OiBhc3luYyAod3JhcHBpbmdUYXJnZXQsIHRoaXNBcmcsIGFyZ3MpID0+IHtcbiAgICAgIGlmIChpc0J1aWxkKCkpIHtcbiAgICAgICAgcmV0dXJuIHdyYXBwaW5nVGFyZ2V0LmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBbY29udGV4dF0gPSBhcmdzO1xuICAgICAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dC5jdHg7XG5cbiAgICAgIGNvbnN0IGVycm9yV3JhcHBlZEFwcEdldEluaXRpYWxQcm9wcyA9IHdpdGhFcnJvckluc3RydW1lbnRhdGlvbih3cmFwcGluZ1RhcmdldCk7XG4gICAgICAvLyBHZW5lcmFsbHkgd2UgY2FuIGFzc3VtZSB0aGF0IGByZXFgIGFuZCBgcmVzYCBhcmUgYWx3YXlzIGRlZmluZWQgb24gdGhlIHNlcnZlcjpcbiAgICAgIC8vIGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwaS1yZWZlcmVuY2UvZGF0YS1mZXRjaGluZy9nZXQtaW5pdGlhbC1wcm9wcyNjb250ZXh0LW9iamVjdFxuICAgICAgLy8gVGhpcyBkb2VzIG5vdCBzZWVtIHRvIGJlIHRoZSBjYXNlIGluIGRldiBtb2RlLiBCZWNhdXNlIHdlIGhhdmUgbm8gY2xlYW4gd2F5IG9mIGFzc29jaWF0aW5nIHRoZSB0aGUgZGF0YSBmZXRjaGVyXG4gICAgICAvLyBzcGFuIHdpdGggZWFjaCBvdGhlciB3aGVuIHRoZXJlIGFyZSBubyByZXEgb3IgcmVzIG9iamVjdHMsIHdlIHNpbXBseSBkbyBub3QgdHJhY2UgdGhlbSBhdCBhbGwgaGVyZS5cbiAgICAgIGlmIChyZXEgJiYgcmVzKSB7XG4gICAgICAgIGNvbnN0IHRyYWNlZEdldEluaXRpYWxQcm9wcyA9IHdpdGhUcmFjZWRTZXJ2ZXJTaWRlRGF0YUZldGNoZXIoZXJyb3JXcmFwcGVkQXBwR2V0SW5pdGlhbFByb3BzLCByZXEsIHJlcywge1xuICAgICAgICAgIGRhdGFGZXRjaGVyUm91dGVOYW1lOiAnL19hcHAnLFxuICAgICAgICAgIHJlcXVlc3RlZFJvdXRlTmFtZTogY29udGV4dC5jdHgucGF0aG5hbWUsXG4gICAgICAgICAgZGF0YUZldGNoaW5nTWV0aG9kTmFtZTogJ2dldEluaXRpYWxQcm9wcycsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IGFwcEdldEluaXRpYWxQcm9wc1xuXG4gPSBhd2FpdCB0cmFjZWRHZXRJbml0aWFsUHJvcHMuYXBwbHkodGhpc0FyZywgYXJncyk7XG5cbiAgICAgICAgY29uc3QgYWN0aXZlU3BhbiA9IGdldEFjdGl2ZVNwYW4oKTtcbiAgICAgICAgY29uc3QgcmVxdWVzdFNwYW4gPSBfbnVsbGlzaENvYWxlc2NlKGdldFNwYW5Gcm9tUmVxdWVzdChyZXEpLCAoKSA9PiAoIChhY3RpdmVTcGFuID8gZ2V0Um9vdFNwYW4oYWN0aXZlU3BhbikgOiB1bmRlZmluZWQpKSk7XG5cbiAgICAgICAgLy8gUGVyIGRlZmluaXRpb24sIGBwYWdlUHJvcHNgIGlzIG5vdCBvcHRpb25hbCwgaG93ZXZlciBhbiBpbmNyZWFzZWQgYW1vdW50IG9mIHVzZXJzIGRvZXNuJ3Qgc2VlbSB0byBjYWxsXG4gICAgICAgIC8vIGBBcHAuZ2V0SW5pdGlhbFByb3BzKGFwcENvbnRleHQpYCBpbiB0aGVpciBjdXN0b20gYF9hcHBgIHBhZ2VzIHdoaWNoIGlzIHJlcXVpcmVkIGFzIHBlclxuICAgICAgICAvLyBodHRwczovL25leHRqcy5vcmcvZG9jcy9hZHZhbmNlZC1mZWF0dXJlcy9jdXN0b20tYXBwIC0gcmVzdWx0aW5nIGluIG1pc3NpbmcgYHBhZ2VQcm9wc2AuXG4gICAgICAgIC8vIEZvciB0aGlzIHJlYXNvbiwgd2UganVzdCBoYW5kbGUgdGhlIGNhc2Ugd2hlcmUgYHBhZ2VQcm9wc2AgZG9lc24ndCBleGlzdCBleHBsaWNpdGx5LlxuICAgICAgICBpZiAoIWFwcEdldEluaXRpYWxQcm9wcy5wYWdlUHJvcHMpIHtcbiAgICAgICAgICBhcHBHZXRJbml0aWFsUHJvcHMucGFnZVByb3BzID0ge307XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocmVxdWVzdFNwYW4pIHtcbiAgICAgICAgICBjb25zdCBzZW50cnlUcmFjZSA9IHNwYW5Ub1RyYWNlSGVhZGVyKHJlcXVlc3RTcGFuKTtcblxuICAgICAgICAgIC8vIFRoZSBOZXh0LmpzIHNlcmlhbGl6ZXIgdGhyb3dzIG9uIHVuZGVmaW5lZCB2YWx1ZXMgc28gd2UgbmVlZCB0byBndWFyZCBmb3IgaXQgKCMxMjEwMilcbiAgICAgICAgICBpZiAoc2VudHJ5VHJhY2UpIHtcbiAgICAgICAgICAgIGFwcEdldEluaXRpYWxQcm9wcy5wYWdlUHJvcHMuX3NlbnRyeVRyYWNlRGF0YSA9IHNlbnRyeVRyYWNlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4ocmVxdWVzdFNwYW4pO1xuICAgICAgICAgIGNvbnN0IGJhZ2dhZ2UgPSBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpO1xuXG4gICAgICAgICAgLy8gVGhlIE5leHQuanMgc2VyaWFsaXplciB0aHJvd3Mgb24gdW5kZWZpbmVkIHZhbHVlcyBzbyB3ZSBuZWVkIHRvIGd1YXJkIGZvciBpdCAoIzEyMTAyKVxuICAgICAgICAgIGlmIChiYWdnYWdlKSB7XG4gICAgICAgICAgICBhcHBHZXRJbml0aWFsUHJvcHMucGFnZVByb3BzLl9zZW50cnlCYWdnYWdlID0gYmFnZ2FnZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYXBwR2V0SW5pdGlhbFByb3BzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGVycm9yV3JhcHBlZEFwcEdldEluaXRpYWxQcm9wcy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IHsgd3JhcEFwcEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapAppGetInitialPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapDocumentGetInitialPropsWithSentry.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapDocumentGetInitialPropsWithSentry.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapDocumentGetInitialPropsWithSentry\": function() { return /* binding */ wrapDocumentGetInitialPropsWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom document (\"_document.js\").\n *\n * @param origDocumentGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapDocumentGetInitialPropsWithSentry(\n  origDocumentGetInitialProps,\n) {\n  return new Proxy(origDocumentGetInitialProps, {\n    apply: (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withErrorInstrumentation)(wrappingTarget);\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res) {\n        const tracedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withTracedServerSideDataFetcher)(errorWrappedGetInitialProps, req, res, {\n          dataFetcherRouteName: '/_document',\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        return tracedGetInitialProps.apply(thisArg, args);\n      } else {\n        return errorWrappedGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapDocumentGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUN1RDs7QUFFcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDBEQUFPO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFdBQVc7O0FBRXpCLDBDQUEwQyxnRkFBd0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyx1RkFBK0I7QUFDckU7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFaUQ7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vd3JhcERvY3VtZW50R2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcz84NzUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQnVpbGQgfSBmcm9tICcuL3V0aWxzL2lzQnVpbGQuanMnO1xuaW1wb3J0IHsgd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlciwgd2l0aEVycm9ySW5zdHJ1bWVudGF0aW9uIH0gZnJvbSAnLi91dGlscy93cmFwcGVyVXRpbHMuanMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIHdyYXBwZWQgdmVyc2lvbiBvZiB0aGUgdXNlcidzIGV4cG9ydGVkIGBnZXRJbml0aWFsUHJvcHNgIGZ1bmN0aW9uIGluXG4gKiBhIGN1c3RvbSBkb2N1bWVudCAoXCJfZG9jdW1lbnQuanNcIikuXG4gKlxuICogQHBhcmFtIG9yaWdEb2N1bWVudEdldEluaXRpYWxQcm9wcyBUaGUgdXNlcidzIGBnZXRJbml0aWFsUHJvcHNgIGZ1bmN0aW9uXG4gKiBAcGFyYW0gcGFyYW1ldGVyaXplZFJvdXRlIFRoZSBwYWdlJ3MgcGFyYW1ldGVyaXplZCByb3V0ZVxuICogQHJldHVybnMgQSB3cmFwcGVkIHZlcnNpb24gb2YgdGhlIGZ1bmN0aW9uXG4gKi9cbmZ1bmN0aW9uIHdyYXBEb2N1bWVudEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkoXG4gIG9yaWdEb2N1bWVudEdldEluaXRpYWxQcm9wcyxcbikge1xuICByZXR1cm4gbmV3IFByb3h5KG9yaWdEb2N1bWVudEdldEluaXRpYWxQcm9wcywge1xuICAgIGFwcGx5OiAod3JhcHBpbmdUYXJnZXQsIHRoaXNBcmcsIGFyZ3MpID0+IHtcbiAgICAgIGlmIChpc0J1aWxkKCkpIHtcbiAgICAgICAgcmV0dXJuIHdyYXBwaW5nVGFyZ2V0LmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBbY29udGV4dF0gPSBhcmdzO1xuICAgICAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcblxuICAgICAgY29uc3QgZXJyb3JXcmFwcGVkR2V0SW5pdGlhbFByb3BzID0gd2l0aEVycm9ySW5zdHJ1bWVudGF0aW9uKHdyYXBwaW5nVGFyZ2V0KTtcbiAgICAgIC8vIEdlbmVyYWxseSB3ZSBjYW4gYXNzdW1lIHRoYXQgYHJlcWAgYW5kIGByZXNgIGFyZSBhbHdheXMgZGVmaW5lZCBvbiB0aGUgc2VydmVyOlxuICAgICAgLy8gaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBpLXJlZmVyZW5jZS9kYXRhLWZldGNoaW5nL2dldC1pbml0aWFsLXByb3BzI2NvbnRleHQtb2JqZWN0XG4gICAgICAvLyBUaGlzIGRvZXMgbm90IHNlZW0gdG8gYmUgdGhlIGNhc2UgaW4gZGV2IG1vZGUuIEJlY2F1c2Ugd2UgaGF2ZSBubyBjbGVhbiB3YXkgb2YgYXNzb2NpYXRpbmcgdGhlIHRoZSBkYXRhIGZldGNoZXJcbiAgICAgIC8vIHNwYW4gd2l0aCBlYWNoIG90aGVyIHdoZW4gdGhlcmUgYXJlIG5vIHJlcSBvciByZXMgb2JqZWN0cywgd2Ugc2ltcGx5IGRvIG5vdCB0cmFjZSB0aGVtIGF0IGFsbCBoZXJlLlxuICAgICAgaWYgKHJlcSAmJiByZXMpIHtcbiAgICAgICAgY29uc3QgdHJhY2VkR2V0SW5pdGlhbFByb3BzID0gd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlcihlcnJvcldyYXBwZWRHZXRJbml0aWFsUHJvcHMsIHJlcSwgcmVzLCB7XG4gICAgICAgICAgZGF0YUZldGNoZXJSb3V0ZU5hbWU6ICcvX2RvY3VtZW50JyxcbiAgICAgICAgICByZXF1ZXN0ZWRSb3V0ZU5hbWU6IGNvbnRleHQucGF0aG5hbWUsXG4gICAgICAgICAgZGF0YUZldGNoaW5nTWV0aG9kTmFtZTogJ2dldEluaXRpYWxQcm9wcycsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB0cmFjZWRHZXRJbml0aWFsUHJvcHMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZXJyb3JXcmFwcGVkR2V0SW5pdGlhbFByb3BzLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgeyB3cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapDocumentGetInitialPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapErrorGetInitialPropsWithSentry.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapErrorGetInitialPropsWithSentry.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapErrorGetInitialPropsWithSentry\": function() { return /* binding */ wrapErrorGetInitialPropsWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function in\n * a custom error page (\"_error.js\").\n *\n * @param origErrorGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapErrorGetInitialPropsWithSentry(\n  origErrorGetInitialProps,\n) {\n  return new Proxy(origErrorGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withErrorInstrumentation)(wrappingTarget);\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res) {\n        const tracedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withTracedServerSideDataFetcher)(errorWrappedGetInitialProps, req, res, {\n          dataFetcherRouteName: '/_error',\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const errorGetInitialProps\n\n = await tracedGetInitialProps.apply(thisArg, args);\n\n        const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveSpan)();\n        const requestSpan = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._nullishCoalesce)((0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.getSpanFromRequest)(req), () => ( (activeSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(activeSpan) : undefined)));\n\n        if (requestSpan) {\n          const sentryTrace = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.spanToTraceHeader)(requestSpan);\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (sentryTrace) {\n            errorGetInitialProps._sentryTraceData = sentryTrace;\n          }\n\n          const dynamicSamplingContext = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getDynamicSamplingContextFromSpan)(requestSpan);\n          const baggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (baggage) {\n            errorGetInitialProps._sentryBaggage = baggage;\n          }\n        }\n\n        return errorGetInitialProps;\n      } else {\n        return errorWrappedGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapErrorGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQytEO0FBQ3BDO0FBQy9CO0FBQzJFOztBQUV4SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMERBQU87QUFDakI7QUFDQTs7QUFFQTtBQUNBLGNBQWMsV0FBVzs7QUFFekIsMENBQTBDLGdGQUF3QjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHVGQUErQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUOztBQUVBOztBQUVBLDJCQUEyQiwyREFBYTtBQUN4Qyw0QkFBNEIsK0RBQWdCLENBQUMsMEVBQWtCLDZCQUE2Qix5REFBVzs7QUFFdkc7QUFDQSw4QkFBOEIsK0RBQWlCOztBQUUvQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5Q0FBeUMsK0VBQWlDO0FBQzFFLDBCQUEwQiwwRkFBMkM7O0FBRXJFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRThDO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBFcnJvckdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkuanM/NGFlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfbnVsbGlzaENvYWxlc2NlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBnZXRBY3RpdmVTcGFuLCBzcGFuVG9UcmFjZUhlYWRlciwgZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuLCBnZXRSb290U3BhbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBpc0J1aWxkIH0gZnJvbSAnLi91dGlscy9pc0J1aWxkLmpzJztcbmltcG9ydCB7IHdpdGhUcmFjZWRTZXJ2ZXJTaWRlRGF0YUZldGNoZXIsIGdldFNwYW5Gcm9tUmVxdWVzdCwgd2l0aEVycm9ySW5zdHJ1bWVudGF0aW9uIH0gZnJvbSAnLi91dGlscy93cmFwcGVyVXRpbHMuanMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIHdyYXBwZWQgdmVyc2lvbiBvZiB0aGUgdXNlcidzIGV4cG9ydGVkIGBnZXRJbml0aWFsUHJvcHNgIGZ1bmN0aW9uIGluXG4gKiBhIGN1c3RvbSBlcnJvciBwYWdlIChcIl9lcnJvci5qc1wiKS5cbiAqXG4gKiBAcGFyYW0gb3JpZ0Vycm9yR2V0SW5pdGlhbFByb3BzIFRoZSB1c2VyJ3MgYGdldEluaXRpYWxQcm9wc2AgZnVuY3Rpb25cbiAqIEBwYXJhbSBwYXJhbWV0ZXJpemVkUm91dGUgVGhlIHBhZ2UncyBwYXJhbWV0ZXJpemVkIHJvdXRlXG4gKiBAcmV0dXJucyBBIHdyYXBwZWQgdmVyc2lvbiBvZiB0aGUgZnVuY3Rpb25cbiAqL1xuZnVuY3Rpb24gd3JhcEVycm9yR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeShcbiAgb3JpZ0Vycm9yR2V0SW5pdGlhbFByb3BzLFxuKSB7XG4gIHJldHVybiBuZXcgUHJveHkob3JpZ0Vycm9yR2V0SW5pdGlhbFByb3BzLCB7XG4gICAgYXBwbHk6IGFzeW5jICh3cmFwcGluZ1RhcmdldCwgdGhpc0FyZywgYXJncykgPT4ge1xuICAgICAgaWYgKGlzQnVpbGQoKSkge1xuICAgICAgICByZXR1cm4gd3JhcHBpbmdUYXJnZXQuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IFtjb250ZXh0XSA9IGFyZ3M7XG4gICAgICBjb25zdCB7IHJlcSwgcmVzIH0gPSBjb250ZXh0O1xuXG4gICAgICBjb25zdCBlcnJvcldyYXBwZWRHZXRJbml0aWFsUHJvcHMgPSB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24od3JhcHBpbmdUYXJnZXQpO1xuICAgICAgLy8gR2VuZXJhbGx5IHdlIGNhbiBhc3N1bWUgdGhhdCBgcmVxYCBhbmQgYHJlc2AgYXJlIGFsd2F5cyBkZWZpbmVkIG9uIHRoZSBzZXJ2ZXI6XG4gICAgICAvLyBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcGktcmVmZXJlbmNlL2RhdGEtZmV0Y2hpbmcvZ2V0LWluaXRpYWwtcHJvcHMjY29udGV4dC1vYmplY3RcbiAgICAgIC8vIFRoaXMgZG9lcyBub3Qgc2VlbSB0byBiZSB0aGUgY2FzZSBpbiBkZXYgbW9kZS4gQmVjYXVzZSB3ZSBoYXZlIG5vIGNsZWFuIHdheSBvZiBhc3NvY2lhdGluZyB0aGUgdGhlIGRhdGEgZmV0Y2hlclxuICAgICAgLy8gc3BhbiB3aXRoIGVhY2ggb3RoZXIgd2hlbiB0aGVyZSBhcmUgbm8gcmVxIG9yIHJlcyBvYmplY3RzLCB3ZSBzaW1wbHkgZG8gbm90IHRyYWNlIHRoZW0gYXQgYWxsIGhlcmUuXG4gICAgICBpZiAocmVxICYmIHJlcykge1xuICAgICAgICBjb25zdCB0cmFjZWRHZXRJbml0aWFsUHJvcHMgPSB3aXRoVHJhY2VkU2VydmVyU2lkZURhdGFGZXRjaGVyKGVycm9yV3JhcHBlZEdldEluaXRpYWxQcm9wcywgcmVxLCByZXMsIHtcbiAgICAgICAgICBkYXRhRmV0Y2hlclJvdXRlTmFtZTogJy9fZXJyb3InLFxuICAgICAgICAgIHJlcXVlc3RlZFJvdXRlTmFtZTogY29udGV4dC5wYXRobmFtZSxcbiAgICAgICAgICBkYXRhRmV0Y2hpbmdNZXRob2ROYW1lOiAnZ2V0SW5pdGlhbFByb3BzJyxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgZXJyb3JHZXRJbml0aWFsUHJvcHNcblxuID0gYXdhaXQgdHJhY2VkR2V0SW5pdGlhbFByb3BzLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuXG4gICAgICAgIGNvbnN0IGFjdGl2ZVNwYW4gPSBnZXRBY3RpdmVTcGFuKCk7XG4gICAgICAgIGNvbnN0IHJlcXVlc3RTcGFuID0gX251bGxpc2hDb2FsZXNjZShnZXRTcGFuRnJvbVJlcXVlc3QocmVxKSwgKCkgPT4gKCAoYWN0aXZlU3BhbiA/IGdldFJvb3RTcGFuKGFjdGl2ZVNwYW4pIDogdW5kZWZpbmVkKSkpO1xuXG4gICAgICAgIGlmIChyZXF1ZXN0U3Bhbikge1xuICAgICAgICAgIGNvbnN0IHNlbnRyeVRyYWNlID0gc3BhblRvVHJhY2VIZWFkZXIocmVxdWVzdFNwYW4pO1xuXG4gICAgICAgICAgLy8gVGhlIE5leHQuanMgc2VyaWFsaXplciB0aHJvd3Mgb24gdW5kZWZpbmVkIHZhbHVlcyBzbyB3ZSBuZWVkIHRvIGd1YXJkIGZvciBpdCAoIzEyMTAyKVxuICAgICAgICAgIGlmIChzZW50cnlUcmFjZSkge1xuICAgICAgICAgICAgZXJyb3JHZXRJbml0aWFsUHJvcHMuX3NlbnRyeVRyYWNlRGF0YSA9IHNlbnRyeVRyYWNlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4ocmVxdWVzdFNwYW4pO1xuICAgICAgICAgIGNvbnN0IGJhZ2dhZ2UgPSBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpO1xuXG4gICAgICAgICAgLy8gVGhlIE5leHQuanMgc2VyaWFsaXplciB0aHJvd3Mgb24gdW5kZWZpbmVkIHZhbHVlcyBzbyB3ZSBuZWVkIHRvIGd1YXJkIGZvciBpdCAoIzEyMTAyKVxuICAgICAgICAgIGlmIChiYWdnYWdlKSB7XG4gICAgICAgICAgICBlcnJvckdldEluaXRpYWxQcm9wcy5fc2VudHJ5QmFnZ2FnZSA9IGJhZ2dhZ2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGVycm9yR2V0SW5pdGlhbFByb3BzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGVycm9yV3JhcHBlZEdldEluaXRpYWxQcm9wcy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IHsgd3JhcEVycm9yR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcEVycm9yR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapErrorGetInitialPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapGenerationFunctionWithSentry.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapGenerationFunctionWithSentry.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapGenerationFunctionWithSentry\": function() { return /* binding */ wrapGenerationFunctionWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nextNavigationErrorUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\");\n/* harmony import */ var _utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/tracingUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js\");\n\n\n\n\n\n\n/**\n * Wraps a generation function (e.g. generateMetadata) with Sentry error and performance instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapGenerationFunctionWithSentry(\n  generationFunction,\n  context,\n) {\n  const { requestAsyncStorage, componentRoute, componentType, generationFunctionIdentifier } = context;\n  return new Proxy(generationFunction, {\n    apply: (originalFunction, thisArg, args) => {\n      const requestTraceId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getActiveSpan, 'call', _ => _(), 'optionalAccess', _2 => _2.spanContext, 'call', _3 => _3(), 'access', _4 => _4.traceId]);\n      return (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_2__.escapeNextjsTracing)(() => {\n        let headers = undefined;\n        // We try-catch here just in case anything goes wrong with the async storage here goes wrong since it is Next.js internal API\n        try {\n          headers = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([requestAsyncStorage, 'optionalAccess', _5 => _5.getStore, 'call', _6 => _6(), 'optionalAccess', _7 => _7.headers]);\n        } catch (e) {\n          /** empty */\n        }\n\n        let data = undefined;\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient, 'call', _8 => _8(), 'optionalAccess', _9 => _9.getOptions, 'call', _10 => _10(), 'access', _11 => _11.sendDefaultPii])) {\n          const props = args[0];\n          const params = props && typeof props === 'object' && 'params' in props ? props.params : undefined;\n          const searchParams =\n            props && typeof props === 'object' && 'searchParams' in props ? props.searchParams : undefined;\n          data = { params, searchParams };\n        }\n\n        const headersDict = headers ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.winterCGHeadersToDict)(headers) : undefined;\n\n        const isolationScope = (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_2__.commonObjectToIsolationScope)(headers);\n\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withIsolationScope)(isolationScope, () => {\n          return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withScope)(scope => {\n            scope.setTransactionName(`${componentType}.${generationFunctionIdentifier} (${componentRoute})`);\n\n            isolationScope.setSDKProcessingMetadata({\n              request: {\n                headers: headersDict,\n              },\n            });\n\n            const propagationContext = (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_2__.commonObjectToPropagationContext)(\n              headers,\n              (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([headersDict, 'optionalAccess', _12 => _12['sentry-trace']])\n                ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.propagationContextFromHeaders)(headersDict['sentry-trace'], headersDict['baggage'])\n                : {\n                    traceId: requestTraceId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n                    spanId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16),\n                  },\n            );\n\n            scope.setExtra('route_data', data);\n            scope.setPropagationContext(propagationContext);\n\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.startSpanManual)(\n              {\n                op: 'function.nextjs',\n                name: `${componentType}.${generationFunctionIdentifier} (${componentRoute})`,\n                forceTransaction: true,\n                attributes: {\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n                },\n              },\n              span => {\n                return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.handleCallbackErrors)(\n                  () => originalFunction.apply(thisArg, args),\n                  err => {\n                    if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_3__.isNotFoundNavigationError)(err)) {\n                      // We don't want to report \"not-found\"s\n                      span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_ERROR, message: 'not_found' });\n                    } else if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_3__.isRedirectNavigationError)(err)) {\n                      // We don't want to report redirects\n                      span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_OK });\n                    } else {\n                      span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_ERROR, message: 'internal_error' });\n                      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(err, {\n                        mechanism: {\n                          handled: false,\n                        },\n                      });\n                    }\n                  },\n                  () => {\n                    span.end();\n                  },\n                );\n              },\n            );\n          });\n        });\n      });\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapGenerationFunctionWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapGenerationFunctionWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapGetInitialPropsWithSentry.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapGetInitialPropsWithSentry.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapGetInitialPropsWithSentry\": function() { return /* binding */ wrapGetInitialPropsWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getInitialProps` function\n *\n * @param origGetInitialProps The user's `getInitialProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapGetInitialPropsWithSentry(origGetInitialProps) {\n  return new Proxy(origGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withErrorInstrumentation)(wrappingTarget);\n      // Generally we can assume that `req` and `res` are always defined on the server:\n      // https://nextjs.org/docs/api-reference/data-fetching/get-initial-props#context-object\n      // This does not seem to be the case in dev mode. Because we have no clean way of associating the the data fetcher\n      // span with each other when there are no req or res objects, we simply do not trace them at all here.\n      if (req && res) {\n        const tracedGetInitialProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withTracedServerSideDataFetcher)(errorWrappedGetInitialProps, req, res, {\n          dataFetcherRouteName: context.pathname,\n          requestedRouteName: context.pathname,\n          dataFetchingMethodName: 'getInitialProps',\n        });\n\n        const initialProps\n\n = await (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._asyncNullishCoalesce)((await tracedGetInitialProps.apply(thisArg, args)), async () => ( {})); // Next.js allows undefined to be returned from a getInitialPropsFunction.\n\n        const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getActiveSpan)();\n        const requestSpan = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__._nullishCoalesce)((0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.getSpanFromRequest)(req), () => ( (activeSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getRootSpan)(activeSpan) : undefined)));\n\n        if (requestSpan) {\n          const sentryTrace = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.spanToTraceHeader)(requestSpan);\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (sentryTrace) {\n            initialProps._sentryTraceData = sentryTrace;\n          }\n\n          const dynamicSamplingContext = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getDynamicSamplingContextFromSpan)(requestSpan);\n          const baggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (baggage) {\n            initialProps._sentryBaggage = baggage;\n          }\n        }\n\n        return initialProps;\n      } else {\n        return errorWrappedGetInitialProps.apply(thisArg, args);\n      }\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3RTtBQUN3QztBQUNwQztBQUMvQjtBQUMyRTs7QUFFeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDBEQUFPO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFdBQVc7O0FBRXpCLDBDQUEwQyxnRkFBd0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyx1RkFBK0I7QUFDckU7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDs7QUFFQSxTQUFTLG9FQUFxQixxRUFBcUUsSUFBSTs7QUFFdkcsMkJBQTJCLDJEQUFhO0FBQ3hDLDRCQUE0QiwrREFBZ0IsQ0FBQywwRUFBa0IsNkJBQTZCLHlEQUFXOztBQUV2RztBQUNBLDhCQUE4QiwrREFBaUI7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlDQUF5QywrRUFBaUM7QUFDMUUsMEJBQTBCLDBGQUEyQzs7QUFFckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFeUM7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vd3JhcEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkuanM/NGE0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfbnVsbGlzaENvYWxlc2NlLCBfYXN5bmNOdWxsaXNoQ29hbGVzY2UgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEFjdGl2ZVNwYW4sIHNwYW5Ub1RyYWNlSGVhZGVyLCBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4sIGdldFJvb3RTcGFuIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGlzQnVpbGQgfSBmcm9tICcuL3V0aWxzL2lzQnVpbGQuanMnO1xuaW1wb3J0IHsgd2l0aFRyYWNlZFNlcnZlclNpZGVEYXRhRmV0Y2hlciwgZ2V0U3BhbkZyb21SZXF1ZXN0LCB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24gfSBmcm9tICcuL3V0aWxzL3dyYXBwZXJVdGlscy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlIGEgd3JhcHBlZCB2ZXJzaW9uIG9mIHRoZSB1c2VyJ3MgZXhwb3J0ZWQgYGdldEluaXRpYWxQcm9wc2AgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0gb3JpZ0dldEluaXRpYWxQcm9wcyBUaGUgdXNlcidzIGBnZXRJbml0aWFsUHJvcHNgIGZ1bmN0aW9uXG4gKiBAcGFyYW0gcGFyYW1ldGVyaXplZFJvdXRlIFRoZSBwYWdlJ3MgcGFyYW1ldGVyaXplZCByb3V0ZVxuICogQHJldHVybnMgQSB3cmFwcGVkIHZlcnNpb24gb2YgdGhlIGZ1bmN0aW9uXG4gKi9cbmZ1bmN0aW9uIHdyYXBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5KG9yaWdHZXRJbml0aWFsUHJvcHMpIHtcbiAgcmV0dXJuIG5ldyBQcm94eShvcmlnR2V0SW5pdGlhbFByb3BzLCB7XG4gICAgYXBwbHk6IGFzeW5jICh3cmFwcGluZ1RhcmdldCwgdGhpc0FyZywgYXJncykgPT4ge1xuICAgICAgaWYgKGlzQnVpbGQoKSkge1xuICAgICAgICByZXR1cm4gd3JhcHBpbmdUYXJnZXQuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IFtjb250ZXh0XSA9IGFyZ3M7XG4gICAgICBjb25zdCB7IHJlcSwgcmVzIH0gPSBjb250ZXh0O1xuXG4gICAgICBjb25zdCBlcnJvcldyYXBwZWRHZXRJbml0aWFsUHJvcHMgPSB3aXRoRXJyb3JJbnN0cnVtZW50YXRpb24od3JhcHBpbmdUYXJnZXQpO1xuICAgICAgLy8gR2VuZXJhbGx5IHdlIGNhbiBhc3N1bWUgdGhhdCBgcmVxYCBhbmQgYHJlc2AgYXJlIGFsd2F5cyBkZWZpbmVkIG9uIHRoZSBzZXJ2ZXI6XG4gICAgICAvLyBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcGktcmVmZXJlbmNlL2RhdGEtZmV0Y2hpbmcvZ2V0LWluaXRpYWwtcHJvcHMjY29udGV4dC1vYmplY3RcbiAgICAgIC8vIFRoaXMgZG9lcyBub3Qgc2VlbSB0byBiZSB0aGUgY2FzZSBpbiBkZXYgbW9kZS4gQmVjYXVzZSB3ZSBoYXZlIG5vIGNsZWFuIHdheSBvZiBhc3NvY2lhdGluZyB0aGUgdGhlIGRhdGEgZmV0Y2hlclxuICAgICAgLy8gc3BhbiB3aXRoIGVhY2ggb3RoZXIgd2hlbiB0aGVyZSBhcmUgbm8gcmVxIG9yIHJlcyBvYmplY3RzLCB3ZSBzaW1wbHkgZG8gbm90IHRyYWNlIHRoZW0gYXQgYWxsIGhlcmUuXG4gICAgICBpZiAocmVxICYmIHJlcykge1xuICAgICAgICBjb25zdCB0cmFjZWRHZXRJbml0aWFsUHJvcHMgPSB3aXRoVHJhY2VkU2VydmVyU2lkZURhdGFGZXRjaGVyKGVycm9yV3JhcHBlZEdldEluaXRpYWxQcm9wcywgcmVxLCByZXMsIHtcbiAgICAgICAgICBkYXRhRmV0Y2hlclJvdXRlTmFtZTogY29udGV4dC5wYXRobmFtZSxcbiAgICAgICAgICByZXF1ZXN0ZWRSb3V0ZU5hbWU6IGNvbnRleHQucGF0aG5hbWUsXG4gICAgICAgICAgZGF0YUZldGNoaW5nTWV0aG9kTmFtZTogJ2dldEluaXRpYWxQcm9wcycsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IGluaXRpYWxQcm9wc1xuXG4gPSBhd2FpdCBfYXN5bmNOdWxsaXNoQ29hbGVzY2UoKGF3YWl0IHRyYWNlZEdldEluaXRpYWxQcm9wcy5hcHBseSh0aGlzQXJnLCBhcmdzKSksIGFzeW5jICgpID0+ICgge30pKTsgLy8gTmV4dC5qcyBhbGxvd3MgdW5kZWZpbmVkIHRvIGJlIHJldHVybmVkIGZyb20gYSBnZXRJbml0aWFsUHJvcHNGdW5jdGlvbi5cblxuICAgICAgICBjb25zdCBhY3RpdmVTcGFuID0gZ2V0QWN0aXZlU3BhbigpO1xuICAgICAgICBjb25zdCByZXF1ZXN0U3BhbiA9IF9udWxsaXNoQ29hbGVzY2UoZ2V0U3BhbkZyb21SZXF1ZXN0KHJlcSksICgpID0+ICggKGFjdGl2ZVNwYW4gPyBnZXRSb290U3BhbihhY3RpdmVTcGFuKSA6IHVuZGVmaW5lZCkpKTtcblxuICAgICAgICBpZiAocmVxdWVzdFNwYW4pIHtcbiAgICAgICAgICBjb25zdCBzZW50cnlUcmFjZSA9IHNwYW5Ub1RyYWNlSGVhZGVyKHJlcXVlc3RTcGFuKTtcblxuICAgICAgICAgIC8vIFRoZSBOZXh0LmpzIHNlcmlhbGl6ZXIgdGhyb3dzIG9uIHVuZGVmaW5lZCB2YWx1ZXMgc28gd2UgbmVlZCB0byBndWFyZCBmb3IgaXQgKCMxMjEwMilcbiAgICAgICAgICBpZiAoc2VudHJ5VHJhY2UpIHtcbiAgICAgICAgICAgIGluaXRpYWxQcm9wcy5fc2VudHJ5VHJhY2VEYXRhID0gc2VudHJ5VHJhY2U7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc3QgZHluYW1pY1NhbXBsaW5nQ29udGV4dCA9IGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tU3BhbihyZXF1ZXN0U3Bhbik7XG4gICAgICAgICAgY29uc3QgYmFnZ2FnZSA9IGR5bmFtaWNTYW1wbGluZ0NvbnRleHRUb1NlbnRyeUJhZ2dhZ2VIZWFkZXIoZHluYW1pY1NhbXBsaW5nQ29udGV4dCk7XG5cbiAgICAgICAgICAvLyBUaGUgTmV4dC5qcyBzZXJpYWxpemVyIHRocm93cyBvbiB1bmRlZmluZWQgdmFsdWVzIHNvIHdlIG5lZWQgdG8gZ3VhcmQgZm9yIGl0ICgjMTIxMDIpXG4gICAgICAgICAgaWYgKGJhZ2dhZ2UpIHtcbiAgICAgICAgICAgIGluaXRpYWxQcm9wcy5fc2VudHJ5QmFnZ2FnZSA9IGJhZ2dhZ2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGluaXRpYWxQcm9wcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBlcnJvcldyYXBwZWRHZXRJbml0aWFsUHJvcHMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCB7IHdyYXBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapGetInitialPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapGetServerSidePropsWithSentry.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapGetServerSidePropsWithSentry.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapGetServerSidePropsWithSentry\": function() { return /* binding */ wrapGetServerSidePropsWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n\n\n\n/**\n * Create a wrapped version of the user's exported `getServerSideProps` function\n *\n * @param origGetServerSideProps The user's `getServerSideProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapGetServerSidePropsWithSentry(\n  origGetServerSideProps,\n  parameterizedRoute,\n) {\n  return new Proxy(origGetServerSideProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const [context] = args;\n      const { req, res } = context;\n\n      const errorWrappedGetServerSideProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withErrorInstrumentation)(wrappingTarget);\n      const tracedGetServerSideProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withTracedServerSideDataFetcher)(errorWrappedGetServerSideProps, req, res, {\n        dataFetcherRouteName: parameterizedRoute,\n        requestedRouteName: parameterizedRoute,\n        dataFetchingMethodName: 'getServerSideProps',\n      });\n\n      const serverSideProps = await (tracedGetServerSideProps.apply(thisArg, args)\n\n);\n\n      if (serverSideProps && 'props' in serverSideProps) {\n        const activeSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveSpan)();\n        const requestSpan = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__._nullishCoalesce)((0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.getSpanFromRequest)(req), () => ( (activeSpan ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(activeSpan) : undefined)));\n        if (requestSpan) {\n          const sentryTrace = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.spanToTraceHeader)(requestSpan);\n\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (sentryTrace) {\n            (serverSideProps.props )._sentryTraceData = sentryTrace;\n          }\n\n          const dynamicSamplingContext = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getDynamicSamplingContextFromSpan)(requestSpan);\n          const baggage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n          // The Next.js serializer throws on undefined values so we need to guard for it (#12102)\n          if (baggage) {\n            (serverSideProps.props )._sentryBaggage = baggage;\n          }\n        }\n      }\n\n      return serverSideProps;\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapGetServerSidePropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwR2V0U2VydmVyU2lkZVByb3BzV2l0aFNlbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUMrRDtBQUNwQztBQUMvQjtBQUMyRTs7QUFFeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDBEQUFPO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFdBQVc7O0FBRXpCLDZDQUE2QyxnRkFBd0I7QUFDckUsdUNBQXVDLHVGQUErQjtBQUN0RTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQOztBQUVBOztBQUVBO0FBQ0EsMkJBQTJCLDJEQUFhO0FBQ3hDLDRCQUE0QiwrREFBZ0IsQ0FBQywwRUFBa0IsNkJBQTZCLHlEQUFXO0FBQ3ZHO0FBQ0EsOEJBQThCLCtEQUFpQjs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseUNBQXlDLCtFQUFpQztBQUMxRSwwQkFBMEIsMEZBQTJDO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRTRDO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBHZXRTZXJ2ZXJTaWRlUHJvcHNXaXRoU2VudHJ5LmpzPzBhY2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX251bGxpc2hDb2FsZXNjZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZlU3Bhbiwgc3BhblRvVHJhY2VIZWFkZXIsIGdldER5bmFtaWNTYW1wbGluZ0NvbnRleHRGcm9tU3BhbiwgZ2V0Um9vdFNwYW4gfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgaXNCdWlsZCB9IGZyb20gJy4vdXRpbHMvaXNCdWlsZC5qcyc7XG5pbXBvcnQgeyBnZXRTcGFuRnJvbVJlcXVlc3QsIHdpdGhUcmFjZWRTZXJ2ZXJTaWRlRGF0YUZldGNoZXIsIHdpdGhFcnJvckluc3RydW1lbnRhdGlvbiB9IGZyb20gJy4vdXRpbHMvd3JhcHBlclV0aWxzLmpzJztcblxuLyoqXG4gKiBDcmVhdGUgYSB3cmFwcGVkIHZlcnNpb24gb2YgdGhlIHVzZXIncyBleHBvcnRlZCBgZ2V0U2VydmVyU2lkZVByb3BzYCBmdW5jdGlvblxuICpcbiAqIEBwYXJhbSBvcmlnR2V0U2VydmVyU2lkZVByb3BzIFRoZSB1c2VyJ3MgYGdldFNlcnZlclNpZGVQcm9wc2AgZnVuY3Rpb25cbiAqIEBwYXJhbSBwYXJhbWV0ZXJpemVkUm91dGUgVGhlIHBhZ2UncyBwYXJhbWV0ZXJpemVkIHJvdXRlXG4gKiBAcmV0dXJucyBBIHdyYXBwZWQgdmVyc2lvbiBvZiB0aGUgZnVuY3Rpb25cbiAqL1xuZnVuY3Rpb24gd3JhcEdldFNlcnZlclNpZGVQcm9wc1dpdGhTZW50cnkoXG4gIG9yaWdHZXRTZXJ2ZXJTaWRlUHJvcHMsXG4gIHBhcmFtZXRlcml6ZWRSb3V0ZSxcbikge1xuICByZXR1cm4gbmV3IFByb3h5KG9yaWdHZXRTZXJ2ZXJTaWRlUHJvcHMsIHtcbiAgICBhcHBseTogYXN5bmMgKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICBpZiAoaXNCdWlsZCgpKSB7XG4gICAgICAgIHJldHVybiB3cmFwcGluZ1RhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgW2NvbnRleHRdID0gYXJncztcbiAgICAgIGNvbnN0IHsgcmVxLCByZXMgfSA9IGNvbnRleHQ7XG5cbiAgICAgIGNvbnN0IGVycm9yV3JhcHBlZEdldFNlcnZlclNpZGVQcm9wcyA9IHdpdGhFcnJvckluc3RydW1lbnRhdGlvbih3cmFwcGluZ1RhcmdldCk7XG4gICAgICBjb25zdCB0cmFjZWRHZXRTZXJ2ZXJTaWRlUHJvcHMgPSB3aXRoVHJhY2VkU2VydmVyU2lkZURhdGFGZXRjaGVyKGVycm9yV3JhcHBlZEdldFNlcnZlclNpZGVQcm9wcywgcmVxLCByZXMsIHtcbiAgICAgICAgZGF0YUZldGNoZXJSb3V0ZU5hbWU6IHBhcmFtZXRlcml6ZWRSb3V0ZSxcbiAgICAgICAgcmVxdWVzdGVkUm91dGVOYW1lOiBwYXJhbWV0ZXJpemVkUm91dGUsXG4gICAgICAgIGRhdGFGZXRjaGluZ01ldGhvZE5hbWU6ICdnZXRTZXJ2ZXJTaWRlUHJvcHMnLFxuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IHNlcnZlclNpZGVQcm9wcyA9IGF3YWl0ICh0cmFjZWRHZXRTZXJ2ZXJTaWRlUHJvcHMuYXBwbHkodGhpc0FyZywgYXJncylcblxuKTtcblxuICAgICAgaWYgKHNlcnZlclNpZGVQcm9wcyAmJiAncHJvcHMnIGluIHNlcnZlclNpZGVQcm9wcykge1xuICAgICAgICBjb25zdCBhY3RpdmVTcGFuID0gZ2V0QWN0aXZlU3BhbigpO1xuICAgICAgICBjb25zdCByZXF1ZXN0U3BhbiA9IF9udWxsaXNoQ29hbGVzY2UoZ2V0U3BhbkZyb21SZXF1ZXN0KHJlcSksICgpID0+ICggKGFjdGl2ZVNwYW4gPyBnZXRSb290U3BhbihhY3RpdmVTcGFuKSA6IHVuZGVmaW5lZCkpKTtcbiAgICAgICAgaWYgKHJlcXVlc3RTcGFuKSB7XG4gICAgICAgICAgY29uc3Qgc2VudHJ5VHJhY2UgPSBzcGFuVG9UcmFjZUhlYWRlcihyZXF1ZXN0U3Bhbik7XG5cbiAgICAgICAgICAvLyBUaGUgTmV4dC5qcyBzZXJpYWxpemVyIHRocm93cyBvbiB1bmRlZmluZWQgdmFsdWVzIHNvIHdlIG5lZWQgdG8gZ3VhcmQgZm9yIGl0ICgjMTIxMDIpXG4gICAgICAgICAgaWYgKHNlbnRyeVRyYWNlKSB7XG4gICAgICAgICAgICAoc2VydmVyU2lkZVByb3BzLnByb3BzICkuX3NlbnRyeVRyYWNlRGF0YSA9IHNlbnRyeVRyYWNlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4ocmVxdWVzdFNwYW4pO1xuICAgICAgICAgIGNvbnN0IGJhZ2dhZ2UgPSBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpO1xuICAgICAgICAgIC8vIFRoZSBOZXh0LmpzIHNlcmlhbGl6ZXIgdGhyb3dzIG9uIHVuZGVmaW5lZCB2YWx1ZXMgc28gd2UgbmVlZCB0byBndWFyZCBmb3IgaXQgKCMxMjEwMilcbiAgICAgICAgICBpZiAoYmFnZ2FnZSkge1xuICAgICAgICAgICAgKHNlcnZlclNpZGVQcm9wcy5wcm9wcyApLl9zZW50cnlCYWdnYWdlID0gYmFnZ2FnZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHNlcnZlclNpZGVQcm9wcztcbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IHsgd3JhcEdldFNlcnZlclNpZGVQcm9wc1dpdGhTZW50cnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBHZXRTZXJ2ZXJTaWRlUHJvcHNXaXRoU2VudHJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapGetServerSidePropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapGetStaticPropsWithSentry.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapGetStaticPropsWithSentry.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapGetStaticPropsWithSentry\": function() { return /* binding */ wrapGetStaticPropsWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/isBuild.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/isBuild.js\");\n/* harmony import */ var _utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/wrapperUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/wrapperUtils.js\");\n\n\n\n/**\n * Create a wrapped version of the user's exported `getStaticProps` function\n *\n * @param origGetStaticProps The user's `getStaticProps` function\n * @param parameterizedRoute The page's parameterized route\n * @returns A wrapped version of the function\n */\nfunction wrapGetStaticPropsWithSentry(\n  origGetStaticPropsa,\n  parameterizedRoute,\n) {\n  return new Proxy(origGetStaticPropsa, {\n    apply: (wrappingTarget, thisArg, args) => {\n      if ((0,_utils_isBuild_js__WEBPACK_IMPORTED_MODULE_0__.isBuild)()) {\n        return wrappingTarget.apply(thisArg, args);\n      }\n\n      const errorWrappedGetStaticProps = (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.withErrorInstrumentation)(wrappingTarget);\n      return (0,_utils_wrapperUtils_js__WEBPACK_IMPORTED_MODULE_1__.callDataFetcherTraced)(errorWrappedGetStaticProps, args, {\n        parameterizedRoute,\n        dataFetchingMethodName: 'getStaticProps',\n      });\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapGetStaticPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUM2Qzs7QUFFMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDBEQUFPO0FBQ2pCO0FBQ0E7O0FBRUEseUNBQXlDLGdGQUF3QjtBQUNqRSxhQUFhLDZFQUFxQjtBQUNsQztBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRXdDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBHZXRTdGF0aWNQcm9wc1dpdGhTZW50cnkuanM/MjcxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0J1aWxkIH0gZnJvbSAnLi91dGlscy9pc0J1aWxkLmpzJztcbmltcG9ydCB7IGNhbGxEYXRhRmV0Y2hlclRyYWNlZCwgd2l0aEVycm9ySW5zdHJ1bWVudGF0aW9uIH0gZnJvbSAnLi91dGlscy93cmFwcGVyVXRpbHMuanMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIHdyYXBwZWQgdmVyc2lvbiBvZiB0aGUgdXNlcidzIGV4cG9ydGVkIGBnZXRTdGF0aWNQcm9wc2AgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0gb3JpZ0dldFN0YXRpY1Byb3BzIFRoZSB1c2VyJ3MgYGdldFN0YXRpY1Byb3BzYCBmdW5jdGlvblxuICogQHBhcmFtIHBhcmFtZXRlcml6ZWRSb3V0ZSBUaGUgcGFnZSdzIHBhcmFtZXRlcml6ZWQgcm91dGVcbiAqIEByZXR1cm5zIEEgd3JhcHBlZCB2ZXJzaW9uIG9mIHRoZSBmdW5jdGlvblxuICovXG5mdW5jdGlvbiB3cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5KFxuICBvcmlnR2V0U3RhdGljUHJvcHNhLFxuICBwYXJhbWV0ZXJpemVkUm91dGUsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm94eShvcmlnR2V0U3RhdGljUHJvcHNhLCB7XG4gICAgYXBwbHk6ICh3cmFwcGluZ1RhcmdldCwgdGhpc0FyZywgYXJncykgPT4ge1xuICAgICAgaWYgKGlzQnVpbGQoKSkge1xuICAgICAgICByZXR1cm4gd3JhcHBpbmdUYXJnZXQuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGVycm9yV3JhcHBlZEdldFN0YXRpY1Byb3BzID0gd2l0aEVycm9ySW5zdHJ1bWVudGF0aW9uKHdyYXBwaW5nVGFyZ2V0KTtcbiAgICAgIHJldHVybiBjYWxsRGF0YUZldGNoZXJUcmFjZWQoZXJyb3JXcmFwcGVkR2V0U3RhdGljUHJvcHMsIGFyZ3MsIHtcbiAgICAgICAgcGFyYW1ldGVyaXplZFJvdXRlLFxuICAgICAgICBkYXRhRmV0Y2hpbmdNZXRob2ROYW1lOiAnZ2V0U3RhdGljUHJvcHMnLFxuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCB7IHdyYXBHZXRTdGF0aWNQcm9wc1dpdGhTZW50cnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBHZXRTdGF0aWNQcm9wc1dpdGhTZW50cnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapGetStaticPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapMiddlewareWithSentry.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapMiddlewareWithSentry.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapMiddlewareWithSentry\": function() { return /* binding */ wrapMiddlewareWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _utils_edgeWrapperUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/edgeWrapperUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/edgeWrapperUtils.js\");\n\n\n/**\n * Wraps Next.js middleware with Sentry error and performance instrumentation.\n *\n * @param middleware The middleware handler.\n * @returns a wrapped middleware handler.\n */\nfunction wrapMiddlewareWithSentry(\n  middleware,\n) {\n  return new Proxy(middleware, {\n    apply: (wrappingTarget, thisArg, args) => {\n      return (0,_utils_edgeWrapperUtils_js__WEBPACK_IMPORTED_MODULE_0__.withEdgeWrapping)(wrappingTarget, {\n        spanDescription: 'middleware',\n        spanOp: 'middleware.nextjs',\n        mechanismFunctionName: 'withSentryMiddleware',\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapMiddlewareWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwTWlkZGxld2FyZVdpdGhTZW50cnkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0Q7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDRFQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vd3JhcE1pZGRsZXdhcmVXaXRoU2VudHJ5LmpzPzJmMjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2l0aEVkZ2VXcmFwcGluZyB9IGZyb20gJy4vdXRpbHMvZWRnZVdyYXBwZXJVdGlscy5qcyc7XG5cbi8qKlxuICogV3JhcHMgTmV4dC5qcyBtaWRkbGV3YXJlIHdpdGggU2VudHJ5IGVycm9yIGFuZCBwZXJmb3JtYW5jZSBpbnN0cnVtZW50YXRpb24uXG4gKlxuICogQHBhcmFtIG1pZGRsZXdhcmUgVGhlIG1pZGRsZXdhcmUgaGFuZGxlci5cbiAqIEByZXR1cm5zIGEgd3JhcHBlZCBtaWRkbGV3YXJlIGhhbmRsZXIuXG4gKi9cbmZ1bmN0aW9uIHdyYXBNaWRkbGV3YXJlV2l0aFNlbnRyeShcbiAgbWlkZGxld2FyZSxcbikge1xuICByZXR1cm4gbmV3IFByb3h5KG1pZGRsZXdhcmUsIHtcbiAgICBhcHBseTogKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICByZXR1cm4gd2l0aEVkZ2VXcmFwcGluZyh3cmFwcGluZ1RhcmdldCwge1xuICAgICAgICBzcGFuRGVzY3JpcHRpb246ICdtaWRkbGV3YXJlJyxcbiAgICAgICAgc3Bhbk9wOiAnbWlkZGxld2FyZS5uZXh0anMnLFxuICAgICAgICBtZWNoYW5pc21GdW5jdGlvbk5hbWU6ICd3aXRoU2VudHJ5TWlkZGxld2FyZScsXG4gICAgICB9KS5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICB9LFxuICB9KTtcbn1cblxuZXhwb3J0IHsgd3JhcE1pZGRsZXdhcmVXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwTWlkZGxld2FyZVdpdGhTZW50cnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapMiddlewareWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapPageComponentWithSentry.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapPageComponentWithSentry.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapPageComponentWithSentry\": function() { return /* binding */ wrapPageComponentWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/tracingUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js\");\n\n\n\n\n\nfunction isReactClassComponent(target) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return typeof target === 'function' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([target, 'optionalAccess', _ => _.prototype, 'optionalAccess', _2 => _2.isReactComponent]);\n}\n\n/**\n * Wraps a page component with Sentry error instrumentation.\n */\nfunction wrapPageComponentWithSentry(pageComponent) {\n  if (isReactClassComponent(pageComponent)) {\n    return class SentryWrappedPageComponent extends pageComponent {\n       render(...args) {\n        return (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_1__.escapeNextjsTracing)(() => {\n          return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.withIsolationScope)(() => {\n            const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)();\n            // We extract the sentry trace data that is put in the component props by datafetcher wrappers\n            const sentryTraceData =\n              typeof this.props === 'object' &&\n              this.props !== null &&\n              '_sentryTraceData' in this.props &&\n              typeof this.props._sentryTraceData === 'string'\n                ? this.props._sentryTraceData\n                : undefined;\n\n            if (sentryTraceData) {\n              const traceparentData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.extractTraceparentData)(sentryTraceData);\n              scope.setContext('trace', {\n                span_id: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([traceparentData, 'optionalAccess', _3 => _3.parentSpanId]),\n                trace_id: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([traceparentData, 'optionalAccess', _4 => _4.traceId]),\n              });\n            }\n\n            try {\n              return super.render(...args);\n            } catch (e) {\n              (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(e, {\n                mechanism: {\n                  handled: false,\n                },\n              });\n              throw e;\n            }\n          });\n        });\n      }\n    };\n  } else if (typeof pageComponent === 'function') {\n    return new Proxy(pageComponent, {\n      apply(target, thisArg, argArray) {\n        return (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_1__.escapeNextjsTracing)(() => {\n          return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.withIsolationScope)(() => {\n            const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)();\n            // We extract the sentry trace data that is put in the component props by datafetcher wrappers\n            const sentryTraceData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([argArray, 'optionalAccess', _5 => _5[0], 'optionalAccess', _6 => _6._sentryTraceData]);\n\n            if (sentryTraceData) {\n              const traceparentData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.extractTraceparentData)(sentryTraceData);\n              scope.setContext('trace', {\n                span_id: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([traceparentData, 'optionalAccess', _7 => _7.parentSpanId]),\n                trace_id: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([traceparentData, 'optionalAccess', _8 => _8.traceId]),\n              });\n            }\n\n            try {\n              return target.apply(thisArg, argArray);\n            } catch (e) {\n              (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(e, {\n                mechanism: {\n                  handled: false,\n                },\n              });\n              throw e;\n            }\n          });\n        });\n      },\n    });\n  } else {\n    return pageComponent;\n  }\n}\n\n\n//# sourceMappingURL=wrapPageComponentWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwUGFnZUNvbXBvbmVudFdpdGhTZW50cnkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQztBQUNzQztBQUM5QjtBQUNPOztBQUU5RDtBQUNBO0FBQ0EseUNBQXlDLDZEQUFjO0FBQ3ZEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwyRUFBbUI7QUFDbEMsaUJBQWlCLGdFQUFrQjtBQUNuQywwQkFBMEIsNkRBQWU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNDQUFzQyxxRUFBc0I7QUFDNUQ7QUFDQSx5QkFBeUIsNkRBQWM7QUFDdkMsMEJBQTBCLDZEQUFjO0FBQ3hDLGVBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGNBQWMsOERBQWdCO0FBQzlCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsZUFBZTtBQUNmO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLGVBQWUsMkVBQW1CO0FBQ2xDLGlCQUFpQixnRUFBa0I7QUFDbkMsMEJBQTBCLDZEQUFlO0FBQ3pDO0FBQ0Esb0NBQW9DLDZEQUFjOztBQUVsRDtBQUNBLHNDQUFzQyxxRUFBc0I7QUFDNUQ7QUFDQSx5QkFBeUIsNkRBQWM7QUFDdkMsMEJBQTBCLDZEQUFjO0FBQ3hDLGVBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0EsY0FBYztBQUNkLGNBQWMsOERBQWdCO0FBQzlCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsZUFBZTtBQUNmO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFdUM7QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vd3JhcFBhZ2VDb21wb25lbnRXaXRoU2VudHJ5LmpzPzI5ZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IHdpdGhJc29sYXRpb25TY29wZSwgZ2V0Q3VycmVudFNjb3BlLCBjYXB0dXJlRXhjZXB0aW9uIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGV4dHJhY3RUcmFjZXBhcmVudERhdGEgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGVzY2FwZU5leHRqc1RyYWNpbmcgfSBmcm9tICcuL3V0aWxzL3RyYWNpbmdVdGlscy5qcyc7XG5cbmZ1bmN0aW9uIGlzUmVhY3RDbGFzc0NvbXBvbmVudCh0YXJnZXQpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICByZXR1cm4gdHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJyAmJiBfb3B0aW9uYWxDaGFpbihbdGFyZ2V0LCAnb3B0aW9uYWxBY2Nlc3MnLCBfID0+IF8ucHJvdG90eXBlLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMiA9PiBfMi5pc1JlYWN0Q29tcG9uZW50XSk7XG59XG5cbi8qKlxuICogV3JhcHMgYSBwYWdlIGNvbXBvbmVudCB3aXRoIFNlbnRyeSBlcnJvciBpbnN0cnVtZW50YXRpb24uXG4gKi9cbmZ1bmN0aW9uIHdyYXBQYWdlQ29tcG9uZW50V2l0aFNlbnRyeShwYWdlQ29tcG9uZW50KSB7XG4gIGlmIChpc1JlYWN0Q2xhc3NDb21wb25lbnQocGFnZUNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gY2xhc3MgU2VudHJ5V3JhcHBlZFBhZ2VDb21wb25lbnQgZXh0ZW5kcyBwYWdlQ29tcG9uZW50IHtcbiAgICAgICByZW5kZXIoLi4uYXJncykge1xuICAgICAgICByZXR1cm4gZXNjYXBlTmV4dGpzVHJhY2luZygoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHdpdGhJc29sYXRpb25TY29wZSgoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRTY29wZSgpO1xuICAgICAgICAgICAgLy8gV2UgZXh0cmFjdCB0aGUgc2VudHJ5IHRyYWNlIGRhdGEgdGhhdCBpcyBwdXQgaW4gdGhlIGNvbXBvbmVudCBwcm9wcyBieSBkYXRhZmV0Y2hlciB3cmFwcGVyc1xuICAgICAgICAgICAgY29uc3Qgc2VudHJ5VHJhY2VEYXRhID1cbiAgICAgICAgICAgICAgdHlwZW9mIHRoaXMucHJvcHMgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAgIHRoaXMucHJvcHMgIT09IG51bGwgJiZcbiAgICAgICAgICAgICAgJ19zZW50cnlUcmFjZURhdGEnIGluIHRoaXMucHJvcHMgJiZcbiAgICAgICAgICAgICAgdHlwZW9mIHRoaXMucHJvcHMuX3NlbnRyeVRyYWNlRGF0YSA9PT0gJ3N0cmluZydcbiAgICAgICAgICAgICAgICA/IHRoaXMucHJvcHMuX3NlbnRyeVRyYWNlRGF0YVxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgICAgICAgICBpZiAoc2VudHJ5VHJhY2VEYXRhKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHRyYWNlcGFyZW50RGF0YSA9IGV4dHJhY3RUcmFjZXBhcmVudERhdGEoc2VudHJ5VHJhY2VEYXRhKTtcbiAgICAgICAgICAgICAgc2NvcGUuc2V0Q29udGV4dCgndHJhY2UnLCB7XG4gICAgICAgICAgICAgICAgc3Bhbl9pZDogX29wdGlvbmFsQ2hhaW4oW3RyYWNlcGFyZW50RGF0YSwgJ29wdGlvbmFsQWNjZXNzJywgXzMgPT4gXzMucGFyZW50U3BhbklkXSksXG4gICAgICAgICAgICAgICAgdHJhY2VfaWQ6IF9vcHRpb25hbENoYWluKFt0cmFjZXBhcmVudERhdGEsICdvcHRpb25hbEFjY2VzcycsIF80ID0+IF80LnRyYWNlSWRdKSxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHJldHVybiBzdXBlci5yZW5kZXIoLi4uYXJncyk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgIGNhcHR1cmVFeGNlcHRpb24oZSwge1xuICAgICAgICAgICAgICAgIG1lY2hhbmlzbToge1xuICAgICAgICAgICAgICAgICAgaGFuZGxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH0gZWxzZSBpZiAodHlwZW9mIHBhZ2VDb21wb25lbnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gbmV3IFByb3h5KHBhZ2VDb21wb25lbnQsIHtcbiAgICAgIGFwcGx5KHRhcmdldCwgdGhpc0FyZywgYXJnQXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIGVzY2FwZU5leHRqc1RyYWNpbmcoKCkgPT4ge1xuICAgICAgICAgIHJldHVybiB3aXRoSXNvbGF0aW9uU2NvcGUoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc2NvcGUgPSBnZXRDdXJyZW50U2NvcGUoKTtcbiAgICAgICAgICAgIC8vIFdlIGV4dHJhY3QgdGhlIHNlbnRyeSB0cmFjZSBkYXRhIHRoYXQgaXMgcHV0IGluIHRoZSBjb21wb25lbnQgcHJvcHMgYnkgZGF0YWZldGNoZXIgd3JhcHBlcnNcbiAgICAgICAgICAgIGNvbnN0IHNlbnRyeVRyYWNlRGF0YSA9IF9vcHRpb25hbENoYWluKFthcmdBcnJheSwgJ29wdGlvbmFsQWNjZXNzJywgXzUgPT4gXzVbMF0sICdvcHRpb25hbEFjY2VzcycsIF82ID0+IF82Ll9zZW50cnlUcmFjZURhdGFdKTtcblxuICAgICAgICAgICAgaWYgKHNlbnRyeVRyYWNlRGF0YSkge1xuICAgICAgICAgICAgICBjb25zdCB0cmFjZXBhcmVudERhdGEgPSBleHRyYWN0VHJhY2VwYXJlbnREYXRhKHNlbnRyeVRyYWNlRGF0YSk7XG4gICAgICAgICAgICAgIHNjb3BlLnNldENvbnRleHQoJ3RyYWNlJywge1xuICAgICAgICAgICAgICAgIHNwYW5faWQ6IF9vcHRpb25hbENoYWluKFt0cmFjZXBhcmVudERhdGEsICdvcHRpb25hbEFjY2VzcycsIF83ID0+IF83LnBhcmVudFNwYW5JZF0pLFxuICAgICAgICAgICAgICAgIHRyYWNlX2lkOiBfb3B0aW9uYWxDaGFpbihbdHJhY2VwYXJlbnREYXRhLCAnb3B0aW9uYWxBY2Nlc3MnLCBfOCA9PiBfOC50cmFjZUlkXSksXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0LmFwcGx5KHRoaXNBcmcsIGFyZ0FycmF5KTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlLCB7XG4gICAgICAgICAgICAgICAgbWVjaGFuaXNtOiB7XG4gICAgICAgICAgICAgICAgICBoYW5kbGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBwYWdlQ29tcG9uZW50O1xuICB9XG59XG5cbmV4cG9ydCB7IHdyYXBQYWdlQ29tcG9uZW50V2l0aFNlbnRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcFBhZ2VDb21wb25lbnRXaXRoU2VudHJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapPageComponentWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapRouteHandlerWithSentry.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapRouteHandlerWithSentry.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapRouteHandlerWithSentry\": function() { return /* binding */ wrapRouteHandlerWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nextNavigationErrorUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\");\n/* harmony import */ var _utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/responseEnd.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n/* harmony import */ var _utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/tracingUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js\");\n/* harmony import */ var _utils_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/vercelWaitUntil.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/vercelWaitUntil.js\");\n\n\n\n\n\n\n\n/**\n * Wraps a Next.js route handler with performance and error instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapRouteHandlerWithSentry(\n  routeHandler,\n  context,\n) {\n  const { method, parameterizedRoute, headers } = context;\n\n  return new Proxy(routeHandler, {\n    apply: (originalFunction, thisArg, args) => {\n      return (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_0__.escapeNextjsTracing)(() => {\n        const isolationScope = (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_0__.commonObjectToIsolationScope)(headers);\n\n        const completeHeadersDict = headers ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.winterCGHeadersToDict)(headers) : {};\n\n        isolationScope.setSDKProcessingMetadata({\n          request: {\n            headers: completeHeadersDict,\n          },\n        });\n\n        const incomingPropagationContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.propagationContextFromHeaders)(\n          completeHeadersDict['sentry-trace'],\n          completeHeadersDict['baggage'],\n        );\n\n        const propagationContext = (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_0__.commonObjectToPropagationContext)(headers, incomingPropagationContext);\n\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.withIsolationScope)(isolationScope, () => {\n          return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.withScope)(async scope => {\n            scope.setTransactionName(`${method} ${parameterizedRoute}`);\n            scope.setPropagationContext(propagationContext);\n            try {\n              return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.startSpan)(\n                {\n                  name: `${method} ${parameterizedRoute}`,\n                  attributes: {\n                    [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n                    [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.server',\n                    [_sentry_core__WEBPACK_IMPORTED_MODULE_2__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n                  },\n                  forceTransaction: true,\n                },\n                async span => {\n                  const response = await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.handleCallbackErrors)(\n                    () => originalFunction.apply(thisArg, args),\n                    error => {\n                      // Next.js throws errors when calling `redirect()`. We don't wanna report these.\n                      if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_3__.isRedirectNavigationError)(error)) {\n                        // Don't do anything\n                      } else if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_3__.isNotFoundNavigationError)(error) && span) {\n                        span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_2__.SPAN_STATUS_ERROR, message: 'not_found' });\n                      } else {\n                        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(error, {\n                          mechanism: {\n                            handled: false,\n                          },\n                        });\n                      }\n                    },\n                  );\n\n                  try {\n                    if (span && response.status) {\n                      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.setHttpStatus)(span, response.status);\n                    }\n                  } catch (e) {\n                    // best effort - response may be undefined?\n                  }\n\n                  return response;\n                },\n              );\n            } finally {\n              (0,_utils_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_4__.vercelWaitUntil)((0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_5__.flushSafelyWithTimeout)());\n            }\n          });\n        });\n      });\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapRouteHandlerWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwUm91dGVIYW5kbGVyV2l0aFNlbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW9QO0FBQy9KO0FBQ2dCO0FBQ3JDO0FBQzhEO0FBQ2pFOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxzQ0FBc0M7O0FBRWhEO0FBQ0E7QUFDQSxhQUFhLDJFQUFtQjtBQUNoQywrQkFBK0Isb0ZBQTRCOztBQUUzRCw4Q0FBOEMsb0VBQXFCOztBQUVuRTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUzs7QUFFVCwyQ0FBMkMsNEVBQTZCO0FBQ3hFO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsd0ZBQWdDOztBQUVuRSxlQUFlLGdFQUFrQjtBQUNqQyxpQkFBaUIsdURBQVM7QUFDMUIsd0NBQXdDLFFBQVEsRUFBRSxtQkFBbUI7QUFDckU7QUFDQTtBQUNBLHFCQUFxQix1REFBUztBQUM5QjtBQUNBLDJCQUEyQixRQUFRLEVBQUUsbUJBQW1CO0FBQ3hEO0FBQ0EscUJBQXFCLDBFQUFnQztBQUNyRCxxQkFBcUIsc0VBQTRCO0FBQ2pELHFCQUFxQiwwRUFBZ0M7QUFDckQsbUJBQW1CO0FBQ25CO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EseUNBQXlDLGtFQUFvQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsdUZBQXlCO0FBQ25EO0FBQ0Esd0JBQXdCLFNBQVMsdUZBQXlCO0FBQzFELHlDQUF5QyxNQUFNLDJEQUFpQix3QkFBd0I7QUFDeEYsd0JBQXdCO0FBQ3hCLHdCQUF3Qiw4REFBZ0I7QUFDeEM7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQix5QkFBeUI7QUFDekI7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBLHNCQUFzQiwyREFBYTtBQUNuQztBQUNBLG9CQUFvQjtBQUNwQjtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsY0FBYztBQUNkLGNBQWMsMEVBQWUsQ0FBQyw2RUFBc0I7QUFDcEQ7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVzQztBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwUm91dGVIYW5kbGVyV2l0aFNlbnRyeS5qcz9iZGM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhJc29sYXRpb25TY29wZSwgd2l0aFNjb3BlLCBzdGFydFNwYW4sIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09QLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTiwgaGFuZGxlQ2FsbGJhY2tFcnJvcnMsIFNQQU5fU1RBVFVTX0VSUk9SLCBjYXB0dXJlRXhjZXB0aW9uLCBzZXRIdHRwU3RhdHVzIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IHdpbnRlckNHSGVhZGVyc1RvRGljdCwgcHJvcGFnYXRpb25Db250ZXh0RnJvbUhlYWRlcnMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGlzUmVkaXJlY3ROYXZpZ2F0aW9uRXJyb3IsIGlzTm90Rm91bmROYXZpZ2F0aW9uRXJyb3IgfSBmcm9tICcuL25leHROYXZpZ2F0aW9uRXJyb3JVdGlscy5qcyc7XG5pbXBvcnQgeyBmbHVzaFNhZmVseVdpdGhUaW1lb3V0IH0gZnJvbSAnLi91dGlscy9yZXNwb25zZUVuZC5qcyc7XG5pbXBvcnQgeyBlc2NhcGVOZXh0anNUcmFjaW5nLCBjb21tb25PYmplY3RUb0lzb2xhdGlvblNjb3BlLCBjb21tb25PYmplY3RUb1Byb3BhZ2F0aW9uQ29udGV4dCB9IGZyb20gJy4vdXRpbHMvdHJhY2luZ1V0aWxzLmpzJztcbmltcG9ydCB7IHZlcmNlbFdhaXRVbnRpbCB9IGZyb20gJy4vdXRpbHMvdmVyY2VsV2FpdFVudGlsLmpzJztcblxuLyoqXG4gKiBXcmFwcyBhIE5leHQuanMgcm91dGUgaGFuZGxlciB3aXRoIHBlcmZvcm1hbmNlIGFuZCBlcnJvciBpbnN0cnVtZW50YXRpb24uXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiB3cmFwUm91dGVIYW5kbGVyV2l0aFNlbnRyeShcbiAgcm91dGVIYW5kbGVyLFxuICBjb250ZXh0LFxuKSB7XG4gIGNvbnN0IHsgbWV0aG9kLCBwYXJhbWV0ZXJpemVkUm91dGUsIGhlYWRlcnMgfSA9IGNvbnRleHQ7XG5cbiAgcmV0dXJuIG5ldyBQcm94eShyb3V0ZUhhbmRsZXIsIHtcbiAgICBhcHBseTogKG9yaWdpbmFsRnVuY3Rpb24sIHRoaXNBcmcsIGFyZ3MpID0+IHtcbiAgICAgIHJldHVybiBlc2NhcGVOZXh0anNUcmFjaW5nKCgpID0+IHtcbiAgICAgICAgY29uc3QgaXNvbGF0aW9uU2NvcGUgPSBjb21tb25PYmplY3RUb0lzb2xhdGlvblNjb3BlKGhlYWRlcnMpO1xuXG4gICAgICAgIGNvbnN0IGNvbXBsZXRlSGVhZGVyc0RpY3QgPSBoZWFkZXJzID8gd2ludGVyQ0dIZWFkZXJzVG9EaWN0KGhlYWRlcnMpIDoge307XG5cbiAgICAgICAgaXNvbGF0aW9uU2NvcGUuc2V0U0RLUHJvY2Vzc2luZ01ldGFkYXRhKHtcbiAgICAgICAgICByZXF1ZXN0OiB7XG4gICAgICAgICAgICBoZWFkZXJzOiBjb21wbGV0ZUhlYWRlcnNEaWN0LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IGluY29taW5nUHJvcGFnYXRpb25Db250ZXh0ID0gcHJvcGFnYXRpb25Db250ZXh0RnJvbUhlYWRlcnMoXG4gICAgICAgICAgY29tcGxldGVIZWFkZXJzRGljdFsnc2VudHJ5LXRyYWNlJ10sXG4gICAgICAgICAgY29tcGxldGVIZWFkZXJzRGljdFsnYmFnZ2FnZSddLFxuICAgICAgICApO1xuXG4gICAgICAgIGNvbnN0IHByb3BhZ2F0aW9uQ29udGV4dCA9IGNvbW1vbk9iamVjdFRvUHJvcGFnYXRpb25Db250ZXh0KGhlYWRlcnMsIGluY29taW5nUHJvcGFnYXRpb25Db250ZXh0KTtcblxuICAgICAgICByZXR1cm4gd2l0aElzb2xhdGlvblNjb3BlKGlzb2xhdGlvblNjb3BlLCAoKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHdpdGhTY29wZShhc3luYyBzY29wZSA9PiB7XG4gICAgICAgICAgICBzY29wZS5zZXRUcmFuc2FjdGlvbk5hbWUoYCR7bWV0aG9kfSAke3BhcmFtZXRlcml6ZWRSb3V0ZX1gKTtcbiAgICAgICAgICAgIHNjb3BlLnNldFByb3BhZ2F0aW9uQ29udGV4dChwcm9wYWdhdGlvbkNvbnRleHQpO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgcmV0dXJuIHN0YXJ0U3BhbihcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiBgJHttZXRob2R9ICR7cGFyYW1ldGVyaXplZFJvdXRlfWAsXG4gICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX1NPVVJDRV06ICdyb3V0ZScsXG4gICAgICAgICAgICAgICAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09QXTogJ2h0dHAuc2VydmVyJyxcbiAgICAgICAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOXTogJ2F1dG8uZnVuY3Rpb24ubmV4dGpzJyxcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBmb3JjZVRyYW5zYWN0aW9uOiB0cnVlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYXN5bmMgc3BhbiA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGhhbmRsZUNhbGxiYWNrRXJyb3JzKFxuICAgICAgICAgICAgICAgICAgICAoKSA9PiBvcmlnaW5hbEZ1bmN0aW9uLmFwcGx5KHRoaXNBcmcsIGFyZ3MpLFxuICAgICAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gTmV4dC5qcyB0aHJvd3MgZXJyb3JzIHdoZW4gY2FsbGluZyBgcmVkaXJlY3QoKWAuIFdlIGRvbid0IHdhbm5hIHJlcG9ydCB0aGVzZS5cbiAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNSZWRpcmVjdE5hdmlnYXRpb25FcnJvcihlcnJvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIERvbid0IGRvIGFueXRoaW5nXG4gICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpc05vdEZvdW5kTmF2aWdhdGlvbkVycm9yKGVycm9yKSAmJiBzcGFuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcGFuLnNldFN0YXR1cyh7IGNvZGU6IFNQQU5fU1RBVFVTX0VSUk9SLCBtZXNzYWdlOiAnbm90X2ZvdW5kJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlcnJvciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBtZWNoYW5pc206IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzcGFuICYmIHJlc3BvbnNlLnN0YXR1cykge1xuICAgICAgICAgICAgICAgICAgICAgIHNldEh0dHBTdGF0dXMoc3BhbiwgcmVzcG9uc2Uuc3RhdHVzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBiZXN0IGVmZm9ydCAtIHJlc3BvbnNlIG1heSBiZSB1bmRlZmluZWQ/XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgdmVyY2VsV2FpdFVudGlsKGZsdXNoU2FmZWx5V2l0aFRpbWVvdXQoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCB7IHdyYXBSb3V0ZUhhbmRsZXJXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwUm91dGVIYW5kbGVyV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapRouteHandlerWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/wrapServerComponentWithSentry.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/wrapServerComponentWithSentry.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"wrapServerComponentWithSentry\": function() { return /* binding */ wrapServerComponentWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nextNavigationErrorUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/nextNavigationErrorUtils.js\");\n/* harmony import */ var _utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/responseEnd.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/responseEnd.js\");\n/* harmony import */ var _utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/tracingUtils.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/tracingUtils.js\");\n/* harmony import */ var _utils_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/vercelWaitUntil.js */ \"./node_modules/@sentry/nextjs/esm/common/utils/vercelWaitUntil.js\");\n\n\n\n\n\n\n\n\n/**\n * Wraps an `app` directory server component with Sentry error instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrapServerComponentWithSentry(\n  appDirComponent,\n  context,\n) {\n  const { componentRoute, componentType } = context;\n  // Even though users may define server components as async functions, for the client bundles\n  // Next.js will turn them into synchronous functions and it will transform any `await`s into instances of the `use`\n  // hook. 🤯\n  return new Proxy(appDirComponent, {\n    apply: (originalFunction, thisArg, args) => {\n      const requestTraceId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getActiveSpan, 'call', _ => _(), 'optionalAccess', _2 => _2.spanContext, 'call', _3 => _3(), 'access', _4 => _4.traceId]);\n      return (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_2__.escapeNextjsTracing)(() => {\n        const isolationScope = (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_2__.commonObjectToIsolationScope)(context.headers);\n\n        const headersDict = context.headers ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.winterCGHeadersToDict)(context.headers) : undefined;\n\n        isolationScope.setSDKProcessingMetadata({\n          request: {\n            headers: headersDict,\n          },\n        });\n\n        return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withIsolationScope)(isolationScope, () => {\n          return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withScope)(scope => {\n            scope.setTransactionName(`${componentType} Server Component (${componentRoute})`);\n\n            const propagationContext = (0,_utils_tracingUtils_js__WEBPACK_IMPORTED_MODULE_2__.commonObjectToPropagationContext)(\n              context.headers,\n              (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([headersDict, 'optionalAccess', _5 => _5['sentry-trace']])\n                ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.propagationContextFromHeaders)(headersDict['sentry-trace'], headersDict['baggage'])\n                : {\n                    traceId: requestTraceId || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n                    spanId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16),\n                  },\n            );\n\n            scope.setPropagationContext(propagationContext);\n            return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.startSpanManual)(\n              {\n                op: 'function.nextjs',\n                name: `${componentType} Server Component (${componentRoute})`,\n                forceTransaction: true,\n                attributes: {\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'component',\n                  [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n                },\n              },\n              span => {\n                return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.handleCallbackErrors)(\n                  () => originalFunction.apply(thisArg, args),\n                  error => {\n                    if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_3__.isNotFoundNavigationError)(error)) {\n                      // We don't want to report \"not-found\"s\n                      span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_ERROR, message: 'not_found' });\n                    } else if ((0,_nextNavigationErrorUtils_js__WEBPACK_IMPORTED_MODULE_3__.isRedirectNavigationError)(error)) {\n                      // We don't want to report redirects\n                      span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_OK });\n                    } else {\n                      span.setStatus({ code: _sentry_core__WEBPACK_IMPORTED_MODULE_1__.SPAN_STATUS_ERROR, message: 'internal_error' });\n                      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(error, {\n                        mechanism: {\n                          handled: false,\n                        },\n                      });\n                    }\n                  },\n                  () => {\n                    span.end();\n                    (0,_utils_vercelWaitUntil_js__WEBPACK_IMPORTED_MODULE_4__.vercelWaitUntil)((0,_utils_responseEnd_js__WEBPACK_IMPORTED_MODULE_5__.flushSafelyWithTimeout)());\n                  },\n                );\n              },\n            );\n          });\n        });\n      });\n    },\n  });\n}\n\n\n//# sourceMappingURL=wrapServerComponentWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi93cmFwU2VydmVyQ29tcG9uZW50V2l0aFNlbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQStDO0FBQzZMO0FBQ2hKO0FBQ1M7QUFDckM7QUFDOEQ7QUFDakU7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGdDQUFnQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDZEQUFjLEVBQUUsdURBQWE7QUFDMUQsYUFBYSwyRUFBbUI7QUFDaEMsK0JBQStCLG9GQUE0Qjs7QUFFM0QsOENBQThDLG9FQUFxQjs7QUFFbkU7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7O0FBRVQsZUFBZSxnRUFBa0I7QUFDakMsaUJBQWlCLHVEQUFTO0FBQzFCLHdDQUF3QyxlQUFlLG9CQUFvQixlQUFlOztBQUUxRix1Q0FBdUMsd0ZBQWdDO0FBQ3ZFO0FBQ0EsY0FBYyw2REFBYztBQUM1QixrQkFBa0IsNEVBQTZCO0FBQy9DO0FBQ0EsK0NBQStDLG9EQUFLO0FBQ3BELDRCQUE0QixvREFBSztBQUNqQyxtQkFBbUI7QUFDbkI7O0FBRUE7QUFDQSxtQkFBbUIsNkRBQWU7QUFDbEM7QUFDQTtBQUNBLHlCQUF5QixlQUFlLG9CQUFvQixlQUFlO0FBQzNFO0FBQ0E7QUFDQSxtQkFBbUIsMEVBQWdDO0FBQ25ELG1CQUFtQiwwRUFBZ0M7QUFDbkQsaUJBQWlCO0FBQ2pCLGVBQWU7QUFDZjtBQUNBLHVCQUF1QixrRUFBb0I7QUFDM0M7QUFDQTtBQUNBLHdCQUF3Qix1RkFBeUI7QUFDakQ7QUFDQSx1Q0FBdUMsTUFBTSwyREFBaUIsd0JBQXdCO0FBQ3RGLHNCQUFzQixTQUFTLHVGQUF5QjtBQUN4RDtBQUNBLHVDQUF1QyxNQUFNLHdEQUFjLEVBQUU7QUFDN0Qsc0JBQXNCO0FBQ3RCLHVDQUF1QyxNQUFNLDJEQUFpQiw2QkFBNkI7QUFDM0Ysc0JBQXNCLDhEQUFnQjtBQUN0QztBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLHVCQUF1QjtBQUN2QjtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0Esb0JBQW9CLDBFQUFlLENBQUMsNkVBQXNCO0FBQzFELG1CQUFtQjtBQUNuQjtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRXlDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY29tbW9uL3dyYXBTZXJ2ZXJDb21wb25lbnRXaXRoU2VudHJ5LmpzPzI2MzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEFjdGl2ZVNwYW4sIHdpdGhJc29sYXRpb25TY29wZSwgd2l0aFNjb3BlLCBzdGFydFNwYW5NYW51YWwsIFNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTiwgaGFuZGxlQ2FsbGJhY2tFcnJvcnMsIFNQQU5fU1RBVFVTX0VSUk9SLCBTUEFOX1NUQVRVU19PSywgY2FwdHVyZUV4Y2VwdGlvbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyB3aW50ZXJDR0hlYWRlcnNUb0RpY3QsIHByb3BhZ2F0aW9uQ29udGV4dEZyb21IZWFkZXJzLCB1dWlkNCB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgaXNOb3RGb3VuZE5hdmlnYXRpb25FcnJvciwgaXNSZWRpcmVjdE5hdmlnYXRpb25FcnJvciB9IGZyb20gJy4vbmV4dE5hdmlnYXRpb25FcnJvclV0aWxzLmpzJztcbmltcG9ydCB7IGZsdXNoU2FmZWx5V2l0aFRpbWVvdXQgfSBmcm9tICcuL3V0aWxzL3Jlc3BvbnNlRW5kLmpzJztcbmltcG9ydCB7IGVzY2FwZU5leHRqc1RyYWNpbmcsIGNvbW1vbk9iamVjdFRvSXNvbGF0aW9uU2NvcGUsIGNvbW1vbk9iamVjdFRvUHJvcGFnYXRpb25Db250ZXh0IH0gZnJvbSAnLi91dGlscy90cmFjaW5nVXRpbHMuanMnO1xuaW1wb3J0IHsgdmVyY2VsV2FpdFVudGlsIH0gZnJvbSAnLi91dGlscy92ZXJjZWxXYWl0VW50aWwuanMnO1xuXG4vKipcbiAqIFdyYXBzIGFuIGBhcHBgIGRpcmVjdG9yeSBzZXJ2ZXIgY29tcG9uZW50IHdpdGggU2VudHJ5IGVycm9yIGluc3RydW1lbnRhdGlvbi5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmZ1bmN0aW9uIHdyYXBTZXJ2ZXJDb21wb25lbnRXaXRoU2VudHJ5KFxuICBhcHBEaXJDb21wb25lbnQsXG4gIGNvbnRleHQsXG4pIHtcbiAgY29uc3QgeyBjb21wb25lbnRSb3V0ZSwgY29tcG9uZW50VHlwZSB9ID0gY29udGV4dDtcbiAgLy8gRXZlbiB0aG91Z2ggdXNlcnMgbWF5IGRlZmluZSBzZXJ2ZXIgY29tcG9uZW50cyBhcyBhc3luYyBmdW5jdGlvbnMsIGZvciB0aGUgY2xpZW50IGJ1bmRsZXNcbiAgLy8gTmV4dC5qcyB3aWxsIHR1cm4gdGhlbSBpbnRvIHN5bmNocm9ub3VzIGZ1bmN0aW9ucyBhbmQgaXQgd2lsbCB0cmFuc2Zvcm0gYW55IGBhd2FpdGBzIGludG8gaW5zdGFuY2VzIG9mIHRoZSBgdXNlYFxuICAvLyBob29rLiDwn6SvXG4gIHJldHVybiBuZXcgUHJveHkoYXBwRGlyQ29tcG9uZW50LCB7XG4gICAgYXBwbHk6IChvcmlnaW5hbEZ1bmN0aW9uLCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICBjb25zdCByZXF1ZXN0VHJhY2VJZCA9IF9vcHRpb25hbENoYWluKFtnZXRBY3RpdmVTcGFuLCAnY2FsbCcsIF8gPT4gXygpLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMiA9PiBfMi5zcGFuQ29udGV4dCwgJ2NhbGwnLCBfMyA9PiBfMygpLCAnYWNjZXNzJywgXzQgPT4gXzQudHJhY2VJZF0pO1xuICAgICAgcmV0dXJuIGVzY2FwZU5leHRqc1RyYWNpbmcoKCkgPT4ge1xuICAgICAgICBjb25zdCBpc29sYXRpb25TY29wZSA9IGNvbW1vbk9iamVjdFRvSXNvbGF0aW9uU2NvcGUoY29udGV4dC5oZWFkZXJzKTtcblxuICAgICAgICBjb25zdCBoZWFkZXJzRGljdCA9IGNvbnRleHQuaGVhZGVycyA/IHdpbnRlckNHSGVhZGVyc1RvRGljdChjb250ZXh0LmhlYWRlcnMpIDogdW5kZWZpbmVkO1xuXG4gICAgICAgIGlzb2xhdGlvblNjb3BlLnNldFNES1Byb2Nlc3NpbmdNZXRhZGF0YSh7XG4gICAgICAgICAgcmVxdWVzdDoge1xuICAgICAgICAgICAgaGVhZGVyczogaGVhZGVyc0RpY3QsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHdpdGhJc29sYXRpb25TY29wZShpc29sYXRpb25TY29wZSwgKCkgPT4ge1xuICAgICAgICAgIHJldHVybiB3aXRoU2NvcGUoc2NvcGUgPT4ge1xuICAgICAgICAgICAgc2NvcGUuc2V0VHJhbnNhY3Rpb25OYW1lKGAke2NvbXBvbmVudFR5cGV9IFNlcnZlciBDb21wb25lbnQgKCR7Y29tcG9uZW50Um91dGV9KWApO1xuXG4gICAgICAgICAgICBjb25zdCBwcm9wYWdhdGlvbkNvbnRleHQgPSBjb21tb25PYmplY3RUb1Byb3BhZ2F0aW9uQ29udGV4dChcbiAgICAgICAgICAgICAgY29udGV4dC5oZWFkZXJzLFxuICAgICAgICAgICAgICBfb3B0aW9uYWxDaGFpbihbaGVhZGVyc0RpY3QsICdvcHRpb25hbEFjY2VzcycsIF81ID0+IF81WydzZW50cnktdHJhY2UnXV0pXG4gICAgICAgICAgICAgICAgPyBwcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyhoZWFkZXJzRGljdFsnc2VudHJ5LXRyYWNlJ10sIGhlYWRlcnNEaWN0WydiYWdnYWdlJ10pXG4gICAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICAgIHRyYWNlSWQ6IHJlcXVlc3RUcmFjZUlkIHx8IHV1aWQ0KCksXG4gICAgICAgICAgICAgICAgICAgIHNwYW5JZDogdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHNjb3BlLnNldFByb3BhZ2F0aW9uQ29udGV4dChwcm9wYWdhdGlvbkNvbnRleHQpO1xuICAgICAgICAgICAgcmV0dXJuIHN0YXJ0U3Bhbk1hbnVhbChcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9wOiAnZnVuY3Rpb24ubmV4dGpzJyxcbiAgICAgICAgICAgICAgICBuYW1lOiBgJHtjb21wb25lbnRUeXBlfSBTZXJ2ZXIgQ29tcG9uZW50ICgke2NvbXBvbmVudFJvdXRlfSlgLFxuICAgICAgICAgICAgICAgIGZvcmNlVHJhbnNhY3Rpb246IHRydWUsXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTogJ2NvbXBvbmVudCcsXG4gICAgICAgICAgICAgICAgICBbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU5dOiAnYXV0by5mdW5jdGlvbi5uZXh0anMnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHNwYW4gPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVDYWxsYmFja0Vycm9ycyhcbiAgICAgICAgICAgICAgICAgICgpID0+IG9yaWdpbmFsRnVuY3Rpb24uYXBwbHkodGhpc0FyZywgYXJncyksXG4gICAgICAgICAgICAgICAgICBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc05vdEZvdW5kTmF2aWdhdGlvbkVycm9yKGVycm9yKSkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gcmVwb3J0IFwibm90LWZvdW5kXCJzXG4gICAgICAgICAgICAgICAgICAgICAgc3Bhbi5zZXRTdGF0dXMoeyBjb2RlOiBTUEFOX1NUQVRVU19FUlJPUiwgbWVzc2FnZTogJ25vdF9mb3VuZCcgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNSZWRpcmVjdE5hdmlnYXRpb25FcnJvcihlcnJvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIHJlcG9ydCByZWRpcmVjdHNcbiAgICAgICAgICAgICAgICAgICAgICBzcGFuLnNldFN0YXR1cyh7IGNvZGU6IFNQQU5fU1RBVFVTX09LIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgIHNwYW4uc2V0U3RhdHVzKHsgY29kZTogU1BBTl9TVEFUVVNfRVJST1IsIG1lc3NhZ2U6ICdpbnRlcm5hbF9lcnJvcicgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgY2FwdHVyZUV4Y2VwdGlvbihlcnJvciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWVjaGFuaXNtOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi5lbmQoKTtcbiAgICAgICAgICAgICAgICAgICAgdmVyY2VsV2FpdFVudGlsKGZsdXNoU2FmZWx5V2l0aFRpbWVvdXQoKSk7XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG4gIH0pO1xufVxuXG5leHBvcnQgeyB3cmFwU2VydmVyQ29tcG9uZW50V2l0aFNlbnRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcFNlcnZlckNvbXBvbmVudFdpdGhTZW50cnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/wrapServerComponentWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/index.client.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/index.client.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"browserTracingIntegration\": function() { return /* reexport safe */ _client_browserTracingIntegration_js__WEBPACK_IMPORTED_MODULE_2__.browserTracingIntegration; },\n/* harmony export */   \"captureUnderscoreErrorException\": function() { return /* reexport safe */ _common_error_js__WEBPACK_IMPORTED_MODULE_1__.captureUnderscoreErrorException; },\n/* harmony export */   \"init\": function() { return /* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_0__.init; },\n/* harmony export */   \"withSentryConfig\": function() { return /* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_0__.withSentryConfig; },\n/* harmony export */   \"withServerActionInstrumentation\": function() { return /* reexport safe */ _common_withServerActionInstrumentation_js__WEBPACK_IMPORTED_MODULE_15__.withServerActionInstrumentation; },\n/* harmony export */   \"wrapApiHandlerWithSentryVercelCrons\": function() { return /* reexport safe */ _common_wrapApiHandlerWithSentryVercelCrons_js__WEBPACK_IMPORTED_MODULE_11__.wrapApiHandlerWithSentryVercelCrons; },\n/* harmony export */   \"wrapAppGetInitialPropsWithSentry\": function() { return /* reexport safe */ _common_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__.wrapAppGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapDocumentGetInitialPropsWithSentry\": function() { return /* reexport safe */ _common_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__.wrapDocumentGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapErrorGetInitialPropsWithSentry\": function() { return /* reexport safe */ _common_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__.wrapErrorGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapGenerationFunctionWithSentry\": function() { return /* reexport safe */ _common_wrapGenerationFunctionWithSentry_js__WEBPACK_IMPORTED_MODULE_14__.wrapGenerationFunctionWithSentry; },\n/* harmony export */   \"wrapGetInitialPropsWithSentry\": function() { return /* reexport safe */ _common_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__.wrapGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapGetServerSidePropsWithSentry\": function() { return /* reexport safe */ _common_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_8__.wrapGetServerSidePropsWithSentry; },\n/* harmony export */   \"wrapGetStaticPropsWithSentry\": function() { return /* reexport safe */ _common_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__.wrapGetStaticPropsWithSentry; },\n/* harmony export */   \"wrapMiddlewareWithSentry\": function() { return /* reexport safe */ _common_wrapMiddlewareWithSentry_js__WEBPACK_IMPORTED_MODULE_12__.wrapMiddlewareWithSentry; },\n/* harmony export */   \"wrapPageComponentWithSentry\": function() { return /* reexport safe */ _common_wrapPageComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_13__.wrapPageComponentWithSentry; },\n/* harmony export */   \"wrapRouteHandlerWithSentry\": function() { return /* reexport safe */ _common_wrapRouteHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_10__.wrapRouteHandlerWithSentry; },\n/* harmony export */   \"wrapServerComponentWithSentry\": function() { return /* reexport safe */ _common_wrapServerComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_9__.wrapServerComponentWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _client_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client/index.js */ \"./node_modules/@sentry/nextjs/esm/client/index.js\");\n/* harmony import */ var _common_error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/_error.js */ \"./node_modules/@sentry/nextjs/esm/common/_error.js\");\n/* harmony import */ var _client_browserTracingIntegration_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client/browserTracingIntegration.js */ \"./node_modules/@sentry/nextjs/esm/client/browserTracingIntegration.js\");\n/* harmony import */ var _common_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/wrapGetStaticPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapGetStaticPropsWithSentry.js\");\n/* harmony import */ var _common_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/wrapGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common/wrapAppGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapAppGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common/wrapDocumentGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapDocumentGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common/wrapErrorGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapErrorGetInitialPropsWithSentry.js\");\n/* harmony import */ var _common_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common/wrapGetServerSidePropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapGetServerSidePropsWithSentry.js\");\n/* harmony import */ var _common_wrapServerComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common/wrapServerComponentWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapServerComponentWithSentry.js\");\n/* harmony import */ var _common_wrapRouteHandlerWithSentry_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./common/wrapRouteHandlerWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapRouteHandlerWithSentry.js\");\n/* harmony import */ var _common_wrapApiHandlerWithSentryVercelCrons_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./common/wrapApiHandlerWithSentryVercelCrons.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapApiHandlerWithSentryVercelCrons.js\");\n/* harmony import */ var _common_wrapMiddlewareWithSentry_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./common/wrapMiddlewareWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapMiddlewareWithSentry.js\");\n/* harmony import */ var _common_wrapPageComponentWithSentry_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./common/wrapPageComponentWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapPageComponentWithSentry.js\");\n/* harmony import */ var _common_wrapGenerationFunctionWithSentry_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./common/wrapGenerationFunctionWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/common/wrapGenerationFunctionWithSentry.js\");\n/* harmony import */ var _common_withServerActionInstrumentation_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./common/withServerActionInstrumentation.js */ \"./node_modules/@sentry/nextjs/esm/common/withServerActionInstrumentation.js\");\n/* harmony import */ var _sentry_react__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry/react */ \"./node_modules/@sentry/react/esm/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _sentry_react__WEBPACK_IMPORTED_MODULE_16__) if([\"default\",\"init\",\"withSentryConfig\",\"captureUnderscoreErrorException\",\"browserTracingIntegration\",\"wrapGetStaticPropsWithSentry\",\"wrapGetInitialPropsWithSentry\",\"wrapAppGetInitialPropsWithSentry\",\"wrapDocumentGetInitialPropsWithSentry\",\"wrapErrorGetInitialPropsWithSentry\",\"wrapGetServerSidePropsWithSentry\",\"wrapServerComponentWithSentry\",\"wrapRouteHandlerWithSentry\",\"wrapApiHandlerWithSentryVercelCrons\",\"wrapMiddlewareWithSentry\",\"wrapPageComponentWithSentry\",\"wrapGenerationFunctionWithSentry\",\"withServerActionInstrumentation\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _sentry_react__WEBPACK_IMPORTED_MODULE_16__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2luZGV4LmNsaWVudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTJEO0FBQ1U7QUFDYTtBQUNNO0FBQ0U7QUFDTTtBQUNVO0FBQ047QUFDSjtBQUNOO0FBQ047QUFDa0I7QUFDdEI7QUFDTTtBQUNVO0FBQ0Y7QUFDaEU7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9pbmRleC5jbGllbnQuanM/ZThmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBpbml0LCB3aXRoU2VudHJ5Q29uZmlnIH0gZnJvbSAnLi9jbGllbnQvaW5kZXguanMnO1xuZXhwb3J0IHsgY2FwdHVyZVVuZGVyc2NvcmVFcnJvckV4Y2VwdGlvbiB9IGZyb20gJy4vY29tbW9uL19lcnJvci5qcyc7XG5leHBvcnQgeyBicm93c2VyVHJhY2luZ0ludGVncmF0aW9uIH0gZnJvbSAnLi9jbGllbnQvYnJvd3NlclRyYWNpbmdJbnRlZ3JhdGlvbi5qcyc7XG5leHBvcnQgeyB3cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5IH0gZnJvbSAnLi9jb21tb24vd3JhcEdldFN0YXRpY1Byb3BzV2l0aFNlbnRyeS5qcyc7XG5leHBvcnQgeyB3cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeSB9IGZyb20gJy4vY29tbW9uL3dyYXBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH0gZnJvbSAnLi9jb21tb24vd3JhcEFwcEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd3JhcERvY3VtZW50R2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeSB9IGZyb20gJy4vY29tbW9uL3dyYXBEb2N1bWVudEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd3JhcEVycm9yR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeSB9IGZyb20gJy4vY29tbW9uL3dyYXBFcnJvckdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd3JhcEdldFNlcnZlclNpZGVQcm9wc1dpdGhTZW50cnkgfSBmcm9tICcuL2NvbW1vbi93cmFwR2V0U2VydmVyU2lkZVByb3BzV2l0aFNlbnRyeS5qcyc7XG5leHBvcnQgeyB3cmFwU2VydmVyQ29tcG9uZW50V2l0aFNlbnRyeSB9IGZyb20gJy4vY29tbW9uL3dyYXBTZXJ2ZXJDb21wb25lbnRXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdyYXBSb3V0ZUhhbmRsZXJXaXRoU2VudHJ5IH0gZnJvbSAnLi9jb21tb24vd3JhcFJvdXRlSGFuZGxlcldpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd3JhcEFwaUhhbmRsZXJXaXRoU2VudHJ5VmVyY2VsQ3JvbnMgfSBmcm9tICcuL2NvbW1vbi93cmFwQXBpSGFuZGxlcldpdGhTZW50cnlWZXJjZWxDcm9ucy5qcyc7XG5leHBvcnQgeyB3cmFwTWlkZGxld2FyZVdpdGhTZW50cnkgfSBmcm9tICcuL2NvbW1vbi93cmFwTWlkZGxld2FyZVdpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd3JhcFBhZ2VDb21wb25lbnRXaXRoU2VudHJ5IH0gZnJvbSAnLi9jb21tb24vd3JhcFBhZ2VDb21wb25lbnRXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdyYXBHZW5lcmF0aW9uRnVuY3Rpb25XaXRoU2VudHJ5IH0gZnJvbSAnLi9jb21tb24vd3JhcEdlbmVyYXRpb25GdW5jdGlvbldpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd2l0aFNlcnZlckFjdGlvbkluc3RydW1lbnRhdGlvbiB9IGZyb20gJy4vY29tbW9uL3dpdGhTZXJ2ZXJBY3Rpb25JbnN0cnVtZW50YXRpb24uanMnO1xuZXhwb3J0ICogZnJvbSAnQHNlbnRyeS9yZWFjdCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5jbGllbnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/index.client.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/constants.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/react/esm/constants.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"REACT_MOUNT_OP\": function() { return /* binding */ REACT_MOUNT_OP; },\n/* harmony export */   \"REACT_RENDER_OP\": function() { return /* binding */ REACT_RENDER_OP; },\n/* harmony export */   \"REACT_UPDATE_OP\": function() { return /* binding */ REACT_UPDATE_OP; }\n/* harmony export */ });\nconst REACT_RENDER_OP = 'ui.react.render';\n\nconst REACT_UPDATE_OP = 'ui.react.update';\n\nconst REACT_MOUNT_OP = 'ui.react.mount';\n\n\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vY29uc3RhbnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUVBOztBQUVBOztBQUU0RDtBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vY29uc3RhbnRzLmpzP2FhNDciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUkVBQ1RfUkVOREVSX09QID0gJ3VpLnJlYWN0LnJlbmRlcic7XG5cbmNvbnN0IFJFQUNUX1VQREFURV9PUCA9ICd1aS5yZWFjdC51cGRhdGUnO1xuXG5jb25zdCBSRUFDVF9NT1VOVF9PUCA9ICd1aS5yZWFjdC5tb3VudCc7XG5cbmV4cG9ydCB7IFJFQUNUX01PVU5UX09QLCBSRUFDVF9SRU5ERVJfT1AsIFJFQUNUX1VQREFURV9PUCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/constants.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/debug-build.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/react/esm/debug-build.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEBUG_BUILD\": function() { return /* binding */ DEBUG_BUILD; }\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vZGVidWctYnVpbGQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsTUFBdUMsSUFBSSxLQUFnQjs7QUFFekQ7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvcmVhY3QvZXNtL2RlYnVnLWJ1aWxkLmpzP2JhZTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIHNlcnZlcyBhcyBhIGJ1aWxkIHRpbWUgZmxhZyB0aGF0IHdpbGwgYmUgdHJ1ZSBieSBkZWZhdWx0LCBidXQgZmFsc2UgaW4gbm9uLWRlYnVnIGJ1aWxkcyBvciBpZiB1c2VycyByZXBsYWNlIGBfX1NFTlRSWV9ERUJVR19fYCBpbiB0aGVpciBnZW5lcmF0ZWQgY29kZS5cbiAqXG4gKiBBVFRFTlRJT046IFRoaXMgY29uc3RhbnQgbXVzdCBuZXZlciBjcm9zcyBwYWNrYWdlIGJvdW5kYXJpZXMgKGkuZS4gYmUgZXhwb3J0ZWQpIHRvIGd1YXJhbnRlZSB0aGF0IGl0IGNhbiBiZSB1c2VkIGZvciB0cmVlIHNoYWtpbmcuXG4gKi9cbmNvbnN0IERFQlVHX0JVSUxEID0gKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKTtcblxuZXhwb3J0IHsgREVCVUdfQlVJTEQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnLWJ1aWxkLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/debug-build.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/error.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/react/esm/error.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"captureReactException\": function() { return /* binding */ captureReactException; },\n/* harmony export */   \"isAtLeastReact17\": function() { return /* binding */ isAtLeastReact17; },\n/* harmony export */   \"reactErrorHandler\": function() { return /* binding */ reactErrorHandler; },\n/* harmony export */   \"setCause\": function() { return /* binding */ setCause; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n\n\n\n/**\n * See if React major version is 17+ by parsing version string.\n */\nfunction isAtLeastReact17(reactVersion) {\n  const reactMajor = reactVersion.match(/^([^.]+)/);\n  return reactMajor !== null && parseInt(reactMajor[0]) >= 17;\n}\n\n/**\n * Recurse through `error.cause` chain to set cause on an error.\n */\nfunction setCause(error, cause) {\n  const seenErrors = new WeakSet();\n\n  function recurse(error, cause) {\n    // If we've already seen the error, there is a recursive loop somewhere in the error's\n    // cause chain. Let's just bail out then to prevent a stack overflow.\n    if (seenErrors.has(error)) {\n      return;\n    }\n    if (error.cause) {\n      seenErrors.add(error);\n      return recurse(error.cause, cause);\n    }\n    error.cause = cause;\n  }\n\n  recurse(error, cause);\n}\n\n/**\n * Captures an error that was thrown by a React ErrorBoundary or React root.\n *\n * @param error The error to capture.\n * @param errorInfo The errorInfo provided by React.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nfunction captureReactException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error,\n  { componentStack },\n  hint,\n) {\n  // If on React version >= 17, create stack trace from componentStack param and links\n  // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n  // Linking errors requires the `LinkedErrors` integration be enabled.\n  // See: https://reactjs.org/blog/2020/08/10/react-v17-rc.html#native-component-stacks\n  //\n  // Although `componentDidCatch` is typed to accept an `Error` object, it can also be invoked\n  // with non-error objects. This is why we need to check if the error is an error-like object.\n  // See: https://github.com/getsentry/sentry-javascript/issues/6167\n  if (isAtLeastReact17(react__WEBPACK_IMPORTED_MODULE_0__.version) && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(error) && componentStack) {\n    const errorBoundaryError = new Error(error.message);\n    errorBoundaryError.name = `React ErrorBoundary ${error.name}`;\n    errorBoundaryError.stack = componentStack;\n\n    // Using the `LinkedErrors` integration to link the errors together.\n    setCause(error, errorBoundaryError);\n  }\n\n  return (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_2__.captureException)(error, {\n    ...hint,\n    captureContext: {\n      contexts: { react: { componentStack } },\n    },\n  });\n}\n\n/**\n * Creates an error handler that can be used with the `onCaughtError`, `onUncaughtError`,\n * and `onRecoverableError` options in `createRoot` and `hydrateRoot` React DOM methods.\n *\n * @param callback An optional callback that will be called after the error is captured.\n * Use this to add custom handling for errors.\n *\n * @example\n *\n * ```JavaScript\n * const root = createRoot(container, {\n *  onCaughtError: Sentry.reactErrorHandler(),\n *  onUncaughtError: Sentry.reactErrorHandler((error, errorInfo) => {\n *    console.warn('Caught error', error, errorInfo.componentStack);\n *  });\n * });\n * ```\n */\nfunction reactErrorHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (error, errorInfo) => {\n    const eventId = captureReactException(error, errorInfo);\n    if (callback) {\n      callback(error, errorInfo, eventId);\n    }\n  };\n}\n\n\n//# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFtRDtBQUNYO0FBQ1I7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksZ0JBQWdCO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDBDQUFPLEtBQUssc0RBQU87QUFDMUM7QUFDQSxxREFBcUQsV0FBVztBQUNoRTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxpRUFBZ0I7QUFDekI7QUFDQTtBQUNBLGtCQUFrQixTQUFTLGtCQUFrQjtBQUM3QyxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFZ0Y7QUFDaEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvcmVhY3QvZXNtL2Vycm9yLmpzPzMxODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2FwdHVyZUV4Y2VwdGlvbiB9IGZyb20gJ0BzZW50cnkvYnJvd3Nlcic7XG5pbXBvcnQgeyBpc0Vycm9yIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAncmVhY3QnO1xuXG4vKipcbiAqIFNlZSBpZiBSZWFjdCBtYWpvciB2ZXJzaW9uIGlzIDE3KyBieSBwYXJzaW5nIHZlcnNpb24gc3RyaW5nLlxuICovXG5mdW5jdGlvbiBpc0F0TGVhc3RSZWFjdDE3KHJlYWN0VmVyc2lvbikge1xuICBjb25zdCByZWFjdE1ham9yID0gcmVhY3RWZXJzaW9uLm1hdGNoKC9eKFteLl0rKS8pO1xuICByZXR1cm4gcmVhY3RNYWpvciAhPT0gbnVsbCAmJiBwYXJzZUludChyZWFjdE1ham9yWzBdKSA+PSAxNztcbn1cblxuLyoqXG4gKiBSZWN1cnNlIHRocm91Z2ggYGVycm9yLmNhdXNlYCBjaGFpbiB0byBzZXQgY2F1c2Ugb24gYW4gZXJyb3IuXG4gKi9cbmZ1bmN0aW9uIHNldENhdXNlKGVycm9yLCBjYXVzZSkge1xuICBjb25zdCBzZWVuRXJyb3JzID0gbmV3IFdlYWtTZXQoKTtcblxuICBmdW5jdGlvbiByZWN1cnNlKGVycm9yLCBjYXVzZSkge1xuICAgIC8vIElmIHdlJ3ZlIGFscmVhZHkgc2VlbiB0aGUgZXJyb3IsIHRoZXJlIGlzIGEgcmVjdXJzaXZlIGxvb3Agc29tZXdoZXJlIGluIHRoZSBlcnJvcidzXG4gICAgLy8gY2F1c2UgY2hhaW4uIExldCdzIGp1c3QgYmFpbCBvdXQgdGhlbiB0byBwcmV2ZW50IGEgc3RhY2sgb3ZlcmZsb3cuXG4gICAgaWYgKHNlZW5FcnJvcnMuaGFzKGVycm9yKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoZXJyb3IuY2F1c2UpIHtcbiAgICAgIHNlZW5FcnJvcnMuYWRkKGVycm9yKTtcbiAgICAgIHJldHVybiByZWN1cnNlKGVycm9yLmNhdXNlLCBjYXVzZSk7XG4gICAgfVxuICAgIGVycm9yLmNhdXNlID0gY2F1c2U7XG4gIH1cblxuICByZWN1cnNlKGVycm9yLCBjYXVzZSk7XG59XG5cbi8qKlxuICogQ2FwdHVyZXMgYW4gZXJyb3IgdGhhdCB3YXMgdGhyb3duIGJ5IGEgUmVhY3QgRXJyb3JCb3VuZGFyeSBvciBSZWFjdCByb290LlxuICpcbiAqIEBwYXJhbSBlcnJvciBUaGUgZXJyb3IgdG8gY2FwdHVyZS5cbiAqIEBwYXJhbSBlcnJvckluZm8gVGhlIGVycm9ySW5mbyBwcm92aWRlZCBieSBSZWFjdC5cbiAqIEBwYXJhbSBoaW50IE9wdGlvbmFsIGFkZGl0aW9uYWwgZGF0YSB0byBhdHRhY2ggdG8gdGhlIFNlbnRyeSBldmVudC5cbiAqIEByZXR1cm5zIHRoZSBpZCBvZiB0aGUgY2FwdHVyZWQgU2VudHJ5IGV2ZW50LlxuICovXG5mdW5jdGlvbiBjYXB0dXJlUmVhY3RFeGNlcHRpb24oXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIGVycm9yLFxuICB7IGNvbXBvbmVudFN0YWNrIH0sXG4gIGhpbnQsXG4pIHtcbiAgLy8gSWYgb24gUmVhY3QgdmVyc2lvbiA+PSAxNywgY3JlYXRlIHN0YWNrIHRyYWNlIGZyb20gY29tcG9uZW50U3RhY2sgcGFyYW0gYW5kIGxpbmtzXG4gIC8vIHRvIHRvIHRoZSBvcmlnaW5hbCBlcnJvciB1c2luZyBgZXJyb3IuY2F1c2VgIG90aGVyd2lzZSByZWxpZXMgb24gZXJyb3IgcGFyYW0gZm9yIHN0YWNrdHJhY2UuXG4gIC8vIExpbmtpbmcgZXJyb3JzIHJlcXVpcmVzIHRoZSBgTGlua2VkRXJyb3JzYCBpbnRlZ3JhdGlvbiBiZSBlbmFibGVkLlxuICAvLyBTZWU6IGh0dHBzOi8vcmVhY3Rqcy5vcmcvYmxvZy8yMDIwLzA4LzEwL3JlYWN0LXYxNy1yYy5odG1sI25hdGl2ZS1jb21wb25lbnQtc3RhY2tzXG4gIC8vXG4gIC8vIEFsdGhvdWdoIGBjb21wb25lbnREaWRDYXRjaGAgaXMgdHlwZWQgdG8gYWNjZXB0IGFuIGBFcnJvcmAgb2JqZWN0LCBpdCBjYW4gYWxzbyBiZSBpbnZva2VkXG4gIC8vIHdpdGggbm9uLWVycm9yIG9iamVjdHMuIFRoaXMgaXMgd2h5IHdlIG5lZWQgdG8gY2hlY2sgaWYgdGhlIGVycm9yIGlzIGFuIGVycm9yLWxpa2Ugb2JqZWN0LlxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzYxNjdcbiAgaWYgKGlzQXRMZWFzdFJlYWN0MTcodmVyc2lvbikgJiYgaXNFcnJvcihlcnJvcikgJiYgY29tcG9uZW50U3RhY2spIHtcbiAgICBjb25zdCBlcnJvckJvdW5kYXJ5RXJyb3IgPSBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgZXJyb3JCb3VuZGFyeUVycm9yLm5hbWUgPSBgUmVhY3QgRXJyb3JCb3VuZGFyeSAke2Vycm9yLm5hbWV9YDtcbiAgICBlcnJvckJvdW5kYXJ5RXJyb3Iuc3RhY2sgPSBjb21wb25lbnRTdGFjaztcblxuICAgIC8vIFVzaW5nIHRoZSBgTGlua2VkRXJyb3JzYCBpbnRlZ3JhdGlvbiB0byBsaW5rIHRoZSBlcnJvcnMgdG9nZXRoZXIuXG4gICAgc2V0Q2F1c2UoZXJyb3IsIGVycm9yQm91bmRhcnlFcnJvcik7XG4gIH1cblxuICByZXR1cm4gY2FwdHVyZUV4Y2VwdGlvbihlcnJvciwge1xuICAgIC4uLmhpbnQsXG4gICAgY2FwdHVyZUNvbnRleHQ6IHtcbiAgICAgIGNvbnRleHRzOiB7IHJlYWN0OiB7IGNvbXBvbmVudFN0YWNrIH0gfSxcbiAgICB9LFxuICB9KTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGFuIGVycm9yIGhhbmRsZXIgdGhhdCBjYW4gYmUgdXNlZCB3aXRoIHRoZSBgb25DYXVnaHRFcnJvcmAsIGBvblVuY2F1Z2h0RXJyb3JgLFxuICogYW5kIGBvblJlY292ZXJhYmxlRXJyb3JgIG9wdGlvbnMgaW4gYGNyZWF0ZVJvb3RgIGFuZCBgaHlkcmF0ZVJvb3RgIFJlYWN0IERPTSBtZXRob2RzLlxuICpcbiAqIEBwYXJhbSBjYWxsYmFjayBBbiBvcHRpb25hbCBjYWxsYmFjayB0aGF0IHdpbGwgYmUgY2FsbGVkIGFmdGVyIHRoZSBlcnJvciBpcyBjYXB0dXJlZC5cbiAqIFVzZSB0aGlzIHRvIGFkZCBjdXN0b20gaGFuZGxpbmcgZm9yIGVycm9ycy5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIGBgYEphdmFTY3JpcHRcbiAqIGNvbnN0IHJvb3QgPSBjcmVhdGVSb290KGNvbnRhaW5lciwge1xuICogIG9uQ2F1Z2h0RXJyb3I6IFNlbnRyeS5yZWFjdEVycm9ySGFuZGxlcigpLFxuICogIG9uVW5jYXVnaHRFcnJvcjogU2VudHJ5LnJlYWN0RXJyb3JIYW5kbGVyKChlcnJvciwgZXJyb3JJbmZvKSA9PiB7XG4gKiAgICBjb25zb2xlLndhcm4oJ0NhdWdodCBlcnJvcicsIGVycm9yLCBlcnJvckluZm8uY29tcG9uZW50U3RhY2spO1xuICogIH0pO1xuICogfSk7XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gcmVhY3RFcnJvckhhbmRsZXIoXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIGNhbGxiYWNrLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIHJldHVybiAoZXJyb3IsIGVycm9ySW5mbykgPT4ge1xuICAgIGNvbnN0IGV2ZW50SWQgPSBjYXB0dXJlUmVhY3RFeGNlcHRpb24oZXJyb3IsIGVycm9ySW5mbyk7XG4gICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICBjYWxsYmFjayhlcnJvciwgZXJyb3JJbmZvLCBldmVudElkKTtcbiAgICB9XG4gIH07XG59XG5cbmV4cG9ydCB7IGNhcHR1cmVSZWFjdEV4Y2VwdGlvbiwgaXNBdExlYXN0UmVhY3QxNywgcmVhY3RFcnJvckhhbmRsZXIsIHNldENhdXNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/error.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/errorboundary.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/react/esm/errorboundary.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ErrorBoundary\": function() { return /* binding */ ErrorBoundary; },\n/* harmony export */   \"UNKNOWN_COMPONENT\": function() { return /* binding */ UNKNOWN_COMPONENT; },\n/* harmony export */   \"withErrorBoundary\": function() { return /* binding */ withErrorBoundary; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/react/esm/debug-build.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./error.js */ \"./node_modules/@sentry/react/esm/error.js\");\n\n\n\n\n\n\n\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\nconst INITIAL_STATE = {\n  componentStack: null,\n  error: null,\n  eventId: null,\n};\n\n/**\n * A ErrorBoundary component that logs errors to Sentry.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nclass ErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_2__.Component {\n\n   constructor(props) {\n    super(props);ErrorBoundary.prototype.__init.call(this);\n    this.state = INITIAL_STATE;\n    this._openFallbackReportDialog = true;\n\n    const client = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.getClient)();\n    if (client && props.showDialog) {\n      this._openFallbackReportDialog = false;\n      client.on('afterSendEvent', event => {\n        if (!event.type && this._lastEventId && event.event_id === this._lastEventId) {\n          (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.showReportDialog)({ ...props.dialogOptions, eventId: this._lastEventId });\n        }\n      });\n    }\n  }\n\n   componentDidCatch(error, errorInfo) {\n    const { componentStack } = errorInfo;\n    // TODO(v9): Remove this check and type `componentStack` to be React.ErrorInfo['componentStack'].\n    const passedInComponentStack = componentStack == null ? undefined : componentStack;\n\n    const { beforeCapture, onError, showDialog, dialogOptions } = this.props;\n    (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.withScope)(scope => {\n      if (beforeCapture) {\n        beforeCapture(scope, error, passedInComponentStack);\n      }\n\n      const eventId = (0,_error_js__WEBPACK_IMPORTED_MODULE_4__.captureReactException)(error, errorInfo, { mechanism: { handled: !!this.props.fallback } });\n\n      if (onError) {\n        onError(error, passedInComponentStack, eventId);\n      }\n      if (showDialog) {\n        this._lastEventId = eventId;\n        if (this._openFallbackReportDialog) {\n          (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.showReportDialog)({ ...dialogOptions, eventId });\n        }\n      }\n\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      this.setState({ error, componentStack, eventId });\n    });\n  }\n\n   componentDidMount() {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n   componentWillUnmount() {\n    const { error, componentStack, eventId } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      onUnmount(error, componentStack, eventId);\n    }\n  }\n\n   __init() {this.resetErrorBoundary = () => {\n    const { onReset } = this.props;\n    const { error, componentStack, eventId } = this.state;\n    if (onReset) {\n      onReset(error, componentStack, eventId);\n    }\n    this.setState(INITIAL_STATE);\n  };}\n\n   render() {\n    const { fallback, children } = this.props;\n    const state = this.state;\n\n    if (state.error) {\n      let element = undefined;\n      if (typeof fallback === 'function') {\n        element = react__WEBPACK_IMPORTED_MODULE_2__.createElement(fallback, {\n          error: state.error,\n          componentStack: state.componentStack ,\n          resetError: this.resetErrorBoundary,\n          eventId: state.eventId ,\n        });\n      } else {\n        element = fallback;\n      }\n\n      if (react__WEBPACK_IMPORTED_MODULE_2__.isValidElement(element)) {\n        return element;\n      }\n\n      if (fallback) {\n        _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('fallback did not produce a valid ReactElement');\n      }\n\n      // Fail gracefully if no fallback provided or is not valid\n      return null;\n    }\n\n    if (typeof children === 'function') {\n      return (children )();\n    }\n    return children;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary(\n  WrappedComponent,\n  errorBoundaryOptions,\n) {\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped = (props) => (\n    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorBoundary, { ...errorBoundaryOptions, children:\n      (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WrappedComponent, { ...props,} )\n    })\n  );\n\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\n\n//# sourceMappingURL=errorboundary.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/errorboundary.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/react/esm/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ErrorBoundary\": function() { return /* reexport safe */ _errorboundary_js__WEBPACK_IMPORTED_MODULE_4__.ErrorBoundary; },\n/* harmony export */   \"Profiler\": function() { return /* reexport safe */ _profiler_js__WEBPACK_IMPORTED_MODULE_3__.Profiler; },\n/* harmony export */   \"createReduxEnhancer\": function() { return /* reexport safe */ _redux_js__WEBPACK_IMPORTED_MODULE_5__.createReduxEnhancer; },\n/* harmony export */   \"init\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_1__.init; },\n/* harmony export */   \"reactErrorHandler\": function() { return /* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_2__.reactErrorHandler; },\n/* harmony export */   \"reactRouterV3BrowserTracingIntegration\": function() { return /* reexport safe */ _reactrouterv3_js__WEBPACK_IMPORTED_MODULE_6__.reactRouterV3BrowserTracingIntegration; },\n/* harmony export */   \"reactRouterV4BrowserTracingIntegration\": function() { return /* reexport safe */ _reactrouter_js__WEBPACK_IMPORTED_MODULE_8__.reactRouterV4BrowserTracingIntegration; },\n/* harmony export */   \"reactRouterV5BrowserTracingIntegration\": function() { return /* reexport safe */ _reactrouter_js__WEBPACK_IMPORTED_MODULE_8__.reactRouterV5BrowserTracingIntegration; },\n/* harmony export */   \"reactRouterV6BrowserTracingIntegration\": function() { return /* reexport safe */ _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_9__.reactRouterV6BrowserTracingIntegration; },\n/* harmony export */   \"tanstackRouterBrowserTracingIntegration\": function() { return /* reexport safe */ _tanstackrouter_js__WEBPACK_IMPORTED_MODULE_7__.tanstackRouterBrowserTracingIntegration; },\n/* harmony export */   \"useProfiler\": function() { return /* reexport safe */ _profiler_js__WEBPACK_IMPORTED_MODULE_3__.useProfiler; },\n/* harmony export */   \"withErrorBoundary\": function() { return /* reexport safe */ _errorboundary_js__WEBPACK_IMPORTED_MODULE_4__.withErrorBoundary; },\n/* harmony export */   \"withProfiler\": function() { return /* reexport safe */ _profiler_js__WEBPACK_IMPORTED_MODULE_3__.withProfiler; },\n/* harmony export */   \"withSentryReactRouterV6Routing\": function() { return /* reexport safe */ _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_9__.withSentryReactRouterV6Routing; },\n/* harmony export */   \"withSentryRouting\": function() { return /* reexport safe */ _reactrouter_js__WEBPACK_IMPORTED_MODULE_8__.withSentryRouting; },\n/* harmony export */   \"wrapCreateBrowserRouter\": function() { return /* reexport safe */ _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_9__.wrapCreateBrowserRouter; },\n/* harmony export */   \"wrapUseRoutes\": function() { return /* reexport safe */ _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_9__.wrapUseRoutes; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _sentry_browser__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"init\",\"reactErrorHandler\",\"Profiler\",\"useProfiler\",\"withProfiler\",\"ErrorBoundary\",\"withErrorBoundary\",\"createReduxEnhancer\",\"reactRouterV3BrowserTracingIntegration\",\"tanstackRouterBrowserTracingIntegration\",\"reactRouterV4BrowserTracingIntegration\",\"reactRouterV5BrowserTracingIntegration\",\"withSentryRouting\",\"reactRouterV6BrowserTracingIntegration\",\"withSentryReactRouterV6Routing\",\"wrapCreateBrowserRouter\",\"wrapUseRoutes\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _sentry_browser__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sdk.js */ \"./node_modules/@sentry/react/esm/sdk.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error.js */ \"./node_modules/@sentry/react/esm/error.js\");\n/* harmony import */ var _profiler_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./profiler.js */ \"./node_modules/@sentry/react/esm/profiler.js\");\n/* harmony import */ var _errorboundary_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errorboundary.js */ \"./node_modules/@sentry/react/esm/errorboundary.js\");\n/* harmony import */ var _redux_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./redux.js */ \"./node_modules/@sentry/react/esm/redux.js\");\n/* harmony import */ var _reactrouterv3_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./reactrouterv3.js */ \"./node_modules/@sentry/react/esm/reactrouterv3.js\");\n/* harmony import */ var _tanstackrouter_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tanstackrouter.js */ \"./node_modules/@sentry/react/esm/tanstackrouter.js\");\n/* harmony import */ var _reactrouter_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./reactrouter.js */ \"./node_modules/@sentry/react/esm/reactrouter.js\");\n/* harmony import */ var _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./reactrouterv6.js */ \"./node_modules/@sentry/react/esm/reactrouterv6.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ0E7QUFDZTtBQUNxQjtBQUNFO0FBQ3JCO0FBQzJCO0FBQ0U7QUFDdUQ7QUFDZTtBQUNwSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vaW5kZXguanM/MDRkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICdAc2VudHJ5L2Jyb3dzZXInO1xuZXhwb3J0IHsgaW5pdCB9IGZyb20gJy4vc2RrLmpzJztcbmV4cG9ydCB7IHJlYWN0RXJyb3JIYW5kbGVyIH0gZnJvbSAnLi9lcnJvci5qcyc7XG5leHBvcnQgeyBQcm9maWxlciwgdXNlUHJvZmlsZXIsIHdpdGhQcm9maWxlciB9IGZyb20gJy4vcHJvZmlsZXIuanMnO1xuZXhwb3J0IHsgRXJyb3JCb3VuZGFyeSwgd2l0aEVycm9yQm91bmRhcnkgfSBmcm9tICcuL2Vycm9yYm91bmRhcnkuanMnO1xuZXhwb3J0IHsgY3JlYXRlUmVkdXhFbmhhbmNlciB9IGZyb20gJy4vcmVkdXguanMnO1xuZXhwb3J0IHsgcmVhY3RSb3V0ZXJWM0Jyb3dzZXJUcmFjaW5nSW50ZWdyYXRpb24gfSBmcm9tICcuL3JlYWN0cm91dGVydjMuanMnO1xuZXhwb3J0IHsgdGFuc3RhY2tSb3V0ZXJCcm93c2VyVHJhY2luZ0ludGVncmF0aW9uIH0gZnJvbSAnLi90YW5zdGFja3JvdXRlci5qcyc7XG5leHBvcnQgeyByZWFjdFJvdXRlclY0QnJvd3NlclRyYWNpbmdJbnRlZ3JhdGlvbiwgcmVhY3RSb3V0ZXJWNUJyb3dzZXJUcmFjaW5nSW50ZWdyYXRpb24sIHdpdGhTZW50cnlSb3V0aW5nIH0gZnJvbSAnLi9yZWFjdHJvdXRlci5qcyc7XG5leHBvcnQgeyByZWFjdFJvdXRlclY2QnJvd3NlclRyYWNpbmdJbnRlZ3JhdGlvbiwgd2l0aFNlbnRyeVJlYWN0Um91dGVyVjZSb3V0aW5nLCB3cmFwQ3JlYXRlQnJvd3NlclJvdXRlciwgd3JhcFVzZVJvdXRlcyB9IGZyb20gJy4vcmVhY3Ryb3V0ZXJ2Ni5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/profiler.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/react/esm/profiler.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Profiler\": function() { return /* binding */ Profiler; },\n/* harmony export */   \"UNKNOWN_COMPONENT\": function() { return /* binding */ UNKNOWN_COMPONENT; },\n/* harmony export */   \"useProfiler\": function() { return /* binding */ useProfiler; },\n/* harmony export */   \"withProfiler\": function() { return /* binding */ withProfiler; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/react/esm/constants.js\");\n\n\n\n\n\n\n\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\n/**\n * The Profiler component leverages Sentry's Tracing integration to generate\n * spans based on component lifecycles.\n */\nclass Profiler extends react__WEBPACK_IMPORTED_MODULE_2__.Component {\n  /**\n   * The span of the mount activity\n   * Made protected for the React Native SDK to access\n   */\n\n  /**\n   * The span that represents the duration of time between shouldComponentUpdate and componentDidUpdate\n   */\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n   static __initStatic() {this.defaultProps = {\n    disabled: false,\n    includeRender: true,\n    includeUpdates: true,\n  };}\n\n   constructor(props) {\n    super(props);\n    const { name, disabled = false } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this._mountSpan = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.startInactiveSpan)({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: _constants_js__WEBPACK_IMPORTED_MODULE_4__.REACT_MOUNT_OP,\n      attributes: {\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_5__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n        'ui.component_name': name,\n      },\n    });\n  }\n\n  // If a component mounted, we can finish the mount activity.\n   componentDidMount() {\n    if (this._mountSpan) {\n      this._mountSpan.end();\n    }\n  }\n\n   shouldComponentUpdate({ updateProps, includeUpdates = true }) {\n    // Only generate an update span if includeUpdates is true, if there is a valid mountSpan,\n    // and if the updateProps have changed. It is ok to not do a deep equality check here as it is expensive.\n    // We are just trying to give baseline clues for further investigation.\n    if (includeUpdates && this._mountSpan && updateProps !== this.props.updateProps) {\n      // See what props haved changed between the previous props, and the current props. This is\n      // set as data on the span. We just store the prop keys as the values could be potenially very large.\n      const changedProps = Object.keys(updateProps).filter(k => updateProps[k] !== this.props.updateProps[k]);\n      if (changedProps.length > 0) {\n        const now = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.timestampInSeconds)();\n        this._updateSpan = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.withActiveSpan)(this._mountSpan, () => {\n          return (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.startInactiveSpan)({\n            name: `<${this.props.name}>`,\n            onlyIfParent: true,\n            op: _constants_js__WEBPACK_IMPORTED_MODULE_4__.REACT_UPDATE_OP,\n            startTime: now,\n            attributes: {\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_5__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n              'ui.component_name': this.props.name,\n              'ui.react.changed_props': changedProps,\n            },\n          });\n        });\n      }\n    }\n\n    return true;\n  }\n\n   componentDidUpdate() {\n    if (this._updateSpan) {\n      this._updateSpan.end();\n      this._updateSpan = undefined;\n    }\n  }\n\n  // If a component is unmounted, we can say it is no longer on the screen.\n  // This means we can finish the span representing the component render.\n   componentWillUnmount() {\n    const endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.timestampInSeconds)();\n    const { name, includeRender = true } = this.props;\n\n    if (this._mountSpan && includeRender) {\n      const startTime = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.spanToJSON)(this._mountSpan).timestamp;\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.withActiveSpan)(this._mountSpan, () => {\n        const renderSpan = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.startInactiveSpan)({\n          onlyIfParent: true,\n          name: `<${name}>`,\n          op: _constants_js__WEBPACK_IMPORTED_MODULE_4__.REACT_RENDER_OP,\n          startTime,\n          attributes: {\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_5__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n            'ui.component_name': name,\n          },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      });\n    }\n  }\n\n   render() {\n    return this.props.children;\n  }\n} Profiler.__initStatic();\n\n/**\n * withProfiler is a higher order component that wraps a\n * component in a {@link Profiler} component. It is recommended that\n * the higher order component be used over the regular {@link Profiler} component.\n *\n * @param WrappedComponent component that is wrapped by Profiler\n * @param options the {@link ProfilerProps} you can pass into the Profiler\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withProfiler(\n  WrappedComponent,\n  // We do not want to have `updateProps` given in options, it is instead filled through the HOC.\n  options,\n) {\n  const componentDisplayName =\n    (options && options.name) || WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped = (props) => (\n    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Profiler, { ...options, name: componentDisplayName, updateProps: props, children:\n      (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WrappedComponent, { ...props,} )\n    })\n  );\n\n  Wrapped.displayName = `profiler(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\n/**\n *\n * `useProfiler` is a React hook that profiles a React component.\n *\n * Requires React 16.8 or above.\n * @param name displayName of component being profiled\n */\nfunction useProfiler(\n  name,\n  options = {\n    disabled: false,\n    hasRenderSpan: true,\n  },\n) {\n  const [mountSpan] = react__WEBPACK_IMPORTED_MODULE_2__.useState(() => {\n    if (options && options.disabled) {\n      return undefined;\n    }\n\n    return (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.startInactiveSpan)({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: _constants_js__WEBPACK_IMPORTED_MODULE_4__.REACT_MOUNT_OP,\n      attributes: {\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_5__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n        'ui.component_name': name,\n      },\n    });\n  });\n\n  react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {\n    if (mountSpan) {\n      mountSpan.end();\n    }\n\n    return () => {\n      if (mountSpan && options.hasRenderSpan) {\n        const startTime = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.spanToJSON)(mountSpan).timestamp;\n        const endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.timestampInSeconds)();\n\n        const renderSpan = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.startInactiveSpan)({\n          name: `<${name}>`,\n          onlyIfParent: true,\n          op: _constants_js__WEBPACK_IMPORTED_MODULE_4__.REACT_RENDER_OP,\n          startTime,\n          attributes: {\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_5__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n            'ui.component_name': name,\n          },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      }\n    };\n    // We only want this to run once.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\n\n//# sourceMappingURL=profiler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/profiler.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/reactrouter.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/react/esm/reactrouter.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reactRouterV4BrowserTracingIntegration\": function() { return /* binding */ reactRouterV4BrowserTracingIntegration; },\n/* harmony export */   \"reactRouterV5BrowserTracingIntegration\": function() { return /* binding */ reactRouterV5BrowserTracingIntegration; },\n/* harmony export */   \"withSentryRouting\": function() { return /* binding */ withSentryRouting; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n\n\n\n\n\n// We need to disable eslint no-explict-any because any is required for the\n// react-router typings.\n\n/**\n * A browser tracing integration that uses React Router v4 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nfunction reactRouterV4BrowserTracingIntegration(\n  options,\n) {\n  const integration = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.browserTracingIntegration)({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      instrumentReactRouter(\n        client,\n        instrumentPageLoad,\n        instrumentNavigation,\n        history,\n        'reactrouter_v4',\n        routes,\n        matchPath,\n      );\n    },\n  };\n}\n\n/**\n * A browser tracing integration that uses React Router v5 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nfunction reactRouterV5BrowserTracingIntegration(\n  options,\n) {\n  const integration = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.browserTracingIntegration)({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      instrumentReactRouter(\n        client,\n        instrumentPageLoad,\n        instrumentNavigation,\n        history,\n        'reactrouter_v5',\n        routes,\n        matchPath,\n      );\n    },\n  };\n}\n\nfunction instrumentReactRouter(\n  client,\n  instrumentPageLoad,\n  instrumentNavigation,\n  history,\n  instrumentationName,\n  allRoutes = [],\n  matchPath,\n) {\n  function getInitPathName() {\n    if (history && history.location) {\n      return history.location.pathname;\n    }\n\n    if (_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.WINDOW && _sentry_browser__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location) {\n      return _sentry_browser__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location.pathname;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Normalizes a transaction name. Returns the new name as well as the\n   * source of the transaction.\n   *\n   * @param pathname The initial pathname we normalize\n   */\n  function normalizeTransactionName(pathname) {\n    if (allRoutes.length === 0 || !matchPath) {\n      return [pathname, 'url'];\n    }\n\n    const branches = matchRoutes(allRoutes, pathname, matchPath);\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return [branches[x].match.path, 'route'];\n      }\n    }\n\n    return [pathname, 'url'];\n  }\n\n  if (instrumentPageLoad) {\n    const initPathName = getInitPathName();\n    if (initPathName) {\n      const [name, source] = normalizeTransactionName(initPathName);\n      (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.startBrowserTracingPageLoadSpan)(client, {\n        name,\n        attributes: {\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.${instrumentationName}`,\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        },\n      });\n    }\n  }\n\n  if (instrumentNavigation && history.listen) {\n    history.listen((location, action) => {\n      if (action && (action === 'PUSH' || action === 'POP')) {\n        const [name, source] = normalizeTransactionName(location.pathname);\n        (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.startBrowserTracingNavigationSpan)(client, {\n          name,\n          attributes: {\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.${instrumentationName}`,\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n          },\n        });\n      }\n    });\n  }\n}\n\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(\n  routes,\n  pathname,\n  matchPath,\n  branch = [],\n) {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n        ? branch[branch.length - 1].match // use parent match\n        : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n\n  return branch;\n}\n\nfunction computeRootMatch(pathname) {\n  return { path: '/', url: '/', params: {}, isExact: pathname === '/' };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\nfunction withSentryRouting(Route) {\n  const componentDisplayName = (Route ).displayName || (Route ).name;\n\n  const WrappedRoute = (props) => {\n    if (props && props.computedMatch && props.computedMatch.isExact) {\n      const route = props.computedMatch.path;\n      const activeRootSpan = getActiveRootSpan();\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getCurrentScope)().setTransactionName(route);\n\n      if (activeRootSpan) {\n        activeRootSpan.updateName(route);\n        activeRootSpan.setAttribute(_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n      }\n    }\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Route, { ...props,} );\n  };\n\n  WrappedRoute.displayName = `sentryRoute(${componentDisplayName})`;\n  hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__(WrappedRoute, Route);\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n\nfunction getActiveRootSpan() {\n  const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getActiveSpan)();\n  const rootSpan = span && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getRootSpan)(span);\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.spanToJSON)(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n\n\n//# sourceMappingURL=reactrouter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/reactrouter.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/reactrouterv3.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/react/esm/reactrouterv3.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reactRouterV3BrowserTracingIntegration\": function() { return /* binding */ reactRouterV3BrowserTracingIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n\n\n\n// Many of the types below had to be mocked out to prevent typescript issues\n// these types are required for correct functionality.\n\n/**\n * A browser tracing integration that uses React Router v3 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nfunction reactRouterV3BrowserTracingIntegration(\n  options,\n) {\n  const integration = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_0__.browserTracingIntegration)({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, match, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      if (instrumentPageLoad && _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location) {\n        normalizeTransactionName(\n          routes,\n          _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location ,\n          match,\n          (localName, source = 'url') => {\n            (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_0__.startBrowserTracingPageLoadSpan)(client, {\n              name: localName,\n              attributes: {\n                [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n                [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v3',\n                [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n              },\n            });\n          },\n        );\n      }\n\n      if (instrumentNavigation && history.listen) {\n        history.listen(location => {\n          if (location.action === 'PUSH' || location.action === 'POP') {\n            normalizeTransactionName(\n              routes,\n              location,\n              match,\n              (localName, source = 'url') => {\n                (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_0__.startBrowserTracingNavigationSpan)(client, {\n                  name: localName,\n                  attributes: {\n                    [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n                    [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.reactrouter_v3',\n                    [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n                  },\n                });\n              },\n            );\n          }\n        });\n      }\n    },\n  };\n}\n\n/**\n * Normalize transaction names using `Router.match`\n */\nfunction normalizeTransactionName(\n  appRoutes,\n  location,\n  match,\n  callback,\n) {\n  let name = location.pathname;\n  match(\n    {\n      location,\n      routes: appRoutes,\n    },\n    (error, _redirectLocation, renderProps) => {\n      if (error || !renderProps) {\n        return callback(name);\n      }\n\n      const routePath = getRouteStringFromRoutes(renderProps.routes || []);\n      if (routePath.length === 0 || routePath === '/*') {\n        return callback(name);\n      }\n\n      name = routePath;\n      return callback(name, 'route');\n    },\n  );\n}\n\n/**\n * Generate route name from array of routes\n */\nfunction getRouteStringFromRoutes(routes) {\n  if (!Array.isArray(routes) || routes.length === 0) {\n    return '';\n  }\n\n  const routesWithPaths = routes.filter((route) => !!route.path);\n\n  let index = -1;\n  for (let x = routesWithPaths.length - 1; x >= 0; x--) {\n    const route = routesWithPaths[x];\n    if (route.path && route.path.startsWith('/')) {\n      index = x;\n      break;\n    }\n  }\n\n  return routesWithPaths\n    .slice(index)\n    .filter(({ path }) => !!path)\n    .map(({ path }) => path)\n    .join('');\n}\n\n\n//# sourceMappingURL=reactrouterv3.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vcmVhY3Ryb3V0ZXJ2My5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0k7QUFDUjs7QUFFaEk7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwRUFBeUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSCxVQUFVLGlGQUFpRjs7QUFFM0Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0NBQWdDLG1EQUFNLElBQUksNERBQWU7QUFDekQ7QUFDQTtBQUNBLFVBQVUsNERBQWU7QUFDekI7QUFDQTtBQUNBLFlBQVksZ0ZBQStCO0FBQzNDO0FBQ0E7QUFDQSxpQkFBaUIsc0VBQTRCO0FBQzdDLGlCQUFpQiwwRUFBZ0M7QUFDakQsaUJBQWlCLDBFQUFnQztBQUNqRCxlQUFlO0FBQ2YsYUFBYTtBQUNiLFdBQVc7QUFDWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isa0ZBQWlDO0FBQ2pEO0FBQ0E7QUFDQSxxQkFBcUIsc0VBQTRCO0FBQ2pELHFCQUFxQiwwRUFBZ0M7QUFDckQscUJBQXFCLDBFQUFnQztBQUNyRCxtQkFBbUI7QUFDbkIsaUJBQWlCO0FBQ2pCLGVBQWU7QUFDZjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSwyQ0FBMkMsUUFBUTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWUsTUFBTTtBQUNyQixZQUFZLE1BQU07QUFDbEI7QUFDQTs7QUFFa0Q7QUFDbEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvcmVhY3QvZXNtL3JlYWN0cm91dGVydjMuanM/OTBkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBicm93c2VyVHJhY2luZ0ludGVncmF0aW9uLCBXSU5ET1csIHN0YXJ0QnJvd3NlclRyYWNpbmdQYWdlTG9hZFNwYW4sIHN0YXJ0QnJvd3NlclRyYWNpbmdOYXZpZ2F0aW9uU3BhbiB9IGZyb20gJ0BzZW50cnkvYnJvd3Nlcic7XG5pbXBvcnQgeyBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09QLCBTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTiwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9TT1VSQ0UgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuXG4vLyBNYW55IG9mIHRoZSB0eXBlcyBiZWxvdyBoYWQgdG8gYmUgbW9ja2VkIG91dCB0byBwcmV2ZW50IHR5cGVzY3JpcHQgaXNzdWVzXG4vLyB0aGVzZSB0eXBlcyBhcmUgcmVxdWlyZWQgZm9yIGNvcnJlY3QgZnVuY3Rpb25hbGl0eS5cblxuLyoqXG4gKiBBIGJyb3dzZXIgdHJhY2luZyBpbnRlZ3JhdGlvbiB0aGF0IHVzZXMgUmVhY3QgUm91dGVyIHYzIHRvIGluc3RydW1lbnQgbmF2aWdhdGlvbnMuXG4gKiBFeHBlY3RzIGBoaXN0b3J5YCAoYW5kIG9wdGlvbmFsbHkgYHJvdXRlc2AgYW5kIGBtYXRjaFBhdGhgKSB0byBiZSBwYXNzZWQgYXMgb3B0aW9ucy5cbiAqL1xuZnVuY3Rpb24gcmVhY3RSb3V0ZXJWM0Jyb3dzZXJUcmFjaW5nSW50ZWdyYXRpb24oXG4gIG9wdGlvbnMsXG4pIHtcbiAgY29uc3QgaW50ZWdyYXRpb24gPSBicm93c2VyVHJhY2luZ0ludGVncmF0aW9uKHtcbiAgICAuLi5vcHRpb25zLFxuICAgIGluc3RydW1lbnRQYWdlTG9hZDogZmFsc2UsXG4gICAgaW5zdHJ1bWVudE5hdmlnYXRpb246IGZhbHNlLFxuICB9KTtcblxuICBjb25zdCB7IGhpc3RvcnksIHJvdXRlcywgbWF0Y2gsIGluc3RydW1lbnRQYWdlTG9hZCA9IHRydWUsIGluc3RydW1lbnROYXZpZ2F0aW9uID0gdHJ1ZSB9ID0gb3B0aW9ucztcblxuICByZXR1cm4ge1xuICAgIC4uLmludGVncmF0aW9uLFxuICAgIGFmdGVyQWxsU2V0dXAoY2xpZW50KSB7XG4gICAgICBpbnRlZ3JhdGlvbi5hZnRlckFsbFNldHVwKGNsaWVudCk7XG5cbiAgICAgIGlmIChpbnN0cnVtZW50UGFnZUxvYWQgJiYgV0lORE9XICYmIFdJTkRPVy5sb2NhdGlvbikge1xuICAgICAgICBub3JtYWxpemVUcmFuc2FjdGlvbk5hbWUoXG4gICAgICAgICAgcm91dGVzLFxuICAgICAgICAgIFdJTkRPVy5sb2NhdGlvbiAsXG4gICAgICAgICAgbWF0Y2gsXG4gICAgICAgICAgKGxvY2FsTmFtZSwgc291cmNlID0gJ3VybCcpID0+IHtcbiAgICAgICAgICAgIHN0YXJ0QnJvd3NlclRyYWNpbmdQYWdlTG9hZFNwYW4oY2xpZW50LCB7XG4gICAgICAgICAgICAgIG5hbWU6IGxvY2FsTmFtZSxcbiAgICAgICAgICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICAgICAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09QXTogJ3BhZ2Vsb2FkJyxcbiAgICAgICAgICAgICAgICBbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU5dOiAnYXV0by5wYWdlbG9hZC5yZWFjdC5yZWFjdHJvdXRlcl92MycsXG4gICAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTogc291cmNlLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGluc3RydW1lbnROYXZpZ2F0aW9uICYmIGhpc3RvcnkubGlzdGVuKSB7XG4gICAgICAgIGhpc3RvcnkubGlzdGVuKGxvY2F0aW9uID0+IHtcbiAgICAgICAgICBpZiAobG9jYXRpb24uYWN0aW9uID09PSAnUFVTSCcgfHwgbG9jYXRpb24uYWN0aW9uID09PSAnUE9QJykge1xuICAgICAgICAgICAgbm9ybWFsaXplVHJhbnNhY3Rpb25OYW1lKFxuICAgICAgICAgICAgICByb3V0ZXMsXG4gICAgICAgICAgICAgIGxvY2F0aW9uLFxuICAgICAgICAgICAgICBtYXRjaCxcbiAgICAgICAgICAgICAgKGxvY2FsTmFtZSwgc291cmNlID0gJ3VybCcpID0+IHtcbiAgICAgICAgICAgICAgICBzdGFydEJyb3dzZXJUcmFjaW5nTmF2aWdhdGlvblNwYW4oY2xpZW50LCB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiBsb2NhbE5hbWUsXG4gICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgICAgIFtTRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09QXTogJ25hdmlnYXRpb24nLFxuICAgICAgICAgICAgICAgICAgICBbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU5dOiAnYXV0by5uYXZpZ2F0aW9uLnJlYWN0LnJlYWN0cm91dGVyX3YzJyxcbiAgICAgICAgICAgICAgICAgICAgW1NFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfU09VUkNFXTogc291cmNlLFxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICB9O1xufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0cmFuc2FjdGlvbiBuYW1lcyB1c2luZyBgUm91dGVyLm1hdGNoYFxuICovXG5mdW5jdGlvbiBub3JtYWxpemVUcmFuc2FjdGlvbk5hbWUoXG4gIGFwcFJvdXRlcyxcbiAgbG9jYXRpb24sXG4gIG1hdGNoLFxuICBjYWxsYmFjayxcbikge1xuICBsZXQgbmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lO1xuICBtYXRjaChcbiAgICB7XG4gICAgICBsb2NhdGlvbixcbiAgICAgIHJvdXRlczogYXBwUm91dGVzLFxuICAgIH0sXG4gICAgKGVycm9yLCBfcmVkaXJlY3RMb2NhdGlvbiwgcmVuZGVyUHJvcHMpID0+IHtcbiAgICAgIGlmIChlcnJvciB8fCAhcmVuZGVyUHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5hbWUpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByb3V0ZVBhdGggPSBnZXRSb3V0ZVN0cmluZ0Zyb21Sb3V0ZXMocmVuZGVyUHJvcHMucm91dGVzIHx8IFtdKTtcbiAgICAgIGlmIChyb3V0ZVBhdGgubGVuZ3RoID09PSAwIHx8IHJvdXRlUGF0aCA9PT0gJy8qJykge1xuICAgICAgICByZXR1cm4gY2FsbGJhY2sobmFtZSk7XG4gICAgICB9XG5cbiAgICAgIG5hbWUgPSByb3V0ZVBhdGg7XG4gICAgICByZXR1cm4gY2FsbGJhY2sobmFtZSwgJ3JvdXRlJyk7XG4gICAgfSxcbiAgKTtcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZSByb3V0ZSBuYW1lIGZyb20gYXJyYXkgb2Ygcm91dGVzXG4gKi9cbmZ1bmN0aW9uIGdldFJvdXRlU3RyaW5nRnJvbVJvdXRlcyhyb3V0ZXMpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHJvdXRlcykgfHwgcm91dGVzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGNvbnN0IHJvdXRlc1dpdGhQYXRocyA9IHJvdXRlcy5maWx0ZXIoKHJvdXRlKSA9PiAhIXJvdXRlLnBhdGgpO1xuXG4gIGxldCBpbmRleCA9IC0xO1xuICBmb3IgKGxldCB4ID0gcm91dGVzV2l0aFBhdGhzLmxlbmd0aCAtIDE7IHggPj0gMDsgeC0tKSB7XG4gICAgY29uc3Qgcm91dGUgPSByb3V0ZXNXaXRoUGF0aHNbeF07XG4gICAgaWYgKHJvdXRlLnBhdGggJiYgcm91dGUucGF0aC5zdGFydHNXaXRoKCcvJykpIHtcbiAgICAgIGluZGV4ID0geDtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByb3V0ZXNXaXRoUGF0aHNcbiAgICAuc2xpY2UoaW5kZXgpXG4gICAgLmZpbHRlcigoeyBwYXRoIH0pID0+ICEhcGF0aClcbiAgICAubWFwKCh7IHBhdGggfSkgPT4gcGF0aClcbiAgICAuam9pbignJyk7XG59XG5cbmV4cG9ydCB7IHJlYWN0Um91dGVyVjNCcm93c2VyVHJhY2luZ0ludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdHJvdXRlcnYzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/reactrouterv3.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/reactrouterv6.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/react/esm/reactrouterv6.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reactRouterV6BrowserTracingIntegration\": function() { return /* binding */ reactRouterV6BrowserTracingIntegration; },\n/* harmony export */   \"withSentryReactRouterV6Routing\": function() { return /* binding */ withSentryReactRouterV6Routing; },\n/* harmony export */   \"wrapCreateBrowserRouter\": function() { return /* binding */ wrapCreateBrowserRouter; },\n/* harmony export */   \"wrapUseRoutes\": function() { return /* binding */ wrapUseRoutes; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/react/esm/debug-build.js\");\n\n\n\n\n\n\n\n\nlet _useEffect;\nlet _useLocation;\nlet _useNavigationType;\nlet _createRoutesFromChildren;\nlet _matchRoutes;\nlet _stripBasename = false;\n\nconst CLIENTS_WITH_INSTRUMENT_NAVIGATION = new WeakSet();\n\n/**\n * A browser tracing integration that uses React Router v6 to instrument navigations.\n * Expects `useEffect`, `useLocation`, `useNavigationType`, `createRoutesFromChildren` and `matchRoutes` to be passed as options.\n */\nfunction reactRouterV6BrowserTracingIntegration(\n  options,\n) {\n  const integration = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.browserTracingIntegration)({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const {\n    useEffect,\n    useLocation,\n    useNavigationType,\n    createRoutesFromChildren,\n    matchRoutes,\n    stripBasename,\n    instrumentPageLoad = true,\n    instrumentNavigation = true,\n  } = options;\n\n  return {\n    ...integration,\n    setup() {\n      _useEffect = useEffect;\n      _useLocation = useLocation;\n      _useNavigationType = useNavigationType;\n      _matchRoutes = matchRoutes;\n      _createRoutesFromChildren = createRoutesFromChildren;\n      _stripBasename = stripBasename || false;\n    },\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const initPathName = _sentry_browser__WEBPACK_IMPORTED_MODULE_3__.WINDOW && _sentry_browser__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location && _sentry_browser__WEBPACK_IMPORTED_MODULE_3__.WINDOW.location.pathname;\n      if (instrumentPageLoad && initPathName) {\n        (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.startBrowserTracingPageLoadSpan)(client, {\n          name: initPathName,\n          attributes: {\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v6',\n          },\n        });\n      }\n\n      if (instrumentNavigation) {\n        CLIENTS_WITH_INSTRUMENT_NAVIGATION.add(client);\n      }\n    },\n  };\n}\n\n/**\n * Strip the basename from a pathname if exists.\n *\n * Vendored and modified from `react-router`\n * https://github.com/remix-run/react-router/blob/462bb712156a3f739d6139a0f14810b76b002df6/packages/router/utils.ts#L1038\n */\nfunction stripBasenameFromPathname(pathname, basename) {\n  if (!basename || basename === '/') {\n    return pathname;\n  }\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return pathname;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  const startIndex = basename.endsWith('/') ? basename.length - 1 : basename.length;\n  const nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== '/') {\n    // pathname does not start with basename/\n    return pathname;\n  }\n\n  return pathname.slice(startIndex) || '/';\n}\n\nfunction getNormalizedName(\n  routes,\n  location,\n  branches,\n  basename = '',\n) {\n  if (!routes || routes.length === 0) {\n    return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n  }\n\n  let pathBuilder = '';\n  if (branches) {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      const branch = branches[x];\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return [_stripBasename ? stripBasenameFromPathname(branch.pathname, basename) : branch.pathname, 'route'];\n        }\n\n        const path = route.path;\n        if (path) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder += newPath;\n\n          if (basename + branch.pathname === location.pathname) {\n            if (\n              // If the route defined on the element is something like\n              // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n              // We should check against the branch.pathname for the number of / seperators\n              (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.getNumberOfUrlSegments)(pathBuilder) !== (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.getNumberOfUrlSegments)(branch.pathname) &&\n              // We should not count wildcard operators in the url segments calculation\n              pathBuilder.slice(-2) !== '/*'\n            ) {\n              return [(_stripBasename ? '' : basename) + newPath, 'route'];\n            }\n            return [(_stripBasename ? '' : basename) + pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n\n  return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n}\n\nfunction updatePageloadTransaction(\n  activeRootSpan,\n  location,\n  routes,\n  matches,\n  basename,\n) {\n  const branches = Array.isArray(matches)\n    ? matches\n    : (_matchRoutes(routes, location, basename) );\n\n  if (branches) {\n    const [name, source] = getNormalizedName(routes, location, branches, basename);\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getCurrentScope)().setTransactionName(name);\n\n    if (activeRootSpan) {\n      activeRootSpan.updateName(name);\n      activeRootSpan.setAttribute(_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n    }\n  }\n}\n\nfunction handleNavigation(\n  location,\n  routes,\n  navigationType,\n  matches,\n  basename,\n) {\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location, basename);\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getClient)();\n  if (!client || !CLIENTS_WITH_INSTRUMENT_NAVIGATION.has(client)) {\n    return;\n  }\n\n  if ((navigationType === 'PUSH' || navigationType === 'POP') && branches) {\n    const [name, source] = getNormalizedName(routes, location, branches, basename);\n\n    (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_3__.startBrowserTracingNavigationSpan)(client, {\n      name,\n      attributes: {\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.reactrouter_v6',\n      },\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withSentryReactRouterV6Routing(Routes) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_createRoutesFromChildren || !_matchRoutes) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}.`);\n\n    return Routes;\n  }\n\n  let isMountRenderPass = true;\n\n  const SentryRoutes = (props) => {\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    _useEffect(\n      () => {\n        const routes = _createRoutesFromChildren(props.children) ;\n\n        if (isMountRenderPass) {\n          updatePageloadTransaction(getActiveRootSpan(), location, routes);\n          isMountRenderPass = false;\n        } else {\n          handleNavigation(location, routes, navigationType);\n        }\n      },\n      // `props.children` is purpusely not included in the dependency array, because we do not want to re-run this effect\n      // when the children change. We only want to start transactions when the location or navigation type change.\n      [location, navigationType],\n    );\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Routes, { ...props,} );\n  };\n\n  hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_1__(SentryRoutes, Routes);\n\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\n\nfunction wrapUseRoutes(origUseRoutes) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(\n        'reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.',\n      );\n\n    return origUseRoutes;\n  }\n\n  let isMountRenderPass = true;\n\n  const SentryRoutes\n\n = (props) => {\n    const { routes, locationArg } = props;\n\n    const Routes = origUseRoutes(routes, locationArg);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    // A value with stable identity to either pick `locationArg` if available or `location` if not\n    const stableLocationParam =\n      typeof locationArg === 'string' || (locationArg && locationArg.pathname)\n        ? (locationArg )\n        : location;\n\n    _useEffect(() => {\n      const normalizedLocation =\n        typeof stableLocationParam === 'string' ? { pathname: stableLocationParam } : stableLocationParam;\n\n      if (isMountRenderPass) {\n        updatePageloadTransaction(getActiveRootSpan(), normalizedLocation, routes);\n        isMountRenderPass = false;\n      } else {\n        handleNavigation(normalizedLocation, routes, navigationType);\n      }\n    }, [navigationType, stableLocationParam]);\n\n    return Routes;\n  };\n\n  // eslint-disable-next-line react/display-name\n  return (routes, locationArg) => {\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SentryRoutes, { routes: routes, locationArg: locationArg,} );\n  };\n}\n\nfunction wrapCreateBrowserRouter\n\n(createRouterFunction) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(\n        'reactRouterV6Instrumentation was unable to wrap the `createRouter` function because of one or more missing parameters.',\n      );\n\n    return createRouterFunction;\n  }\n\n  // `opts` for createBrowserHistory and createMemoryHistory are different, but also not relevant for us at the moment.\n  // `basename` is the only option that is relevant for us, and it is the same for all.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (routes, opts) {\n    const router = createRouterFunction(routes, opts);\n    const basename = opts && opts.basename;\n\n    const activeRootSpan = getActiveRootSpan();\n\n    // The initial load ends when `createBrowserRouter` is called.\n    // This is the earliest convenient time to update the transaction name.\n    // Callbacks to `router.subscribe` are not called for the initial load.\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(activeRootSpan, router.state.location, routes, undefined, basename);\n    }\n\n    router.subscribe((state) => {\n      const location = state.location;\n      if (state.historyAction === 'PUSH' || state.historyAction === 'POP') {\n        handleNavigation(location, routes, state.historyAction, undefined, basename);\n      }\n    });\n\n    return router;\n  };\n}\n\nfunction getActiveRootSpan() {\n  const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getActiveSpan)();\n  const rootSpan = span ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.getRootSpan)(span) : undefined;\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.spanToJSON)(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n\n\n//# sourceMappingURL=reactrouterv6.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/reactrouterv6.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/redux.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/react/esm/redux.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createReduxEnhancer\": function() { return /* binding */ createReduxEnhancer; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nconst ACTION_BREADCRUMB_CATEGORY = 'redux.action';\nconst ACTION_BREADCRUMB_TYPE = 'info';\n\nconst defaultOptions = {\n  attachReduxState: true,\n  actionTransformer: action => action,\n  stateTransformer: state => state || null,\n};\n\n/**\n * Creates an enhancer that would be passed to Redux's createStore to log actions and the latest state to Sentry.\n *\n * @param enhancerOptions Options to pass to the enhancer\n */\nfunction createReduxEnhancer(enhancerOptions) {\n  // Note: We return an any type as to not have type conflicts.\n  const options = {\n    ...defaultOptions,\n    ...enhancerOptions,\n  };\n\n  return (next) =>\n    (reducer, initialState) => {\n      options.attachReduxState &&\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getGlobalScope)().addEventProcessor((event, hint) => {\n          try {\n            // @ts-expect-error try catch to reduce bundle size\n            if (event.type === undefined && event.contexts.state.state.type === 'redux') {\n              hint.attachments = [\n                ...(hint.attachments || []),\n                // @ts-expect-error try catch to reduce bundle size\n                { filename: 'redux_state.json', data: JSON.stringify(event.contexts.state.state.value) },\n              ];\n            }\n          } catch (_) {\n            // empty\n          }\n          return event;\n        });\n\n      const sentryReducer = (state, action) => {\n        const newState = reducer(state, action);\n\n        const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope)();\n\n        /* Action breadcrumbs */\n        const transformedAction = options.actionTransformer(action);\n        if (typeof transformedAction !== 'undefined' && transformedAction !== null) {\n          (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addBreadcrumb)({\n            category: ACTION_BREADCRUMB_CATEGORY,\n            data: transformedAction,\n            type: ACTION_BREADCRUMB_TYPE,\n          });\n        }\n\n        /* Set latest state to scope */\n        const transformedState = options.stateTransformer(newState);\n        if (typeof transformedState !== 'undefined' && transformedState !== null) {\n          const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)();\n          const options = client && client.getOptions();\n          const normalizationDepth = (options && options.normalizeDepth) || 3; // default state normalization depth to 3\n\n          // Set the normalization depth of the redux state to the configured `normalizeDepth` option or a sane number as a fallback\n          const newStateContext = { state: { type: 'redux', value: transformedState } };\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addNonEnumerableProperty)(\n            newStateContext,\n            '__sentry_override_normalization_depth__',\n            3 + // 3 layers for `state.value.transformedState`\n              normalizationDepth, // rest for the actual state\n          );\n\n          scope.setContext('state', newStateContext);\n        } else {\n          scope.setContext('state', null);\n        }\n\n        /* Allow user to configure scope with latest state */\n        const { configureScopeWithState } = options;\n        if (typeof configureScopeWithState === 'function') {\n          configureScopeWithState(scope, newState);\n        }\n\n        return newState;\n      };\n\n      return next(sentryReducer, initialState);\n    };\n}\n\n\n//# sourceMappingURL=redux.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vcmVkdXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlGO0FBQ2hDOztBQUV6RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDREQUFjO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzRkFBc0Y7QUFDeEc7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7O0FBRUEsc0JBQXNCLDZEQUFlOztBQUVyQztBQUNBO0FBQ0E7QUFDQSxVQUFVLDJEQUFhO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdURBQVM7QUFDbEM7QUFDQSwrRUFBK0U7O0FBRS9FO0FBQ0Esb0NBQW9DLFNBQVM7QUFDN0MsVUFBVSx1RUFBd0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLDBCQUEwQjtBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3JlYWN0L2VzbS9yZWR1eC5qcz83M2Y1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEdsb2JhbFNjb3BlLCBnZXRDdXJyZW50U2NvcGUsIGFkZEJyZWFkY3J1bWIsIGdldENsaWVudCB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSAqL1xuXG5jb25zdCBBQ1RJT05fQlJFQURDUlVNQl9DQVRFR09SWSA9ICdyZWR1eC5hY3Rpb24nO1xuY29uc3QgQUNUSU9OX0JSRUFEQ1JVTUJfVFlQRSA9ICdpbmZvJztcblxuY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7XG4gIGF0dGFjaFJlZHV4U3RhdGU6IHRydWUsXG4gIGFjdGlvblRyYW5zZm9ybWVyOiBhY3Rpb24gPT4gYWN0aW9uLFxuICBzdGF0ZVRyYW5zZm9ybWVyOiBzdGF0ZSA9PiBzdGF0ZSB8fCBudWxsLFxufTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGVuaGFuY2VyIHRoYXQgd291bGQgYmUgcGFzc2VkIHRvIFJlZHV4J3MgY3JlYXRlU3RvcmUgdG8gbG9nIGFjdGlvbnMgYW5kIHRoZSBsYXRlc3Qgc3RhdGUgdG8gU2VudHJ5LlxuICpcbiAqIEBwYXJhbSBlbmhhbmNlck9wdGlvbnMgT3B0aW9ucyB0byBwYXNzIHRvIHRoZSBlbmhhbmNlclxuICovXG5mdW5jdGlvbiBjcmVhdGVSZWR1eEVuaGFuY2VyKGVuaGFuY2VyT3B0aW9ucykge1xuICAvLyBOb3RlOiBXZSByZXR1cm4gYW4gYW55IHR5cGUgYXMgdG8gbm90IGhhdmUgdHlwZSBjb25mbGljdHMuXG4gIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgLi4uZGVmYXVsdE9wdGlvbnMsXG4gICAgLi4uZW5oYW5jZXJPcHRpb25zLFxuICB9O1xuXG4gIHJldHVybiAobmV4dCkgPT5cbiAgICAocmVkdWNlciwgaW5pdGlhbFN0YXRlKSA9PiB7XG4gICAgICBvcHRpb25zLmF0dGFjaFJlZHV4U3RhdGUgJiZcbiAgICAgICAgZ2V0R2xvYmFsU2NvcGUoKS5hZGRFdmVudFByb2Nlc3NvcigoZXZlbnQsIGhpbnQpID0+IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0cnkgY2F0Y2ggdG8gcmVkdWNlIGJ1bmRsZSBzaXplXG4gICAgICAgICAgICBpZiAoZXZlbnQudHlwZSA9PT0gdW5kZWZpbmVkICYmIGV2ZW50LmNvbnRleHRzLnN0YXRlLnN0YXRlLnR5cGUgPT09ICdyZWR1eCcpIHtcbiAgICAgICAgICAgICAgaGludC5hdHRhY2htZW50cyA9IFtcbiAgICAgICAgICAgICAgICAuLi4oaGludC5hdHRhY2htZW50cyB8fCBbXSksXG4gICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0cnkgY2F0Y2ggdG8gcmVkdWNlIGJ1bmRsZSBzaXplXG4gICAgICAgICAgICAgICAgeyBmaWxlbmFtZTogJ3JlZHV4X3N0YXRlLmpzb24nLCBkYXRhOiBKU09OLnN0cmluZ2lmeShldmVudC5jb250ZXh0cy5zdGF0ZS5zdGF0ZS52YWx1ZSkgfSxcbiAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgICAgICAvLyBlbXB0eVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZXZlbnQ7XG4gICAgICAgIH0pO1xuXG4gICAgICBjb25zdCBzZW50cnlSZWR1Y2VyID0gKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgICAgY29uc3QgbmV3U3RhdGUgPSByZWR1Y2VyKHN0YXRlLCBhY3Rpb24pO1xuXG4gICAgICAgIGNvbnN0IHNjb3BlID0gZ2V0Q3VycmVudFNjb3BlKCk7XG5cbiAgICAgICAgLyogQWN0aW9uIGJyZWFkY3J1bWJzICovXG4gICAgICAgIGNvbnN0IHRyYW5zZm9ybWVkQWN0aW9uID0gb3B0aW9ucy5hY3Rpb25UcmFuc2Zvcm1lcihhY3Rpb24pO1xuICAgICAgICBpZiAodHlwZW9mIHRyYW5zZm9ybWVkQWN0aW9uICE9PSAndW5kZWZpbmVkJyAmJiB0cmFuc2Zvcm1lZEFjdGlvbiAhPT0gbnVsbCkge1xuICAgICAgICAgIGFkZEJyZWFkY3J1bWIoe1xuICAgICAgICAgICAgY2F0ZWdvcnk6IEFDVElPTl9CUkVBRENSVU1CX0NBVEVHT1JZLFxuICAgICAgICAgICAgZGF0YTogdHJhbnNmb3JtZWRBY3Rpb24sXG4gICAgICAgICAgICB0eXBlOiBBQ1RJT05fQlJFQURDUlVNQl9UWVBFLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogU2V0IGxhdGVzdCBzdGF0ZSB0byBzY29wZSAqL1xuICAgICAgICBjb25zdCB0cmFuc2Zvcm1lZFN0YXRlID0gb3B0aW9ucy5zdGF0ZVRyYW5zZm9ybWVyKG5ld1N0YXRlKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0cmFuc2Zvcm1lZFN0YXRlICE9PSAndW5kZWZpbmVkJyAmJiB0cmFuc2Zvcm1lZFN0YXRlICE9PSBudWxsKSB7XG4gICAgICAgICAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KCk7XG4gICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGNsaWVudCAmJiBjbGllbnQuZ2V0T3B0aW9ucygpO1xuICAgICAgICAgIGNvbnN0IG5vcm1hbGl6YXRpb25EZXB0aCA9IChvcHRpb25zICYmIG9wdGlvbnMubm9ybWFsaXplRGVwdGgpIHx8IDM7IC8vIGRlZmF1bHQgc3RhdGUgbm9ybWFsaXphdGlvbiBkZXB0aCB0byAzXG5cbiAgICAgICAgICAvLyBTZXQgdGhlIG5vcm1hbGl6YXRpb24gZGVwdGggb2YgdGhlIHJlZHV4IHN0YXRlIHRvIHRoZSBjb25maWd1cmVkIGBub3JtYWxpemVEZXB0aGAgb3B0aW9uIG9yIGEgc2FuZSBudW1iZXIgYXMgYSBmYWxsYmFja1xuICAgICAgICAgIGNvbnN0IG5ld1N0YXRlQ29udGV4dCA9IHsgc3RhdGU6IHsgdHlwZTogJ3JlZHV4JywgdmFsdWU6IHRyYW5zZm9ybWVkU3RhdGUgfSB9O1xuICAgICAgICAgIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eShcbiAgICAgICAgICAgIG5ld1N0YXRlQ29udGV4dCxcbiAgICAgICAgICAgICdfX3NlbnRyeV9vdmVycmlkZV9ub3JtYWxpemF0aW9uX2RlcHRoX18nLFxuICAgICAgICAgICAgMyArIC8vIDMgbGF5ZXJzIGZvciBgc3RhdGUudmFsdWUudHJhbnNmb3JtZWRTdGF0ZWBcbiAgICAgICAgICAgICAgbm9ybWFsaXphdGlvbkRlcHRoLCAvLyByZXN0IGZvciB0aGUgYWN0dWFsIHN0YXRlXG4gICAgICAgICAgKTtcblxuICAgICAgICAgIHNjb3BlLnNldENvbnRleHQoJ3N0YXRlJywgbmV3U3RhdGVDb250ZXh0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzY29wZS5zZXRDb250ZXh0KCdzdGF0ZScsIG51bGwpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogQWxsb3cgdXNlciB0byBjb25maWd1cmUgc2NvcGUgd2l0aCBsYXRlc3Qgc3RhdGUgKi9cbiAgICAgICAgY29uc3QgeyBjb25maWd1cmVTY29wZVdpdGhTdGF0ZSB9ID0gb3B0aW9ucztcbiAgICAgICAgaWYgKHR5cGVvZiBjb25maWd1cmVTY29wZVdpdGhTdGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGNvbmZpZ3VyZVNjb3BlV2l0aFN0YXRlKHNjb3BlLCBuZXdTdGF0ZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV3U3RhdGU7XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gbmV4dChzZW50cnlSZWR1Y2VyLCBpbml0aWFsU3RhdGUpO1xuICAgIH07XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVJlZHV4RW5oYW5jZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZHV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/redux.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/sdk.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/react/esm/sdk.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": function() { return /* binding */ init; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n\n\n\n/**\n * Inits the React SDK\n */\nfunction init(options) {\n  const opts = {\n    ...options,\n  };\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.applySdkMetadata)(opts, 'react');\n\n  (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_1__.init)(opts);\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vc2RrLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRDtBQUNEOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLDhEQUFnQjs7QUFFbEIsRUFBRSxxREFBTTtBQUNSOztBQUVnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vc2RrLmpzPzkxMTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5pdCBhcyBpbml0JDEgfSBmcm9tICdAc2VudHJ5L2Jyb3dzZXInO1xuaW1wb3J0IHsgYXBwbHlTZGtNZXRhZGF0YSB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5cbi8qKlxuICogSW5pdHMgdGhlIFJlYWN0IFNES1xuICovXG5mdW5jdGlvbiBpbml0KG9wdGlvbnMpIHtcbiAgY29uc3Qgb3B0cyA9IHtcbiAgICAuLi5vcHRpb25zLFxuICB9O1xuXG4gIGFwcGx5U2RrTWV0YWRhdGEob3B0cywgJ3JlYWN0Jyk7XG5cbiAgaW5pdCQxKG9wdHMpO1xufVxuXG5leHBvcnQgeyBpbml0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZGsuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/sdk.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/tanstackrouter.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/react/esm/tanstackrouter.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tanstackRouterBrowserTracingIntegration\": function() { return /* binding */ tanstackRouterBrowserTracingIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n\n\n\n/**\n * A custom browser tracing integration for TanStack Router.\n *\n * The minimum compatible version of `@tanstack/router` is `1.34.5`.\n *\n * @param router A TanStack Router `Router` instance that should be used for routing instrumentation.\n * @param options Sentry browser tracing configuration.\n */\nfunction tanstackRouterBrowserTracingIntegration(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  router, // This is `any` because we don't want any type mismatches if TanStack Router changes their types\n  options = {},\n) {\n  const castRouterInstance = router;\n\n  const browserTracingIntegrationInstance = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_0__.browserTracingIntegration)({\n    ...options,\n    instrumentNavigation: false,\n    instrumentPageLoad: false,\n  });\n\n  const { instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...browserTracingIntegrationInstance,\n    afterAllSetup(client) {\n      browserTracingIntegrationInstance.afterAllSetup(client);\n\n      const initialWindowLocation = _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location;\n      if (instrumentPageLoad && initialWindowLocation) {\n        const matchedRoutes = castRouterInstance.matchRoutes(\n          initialWindowLocation.pathname,\n          initialWindowLocation.search,\n          { preload: false, throwOnError: false },\n        );\n\n        const lastMatch = matchedRoutes[matchedRoutes.length - 1];\n\n        (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_0__.startBrowserTracingPageLoadSpan)(client, {\n          name: lastMatch ? lastMatch.routeId : initialWindowLocation.pathname,\n          attributes: {\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.tanstack_router',\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: lastMatch ? 'route' : 'url',\n            ...routeMatchToParamSpanAttributes(lastMatch),\n          },\n        });\n      }\n\n      if (instrumentNavigation) {\n        // The onBeforeNavigate hook is called at the very beginning of a navigation and is only called once per navigation, even when the user is redirected\n        castRouterInstance.subscribe('onBeforeNavigate', onBeforeNavigateArgs => {\n          // onBeforeNavigate is called during pageloads. We can avoid creating navigation spans by comparing the states of the to and from arguments.\n          if (onBeforeNavigateArgs.toLocation.state === onBeforeNavigateArgs.fromLocation.state) {\n            return;\n          }\n\n          const onResolvedMatchedRoutes = castRouterInstance.matchRoutes(\n            onBeforeNavigateArgs.toLocation.pathname,\n            onBeforeNavigateArgs.toLocation.search,\n            { preload: false, throwOnError: false },\n          );\n\n          const onBeforeNavigateLastMatch = onResolvedMatchedRoutes[onResolvedMatchedRoutes.length - 1];\n\n          const navigationLocation = _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location;\n          const navigationSpan = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_0__.startBrowserTracingNavigationSpan)(client, {\n            name: onBeforeNavigateLastMatch ? onBeforeNavigateLastMatch.routeId : navigationLocation.pathname,\n            attributes: {\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.tanstack_router',\n              [_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: onBeforeNavigateLastMatch ? 'route' : 'url',\n            },\n          });\n\n          // In case the user is redirected during navigation we want to update the span with the right value.\n          const unsubscribeOnResolved = castRouterInstance.subscribe('onResolved', onResolvedArgs => {\n            unsubscribeOnResolved();\n            if (navigationSpan) {\n              const onResolvedMatchedRoutes = castRouterInstance.matchRoutes(\n                onResolvedArgs.toLocation.pathname,\n                onResolvedArgs.toLocation.search,\n                { preload: false, throwOnError: false },\n              );\n\n              const onResolvedLastMatch = onResolvedMatchedRoutes[onResolvedMatchedRoutes.length - 1];\n\n              if (onResolvedLastMatch) {\n                navigationSpan.updateName(onResolvedLastMatch.routeId);\n                navigationSpan.setAttribute(_sentry_core__WEBPACK_IMPORTED_MODULE_1__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n                navigationSpan.setAttributes(routeMatchToParamSpanAttributes(onResolvedLastMatch));\n              }\n            }\n          });\n        });\n      }\n    },\n  };\n}\n\nfunction routeMatchToParamSpanAttributes(match) {\n  if (!match) {\n    return {};\n  }\n\n  const paramAttributes = {};\n  for (const key of Object.keys(match.params)) {\n    paramAttributes[`url.path.params.${key}`] = match.params[key];\n  }\n\n  return paramAttributes;\n}\n\n\n//# sourceMappingURL=tanstackrouter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/tanstackrouter.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/aggregate-errors.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/aggregate-errors.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyAggregateErrorsToEvent\": function() { return /* binding */ applyAggregateErrorsToEvent; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.truncate)(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\n\n//# sourceMappingURL=aggregate-errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYWdncmVnYXRlLWVycm9ycy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUM7QUFDQTs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELG9EQUFZO0FBQzNFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxNQUFNLG9EQUFZO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsb0RBQVk7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLEVBQUU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpREFBaUQ7O0FBRWpEO0FBQ0E7QUFDQSxpREFBaUQsMEJBQTBCO0FBQzNFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9EQUFRO0FBQ2hDO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRXVDO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9hZ2dyZWdhdGUtZXJyb3JzLmpzP2Q0ZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNJbnN0YW5jZU9mIH0gZnJvbSAnLi9pcy5qcyc7XG5pbXBvcnQgeyB0cnVuY2F0ZSB9IGZyb20gJy4vc3RyaW5nLmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIGV4Y2VwdGlvbnMgaW5zaWRlIGBldmVudC5leGNlcHRpb24udmFsdWVzYCBmb3IgZXJyb3JzIHRoYXQgYXJlIG5lc3RlZCBvbiBwcm9wZXJ0aWVzIGJhc2VkIG9uIHRoZSBga2V5YCBwYXJhbWV0ZXIuXG4gKi9cbmZ1bmN0aW9uIGFwcGx5QWdncmVnYXRlRXJyb3JzVG9FdmVudChcbiAgZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24sXG4gIHBhcnNlcixcbiAgbWF4VmFsdWVMaW1pdCA9IDI1MCxcbiAga2V5LFxuICBsaW1pdCxcbiAgZXZlbnQsXG4gIGhpbnQsXG4pIHtcbiAgaWYgKCFldmVudC5leGNlcHRpb24gfHwgIWV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMgfHwgIWhpbnQgfHwgIWlzSW5zdGFuY2VPZihoaW50Lm9yaWdpbmFsRXhjZXB0aW9uLCBFcnJvcikpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBHZW5lcmFsbHkgc3BlYWtpbmcgdGhlIGxhc3QgaXRlbSBpbiBgZXZlbnQuZXhjZXB0aW9uLnZhbHVlc2AgaXMgdGhlIGV4Y2VwdGlvbiBvcmlnaW5hdGluZyBmcm9tIHRoZSBvcmlnaW5hbCBFcnJvclxuICBjb25zdCBvcmlnaW5hbEV4Y2VwdGlvbiA9XG4gICAgZXZlbnQuZXhjZXB0aW9uLnZhbHVlcy5sZW5ndGggPiAwID8gZXZlbnQuZXhjZXB0aW9uLnZhbHVlc1tldmVudC5leGNlcHRpb24udmFsdWVzLmxlbmd0aCAtIDFdIDogdW5kZWZpbmVkO1xuXG4gIC8vIFdlIG9ubHkgY3JlYXRlIGV4Y2VwdGlvbiBncm91cGluZyBpZiB0aGVyZSBpcyBhbiBleGNlcHRpb24gaW4gdGhlIGV2ZW50LlxuICBpZiAob3JpZ2luYWxFeGNlcHRpb24pIHtcbiAgICBldmVudC5leGNlcHRpb24udmFsdWVzID0gdHJ1bmNhdGVBZ2dyZWdhdGVFeGNlcHRpb25zKFxuICAgICAgYWdncmVnYXRlRXhjZXB0aW9uc0Zyb21FcnJvcihcbiAgICAgICAgZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24sXG4gICAgICAgIHBhcnNlcixcbiAgICAgICAgbGltaXQsXG4gICAgICAgIGhpbnQub3JpZ2luYWxFeGNlcHRpb24gLFxuICAgICAgICBrZXksXG4gICAgICAgIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMsXG4gICAgICAgIG9yaWdpbmFsRXhjZXB0aW9uLFxuICAgICAgICAwLFxuICAgICAgKSxcbiAgICAgIG1heFZhbHVlTGltaXQsXG4gICAgKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhZ2dyZWdhdGVFeGNlcHRpb25zRnJvbUVycm9yKFxuICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgcGFyc2VyLFxuICBsaW1pdCxcbiAgZXJyb3IsXG4gIGtleSxcbiAgcHJldkV4Y2VwdGlvbnMsXG4gIGV4Y2VwdGlvbixcbiAgZXhjZXB0aW9uSWQsXG4pIHtcbiAgaWYgKHByZXZFeGNlcHRpb25zLmxlbmd0aCA+PSBsaW1pdCArIDEpIHtcbiAgICByZXR1cm4gcHJldkV4Y2VwdGlvbnM7XG4gIH1cblxuICBsZXQgbmV3RXhjZXB0aW9ucyA9IFsuLi5wcmV2RXhjZXB0aW9uc107XG5cbiAgLy8gUmVjdXJzaXZlbHkgY2FsbCB0aGlzIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHdhbGsgZG93biBhIGNoYWluIG9mIGVycm9yc1xuICBpZiAoaXNJbnN0YW5jZU9mKGVycm9yW2tleV0sIEVycm9yKSkge1xuICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JQYXJlbnRFeGNlcHRpb24oZXhjZXB0aW9uLCBleGNlcHRpb25JZCk7XG4gICAgY29uc3QgbmV3RXhjZXB0aW9uID0gZXhjZXB0aW9uRnJvbUVycm9ySW1wbGVtZW50YXRpb24ocGFyc2VyLCBlcnJvcltrZXldKTtcbiAgICBjb25zdCBuZXdFeGNlcHRpb25JZCA9IG5ld0V4Y2VwdGlvbnMubGVuZ3RoO1xuICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JDaGlsZEV4Y2VwdGlvbihuZXdFeGNlcHRpb24sIGtleSwgbmV3RXhjZXB0aW9uSWQsIGV4Y2VwdGlvbklkKTtcbiAgICBuZXdFeGNlcHRpb25zID0gYWdncmVnYXRlRXhjZXB0aW9uc0Zyb21FcnJvcihcbiAgICAgIGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uLFxuICAgICAgcGFyc2VyLFxuICAgICAgbGltaXQsXG4gICAgICBlcnJvcltrZXldLFxuICAgICAga2V5LFxuICAgICAgW25ld0V4Y2VwdGlvbiwgLi4ubmV3RXhjZXB0aW9uc10sXG4gICAgICBuZXdFeGNlcHRpb24sXG4gICAgICBuZXdFeGNlcHRpb25JZCxcbiAgICApO1xuICB9XG5cbiAgLy8gVGhpcyB3aWxsIGNyZWF0ZSBleGNlcHRpb24gZ3JvdXBpbmcgZm9yIEFnZ3JlZ2F0ZUVycm9yc1xuICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9BZ2dyZWdhdGVFcnJvclxuICBpZiAoQXJyYXkuaXNBcnJheShlcnJvci5lcnJvcnMpKSB7XG4gICAgZXJyb3IuZXJyb3JzLmZvckVhY2goKGNoaWxkRXJyb3IsIGkpID0+IHtcbiAgICAgIGlmIChpc0luc3RhbmNlT2YoY2hpbGRFcnJvciwgRXJyb3IpKSB7XG4gICAgICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JQYXJlbnRFeGNlcHRpb24oZXhjZXB0aW9uLCBleGNlcHRpb25JZCk7XG4gICAgICAgIGNvbnN0IG5ld0V4Y2VwdGlvbiA9IGV4Y2VwdGlvbkZyb21FcnJvckltcGxlbWVudGF0aW9uKHBhcnNlciwgY2hpbGRFcnJvcik7XG4gICAgICAgIGNvbnN0IG5ld0V4Y2VwdGlvbklkID0gbmV3RXhjZXB0aW9ucy5sZW5ndGg7XG4gICAgICAgIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JDaGlsZEV4Y2VwdGlvbihuZXdFeGNlcHRpb24sIGBlcnJvcnNbJHtpfV1gLCBuZXdFeGNlcHRpb25JZCwgZXhjZXB0aW9uSWQpO1xuICAgICAgICBuZXdFeGNlcHRpb25zID0gYWdncmVnYXRlRXhjZXB0aW9uc0Zyb21FcnJvcihcbiAgICAgICAgICBleGNlcHRpb25Gcm9tRXJyb3JJbXBsZW1lbnRhdGlvbixcbiAgICAgICAgICBwYXJzZXIsXG4gICAgICAgICAgbGltaXQsXG4gICAgICAgICAgY2hpbGRFcnJvcixcbiAgICAgICAgICBrZXksXG4gICAgICAgICAgW25ld0V4Y2VwdGlvbiwgLi4ubmV3RXhjZXB0aW9uc10sXG4gICAgICAgICAgbmV3RXhjZXB0aW9uLFxuICAgICAgICAgIG5ld0V4Y2VwdGlvbklkLFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIG5ld0V4Y2VwdGlvbnM7XG59XG5cbmZ1bmN0aW9uIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JQYXJlbnRFeGNlcHRpb24oZXhjZXB0aW9uLCBleGNlcHRpb25JZCkge1xuICAvLyBEb24ndCBrbm93IGlmIHRoaXMgZGVmYXVsdCBtYWtlcyBzZW5zZS4gVGhlIHByb3RvY29sIHJlcXVpcmVzIHVzIHRvIHNldCB0aGVzZSB2YWx1ZXMgc28gd2UgcGljayAqc29tZSogZGVmYXVsdC5cbiAgZXhjZXB0aW9uLm1lY2hhbmlzbSA9IGV4Y2VwdGlvbi5tZWNoYW5pc20gfHwgeyB0eXBlOiAnZ2VuZXJpYycsIGhhbmRsZWQ6IHRydWUgfTtcblxuICBleGNlcHRpb24ubWVjaGFuaXNtID0ge1xuICAgIC4uLmV4Y2VwdGlvbi5tZWNoYW5pc20sXG4gICAgLi4uKGV4Y2VwdGlvbi50eXBlID09PSAnQWdncmVnYXRlRXJyb3InICYmIHsgaXNfZXhjZXB0aW9uX2dyb3VwOiB0cnVlIH0pLFxuICAgIGV4Y2VwdGlvbl9pZDogZXhjZXB0aW9uSWQsXG4gIH07XG59XG5cbmZ1bmN0aW9uIGFwcGx5RXhjZXB0aW9uR3JvdXBGaWVsZHNGb3JDaGlsZEV4Y2VwdGlvbihcbiAgZXhjZXB0aW9uLFxuICBzb3VyY2UsXG4gIGV4Y2VwdGlvbklkLFxuICBwYXJlbnRJZCxcbikge1xuICAvLyBEb24ndCBrbm93IGlmIHRoaXMgZGVmYXVsdCBtYWtlcyBzZW5zZS4gVGhlIHByb3RvY29sIHJlcXVpcmVzIHVzIHRvIHNldCB0aGVzZSB2YWx1ZXMgc28gd2UgcGljayAqc29tZSogZGVmYXVsdC5cbiAgZXhjZXB0aW9uLm1lY2hhbmlzbSA9IGV4Y2VwdGlvbi5tZWNoYW5pc20gfHwgeyB0eXBlOiAnZ2VuZXJpYycsIGhhbmRsZWQ6IHRydWUgfTtcblxuICBleGNlcHRpb24ubWVjaGFuaXNtID0ge1xuICAgIC4uLmV4Y2VwdGlvbi5tZWNoYW5pc20sXG4gICAgdHlwZTogJ2NoYWluZWQnLFxuICAgIHNvdXJjZSxcbiAgICBleGNlcHRpb25faWQ6IGV4Y2VwdGlvbklkLFxuICAgIHBhcmVudF9pZDogcGFyZW50SWQsXG4gIH07XG59XG5cbi8qKlxuICogVHJ1bmNhdGUgdGhlIG1lc3NhZ2UgKGV4Y2VwdGlvbi52YWx1ZSkgb2YgYWxsIGV4Y2VwdGlvbnMgaW4gdGhlIGV2ZW50LlxuICogQmVjYXVzZSB0aGlzIGV2ZW50IHByb2Nlc3NvciBpcyByYW4gYWZ0ZXIgYGFwcGx5Q2xpZW50T3B0aW9uc2AsXG4gKiB3ZSBuZWVkIHRvIHRydW5jYXRlIHRoZSBtZXNzYWdlIG9mIHRoZSBhZGRlZCBleGNlcHRpb25zIGhlcmUuXG4gKi9cbmZ1bmN0aW9uIHRydW5jYXRlQWdncmVnYXRlRXhjZXB0aW9ucyhleGNlcHRpb25zLCBtYXhWYWx1ZUxlbmd0aCkge1xuICByZXR1cm4gZXhjZXB0aW9ucy5tYXAoZXhjZXB0aW9uID0+IHtcbiAgICBpZiAoZXhjZXB0aW9uLnZhbHVlKSB7XG4gICAgICBleGNlcHRpb24udmFsdWUgPSB0cnVuY2F0ZShleGNlcHRpb24udmFsdWUsIG1heFZhbHVlTGVuZ3RoKTtcbiAgICB9XG4gICAgcmV0dXJuIGV4Y2VwdGlvbjtcbiAgfSk7XG59XG5cbmV4cG9ydCB7IGFwcGx5QWdncmVnYXRlRXJyb3JzVG9FdmVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWdncmVnYXRlLWVycm9ycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/aggregate-errors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/anr.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/anr.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"callFrameToStackFrame\": function() { return /* binding */ callFrameToStackFrame; },\n/* harmony export */   \"watchdogTimer\": function() { return /* binding */ watchdogTimer; }\n/* harmony export */ });\n/* harmony import */ var _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node-stack-trace.js */ \"./node_modules/@sentry/utils/esm/node-stack-trace.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n\n\n/**\n * A node.js watchdog timer\n * @param pollInterval The interval that we expect to get polled at\n * @param anrThreshold The threshold for when we consider ANR\n * @param callback The callback to call for ANR\n * @returns An object with `poll` and `enabled` functions {@link WatchdogReturn}\n */\nfunction watchdogTimer(\n  createTimer,\n  pollInterval,\n  anrThreshold,\n  callback,\n) {\n  const timer = createTimer();\n  let triggered = false;\n  let enabled = true;\n\n  setInterval(() => {\n    const diffMs = timer.getTimeMs();\n\n    if (triggered === false && diffMs > pollInterval + anrThreshold) {\n      triggered = true;\n      if (enabled) {\n        callback();\n      }\n    }\n\n    if (diffMs < pollInterval + anrThreshold) {\n      triggered = false;\n    }\n  }, 20);\n\n  return {\n    poll: () => {\n      timer.reset();\n    },\n    enabled: (state) => {\n      enabled = state;\n    },\n  };\n}\n\n// types copied from inspector.d.ts\n\n/**\n * Converts Debugger.CallFrame to Sentry StackFrame\n */\nfunction callFrameToStackFrame(\n  frame,\n  url,\n  getModuleFromFilename,\n) {\n  const filename = url ? url.replace(/^file:\\/\\//, '') : undefined;\n\n  // CallFrame row/col are 0 based, whereas StackFrame are 1 based\n  const colno = frame.location.columnNumber ? frame.location.columnNumber + 1 : undefined;\n  const lineno = frame.location.lineNumber ? frame.location.lineNumber + 1 : undefined;\n\n  return (0,_object_js__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    filename,\n    module: getModuleFromFilename(filename),\n    function: frame.functionName || _stacktrace_js__WEBPACK_IMPORTED_MODULE_1__.UNKNOWN_FUNCTION,\n    colno,\n    lineno,\n    in_app: filename ? (0,_node_stack_trace_js__WEBPACK_IMPORTED_MODULE_2__.filenameIsInApp)(filename) : undefined,\n  });\n}\n\n\n//# sourceMappingURL=anr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYW5yLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXdEO0FBQ1I7QUFDRzs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLDZEQUFpQjtBQUMxQjtBQUNBO0FBQ0Esb0NBQW9DLDREQUFnQjtBQUNwRDtBQUNBO0FBQ0EsdUJBQXVCLHFFQUFlO0FBQ3RDLEdBQUc7QUFDSDs7QUFFZ0Q7QUFDaEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2Fuci5qcz9iYjFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZpbGVuYW1lSXNJbkFwcCB9IGZyb20gJy4vbm9kZS1zdGFjay10cmFjZS5qcyc7XG5pbXBvcnQgeyBkcm9wVW5kZWZpbmVkS2V5cyB9IGZyb20gJy4vb2JqZWN0LmpzJztcbmltcG9ydCB7IFVOS05PV05fRlVOQ1RJT04gfSBmcm9tICcuL3N0YWNrdHJhY2UuanMnO1xuXG4vKipcbiAqIEEgbm9kZS5qcyB3YXRjaGRvZyB0aW1lclxuICogQHBhcmFtIHBvbGxJbnRlcnZhbCBUaGUgaW50ZXJ2YWwgdGhhdCB3ZSBleHBlY3QgdG8gZ2V0IHBvbGxlZCBhdFxuICogQHBhcmFtIGFuclRocmVzaG9sZCBUaGUgdGhyZXNob2xkIGZvciB3aGVuIHdlIGNvbnNpZGVyIEFOUlxuICogQHBhcmFtIGNhbGxiYWNrIFRoZSBjYWxsYmFjayB0byBjYWxsIGZvciBBTlJcbiAqIEByZXR1cm5zIEFuIG9iamVjdCB3aXRoIGBwb2xsYCBhbmQgYGVuYWJsZWRgIGZ1bmN0aW9ucyB7QGxpbmsgV2F0Y2hkb2dSZXR1cm59XG4gKi9cbmZ1bmN0aW9uIHdhdGNoZG9nVGltZXIoXG4gIGNyZWF0ZVRpbWVyLFxuICBwb2xsSW50ZXJ2YWwsXG4gIGFuclRocmVzaG9sZCxcbiAgY2FsbGJhY2ssXG4pIHtcbiAgY29uc3QgdGltZXIgPSBjcmVhdGVUaW1lcigpO1xuICBsZXQgdHJpZ2dlcmVkID0gZmFsc2U7XG4gIGxldCBlbmFibGVkID0gdHJ1ZTtcblxuICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgY29uc3QgZGlmZk1zID0gdGltZXIuZ2V0VGltZU1zKCk7XG5cbiAgICBpZiAodHJpZ2dlcmVkID09PSBmYWxzZSAmJiBkaWZmTXMgPiBwb2xsSW50ZXJ2YWwgKyBhbnJUaHJlc2hvbGQpIHtcbiAgICAgIHRyaWdnZXJlZCA9IHRydWU7XG4gICAgICBpZiAoZW5hYmxlZCkge1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChkaWZmTXMgPCBwb2xsSW50ZXJ2YWwgKyBhbnJUaHJlc2hvbGQpIHtcbiAgICAgIHRyaWdnZXJlZCA9IGZhbHNlO1xuICAgIH1cbiAgfSwgMjApO1xuXG4gIHJldHVybiB7XG4gICAgcG9sbDogKCkgPT4ge1xuICAgICAgdGltZXIucmVzZXQoKTtcbiAgICB9LFxuICAgIGVuYWJsZWQ6IChzdGF0ZSkgPT4ge1xuICAgICAgZW5hYmxlZCA9IHN0YXRlO1xuICAgIH0sXG4gIH07XG59XG5cbi8vIHR5cGVzIGNvcGllZCBmcm9tIGluc3BlY3Rvci5kLnRzXG5cbi8qKlxuICogQ29udmVydHMgRGVidWdnZXIuQ2FsbEZyYW1lIHRvIFNlbnRyeSBTdGFja0ZyYW1lXG4gKi9cbmZ1bmN0aW9uIGNhbGxGcmFtZVRvU3RhY2tGcmFtZShcbiAgZnJhbWUsXG4gIHVybCxcbiAgZ2V0TW9kdWxlRnJvbUZpbGVuYW1lLFxuKSB7XG4gIGNvbnN0IGZpbGVuYW1lID0gdXJsID8gdXJsLnJlcGxhY2UoL15maWxlOlxcL1xcLy8sICcnKSA6IHVuZGVmaW5lZDtcblxuICAvLyBDYWxsRnJhbWUgcm93L2NvbCBhcmUgMCBiYXNlZCwgd2hlcmVhcyBTdGFja0ZyYW1lIGFyZSAxIGJhc2VkXG4gIGNvbnN0IGNvbG5vID0gZnJhbWUubG9jYXRpb24uY29sdW1uTnVtYmVyID8gZnJhbWUubG9jYXRpb24uY29sdW1uTnVtYmVyICsgMSA6IHVuZGVmaW5lZDtcbiAgY29uc3QgbGluZW5vID0gZnJhbWUubG9jYXRpb24ubGluZU51bWJlciA/IGZyYW1lLmxvY2F0aW9uLmxpbmVOdW1iZXIgKyAxIDogdW5kZWZpbmVkO1xuXG4gIHJldHVybiBkcm9wVW5kZWZpbmVkS2V5cyh7XG4gICAgZmlsZW5hbWUsXG4gICAgbW9kdWxlOiBnZXRNb2R1bGVGcm9tRmlsZW5hbWUoZmlsZW5hbWUpLFxuICAgIGZ1bmN0aW9uOiBmcmFtZS5mdW5jdGlvbk5hbWUgfHwgVU5LTk9XTl9GVU5DVElPTixcbiAgICBjb2xubyxcbiAgICBsaW5lbm8sXG4gICAgaW5fYXBwOiBmaWxlbmFtZSA/IGZpbGVuYW1lSXNJbkFwcChmaWxlbmFtZSkgOiB1bmRlZmluZWQsXG4gIH0pO1xufVxuXG5leHBvcnQgeyBjYWxsRnJhbWVUb1N0YWNrRnJhbWUsIHdhdGNoZG9nVGltZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFuci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/anr.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/array.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/array.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"flatten\": function() { return /* binding */ flatten; }\n/* harmony export */ });\n/** Flattens a multi-dimensional array */\nfunction flatten(input) {\n  const result = [];\n\n  const flattenHelper = (input) => {\n    input.forEach((el) => {\n      if (Array.isArray(el)) {\n        flattenHelper(el );\n      } else {\n        result.push(el );\n      }\n    });\n  };\n\n  flattenHelper(input);\n  return result;\n}\n\n\n//# sourceMappingURL=array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYXJyYXkuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2FycmF5LmpzPzYwZTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEZsYXR0ZW5zIGEgbXVsdGktZGltZW5zaW9uYWwgYXJyYXkgKi9cbmZ1bmN0aW9uIGZsYXR0ZW4oaW5wdXQpIHtcbiAgY29uc3QgcmVzdWx0ID0gW107XG5cbiAgY29uc3QgZmxhdHRlbkhlbHBlciA9IChpbnB1dCkgPT4ge1xuICAgIGlucHV0LmZvckVhY2goKGVsKSA9PiB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShlbCkpIHtcbiAgICAgICAgZmxhdHRlbkhlbHBlcihlbCApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzdWx0LnB1c2goZWwgKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBmbGF0dGVuSGVscGVyKGlucHV0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IHsgZmxhdHRlbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyYXkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/array.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/baggage.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/baggage.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BAGGAGE_HEADER_NAME\": function() { return /* binding */ BAGGAGE_HEADER_NAME; },\n/* harmony export */   \"MAX_BAGGAGE_STRING_LENGTH\": function() { return /* binding */ MAX_BAGGAGE_STRING_LENGTH; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX\": function() { return /* binding */ SENTRY_BAGGAGE_KEY_PREFIX; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX_REGEX\": function() { return /* binding */ SENTRY_BAGGAGE_KEY_PREFIX_REGEX; },\n/* harmony export */   \"baggageHeaderToDynamicSamplingContext\": function() { return /* binding */ baggageHeaderToDynamicSamplingContext; },\n/* harmony export */   \"dynamicSamplingContextToSentryBaggageHeader\": function() { return /* binding */ dynamicSamplingContextToSentryBaggageHeader; },\n/* harmony export */   \"parseBaggageHeader\": function() { return /* binding */ parseBaggageHeader; }\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  const baggageObject = parseBaggageHeader(baggageHeader);\n\n  if (!baggageObject) {\n    return undefined;\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Take a baggage header and parse it into an object.\n */\nfunction parseBaggageHeader(\n  baggageHeader,\n) {\n  if (!baggageHeader || (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(baggageHeader) && !Array.isArray(baggageHeader))) {\n    return undefined;\n  }\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    return baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      for (const key of Object.keys(currBaggageObject)) {\n        acc[key] = currBaggageObject[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  return baggageHeaderToObject(baggageHeader);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\n\n//# sourceMappingURL=baggage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYmFnZ2FnZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQStDO0FBQ1o7QUFDRTs7QUFFckM7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLElBQUk7O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQkFBMEIsRUFBRSxPQUFPO0FBQ2xEO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsTUFBTTtBQUNOOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGdEQUFRO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLElBQUk7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw0QkFBNEIsOEJBQThCLEdBQUcsZ0NBQWdDO0FBQzdGLG9FQUFvRSxjQUFjLEdBQUcsYUFBYTtBQUNsRztBQUNBLE1BQU0sd0RBQVc7QUFDakIsUUFBUSxtREFBVztBQUNuQiw2QkFBNkIsV0FBVyxZQUFZLGFBQWE7QUFDakU7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUU4TjtBQUM5TiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYmFnZ2FnZS5qcz8wZTIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4vaXMuanMnO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXIuanMnO1xuXG5jb25zdCBCQUdHQUdFX0hFQURFUl9OQU1FID0gJ2JhZ2dhZ2UnO1xuXG5jb25zdCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYID0gJ3NlbnRyeS0nO1xuXG5jb25zdCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYX1JFR0VYID0gL15zZW50cnktLztcblxuLyoqXG4gKiBNYXggbGVuZ3RoIG9mIGEgc2VyaWFsaXplZCBiYWdnYWdlIHN0cmluZ1xuICpcbiAqIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9iYWdnYWdlLyNsaW1pdHNcbiAqL1xuY29uc3QgTUFYX0JBR0dBR0VfU1RSSU5HX0xFTkdUSCA9IDgxOTI7XG5cbi8qKlxuICogVGFrZXMgYSBiYWdnYWdlIGhlYWRlciBhbmQgdHVybnMgaXQgaW50byBEeW5hbWljIFNhbXBsaW5nIENvbnRleHQsIGJ5IGV4dHJhY3RpbmcgYWxsIHRoZSBcInNlbnRyeS1cIiBwcmVmaXhlZCB2YWx1ZXNcbiAqIGZyb20gaXQuXG4gKlxuICogQHBhcmFtIGJhZ2dhZ2VIZWFkZXIgQSB2ZXJ5IGJyZWFkIGRlZmluaXRpb24gb2YgYSBiYWdnYWdlIGhlYWRlciBhcyBpdCBtaWdodCBhcHBlYXIgaW4gdmFyaW91cyBmcmFtZXdvcmtzLlxuICogQHJldHVybnMgVGhlIER5bmFtaWMgU2FtcGxpbmcgQ29udGV4dCB0aGF0IHdhcyBmb3VuZCBvbiBgYmFnZ2FnZUhlYWRlcmAsIGlmIHRoZXJlIHdhcyBhbnksIGB1bmRlZmluZWRgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gYmFnZ2FnZUhlYWRlclRvRHluYW1pY1NhbXBsaW5nQ29udGV4dChcbiAgLy8gVmVyeSBsaWJlcmFsIGRlZmluaXRpb24gb2Ygd2hhdCBhbnkgaW5jb21pbmcgaGVhZGVyIG1pZ2h0IGxvb2sgbGlrZVxuICBiYWdnYWdlSGVhZGVyLFxuKSB7XG4gIGNvbnN0IGJhZ2dhZ2VPYmplY3QgPSBwYXJzZUJhZ2dhZ2VIZWFkZXIoYmFnZ2FnZUhlYWRlcik7XG5cbiAgaWYgKCFiYWdnYWdlT2JqZWN0KSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8vIFJlYWQgYWxsIFwic2VudHJ5LVwiIHByZWZpeGVkIHZhbHVlcyBvdXQgb2YgdGhlIGJhZ2dhZ2Ugb2JqZWN0IGFuZCBwdXQgaXQgb250byBhIGR5bmFtaWMgc2FtcGxpbmcgY29udGV4dCBvYmplY3QuXG4gIGNvbnN0IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgPSBPYmplY3QuZW50cmllcyhiYWdnYWdlT2JqZWN0KS5yZWR1Y2UoKGFjYywgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgaWYgKGtleS5tYXRjaChTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYX1JFR0VYKSkge1xuICAgICAgY29uc3Qgbm9uUHJlZml4ZWRLZXkgPSBrZXkuc2xpY2UoU0VOVFJZX0JBR0dBR0VfS0VZX1BSRUZJWC5sZW5ndGgpO1xuICAgICAgYWNjW25vblByZWZpeGVkS2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG5cbiAgLy8gT25seSByZXR1cm4gYSBkeW5hbWljIHNhbXBsaW5nIGNvbnRleHQgb2JqZWN0IGlmIHRoZXJlIGFyZSBrZXlzIGluIGl0LlxuICAvLyBBIGtleWxlc3Mgb2JqZWN0IG1lYW5zIHRoZXJlIHdlcmUgbm8gc2VudHJ5IHZhbHVlcyBvbiB0aGUgaGVhZGVyLCB3aGljaCBtZWFucyB0aGF0IHRoZXJlIGlzIG5vIERTQy5cbiAgaWYgKE9iamVjdC5rZXlzKGR5bmFtaWNTYW1wbGluZ0NvbnRleHQpLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gZHluYW1pY1NhbXBsaW5nQ29udGV4dCA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG4vKipcbiAqIFR1cm5zIGEgRHluYW1pYyBTYW1wbGluZyBPYmplY3QgaW50byBhIGJhZ2dhZ2UgaGVhZGVyIGJ5IHByZWZpeGluZyBhbGwgdGhlIGtleXMgb24gdGhlIG9iamVjdCB3aXRoIFwic2VudHJ5LVwiLlxuICpcbiAqIEBwYXJhbSBkeW5hbWljU2FtcGxpbmdDb250ZXh0IFRoZSBEeW5hbWljIFNhbXBsaW5nIENvbnRleHQgdG8gdHVybiBpbnRvIGEgaGVhZGVyLiBGb3IgY29udmVuaWVuY2UgYW5kIGNvbXBhdGliaWxpdHlcbiAqIHdpdGggdGhlIGBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0YCBtZXRob2Qgb24gdGhlIFRyYW5zYWN0aW9uIGNsYXNzICx0aGlzIGFyZ3VtZW50IGNhbiBhbHNvIGJlIGB1bmRlZmluZWRgLiBJZiBpdCBpc1xuICogYHVuZGVmaW5lZGAgdGhlIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIGB1bmRlZmluZWRgLlxuICogQHJldHVybnMgYSBiYWdnYWdlIGhlYWRlciwgY3JlYXRlZCBmcm9tIGBkeW5hbWljU2FtcGxpbmdDb250ZXh0YCwgb3IgYHVuZGVmaW5lZGAgZWl0aGVyIGlmIGBkeW5hbWljU2FtcGxpbmdDb250ZXh0YFxuICogd2FzIGB1bmRlZmluZWRgLCBvciBpZiBgZHluYW1pY1NhbXBsaW5nQ29udGV4dGAgZGlkbid0IGNvbnRhaW4gYW55IHZhbHVlcy5cbiAqL1xuZnVuY3Rpb24gZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlcihcbiAgLy8gdGhpcyBhbHNvIHRha2VzIHVuZGVmaW5lZCBmb3IgY29udmVuaWVuY2UgYW5kIGJ1bmRsZSBzaXplIGluIG90aGVyIHBsYWNlc1xuICBkeW5hbWljU2FtcGxpbmdDb250ZXh0LFxuKSB7XG4gIGlmICghZHluYW1pY1NhbXBsaW5nQ29udGV4dCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvLyBQcmVmaXggYWxsIERTQyBrZXlzIHdpdGggXCJzZW50cnktXCIgYW5kIHB1dCB0aGVtIGludG8gYSBuZXcgb2JqZWN0XG4gIGNvbnN0IHNlbnRyeVByZWZpeGVkRFNDID0gT2JqZWN0LmVudHJpZXMoZHluYW1pY1NhbXBsaW5nQ29udGV4dCkucmVkdWNlKFxuICAgIChhY2MsIFtkc2NLZXksIGRzY1ZhbHVlXSkgPT4ge1xuICAgICAgaWYgKGRzY1ZhbHVlKSB7XG4gICAgICAgIGFjY1tgJHtTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYfSR7ZHNjS2V5fWBdID0gZHNjVmFsdWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sXG4gICAge30sXG4gICk7XG5cbiAgcmV0dXJuIG9iamVjdFRvQmFnZ2FnZUhlYWRlcihzZW50cnlQcmVmaXhlZERTQyk7XG59XG5cbi8qKlxuICogVGFrZSBhIGJhZ2dhZ2UgaGVhZGVyIGFuZCBwYXJzZSBpdCBpbnRvIGFuIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gcGFyc2VCYWdnYWdlSGVhZGVyKFxuICBiYWdnYWdlSGVhZGVyLFxuKSB7XG4gIGlmICghYmFnZ2FnZUhlYWRlciB8fCAoIWlzU3RyaW5nKGJhZ2dhZ2VIZWFkZXIpICYmICFBcnJheS5pc0FycmF5KGJhZ2dhZ2VIZWFkZXIpKSkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheShiYWdnYWdlSGVhZGVyKSkge1xuICAgIC8vIENvbWJpbmUgYWxsIGJhZ2dhZ2UgaGVhZGVycyBpbnRvIG9uZSBvYmplY3QgY29udGFpbmluZyB0aGUgYmFnZ2FnZSB2YWx1ZXMgc28gd2UgY2FuIGxhdGVyIHJlYWQgdGhlIFNlbnRyeS1EU0MtdmFsdWVzIGZyb20gaXRcbiAgICByZXR1cm4gYmFnZ2FnZUhlYWRlci5yZWR1Y2UoKGFjYywgY3VycikgPT4ge1xuICAgICAgY29uc3QgY3VyckJhZ2dhZ2VPYmplY3QgPSBiYWdnYWdlSGVhZGVyVG9PYmplY3QoY3Vycik7XG4gICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhjdXJyQmFnZ2FnZU9iamVjdCkpIHtcbiAgICAgICAgYWNjW2tleV0gPSBjdXJyQmFnZ2FnZU9iamVjdFtrZXldO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB7fSk7XG4gIH1cblxuICByZXR1cm4gYmFnZ2FnZUhlYWRlclRvT2JqZWN0KGJhZ2dhZ2VIZWFkZXIpO1xufVxuXG4vKipcbiAqIFdpbGwgcGFyc2UgYSBiYWdnYWdlIGhlYWRlciwgd2hpY2ggaXMgYSBzaW1wbGUga2V5LXZhbHVlIG1hcCwgaW50byBhIGZsYXQgb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBiYWdnYWdlSGVhZGVyIFRoZSBiYWdnYWdlIGhlYWRlciB0byBwYXJzZS5cbiAqIEByZXR1cm5zIGEgZmxhdCBvYmplY3QgY29udGFpbmluZyBhbGwgdGhlIGtleS12YWx1ZSBwYWlycyBmcm9tIGBiYWdnYWdlSGVhZGVyYC5cbiAqL1xuZnVuY3Rpb24gYmFnZ2FnZUhlYWRlclRvT2JqZWN0KGJhZ2dhZ2VIZWFkZXIpIHtcbiAgcmV0dXJuIGJhZ2dhZ2VIZWFkZXJcbiAgICAuc3BsaXQoJywnKVxuICAgIC5tYXAoYmFnZ2FnZUVudHJ5ID0+IGJhZ2dhZ2VFbnRyeS5zcGxpdCgnPScpLm1hcChrZXlPclZhbHVlID0+IGRlY29kZVVSSUNvbXBvbmVudChrZXlPclZhbHVlLnRyaW0oKSkpKVxuICAgIC5yZWR1Y2UoKGFjYywgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICBhY2Nba2V5XSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB7fSk7XG59XG5cbi8qKlxuICogVHVybnMgYSBmbGF0IG9iamVjdCAoa2V5LXZhbHVlIHBhaXJzKSBpbnRvIGEgYmFnZ2FnZSBoZWFkZXIsIHdoaWNoIGlzIGFsc28ganVzdCBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgb2JqZWN0IHRvIHR1cm4gaW50byBhIGJhZ2dhZ2UgaGVhZGVyLlxuICogQHJldHVybnMgYSBiYWdnYWdlIGhlYWRlciBzdHJpbmcsIG9yIGB1bmRlZmluZWRgIGlmIHRoZSBvYmplY3QgZGlkbid0IGhhdmUgYW55IHZhbHVlcywgc2luY2UgYW4gZW1wdHkgYmFnZ2FnZSBoZWFkZXJcbiAqIGlzIG5vdCBzcGVjIGNvbXBsaWFudC5cbiAqL1xuZnVuY3Rpb24gb2JqZWN0VG9CYWdnYWdlSGVhZGVyKG9iamVjdCkge1xuICBpZiAoT2JqZWN0LmtleXMob2JqZWN0KS5sZW5ndGggPT09IDApIHtcbiAgICAvLyBBbiBlbXB0eSBiYWdnYWdlIGhlYWRlciBpcyBub3Qgc3BlYyBjb21wbGlhbnQ6IFdlIHJldHVybiB1bmRlZmluZWQuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuZW50cmllcyhvYmplY3QpLnJlZHVjZSgoYmFnZ2FnZUhlYWRlciwgW29iamVjdEtleSwgb2JqZWN0VmFsdWVdLCBjdXJyZW50SW5kZXgpID0+IHtcbiAgICBjb25zdCBiYWdnYWdlRW50cnkgPSBgJHtlbmNvZGVVUklDb21wb25lbnQob2JqZWN0S2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQob2JqZWN0VmFsdWUpfWA7XG4gICAgY29uc3QgbmV3QmFnZ2FnZUhlYWRlciA9IGN1cnJlbnRJbmRleCA9PT0gMCA/IGJhZ2dhZ2VFbnRyeSA6IGAke2JhZ2dhZ2VIZWFkZXJ9LCR7YmFnZ2FnZUVudHJ5fWA7XG4gICAgaWYgKG5ld0JhZ2dhZ2VIZWFkZXIubGVuZ3RoID4gTUFYX0JBR0dBR0VfU1RSSU5HX0xFTkdUSCkge1xuICAgICAgREVCVUdfQlVJTEQgJiZcbiAgICAgICAgbG9nZ2VyLndhcm4oXG4gICAgICAgICAgYE5vdCBhZGRpbmcga2V5OiAke29iamVjdEtleX0gd2l0aCB2YWw6ICR7b2JqZWN0VmFsdWV9IHRvIGJhZ2dhZ2UgaGVhZGVyIGR1ZSB0byBleGNlZWRpbmcgYmFnZ2FnZSBzaXplIGxpbWl0cy5gLFxuICAgICAgICApO1xuICAgICAgcmV0dXJuIGJhZ2dhZ2VIZWFkZXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXdCYWdnYWdlSGVhZGVyO1xuICAgIH1cbiAgfSwgJycpO1xufVxuXG5leHBvcnQgeyBCQUdHQUdFX0hFQURFUl9OQU1FLCBNQVhfQkFHR0FHRV9TVFJJTkdfTEVOR1RILCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYLCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYX1JFR0VYLCBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0LCBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyLCBwYXJzZUJhZ2dhZ2VIZWFkZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhZ2dhZ2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/baggage.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/browser.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getComponentName\": function() { return /* binding */ getComponentName; },\n/* harmony export */   \"getDomElement\": function() { return /* binding */ getDomElement; },\n/* harmony export */   \"getLocationHref\": function() { return /* binding */ getLocationHref; },\n/* harmony export */   \"htmlTreeAsString\": function() { return /* binding */ htmlTreeAsString; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\nconst WINDOW = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset) {\n      if (elem.dataset['sentryComponent']) {\n        return elem.dataset['sentryComponent'];\n      }\n      if (elem.dataset['sentryElement']) {\n        return elem.dataset['sentryElement'];\n      }\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    className = elem.className;\n    if (className && (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` or `data-sentry-element` attribute with `data-sentry-component` taking\n * precendence. This attribute is added at build-time by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nfunction getComponentName(elem) {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem ;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement) {\n      if (currentElem.dataset['sentryComponent']) {\n        return currentElem.dataset['sentryComponent'];\n      }\n      if (currentElem.dataset['sentryElement']) {\n        return currentElem.dataset['sentryElement'];\n      }\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n\n\n//# sourceMappingURL=browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/browser.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_asyncNullishCoalesce\": function() { return /* binding */ _asyncNullishCoalesce; }\n/* harmony export */ });\n/* harmony import */ var _nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_nullishCoalesce.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nasync function _asyncNullishCoalesce(lhs, rhsFn) {\n  return (0,_nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_0__._nullishCoalesce)(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }\n\n\n//# sourceMappingURL=_asyncNullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEOztBQUV6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxxRUFBZ0I7QUFDekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVpQztBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzPzkxYzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX251bGxpc2hDb2FsZXNjZSB9IGZyb20gJy4vX251bGxpc2hDb2FsZXNjZS5qcyc7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL3RyZWUvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5ZlxuLy9cbi8vIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuLy9cbi8vIENvcHlyaWdodCAoYykgMjAxMi0yMDE4IHZhcmlvdXMgY29udHJpYnV0b3JzIChzZWUgQVVUSE9SUylcbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcbi8vIFNPRlRXQVJFLlxuXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBudWxsaXNoIGNvYWxlc2Npbmcgb3BlcmF0b3IgKGA/P2ApLCB3aGVuIHVzZWQgaW4gc2l0dWF0aW9ucyB3aGVyZSBhdCBsZWFzdCBvbmUgb2YgdGhlIHZhbHVlcyBpcyB0aGVcbiAqIHJlc3VsdCBvZiBhbiBhc3luYyBvcGVyYXRpb24uXG4gKlxuICogTm90ZSB0aGF0IHRoZSBSSFMgaXMgd3JhcHBlZCBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgaWYgaXQncyBhIGNvbXB1dGVkIHZhbHVlLCB0aGF0IGV2YWx1YXRpb24gd29uJ3QgaGFwcGVuIHVubGVzcyB0aGVcbiAqIExIUyBldmFsdWF0ZXMgdG8gYSBudWxsaXNoIHZhbHVlLCB0byBtaW1pYyB0aGUgb3BlcmF0b3IncyBzaG9ydC1jaXJjdWl0aW5nIGJlaGF2aW9yLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSlcbiAqXG4gKiBAcGFyYW0gbGhzIFRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiB0byB0aGUgbGVmdCBvZiB0aGUgYD8/YFxuICogQHBhcmFtIHJoc0ZuIEEgZnVuY3Rpb24gcmV0dXJuaW5nIHRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiB0byB0aGUgcmlnaHQgb2YgdGhlIGA/P2BcbiAqIEByZXR1cm5zIFRoZSBMSFMgdmFsdWUsIHVubGVzcyBpdCdzIGBudWxsYCBvciBgdW5kZWZpbmVkYCwgaW4gd2hpY2ggY2FzZSwgdGhlIFJIUyB2YWx1ZVxuICovXG5hc3luYyBmdW5jdGlvbiBfYXN5bmNOdWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuICByZXR1cm4gX251bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gYXN5bmMgZnVuY3Rpb24gX2FzeW5jTnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pIHtcbi8vICAgaWYgKGxocyAhPSBudWxsKSB7XG4vLyAgICAgcmV0dXJuIGxocztcbi8vICAgfSBlbHNlIHtcbi8vICAgICByZXR1cm4gYXdhaXQgcmhzRm4oKTtcbi8vICAgfVxuLy8gfVxuXG5leHBvcnQgeyBfYXN5bmNOdWxsaXNoQ29hbGVzY2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9hc3luY051bGxpc2hDb2FsZXNjZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_asyncOptionalChain\": function() { return /* binding */ _asyncOptionalChain; }\n/* harmony export */ });\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, for situations in which at least one part of the expression is async.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nasync function _asyncOptionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = await fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = await fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version:\n// async function _asyncOptionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = await fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = await fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\n\n//# sourceMappingURL=_asyncOptionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2FzeW5jT3B0aW9uYWxDaGFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW4uanM/M2IxZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgb3B0aW9uYWwgY2hhaW4gb3BlcmF0b3IsIGA/LmAsIGdpdmVuIHByZXZpb3VzIGNvbnZlcnNpb24gb2YgdGhlIGV4cHJlc3Npb24gaW50byBhbiBhcnJheSBvZiB2YWx1ZXMsXG4gKiBkZXNjcmlwdG9ycywgYW5kIGZ1bmN0aW9ucywgZm9yIHNpdHVhdGlvbnMgaW4gd2hpY2ggYXQgbGVhc3Qgb25lIHBhcnQgb2YgdGhlIGV4cHJlc3Npb24gaXMgYXN5bmMuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKSBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL2Jsb2IvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5Zi9zcmMvdHJhbnNmb3JtZXJzL09wdGlvbmFsQ2hhaW5pbmdOdWxsaXNoVHJhbnNmb3JtZXIudHMjTDE1XG4gKlxuICogQHBhcmFtIG9wcyBBcnJheSByZXN1bHQgb2YgZXhwcmVzc2lvbiBjb252ZXJzaW9uXG4gKiBAcmV0dXJucyBUaGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb25cbiAqL1xuYXN5bmMgZnVuY3Rpb24gX2FzeW5jT3B0aW9uYWxDaGFpbihvcHMpIHtcbiAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gIGxldCB2YWx1ZSA9IG9wc1swXTtcbiAgbGV0IGkgPSAxO1xuICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbiAgICBjb25zdCBvcCA9IG9wc1tpXSA7XG4gICAgY29uc3QgZm4gPSBvcHNbaSArIDFdIDtcbiAgICBpICs9IDI7XG4gICAgLy8gYnkgY2hlY2tpbmcgZm9yIGxvb3NlIGVxdWFsaXR5IHRvIGBudWxsYCwgd2UgY2F0Y2ggYm90aCBgbnVsbGAgYW5kIGB1bmRlZmluZWRgXG4gICAgaWYgKChvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpICYmIHZhbHVlID09IG51bGwpIHtcbiAgICAgIC8vIHJlYWxseSB3ZSdyZSBtZWFuaW5nIHRvIHJldHVybiBgdW5kZWZpbmVkYCBhcyBhbiBhY3R1YWwgdmFsdWUgaGVyZSwgYnV0IGl0IHNhdmVzIGJ5dGVzIG5vdCB0byB3cml0ZSBpdFxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4gICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4gICAgICB2YWx1ZSA9IGF3YWl0IGZuKHZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4gICAgICB2YWx1ZSA9IGF3YWl0IGZuKCguLi5hcmdzKSA9PiAodmFsdWUgKS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbiAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gYXN5bmMgZnVuY3Rpb24gX2FzeW5jT3B0aW9uYWxDaGFpbihvcHMpIHtcbi8vICAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgIGxldCB2YWx1ZSA9IG9wc1swXTtcbi8vICAgbGV0IGkgPSAxO1xuLy8gICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbi8vICAgICBjb25zdCBvcCA9IG9wc1tpXTtcbi8vICAgICBjb25zdCBmbiA9IG9wc1tpICsgMV07XG4vLyAgICAgaSArPSAyO1xuLy8gICAgIGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7XG4vLyAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuLy8gICAgIH1cbi8vICAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4vLyAgICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4vLyAgICAgICB2YWx1ZSA9IGF3YWl0IGZuKHZhbHVlKTtcbi8vICAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4vLyAgICAgICB2YWx1ZSA9IGF3YWl0IGZuKCguLi5hcmdzKSA9PiB2YWx1ZS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbi8vICAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgICAgfVxuLy8gICB9XG4vLyAgIHJldHVybiB2YWx1ZTtcbi8vIH1cblxuZXhwb3J0IHsgX2FzeW5jT3B0aW9uYWxDaGFpbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2FzeW5jT3B0aW9uYWxDaGFpbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChainDelete.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChainDelete.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_asyncOptionalChainDelete\": function() { return /* binding */ _asyncOptionalChainDelete; }\n/* harmony export */ });\n/* harmony import */ var _asyncOptionalChain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_asyncOptionalChain.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js\");\n\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nasync function _asyncOptionalChainDelete(ops) {\n  const result = (await (0,_asyncOptionalChain_js__WEBPACK_IMPORTED_MODULE_0__._asyncOptionalChain)(ops)) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : (result );\n}\n\n// Sucrase version:\n// async function asyncOptionalChainDelete(ops) {\n//   const result = await ASYNC_OPTIONAL_CHAIN_NAME(ops);\n//   return result == null ? true : result;\n// }\n\n\n//# sourceMappingURL=_asyncOptionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErRDs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkVBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFcUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUuanM/NjBkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfYXN5bmNPcHRpb25hbENoYWluIH0gZnJvbSAnLi9fYXN5bmNPcHRpb25hbENoYWluLmpzJztcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvdHJlZS8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmXG4vL1xuLy8gVGhlIE1JVCBMaWNlbnNlIChNSVQpXG4vL1xuLy8gQ29weXJpZ2h0IChjKSAyMDEyLTIwMTggdmFyaW91cyBjb250cmlidXRvcnMgKHNlZSBBVVRIT1JTKVxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbi8vIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRVxuLy8gU09GVFdBUkUuXG5cblxuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgdGhlIG9wdGlvbmFsIGNoYWluIG9wZXJhdG9yLCBgPy5gLCBnaXZlbiBwcmV2aW91cyBjb252ZXJzaW9uIG9mIHRoZSBleHByZXNzaW9uIGludG8gYW4gYXJyYXkgb2YgdmFsdWVzLFxuICogZGVzY3JpcHRvcnMsIGFuZCBmdW5jdGlvbnMsIGluIGNhc2VzIHdoZXJlIHRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiBpcyB0byBiZSBkZWxldGVkLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSkgU2VlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS9ibG9iLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWYvc3JjL3RyYW5zZm9ybWVycy9PcHRpb25hbENoYWluaW5nTnVsbGlzaFRyYW5zZm9ybWVyLnRzI0wxNVxuICpcbiAqIEBwYXJhbSBvcHMgQXJyYXkgcmVzdWx0IG9mIGV4cHJlc3Npb24gY29udmVyc2lvblxuICogQHJldHVybnMgVGhlIHJldHVybiB2YWx1ZSBvZiB0aGUgYGRlbGV0ZWAgb3BlcmF0b3I6IGB0cnVlYCwgdW5sZXNzIHRoZSBkZWxldGlvbiB0YXJnZXQgaXMgYW4gb3duLCBub24tY29uZmlndXJhYmxlXG4gKiBwcm9wZXJ0eSAob25lIHdoaWNoIGNhbid0IGJlIGRlbGV0ZWQgb3IgdHVybmVkIGludG8gYW4gYWNjZXNzb3IsIGFuZCB3aG9zZSBlbnVtZXJhYmlsaXR5IGNhbid0IGJlIGNoYW5nZWQpLCBpbiB3aGljaFxuICogY2FzZSBgZmFsc2VgLlxuICovXG5hc3luYyBmdW5jdGlvbiBfYXN5bmNPcHRpb25hbENoYWluRGVsZXRlKG9wcykge1xuICBjb25zdCByZXN1bHQgPSAoYXdhaXQgX2FzeW5jT3B0aW9uYWxDaGFpbihvcHMpKSA7XG4gIC8vIElmIGByZXN1bHRgIGlzIGBudWxsYCwgaXQgbWVhbnMgd2UgZGlkbid0IGdldCB0byB0aGUgZW5kIG9mIHRoZSBjaGFpbiBhbmQgc28gbm90aGluZyB3YXMgZGVsZXRlZCAoaW4gd2hpY2ggY2FzZSxcbiAgLy8gcmV0dXJuIGB0cnVlYCBzaW5jZSB0aGF0J3Mgd2hhdCBgZGVsZXRlYCBkb2VzIHdoZW4gaXQgbm8tb3BzKS4gSWYgaXQncyBub24tbnVsbCwgd2Uga25vdyB0aGUgZGVsZXRlIGhhcHBlbmVkLCBpblxuICAvLyB3aGljaCBjYXNlIHdlIHJldHVybiB3aGF0ZXZlciB0aGUgYGRlbGV0ZWAgcmV0dXJuZWQsIHdoaWNoIHdpbGwgYmUgYSBib29sZWFuLlxuICByZXR1cm4gcmVzdWx0ID09IG51bGwgPyB0cnVlIDogKHJlc3VsdCApO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBhc3luYyBmdW5jdGlvbiBhc3luY09wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4vLyAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IEFTWU5DX09QVElPTkFMX0NIQUlOX05BTUUob3BzKTtcbi8vICAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbi8vIH1cblxuZXhwb3J0IHsgX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChainDelete.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_nullishCoalesce\": function() { return /* binding */ _nullishCoalesce; }\n/* harmony export */ });\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\n\n//# sourceMappingURL=_nullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX251bGxpc2hDb2FsZXNjZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscy9fbnVsbGlzaENvYWxlc2NlLmpzPzZjZGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UvdHJlZS8yNjU4ODc4Njg5NjY5MTdmM2I5MjRjZTM4ZGZhZDAxZmJhYjEzMjlmXG4vL1xuLy8gVGhlIE1JVCBMaWNlbnNlIChNSVQpXG4vL1xuLy8gQ29weXJpZ2h0IChjKSAyMDEyLTIwMTggdmFyaW91cyBjb250cmlidXRvcnMgKHNlZSBBVVRIT1JTKVxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbi8vIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRVxuLy8gU09GVFdBUkUuXG5cbi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBudWxsaXNoIGNvYWxlc2Npbmcgb3BlcmF0b3IgKGA/P2ApLlxuICpcbiAqIE5vdGUgdGhhdCB0aGUgUkhTIGlzIHdyYXBwZWQgaW4gYSBmdW5jdGlvbiBzbyB0aGF0IGlmIGl0J3MgYSBjb21wdXRlZCB2YWx1ZSwgdGhhdCBldmFsdWF0aW9uIHdvbid0IGhhcHBlbiB1bmxlc3MgdGhlXG4gKiBMSFMgZXZhbHVhdGVzIHRvIGEgbnVsbGlzaCB2YWx1ZSwgdG8gbWltaWMgdGhlIG9wZXJhdG9yJ3Mgc2hvcnQtY2lyY3VpdGluZyBiZWhhdmlvci5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpXG4gKlxuICogQHBhcmFtIGxocyBUaGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gdG8gdGhlIGxlZnQgb2YgdGhlIGA/P2BcbiAqIEBwYXJhbSByaHNGbiBBIGZ1bmN0aW9uIHJldHVybmluZyB0aGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gdG8gdGhlIHJpZ2h0IG9mIHRoZSBgPz9gXG4gKiBAcmV0dXJucyBUaGUgTEhTIHZhbHVlLCB1bmxlc3MgaXQncyBgbnVsbGAgb3IgYHVuZGVmaW5lZGAsIGluIHdoaWNoIGNhc2UsIHRoZSBSSFMgdmFsdWVcbiAqL1xuZnVuY3Rpb24gX251bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKSB7XG4gIC8vIGJ5IGNoZWNraW5nIGZvciBsb29zZSBlcXVhbGl0eSB0byBgbnVsbGAsIHdlIGNhdGNoIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuICByZXR1cm4gbGhzICE9IG51bGwgPyBsaHMgOiByaHNGbigpO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBmdW5jdGlvbiBfbnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pIHtcbi8vICAgaWYgKGxocyAhPSBudWxsKSB7XG4vLyAgICAgcmV0dXJuIGxocztcbi8vICAgfSBlbHNlIHtcbi8vICAgICByZXR1cm4gcmhzRm4oKTtcbi8vICAgfVxuLy8gfVxuXG5leHBvcnQgeyBfbnVsbGlzaENvYWxlc2NlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fbnVsbGlzaENvYWxlc2NlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_optionalChain\": function() { return /* binding */ _optionalChain; }\n/* harmony export */ });\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\n\n//# sourceMappingURL=_optionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscy9fb3B0aW9uYWxDaGFpbi5qcz83OTcwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBvcHRpb25hbCBjaGFpbiBvcGVyYXRvciwgYD8uYCwgZ2l2ZW4gcHJldmlvdXMgY29udmVyc2lvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbnRvIGFuIGFycmF5IG9mIHZhbHVlcyxcbiAqIGRlc2NyaXB0b3JzLCBhbmQgZnVuY3Rpb25zLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSlcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS9ibG9iLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWYvc3JjL3RyYW5zZm9ybWVycy9PcHRpb25hbENoYWluaW5nTnVsbGlzaFRyYW5zZm9ybWVyLnRzI0wxNVxuICpcbiAqIEBwYXJhbSBvcHMgQXJyYXkgcmVzdWx0IG9mIGV4cHJlc3Npb24gY29udmVyc2lvblxuICogQHJldHVybnMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uXG4gKi9cbmZ1bmN0aW9uIF9vcHRpb25hbENoYWluKG9wcykge1xuICBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbiAgbGV0IHZhbHVlID0gb3BzWzBdO1xuICBsZXQgaSA9IDE7XG4gIHdoaWxlIChpIDwgb3BzLmxlbmd0aCkge1xuICAgIGNvbnN0IG9wID0gb3BzW2ldIDtcbiAgICBjb25zdCBmbiA9IG9wc1tpICsgMV0gO1xuICAgIGkgKz0gMjtcbiAgICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbiAgICBpZiAoKG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykgJiYgdmFsdWUgPT0gbnVsbCkge1xuICAgICAgLy8gcmVhbGx5IHdlJ3JlIG1lYW5pbmcgdG8gcmV0dXJuIGB1bmRlZmluZWRgIGFzIGFuIGFjdHVhbCB2YWx1ZSBoZXJlLCBidXQgaXQgc2F2ZXMgYnl0ZXMgbm90IHRvIHdyaXRlIGl0XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChvcCA9PT0gJ2FjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbEFjY2VzcycpIHtcbiAgICAgIGxhc3RBY2Nlc3NMSFMgPSB2YWx1ZTtcbiAgICAgIHZhbHVlID0gZm4odmFsdWUpO1xuICAgIH0gZWxzZSBpZiAob3AgPT09ICdjYWxsJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpIHtcbiAgICAgIHZhbHVlID0gZm4oKC4uLmFyZ3MpID0+ICh2YWx1ZSApLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpO1xuICAgICAgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb25cbi8vIGZ1bmN0aW9uIF9vcHRpb25hbENoYWluKG9wcykge1xuLy8gICBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbi8vICAgbGV0IHZhbHVlID0gb3BzWzBdO1xuLy8gICBsZXQgaSA9IDE7XG4vLyAgIHdoaWxlIChpIDwgb3BzLmxlbmd0aCkge1xuLy8gICAgIGNvbnN0IG9wID0gb3BzW2ldO1xuLy8gICAgIGNvbnN0IGZuID0gb3BzW2kgKyAxXTtcbi8vICAgICBpICs9IDI7XG4vLyAgICAgaWYgKChvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpICYmIHZhbHVlID09IG51bGwpIHtcbi8vICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4vLyAgICAgfVxuLy8gICAgIGlmIChvcCA9PT0gJ2FjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbEFjY2VzcycpIHtcbi8vICAgICAgIGxhc3RBY2Nlc3NMSFMgPSB2YWx1ZTtcbi8vICAgICAgIHZhbHVlID0gZm4odmFsdWUpO1xuLy8gICAgIH0gZWxzZSBpZiAob3AgPT09ICdjYWxsJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpIHtcbi8vICAgICAgIHZhbHVlID0gZm4oKC4uLmFyZ3MpID0+IHZhbHVlLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpO1xuLy8gICAgICAgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbi8vICAgICB9XG4vLyAgIH1cbi8vICAgcmV0dXJuIHZhbHVlO1xuLy8gfVxuXG5leHBvcnQgeyBfb3B0aW9uYWxDaGFpbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X29wdGlvbmFsQ2hhaW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_optionalChainDelete\": function() { return /* binding */ _optionalChainDelete; }\n/* harmony export */ });\n/* harmony import */ var _optionalChain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_optionalChain.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n\n\n// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nfunction _optionalChainDelete(ops) {\n  const result = (0,_optionalChain_js__WEBPACK_IMPORTED_MODULE_0__._optionalChain)(ops) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }\n\n\n//# sourceMappingURL=_optionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW5EZWxldGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlFQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW5EZWxldGUuanM/MjhlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfb3B0aW9uYWxDaGFpbiB9IGZyb20gJy4vX29wdGlvbmFsQ2hhaW4uanMnO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS90cmVlLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWZcbi8vXG4vLyBUaGUgTUlUIExpY2Vuc2UgKE1JVClcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTItMjAxOCB2YXJpb3VzIGNvbnRyaWJ1dG9ycyAoc2VlIEFVVEhPUlMpXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbFxuLy8gY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXG4vLyBTT0ZUV0FSRS5cblxuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgb3B0aW9uYWwgY2hhaW4gb3BlcmF0b3IsIGA/LmAsIGdpdmVuIHByZXZpb3VzIGNvbnZlcnNpb24gb2YgdGhlIGV4cHJlc3Npb24gaW50byBhbiBhcnJheSBvZiB2YWx1ZXMsXG4gKiBkZXNjcmlwdG9ycywgYW5kIGZ1bmN0aW9ucywgaW4gY2FzZXMgd2hlcmUgdGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIGlzIHRvIGJlIGRlbGV0ZWQuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKSBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL2Jsb2IvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5Zi9zcmMvdHJhbnNmb3JtZXJzL09wdGlvbmFsQ2hhaW5pbmdOdWxsaXNoVHJhbnNmb3JtZXIudHMjTDE1XG4gKlxuICogQHBhcmFtIG9wcyBBcnJheSByZXN1bHQgb2YgZXhwcmVzc2lvbiBjb252ZXJzaW9uXG4gKiBAcmV0dXJucyBUaGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBgZGVsZXRlYCBvcGVyYXRvcjogYHRydWVgLCB1bmxlc3MgdGhlIGRlbGV0aW9uIHRhcmdldCBpcyBhbiBvd24sIG5vbi1jb25maWd1cmFibGVcbiAqIHByb3BlcnR5IChvbmUgd2hpY2ggY2FuJ3QgYmUgZGVsZXRlZCBvciB0dXJuZWQgaW50byBhbiBhY2Nlc3NvciwgYW5kIHdob3NlIGVudW1lcmFiaWxpdHkgY2FuJ3QgYmUgY2hhbmdlZCksIGluIHdoaWNoXG4gKiBjYXNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIF9vcHRpb25hbENoYWluRGVsZXRlKG9wcykge1xuICBjb25zdCByZXN1bHQgPSBfb3B0aW9uYWxDaGFpbihvcHMpIDtcbiAgLy8gSWYgYHJlc3VsdGAgaXMgYG51bGxgLCBpdCBtZWFucyB3ZSBkaWRuJ3QgZ2V0IHRvIHRoZSBlbmQgb2YgdGhlIGNoYWluIGFuZCBzbyBub3RoaW5nIHdhcyBkZWxldGVkIChpbiB3aGljaCBjYXNlLFxuICAvLyByZXR1cm4gYHRydWVgIHNpbmNlIHRoYXQncyB3aGF0IGBkZWxldGVgIGRvZXMgd2hlbiBpdCBuby1vcHMpLiBJZiBpdCdzIG5vbi1udWxsLCB3ZSBrbm93IHRoZSBkZWxldGUgaGFwcGVuZWQsIGluXG4gIC8vIHdoaWNoIGNhc2Ugd2UgcmV0dXJuIHdoYXRldmVyIHRoZSBgZGVsZXRlYCByZXR1cm5lZCwgd2hpY2ggd2lsbCBiZSBhIGJvb2xlYW4uXG4gIHJldHVybiByZXN1bHQgPT0gbnVsbCA/IHRydWUgOiByZXN1bHQ7XG59XG5cbi8vIFN1Y3Jhc2UgdmVyc2lvbjpcbi8vIGZ1bmN0aW9uIF9vcHRpb25hbENoYWluRGVsZXRlKG9wcykge1xuLy8gICBjb25zdCByZXN1bHQgPSBfb3B0aW9uYWxDaGFpbihvcHMpO1xuLy8gICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbi8vICAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbi8vIH1cblxuZXhwb3J0IHsgX29wdGlvbmFsQ2hhaW5EZWxldGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9vcHRpb25hbENoYWluRGVsZXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/cache.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/cache.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeFifoCache\": function() { return /* binding */ makeFifoCache; }\n/* harmony export */ });\n/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nfunction makeFifoCache(\n  size,\n)\n\n {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder = [];\n  let cache = {};\n\n  return {\n    add(key, value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key) {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key) {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n\n      return true;\n    },\n  };\n}\n\n\n//# sourceMappingURL=cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vY2FjaGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxzQkFBc0IsMEJBQTBCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2NhY2hlLmpzPzFlNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVzIGEgY2FjaGUgdGhhdCBldmljdHMga2V5cyBpbiBmaWZvIG9yZGVyXG4gKiBAcGFyYW0gc2l6ZSB7TnVtYmVyfVxuICovXG5mdW5jdGlvbiBtYWtlRmlmb0NhY2hlKFxuICBzaXplLFxuKVxuXG4ge1xuICAvLyBNYWludGFpbiBhIGZpZm8gcXVldWUgb2Yga2V5cywgd2UgY2Fubm90IHJlbHkgb24gT2JqZWN0LmtleXMgYXMgdGhlIGJyb3dzZXIgbWF5IG5vdCBzdXBwb3J0IGl0LlxuICBsZXQgZXZpY3Rpb25PcmRlciA9IFtdO1xuICBsZXQgY2FjaGUgPSB7fTtcblxuICByZXR1cm4ge1xuICAgIGFkZChrZXksIHZhbHVlKSB7XG4gICAgICB3aGlsZSAoZXZpY3Rpb25PcmRlci5sZW5ndGggPj0gc2l6ZSkge1xuICAgICAgICAvLyBzaGlmdCBpcyBPKG4pIGJ1dCB0aGlzIGlzIHNtYWxsIHNpemUgYW5kIG9ubHkgaGFwcGVucyBpZiB3ZSBhcmVcbiAgICAgICAgLy8gZXhjZWVkaW5nIHRoZSBjYWNoZSBzaXplIHNvIGl0IHNob3VsZCBiZSBmaW5lLlxuICAgICAgICBjb25zdCBldmljdENhbmRpZGF0ZSA9IGV2aWN0aW9uT3JkZXIuc2hpZnQoKTtcblxuICAgICAgICBpZiAoZXZpY3RDYW5kaWRhdGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZHluYW1pYy1kZWxldGVcbiAgICAgICAgICBkZWxldGUgY2FjaGVbZXZpY3RDYW5kaWRhdGVdO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGluIGNhc2Ugd2UgaGF2ZSBhIGNvbGxpc2lvbiwgZGVsZXRlIHRoZSBvbGQga2V5LlxuICAgICAgaWYgKGNhY2hlW2tleV0pIHtcbiAgICAgICAgdGhpcy5kZWxldGUoa2V5KTtcbiAgICAgIH1cblxuICAgICAgZXZpY3Rpb25PcmRlci5wdXNoKGtleSk7XG4gICAgICBjYWNoZVtrZXldID0gdmFsdWU7XG4gICAgfSxcbiAgICBjbGVhcigpIHtcbiAgICAgIGNhY2hlID0ge307XG4gICAgICBldmljdGlvbk9yZGVyID0gW107XG4gICAgfSxcbiAgICBnZXQoa2V5KSB7XG4gICAgICByZXR1cm4gY2FjaGVba2V5XTtcbiAgICB9LFxuICAgIHNpemUoKSB7XG4gICAgICByZXR1cm4gZXZpY3Rpb25PcmRlci5sZW5ndGg7XG4gICAgfSxcbiAgICAvLyBEZWxldGUgY2FjaGUga2V5IGFuZCByZXR1cm4gdHJ1ZSBpZiBpdCBleGlzdGVkLCBmYWxzZSBvdGhlcndpc2UuXG4gICAgZGVsZXRlKGtleSkge1xuICAgICAgaWYgKCFjYWNoZVtrZXldKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1keW5hbWljLWRlbGV0ZVxuICAgICAgZGVsZXRlIGNhY2hlW2tleV07XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXZpY3Rpb25PcmRlci5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoZXZpY3Rpb25PcmRlcltpXSA9PT0ga2V5KSB7XG4gICAgICAgICAgZXZpY3Rpb25PcmRlci5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgfTtcbn1cblxuZXhwb3J0IHsgbWFrZUZpZm9DYWNoZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FjaGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/cache.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/clientreport.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/clientreport.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createClientReportEnvelope\": function() { return /* binding */ createClientReportEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time.js */ \"./node_modules/@sentry/utils/esm/time.js\");\n\n\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || (0,_time_js__WEBPACK_IMPORTED_MODULE_0__.dateTimestampInSeconds)(),\n      discarded_events,\n    },\n  ];\n  return (0,_envelope_js__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\n\n//# sourceMappingURL=clientreport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vY2xpZW50cmVwb3J0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNJOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx1QkFBdUI7QUFDN0I7QUFDQSw4QkFBOEIsZ0VBQXNCO0FBQ3BEO0FBQ0EsS0FBSztBQUNMO0FBQ0EsU0FBUyw0REFBYyxTQUFTLE1BQU0sSUFBSTtBQUMxQzs7QUFFc0M7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2NsaWVudHJlcG9ydC5qcz83NzJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVudmVsb3BlIH0gZnJvbSAnLi9lbnZlbG9wZS5qcyc7XG5pbXBvcnQgeyBkYXRlVGltZXN0YW1wSW5TZWNvbmRzIH0gZnJvbSAnLi90aW1lLmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIGNsaWVudCByZXBvcnQgZW52ZWxvcGVcbiAqIEBwYXJhbSBkaXNjYXJkZWRfZXZlbnRzIEFuIGFycmF5IG9mIGRpc2NhcmQgZXZlbnRzXG4gKiBAcGFyYW0gZHNuIEEgRFNOIHRoYXQgY2FuIGJlIHNldCBvbiB0aGUgaGVhZGVyLiBPcHRpb25hbC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2xpZW50UmVwb3J0RW52ZWxvcGUoXG4gIGRpc2NhcmRlZF9ldmVudHMsXG4gIGRzbixcbiAgdGltZXN0YW1wLFxuKSB7XG4gIGNvbnN0IGNsaWVudFJlcG9ydEl0ZW0gPSBbXG4gICAgeyB0eXBlOiAnY2xpZW50X3JlcG9ydCcgfSxcbiAgICB7XG4gICAgICB0aW1lc3RhbXA6IHRpbWVzdGFtcCB8fCBkYXRlVGltZXN0YW1wSW5TZWNvbmRzKCksXG4gICAgICBkaXNjYXJkZWRfZXZlbnRzLFxuICAgIH0sXG4gIF07XG4gIHJldHVybiBjcmVhdGVFbnZlbG9wZShkc24gPyB7IGRzbiB9IDoge30sIFtjbGllbnRSZXBvcnRJdGVtXSk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUNsaWVudFJlcG9ydEVudmVsb3BlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGllbnRyZXBvcnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/clientreport.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/cookie.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/cookie.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseCookie\": function() { return /* binding */ parseCookie; }\n/* harmony export */ });\n/**\n * This code was originally copied from the 'cookie` module at v0.5.0 and was simplified for our use case.\n * https://github.com/jshttp/cookie/blob/a0c84147aab6266bdb3996cf4062e93907c0b0fc/index.js\n * It had the following license:\n *\n * (The MIT License)\n *\n * Copyright (c) 2012-2014 Roman Shtylman <shtylman@gmail.com>\n * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Parses a cookie string\n */\nfunction parseCookie(str) {\n  const obj = {};\n  let index = 0;\n\n  while (index < str.length) {\n    const eqIdx = str.indexOf('=', index);\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break;\n    }\n\n    let endIdx = str.indexOf(';', index);\n\n    if (endIdx === -1) {\n      endIdx = str.length;\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1;\n      continue;\n    }\n\n    const key = str.slice(index, eqIdx).trim();\n\n    // only assign once\n    if (undefined === obj[key]) {\n      let val = str.slice(eqIdx + 1, endIdx).trim();\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1);\n      }\n\n      try {\n        obj[key] = val.indexOf('%') !== -1 ? decodeURIComponent(val) : val;\n      } catch (e) {\n        obj[key] = val;\n      }\n    }\n\n    index = endIdx + 1;\n  }\n\n  return obj;\n}\n\n\n//# sourceMappingURL=cookie.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vY29va2llLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLCtCQUErQjs7QUFFL0I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLGdDQUFnQztBQUNoQztBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9jb29raWUuanM/YmZhNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgY29kZSB3YXMgb3JpZ2luYWxseSBjb3BpZWQgZnJvbSB0aGUgJ2Nvb2tpZWAgbW9kdWxlIGF0IHYwLjUuMCBhbmQgd2FzIHNpbXBsaWZpZWQgZm9yIG91ciB1c2UgY2FzZS5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9qc2h0dHAvY29va2llL2Jsb2IvYTBjODQxNDdhYWI2MjY2YmRiMzk5NmNmNDA2MmU5MzkwN2MwYjBmYy9pbmRleC5qc1xuICogSXQgaGFkIHRoZSBmb2xsb3dpbmcgbGljZW5zZTpcbiAqXG4gKiAoVGhlIE1JVCBMaWNlbnNlKVxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMi0yMDE0IFJvbWFuIFNodHlsbWFuIDxzaHR5bG1hbkBnbWFpbC5jb20+XG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb24gPGRvdWdAc29tZXRoaW5nZG91Zy5jb20+XG4gKlxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nXG4gKiBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbiAqICdTb2Z0d2FyZScpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbiAqIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbiAqIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0b1xuICogcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvXG4gKiB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4gKlxuICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmVcbiAqIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuICpcbiAqIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAnQVMgSVMnLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELFxuICogRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4gKiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuXG4gKiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWVxuICogQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCxcbiAqIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFXG4gKiBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cbiAqL1xuXG4vKipcbiAqIFBhcnNlcyBhIGNvb2tpZSBzdHJpbmdcbiAqL1xuZnVuY3Rpb24gcGFyc2VDb29raWUoc3RyKSB7XG4gIGNvbnN0IG9iaiA9IHt9O1xuICBsZXQgaW5kZXggPSAwO1xuXG4gIHdoaWxlIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBjb25zdCBlcUlkeCA9IHN0ci5pbmRleE9mKCc9JywgaW5kZXgpO1xuXG4gICAgLy8gbm8gbW9yZSBjb29raWUgcGFpcnNcbiAgICBpZiAoZXFJZHggPT09IC0xKSB7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICBsZXQgZW5kSWR4ID0gc3RyLmluZGV4T2YoJzsnLCBpbmRleCk7XG5cbiAgICBpZiAoZW5kSWR4ID09PSAtMSkge1xuICAgICAgZW5kSWR4ID0gc3RyLmxlbmd0aDtcbiAgICB9IGVsc2UgaWYgKGVuZElkeCA8IGVxSWR4KSB7XG4gICAgICAvLyBiYWNrdHJhY2sgb24gcHJpb3Igc2VtaWNvbG9uXG4gICAgICBpbmRleCA9IHN0ci5sYXN0SW5kZXhPZignOycsIGVxSWR4IC0gMSkgKyAxO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgY29uc3Qga2V5ID0gc3RyLnNsaWNlKGluZGV4LCBlcUlkeCkudHJpbSgpO1xuXG4gICAgLy8gb25seSBhc3NpZ24gb25jZVxuICAgIGlmICh1bmRlZmluZWQgPT09IG9ialtrZXldKSB7XG4gICAgICBsZXQgdmFsID0gc3RyLnNsaWNlKGVxSWR4ICsgMSwgZW5kSWR4KS50cmltKCk7XG5cbiAgICAgIC8vIHF1b3RlZCB2YWx1ZXNcbiAgICAgIGlmICh2YWwuY2hhckNvZGVBdCgwKSA9PT0gMHgyMikge1xuICAgICAgICB2YWwgPSB2YWwuc2xpY2UoMSwgLTEpO1xuICAgICAgfVxuXG4gICAgICB0cnkge1xuICAgICAgICBvYmpba2V5XSA9IHZhbC5pbmRleE9mKCclJykgIT09IC0xID8gZGVjb2RlVVJJQ29tcG9uZW50KHZhbCkgOiB2YWw7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIG9ialtrZXldID0gdmFsO1xuICAgICAgfVxuICAgIH1cblxuICAgIGluZGV4ID0gZW5kSWR4ICsgMTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmV4cG9ydCB7IHBhcnNlQ29va2llIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb29raWUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/cookie.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/debug-build.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/debug-build.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEBUG_BUILD\": function() { return /* binding */ DEBUG_BUILD; }\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = ( false || false);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZGVidWctYnVpbGQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsTUFBdUMsSUFBSSxLQUFnQjs7QUFFekQ7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2RlYnVnLWJ1aWxkLmpzPzcyMzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIHNlcnZlcyBhcyBhIGJ1aWxkIHRpbWUgZmxhZyB0aGF0IHdpbGwgYmUgdHJ1ZSBieSBkZWZhdWx0LCBidXQgZmFsc2UgaW4gbm9uLWRlYnVnIGJ1aWxkcyBvciBpZiB1c2VycyByZXBsYWNlIGBfX1NFTlRSWV9ERUJVR19fYCBpbiB0aGVpciBnZW5lcmF0ZWQgY29kZS5cbiAqXG4gKiBBVFRFTlRJT046IFRoaXMgY29uc3RhbnQgbXVzdCBuZXZlciBjcm9zcyBwYWNrYWdlIGJvdW5kYXJpZXMgKGkuZS4gYmUgZXhwb3J0ZWQpIHRvIGd1YXJhbnRlZSB0aGF0IGl0IGNhbiBiZSB1c2VkIGZvciB0cmVlIHNoYWtpbmcuXG4gKi9cbmNvbnN0IERFQlVHX0JVSUxEID0gKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKTtcblxuZXhwb3J0IHsgREVCVUdfQlVJTEQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnLWJ1aWxkLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/debug-build.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/dsn.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/dsn.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dsnFromString\": function() { return /* binding */ dsnFromString; },\n/* harmony export */   \"dsnToString\": function() { return /* binding */ dsnToString; },\n/* harmony export */   \"makeDsn\": function() { return /* binding */ makeDsn; }\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    (0,_logger_js__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\n\n//# sourceMappingURL=dsn.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZHNuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStDO0FBQ007O0FBRXJEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx5REFBeUQ7QUFDbkU7QUFDQSxPQUFPLFNBQVMsS0FBSyxVQUFVLEVBQUUsMkJBQTJCLEtBQUssT0FBTztBQUN4RSxRQUFRLEtBQUssRUFBRSxXQUFXLEtBQUssT0FBTyxHQUFHLFVBQVUsS0FBSyxVQUFVLEVBQUUsVUFBVTtBQUM5RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksMERBQWM7QUFDbEI7QUFDQSwyQ0FBMkMsSUFBSTtBQUMvQyxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLG1FQUFtRTtBQUNoRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyx3REFBVztBQUNsQjtBQUNBOztBQUVBLFVBQVUsNEJBQTRCOztBQUV0QztBQUNBO0FBQ0E7QUFDQSxNQUFNLG9EQUFZLHdCQUF3QixXQUFXO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxvREFBWSwwQ0FBMEMsVUFBVTtBQUNwRTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxvREFBWSx5Q0FBeUMsU0FBUztBQUNsRTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxvREFBWSxxQ0FBcUMsS0FBSztBQUMxRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0M7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2Rzbi5qcz8xMzBjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBjb25zb2xlU2FuZGJveCwgbG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXIuanMnO1xuXG4vKiogUmVndWxhciBleHByZXNzaW9uIHVzZWQgdG8gcGFyc2UgYSBEc24uICovXG5jb25zdCBEU05fUkVHRVggPSAvXig/OihcXHcrKTopXFwvXFwvKD86KFxcdyspKD86OihcXHcrKT8pP0ApKFtcXHcuLV0rKSg/OjooXFxkKykpP1xcLyguKykvO1xuXG5mdW5jdGlvbiBpc1ZhbGlkUHJvdG9jb2wocHJvdG9jb2wpIHtcbiAgcmV0dXJuIHByb3RvY29sID09PSAnaHR0cCcgfHwgcHJvdG9jb2wgPT09ICdodHRwcyc7XG59XG5cbi8qKlxuICogUmVuZGVycyB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgRHNuLlxuICpcbiAqIEJ5IGRlZmF1bHQsIHRoaXMgd2lsbCByZW5kZXIgdGhlIHB1YmxpYyByZXByZXNlbnRhdGlvbiB3aXRob3V0IHRoZSBwYXNzd29yZFxuICogY29tcG9uZW50LiBUbyBnZXQgdGhlIGRlcHJlY2F0ZWQgcHJpdmF0ZSByZXByZXNlbnRhdGlvbiwgc2V0IGB3aXRoUGFzc3dvcmRgXG4gKiB0byB0cnVlLlxuICpcbiAqIEBwYXJhbSB3aXRoUGFzc3dvcmQgV2hlbiBzZXQgdG8gdHJ1ZSwgdGhlIHBhc3N3b3JkIHdpbGwgYmUgaW5jbHVkZWQuXG4gKi9cbmZ1bmN0aW9uIGRzblRvU3RyaW5nKGRzbiwgd2l0aFBhc3N3b3JkID0gZmFsc2UpIHtcbiAgY29uc3QgeyBob3N0LCBwYXRoLCBwYXNzLCBwb3J0LCBwcm9qZWN0SWQsIHByb3RvY29sLCBwdWJsaWNLZXkgfSA9IGRzbjtcbiAgcmV0dXJuIChcbiAgICBgJHtwcm90b2NvbH06Ly8ke3B1YmxpY0tleX0ke3dpdGhQYXNzd29yZCAmJiBwYXNzID8gYDoke3Bhc3N9YCA6ICcnfWAgK1xuICAgIGBAJHtob3N0fSR7cG9ydCA/IGA6JHtwb3J0fWAgOiAnJ30vJHtwYXRoID8gYCR7cGF0aH0vYCA6IHBhdGh9JHtwcm9qZWN0SWR9YFxuICApO1xufVxuXG4vKipcbiAqIFBhcnNlcyBhIERzbiBmcm9tIGEgZ2l2ZW4gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSBzdHIgQSBEc24gYXMgc3RyaW5nXG4gKiBAcmV0dXJucyBEc24gYXMgRHNuQ29tcG9uZW50cyBvciB1bmRlZmluZWQgaWYgQHBhcmFtIHN0ciBpcyBub3QgYSB2YWxpZCBEU04gc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIGRzbkZyb21TdHJpbmcoc3RyKSB7XG4gIGNvbnN0IG1hdGNoID0gRFNOX1JFR0VYLmV4ZWMoc3RyKTtcblxuICBpZiAoIW1hdGNoKSB7XG4gICAgLy8gVGhpcyBzaG91bGQgYmUgbG9nZ2VkIHRvIHRoZSBjb25zb2xlXG4gICAgY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogJHtzdHJ9YCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGNvbnN0IFtwcm90b2NvbCwgcHVibGljS2V5LCBwYXNzID0gJycsIGhvc3QsIHBvcnQgPSAnJywgbGFzdFBhdGhdID0gbWF0Y2guc2xpY2UoMSk7XG4gIGxldCBwYXRoID0gJyc7XG4gIGxldCBwcm9qZWN0SWQgPSBsYXN0UGF0aDtcblxuICBjb25zdCBzcGxpdCA9IHByb2plY3RJZC5zcGxpdCgnLycpO1xuICBpZiAoc3BsaXQubGVuZ3RoID4gMSkge1xuICAgIHBhdGggPSBzcGxpdC5zbGljZSgwLCAtMSkuam9pbignLycpO1xuICAgIHByb2plY3RJZCA9IHNwbGl0LnBvcCgpIDtcbiAgfVxuXG4gIGlmIChwcm9qZWN0SWQpIHtcbiAgICBjb25zdCBwcm9qZWN0TWF0Y2ggPSBwcm9qZWN0SWQubWF0Y2goL15cXGQrLyk7XG4gICAgaWYgKHByb2plY3RNYXRjaCkge1xuICAgICAgcHJvamVjdElkID0gcHJvamVjdE1hdGNoWzBdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkc25Gcm9tQ29tcG9uZW50cyh7IGhvc3QsIHBhc3MsIHBhdGgsIHByb2plY3RJZCwgcG9ydCwgcHJvdG9jb2w6IHByb3RvY29sICwgcHVibGljS2V5IH0pO1xufVxuXG5mdW5jdGlvbiBkc25Gcm9tQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIHJldHVybiB7XG4gICAgcHJvdG9jb2w6IGNvbXBvbmVudHMucHJvdG9jb2wsXG4gICAgcHVibGljS2V5OiBjb21wb25lbnRzLnB1YmxpY0tleSB8fCAnJyxcbiAgICBwYXNzOiBjb21wb25lbnRzLnBhc3MgfHwgJycsXG4gICAgaG9zdDogY29tcG9uZW50cy5ob3N0LFxuICAgIHBvcnQ6IGNvbXBvbmVudHMucG9ydCB8fCAnJyxcbiAgICBwYXRoOiBjb21wb25lbnRzLnBhdGggfHwgJycsXG4gICAgcHJvamVjdElkOiBjb21wb25lbnRzLnByb2plY3RJZCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVEc24oZHNuKSB7XG4gIGlmICghREVCVUdfQlVJTEQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGNvbnN0IHsgcG9ydCwgcHJvamVjdElkLCBwcm90b2NvbCB9ID0gZHNuO1xuXG4gIGNvbnN0IHJlcXVpcmVkQ29tcG9uZW50cyA9IFsncHJvdG9jb2wnLCAncHVibGljS2V5JywgJ2hvc3QnLCAncHJvamVjdElkJ107XG4gIGNvbnN0IGhhc01pc3NpbmdSZXF1aXJlZENvbXBvbmVudCA9IHJlcXVpcmVkQ29tcG9uZW50cy5maW5kKGNvbXBvbmVudCA9PiB7XG4gICAgaWYgKCFkc25bY29tcG9uZW50XSkge1xuICAgICAgbG9nZ2VyLmVycm9yKGBJbnZhbGlkIFNlbnRyeSBEc246ICR7Y29tcG9uZW50fSBtaXNzaW5nYCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9KTtcblxuICBpZiAoaGFzTWlzc2luZ1JlcXVpcmVkQ29tcG9uZW50KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKCFwcm9qZWN0SWQubWF0Y2goL15cXGQrJC8pKSB7XG4gICAgbG9nZ2VyLmVycm9yKGBJbnZhbGlkIFNlbnRyeSBEc246IEludmFsaWQgcHJvamVjdElkICR7cHJvamVjdElkfWApO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICghaXNWYWxpZFByb3RvY29sKHByb3RvY29sKSkge1xuICAgIGxvZ2dlci5lcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiBJbnZhbGlkIHByb3RvY29sICR7cHJvdG9jb2x9YCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHBvcnQgJiYgaXNOYU4ocGFyc2VJbnQocG9ydCwgMTApKSkge1xuICAgIGxvZ2dlci5lcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiBJbnZhbGlkIHBvcnQgJHtwb3J0fWApO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSB2YWxpZCBTZW50cnkgRHNuIG9iamVjdCwgaWRlbnRpZnlpbmcgYSBTZW50cnkgaW5zdGFuY2UgYW5kIHByb2plY3QuXG4gKiBAcmV0dXJucyBhIHZhbGlkIERzbkNvbXBvbmVudHMgb2JqZWN0IG9yIGB1bmRlZmluZWRgIGlmIEBwYXJhbSBmcm9tIGlzIGFuIGludmFsaWQgRFNOIHNvdXJjZVxuICovXG5mdW5jdGlvbiBtYWtlRHNuKGZyb20pIHtcbiAgY29uc3QgY29tcG9uZW50cyA9IHR5cGVvZiBmcm9tID09PSAnc3RyaW5nJyA/IGRzbkZyb21TdHJpbmcoZnJvbSkgOiBkc25Gcm9tQ29tcG9uZW50cyhmcm9tKTtcbiAgaWYgKCFjb21wb25lbnRzIHx8ICF2YWxpZGF0ZURzbihjb21wb25lbnRzKSkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbiAgcmV0dXJuIGNvbXBvbmVudHM7XG59XG5cbmV4cG9ydCB7IGRzbkZyb21TdHJpbmcsIGRzblRvU3RyaW5nLCBtYWtlRHNuIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kc24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/dsn.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/env.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/env.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSDKSource\": function() { return /* binding */ getSDKSource; },\n/* harmony export */   \"isBrowserBundle\": function() { return /* binding */ isBrowserBundle; }\n/* harmony export */ });\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-expect-error \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\n\n//# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZW52LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZW52LmpzP2UwMGEiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFRoaXMgbW9kdWxlIGV4aXN0cyBmb3Igb3B0aW1pemF0aW9ucyBpbiB0aGUgYnVpbGQgcHJvY2VzcyB0aHJvdWdoIHJvbGx1cCBhbmQgdGVyc2VyLiAgV2UgZGVmaW5lIHNvbWUgZ2xvYmFsXG4gKiBjb25zdGFudHMsIHdoaWNoIGNhbiBiZSBvdmVycmlkZGVuIGR1cmluZyBidWlsZC4gQnkgZ3VhcmRpbmcgY2VydGFpbiBwaWVjZXMgb2YgY29kZSB3aXRoIGZ1bmN0aW9ucyB0aGF0IHJldHVybiB0aGVzZVxuICogY29uc3RhbnRzLCB3ZSBjYW4gY29udHJvbCB3aGV0aGVyIG9yIG5vdCB0aGV5IGFwcGVhciBpbiB0aGUgZmluYWwgYnVuZGxlLiAoQW55IGNvZGUgZ3VhcmRlZCBieSBhIGZhbHNlIGNvbmRpdGlvbiB3aWxsXG4gKiBuZXZlciBydW4sIGFuZCB3aWxsIGhlbmNlIGJlIGRyb3BwZWQgZHVyaW5nIHRyZWVzaGFraW5nLikgVGhlIHR3byBwcmltYXJ5IHVzZXMgZm9yIHRoaXMgYXJlIHN0cmlwcGluZyBvdXQgY2FsbHMgdG9cbiAqIGBsb2dnZXJgIGFuZCBwcmV2ZW50aW5nIG5vZGUtcmVsYXRlZCBjb2RlIGZyb20gYXBwZWFyaW5nIGluIGJyb3dzZXIgYnVuZGxlcy5cbiAqXG4gKiBBdHRlbnRpb246XG4gKiBUaGlzIGZpbGUgc2hvdWxkIG5vdCBiZSB1c2VkIHRvIGRlZmluZSBjb25zdGFudHMvZmxhZ3MgdGhhdCBhcmUgaW50ZW5kZWQgdG8gYmUgdXNlZCBmb3IgdHJlZS1zaGFraW5nIGNvbmR1Y3RlZCBieVxuICogdXNlcnMuIFRoZXNlIGZsYWdzIHNob3VsZCBsaXZlIGluIHRoZWlyIHJlc3BlY3RpdmUgcGFja2FnZXMsIGFzIHdlIGlkZW50aWZpZWQgdXNlciB0b29saW5nIChzcGVjaWZpY2FsbHkgd2VicGFjaylcbiAqIGhhdmluZyBpc3N1ZXMgdHJlZS1zaGFraW5nIHRoZXNlIGNvbnN0YW50cyBhY3Jvc3MgcGFja2FnZSBib3VuZGFyaWVzLlxuICogQW4gZXhhbXBsZSBmb3IgdGhpcyBpcyB0aGUgX19TRU5UUllfREVCVUdfXyBjb25zdGFudC4gSXQgaXMgZGVjbGFyZWQgaW4gZWFjaCBwYWNrYWdlIGluZGl2aWR1YWxseSBiZWNhdXNlIHdlIHdhbnRcbiAqIHVzZXJzIHRvIGJlIGFibGUgdG8gc2hha2UgYXdheSBleHByZXNzaW9ucyB0aGF0IGl0IGd1YXJkcy5cbiAqL1xuXG4vKipcbiAqIEZpZ3VyZXMgb3V0IGlmIHdlJ3JlIGJ1aWxkaW5nIGEgYnJvd3NlciBidW5kbGUuXG4gKlxuICogQHJldHVybnMgdHJ1ZSBpZiB0aGlzIGlzIGEgYnJvd3NlciBidW5kbGUgYnVpbGQuXG4gKi9cbmZ1bmN0aW9uIGlzQnJvd3NlckJ1bmRsZSgpIHtcbiAgcmV0dXJuIHR5cGVvZiBfX1NFTlRSWV9CUk9XU0VSX0JVTkRMRV9fICE9PSAndW5kZWZpbmVkJyAmJiAhIV9fU0VOVFJZX0JST1dTRVJfQlVORExFX187XG59XG5cbi8qKlxuICogR2V0IHNvdXJjZSBvZiBTREsuXG4gKi9cbmZ1bmN0aW9uIGdldFNES1NvdXJjZSgpIHtcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciBcIm5wbVwiIGlzIGluamVjdGVkIGJ5IHJvbGx1cCBkdXJpbmcgYnVpbGQgcHJvY2Vzc1xuICByZXR1cm4gXCJucG1cIjtcbn1cblxuZXhwb3J0IHsgZ2V0U0RLU291cmNlLCBpc0Jyb3dzZXJCdW5kbGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/env.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/envelope.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/envelope.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addItemToEnvelope\": function() { return /* binding */ addItemToEnvelope; },\n/* harmony export */   \"createAttachmentEnvelopeItem\": function() { return /* binding */ createAttachmentEnvelopeItem; },\n/* harmony export */   \"createEnvelope\": function() { return /* binding */ createEnvelope; },\n/* harmony export */   \"createEventEnvelopeHeaders\": function() { return /* binding */ createEventEnvelopeHeaders; },\n/* harmony export */   \"createSpanEnvelopeItem\": function() { return /* binding */ createSpanEnvelopeItem; },\n/* harmony export */   \"envelopeContainsItemType\": function() { return /* binding */ envelopeContainsItemType; },\n/* harmony export */   \"envelopeItemTypeToDataCategory\": function() { return /* binding */ envelopeItemTypeToDataCategory; },\n/* harmony export */   \"forEachEnvelopeItem\": function() { return /* binding */ forEachEnvelopeItem; },\n/* harmony export */   \"getSdkMetadataForEnvelopeHeader\": function() { return /* binding */ getSdkMetadataForEnvelopeHeader; },\n/* harmony export */   \"parseEnvelope\": function() { return /* binding */ parseEnvelope; },\n/* harmony export */   \"serializeEnvelope\": function() { return /* binding */ serializeEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _dsn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dsn.js */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8 array.\n */\nfunction encodeUTF8(input) {\n  return _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.__SENTRY__ && _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.__SENTRY__.encodePolyfill\n    ? _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.__SENTRY__.encodePolyfill(input)\n    : new TextEncoder().encode(input);\n}\n\n/**\n * Decode a UTF8 array to string.\n */\nfunction decodeUTF8(input) {\n  return _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.__SENTRY__ && _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.__SENTRY__.decodePolyfill\n    ? _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.__SENTRY__.decodePolyfill(input)\n    : new TextDecoder().decode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalize)(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(env) {\n  let buffer = typeof env === 'string' ? encodeUTF8(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(decodeUTF8(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates envelope item for a single span\n */\nfunction createSpanEnvelopeItem(spanJson) {\n  const spanHeaders = {\n    type: 'span',\n  };\n\n  return [spanHeaders, spanJson];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(attachment) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data) : attachment.data;\n\n  return [\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: (0,_dsn_js__WEBPACK_IMPORTED_MODULE_3__.dsnToString)(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/envelope.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/error.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/error.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SentryError\": function() { return /* binding */ SentryError; }\n/* harmony export */ });\n/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\n\n//# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZXJyb3IuanM/NWQ5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQW4gZXJyb3IgZW1pdHRlZCBieSBTZW50cnkgU0RLcyBhbmQgcmVsYXRlZCB1dGlsaXRpZXMuICovXG5jbGFzcyBTZW50cnlFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgLyoqIERpc3BsYXkgbmFtZSBvZiB0aGlzIGVycm9yIGluc3RhbmNlLiAqL1xuXG4gICBjb25zdHJ1Y3RvciggbWVzc2FnZSwgbG9nTGV2ZWwgPSAnd2FybicpIHtcbiAgICBzdXBlcihtZXNzYWdlKTt0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIHRoaXMubmFtZSA9IG5ldy50YXJnZXQucHJvdG90eXBlLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgLy8gVGhpcyBzZXRzIHRoZSBwcm90b3R5cGUgdG8gYmUgYEVycm9yYCwgbm90IGBTZW50cnlFcnJvcmAuIEl0J3MgdW5jbGVhciB3aHkgd2UgZG8gdGhpcywgYnV0IGNvbW1lbnRpbmcgdGhpcyBsaW5lXG4gICAgLy8gb3V0IGNhdXNlcyB2YXJpb3VzIChzZWVtaW5nbHkgdG90YWxseSB1bnJlbGF0ZWQpIHBsYXl3cmlnaHQgdGVzdHMgY29uc2lzdGVudGx5IHRpbWUgb3V0LiBGWUksIHRoaXMgbWFrZXNcbiAgICAvLyBpbnN0YW5jZXMgb2YgYFNlbnRyeUVycm9yYCBmYWlsIGBvYmogaW5zdGFuY2VvZiBTZW50cnlFcnJvcmAgY2hlY2tzLlxuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBuZXcudGFyZ2V0LnByb3RvdHlwZSk7XG4gICAgdGhpcy5sb2dMZXZlbCA9IGxvZ0xldmVsO1xuICB9XG59XG5cbmV4cG9ydCB7IFNlbnRyeUVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/error.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/eventbuilder.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/eventbuilder.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eventFromMessage\": function() { return /* binding */ eventFromMessage; },\n/* harmony export */   \"eventFromUnknownInput\": function() { return /* binding */ eventFromUnknownInput; },\n/* harmony export */   \"exceptionFromError\": function() { return /* binding */ exceptionFromError; },\n/* harmony export */   \"parseStackFrames\": function() { return /* binding */ parseStackFrames; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./misc.js */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n\n\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop];\n      if (value instanceof Error) {\n        return value;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getMessageForObject(exception) {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`;\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`;\n    }\n\n    return message;\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message;\n  }\n\n  const keys = (0,_object_js__WEBPACK_IMPORTED_MODULE_0__.extractExceptionKeysForMessage)(exception);\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isErrorEvent)(exception)) {\n    return `Event \\`ErrorEvent\\` captured as exception with message \\`${exception.message}\\``;\n  }\n\n  const className = getObjectClassName(exception);\n\n  return `${\n    className && className !== 'Object' ? `'${className}'` : 'Object'\n  } captured as exception with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nfunction getException(\n  client,\n  mechanism,\n  exception,\n  hint,\n) {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isError)(exception)) {\n    return [exception, undefined];\n  }\n\n  // Mutate this!\n  mechanism.synthetic = true;\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(exception)) {\n    const normalizeDepth = client && client.getOptions().normalizeDepth;\n    const extras = { ['__serialized__']: (0,_normalize_js__WEBPACK_IMPORTED_MODULE_2__.normalizeToSize)(exception , normalizeDepth) };\n\n    const errorFromProp = getErrorPropertyFromObject(exception);\n    if (errorFromProp) {\n      return [errorFromProp, extras];\n    }\n\n    const message = getMessageForObject(exception);\n    const ex = (hint && hint.syntheticException) || new Error(message);\n    ex.message = message;\n\n    return [ex, extras];\n  }\n\n  // This handles when someone does: `throw \"something awesome\";`\n  // We use synthesized Error here so we can extract a (rough) stack trace.\n  const ex = (hint && hint.syntheticException) || new Error(exception );\n  ex.message = `${exception}`;\n\n  return [ex, undefined];\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nfunction eventFromUnknownInput(\n  client,\n  stackParser,\n  exception,\n  hint,\n) {\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  const [ex, extras] = getException(client, mechanism, exception, hint);\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n\n  if (extras) {\n    event.extra = extras;\n  }\n\n  (0,_misc_js__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, undefined, undefined);\n  (0,_misc_js__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isParameterizedString)(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\n\n//# sourceMappingURL=eventbuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/eventbuilder.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BAGGAGE_HEADER_NAME\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_34__.BAGGAGE_HEADER_NAME; },\n/* harmony export */   \"CONSOLE_LEVELS\": function() { return /* reexport safe */ _logger_js__WEBPACK_IMPORTED_MODULE_13__.CONSOLE_LEVELS; },\n/* harmony export */   \"DEFAULT_RETRY_AFTER\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_33__.DEFAULT_RETRY_AFTER; },\n/* harmony export */   \"DEFAULT_USER_INCLUDES\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_21__.DEFAULT_USER_INCLUDES; },\n/* harmony export */   \"GLOBAL_OBJ\": function() { return /* reexport safe */ _worldwide_js__WEBPACK_IMPORTED_MODULE_5__.GLOBAL_OBJ; },\n/* harmony export */   \"LRUMap\": function() { return /* reexport safe */ _lru_js__WEBPACK_IMPORTED_MODULE_39__.LRUMap; },\n/* harmony export */   \"MAX_BAGGAGE_STRING_LENGTH\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_34__.MAX_BAGGAGE_STRING_LENGTH; },\n/* harmony export */   \"SDK_VERSION\": function() { return /* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_47__.SDK_VERSION; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_34__.SENTRY_BAGGAGE_KEY_PREFIX; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX_REGEX\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_34__.SENTRY_BAGGAGE_KEY_PREFIX_REGEX; },\n/* harmony export */   \"SentryError\": function() { return /* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_4__.SentryError; },\n/* harmony export */   \"SyncPromise\": function() { return /* reexport safe */ _syncpromise_js__WEBPACK_IMPORTED_MODULE_27__.SyncPromise; },\n/* harmony export */   \"TRACEPARENT_REGEXP\": function() { return /* reexport safe */ _tracing_js__WEBPACK_IMPORTED_MODULE_29__.TRACEPARENT_REGEXP; },\n/* harmony export */   \"UNKNOWN_FUNCTION\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_23__.UNKNOWN_FUNCTION; },\n/* harmony export */   \"_asyncNullishCoalesce\": function() { return /* reexport safe */ _buildPolyfills_asyncNullishCoalesce_js__WEBPACK_IMPORTED_MODULE_40__._asyncNullishCoalesce; },\n/* harmony export */   \"_asyncOptionalChain\": function() { return /* reexport safe */ _buildPolyfills_asyncOptionalChain_js__WEBPACK_IMPORTED_MODULE_41__._asyncOptionalChain; },\n/* harmony export */   \"_asyncOptionalChainDelete\": function() { return /* reexport safe */ _buildPolyfills_asyncOptionalChainDelete_js__WEBPACK_IMPORTED_MODULE_42__._asyncOptionalChainDelete; },\n/* harmony export */   \"_browserPerformanceTimeOriginMode\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_28__._browserPerformanceTimeOriginMode; },\n/* harmony export */   \"_nullishCoalesce\": function() { return /* reexport safe */ _buildPolyfills_nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_43__._nullishCoalesce; },\n/* harmony export */   \"_optionalChain\": function() { return /* reexport safe */ _buildPolyfills_optionalChain_js__WEBPACK_IMPORTED_MODULE_44__._optionalChain; },\n/* harmony export */   \"_optionalChainDelete\": function() { return /* reexport safe */ _buildPolyfills_optionalChainDelete_js__WEBPACK_IMPORTED_MODULE_45__._optionalChainDelete; },\n/* harmony export */   \"addConsoleInstrumentationHandler\": function() { return /* reexport safe */ _instrument_console_js__WEBPACK_IMPORTED_MODULE_6__.addConsoleInstrumentationHandler; },\n/* harmony export */   \"addContextToFrame\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_15__.addContextToFrame; },\n/* harmony export */   \"addExceptionMechanism\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_15__.addExceptionMechanism; },\n/* harmony export */   \"addExceptionTypeValue\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_15__.addExceptionTypeValue; },\n/* harmony export */   \"addFetchInstrumentationHandler\": function() { return /* reexport safe */ _instrument_fetch_js__WEBPACK_IMPORTED_MODULE_7__.addFetchInstrumentationHandler; },\n/* harmony export */   \"addGlobalErrorInstrumentationHandler\": function() { return /* reexport safe */ _instrument_globalError_js__WEBPACK_IMPORTED_MODULE_8__.addGlobalErrorInstrumentationHandler; },\n/* harmony export */   \"addGlobalUnhandledRejectionInstrumentationHandler\": function() { return /* reexport safe */ _instrument_globalUnhandledRejection_js__WEBPACK_IMPORTED_MODULE_9__.addGlobalUnhandledRejectionInstrumentationHandler; },\n/* harmony export */   \"addHandler\": function() { return /* reexport safe */ _instrument_handlers_js__WEBPACK_IMPORTED_MODULE_10__.addHandler; },\n/* harmony export */   \"addItemToEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.addItemToEnvelope; },\n/* harmony export */   \"addNonEnumerableProperty\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_18__.addNonEnumerableProperty; },\n/* harmony export */   \"addRequestDataToEvent\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_21__.addRequestDataToEvent; },\n/* harmony export */   \"applyAggregateErrorsToEvent\": function() { return /* reexport safe */ _aggregate_errors_js__WEBPACK_IMPORTED_MODULE_0__.applyAggregateErrorsToEvent; },\n/* harmony export */   \"arrayify\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_15__.arrayify; },\n/* harmony export */   \"baggageHeaderToDynamicSamplingContext\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_34__.baggageHeaderToDynamicSamplingContext; },\n/* harmony export */   \"basename\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_19__.basename; },\n/* harmony export */   \"browserPerformanceTimeOrigin\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_28__.browserPerformanceTimeOrigin; },\n/* harmony export */   \"callFrameToStackFrame\": function() { return /* reexport safe */ _anr_js__WEBPACK_IMPORTED_MODULE_38__.callFrameToStackFrame; },\n/* harmony export */   \"checkOrSetAlreadyCaught\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_15__.checkOrSetAlreadyCaught; },\n/* harmony export */   \"consoleSandbox\": function() { return /* reexport safe */ _logger_js__WEBPACK_IMPORTED_MODULE_13__.consoleSandbox; },\n/* harmony export */   \"convertToPlainObject\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_18__.convertToPlainObject; },\n/* harmony export */   \"createAttachmentEnvelopeItem\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.createAttachmentEnvelopeItem; },\n/* harmony export */   \"createClientReportEnvelope\": function() { return /* reexport safe */ _clientreport_js__WEBPACK_IMPORTED_MODULE_32__.createClientReportEnvelope; },\n/* harmony export */   \"createEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.createEnvelope; },\n/* harmony export */   \"createEventEnvelopeHeaders\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.createEventEnvelopeHeaders; },\n/* harmony export */   \"createSpanEnvelopeItem\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.createSpanEnvelopeItem; },\n/* harmony export */   \"createStackParser\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_23__.createStackParser; },\n/* harmony export */   \"dateTimestampInSeconds\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_28__.dateTimestampInSeconds; },\n/* harmony export */   \"dirname\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_19__.dirname; },\n/* harmony export */   \"disabledUntil\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_33__.disabledUntil; },\n/* harmony export */   \"dropUndefinedKeys\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_18__.dropUndefinedKeys; },\n/* harmony export */   \"dsnFromString\": function() { return /* reexport safe */ _dsn_js__WEBPACK_IMPORTED_MODULE_3__.dsnFromString; },\n/* harmony export */   \"dsnToString\": function() { return /* reexport safe */ _dsn_js__WEBPACK_IMPORTED_MODULE_3__.dsnToString; },\n/* harmony export */   \"dynamicRequire\": function() { return /* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_16__.dynamicRequire; },\n/* harmony export */   \"dynamicSamplingContextToSentryBaggageHeader\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_34__.dynamicSamplingContextToSentryBaggageHeader; },\n/* harmony export */   \"envelopeContainsItemType\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.envelopeContainsItemType; },\n/* harmony export */   \"envelopeItemTypeToDataCategory\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.envelopeItemTypeToDataCategory; },\n/* harmony export */   \"escapeStringForRegex\": function() { return /* reexport safe */ _vendor_escapeStringForRegex_js__WEBPACK_IMPORTED_MODULE_48__.escapeStringForRegex; },\n/* harmony export */   \"eventFromMessage\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_37__.eventFromMessage; },\n/* harmony export */   \"eventFromUnknownInput\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_37__.eventFromUnknownInput; },\n/* harmony export */   \"exceptionFromError\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_37__.exceptionFromError; },\n/* harmony export */   \"extractExceptionKeysForMessage\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_18__.extractExceptionKeysForMessage; },\n/* harmony export */   \"extractPathForTransaction\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_21__.extractPathForTransaction; },\n/* harmony export */   \"extractRequestData\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_21__.extractRequestData; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* reexport safe */ _tracing_js__WEBPACK_IMPORTED_MODULE_29__.extractTraceparentData; },\n/* harmony export */   \"filenameIsInApp\": function() { return /* reexport safe */ _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_24__.filenameIsInApp; },\n/* harmony export */   \"fill\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_18__.fill; },\n/* harmony export */   \"flatten\": function() { return /* reexport safe */ _array_js__WEBPACK_IMPORTED_MODULE_1__.flatten; },\n/* harmony export */   \"forEachEnvelopeItem\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.forEachEnvelopeItem; },\n/* harmony export */   \"generatePropagationContext\": function() { return /* reexport safe */ _propagationContext_js__WEBPACK_IMPORTED_MODULE_46__.generatePropagationContext; },\n/* harmony export */   \"generateSentryTraceHeader\": function() { return /* reexport safe */ _tracing_js__WEBPACK_IMPORTED_MODULE_29__.generateSentryTraceHeader; },\n/* harmony export */   \"getComponentName\": function() { return /* reexport safe */ _browser_js__WEBPACK_IMPORTED_MODULE_2__.getComponentName; },\n/* harmony export */   \"getDomElement\": function() { return /* reexport safe */ _browser_js__WEBPACK_IMPORTED_MODULE_2__.getDomElement; },\n/* harmony export */   \"getEventDescription\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_15__.getEventDescription; },\n/* harmony export */   \"getFramesFromEvent\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_23__.getFramesFromEvent; },\n/* harmony export */   \"getFunctionName\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_23__.getFunctionName; },\n/* harmony export */   \"getGlobalSingleton\": function() { return /* reexport safe */ _worldwide_js__WEBPACK_IMPORTED_MODULE_5__.getGlobalSingleton; },\n/* harmony export */   \"getLocationHref\": function() { return /* reexport safe */ _browser_js__WEBPACK_IMPORTED_MODULE_2__.getLocationHref; },\n/* harmony export */   \"getNumberOfUrlSegments\": function() { return /* reexport safe */ _url_js__WEBPACK_IMPORTED_MODULE_35__.getNumberOfUrlSegments; },\n/* harmony export */   \"getOriginalFunction\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_18__.getOriginalFunction; },\n/* harmony export */   \"getSDKSource\": function() { return /* reexport safe */ _env_js__WEBPACK_IMPORTED_MODULE_30__.getSDKSource; },\n/* harmony export */   \"getSanitizedUrlString\": function() { return /* reexport safe */ _url_js__WEBPACK_IMPORTED_MODULE_35__.getSanitizedUrlString; },\n/* harmony export */   \"getSdkMetadataForEnvelopeHeader\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.getSdkMetadataForEnvelopeHeader; },\n/* harmony export */   \"htmlTreeAsString\": function() { return /* reexport safe */ _browser_js__WEBPACK_IMPORTED_MODULE_2__.htmlTreeAsString; },\n/* harmony export */   \"isAbsolute\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_19__.isAbsolute; },\n/* harmony export */   \"isBrowser\": function() { return /* reexport safe */ _isBrowser_js__WEBPACK_IMPORTED_MODULE_12__.isBrowser; },\n/* harmony export */   \"isBrowserBundle\": function() { return /* reexport safe */ _env_js__WEBPACK_IMPORTED_MODULE_30__.isBrowserBundle; },\n/* harmony export */   \"isDOMError\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isDOMError; },\n/* harmony export */   \"isDOMException\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isDOMException; },\n/* harmony export */   \"isElement\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isElement; },\n/* harmony export */   \"isError\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isError; },\n/* harmony export */   \"isErrorEvent\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isErrorEvent; },\n/* harmony export */   \"isEvent\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isEvent; },\n/* harmony export */   \"isInstanceOf\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isInstanceOf; },\n/* harmony export */   \"isMatchingPattern\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_25__.isMatchingPattern; },\n/* harmony export */   \"isNativeFunction\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_26__.isNativeFunction; },\n/* harmony export */   \"isNodeEnv\": function() { return /* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_16__.isNodeEnv; },\n/* harmony export */   \"isParameterizedString\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isParameterizedString; },\n/* harmony export */   \"isPlainObject\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isPlainObject; },\n/* harmony export */   \"isPrimitive\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isPrimitive; },\n/* harmony export */   \"isRateLimited\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_33__.isRateLimited; },\n/* harmony export */   \"isRegExp\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isRegExp; },\n/* harmony export */   \"isString\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isString; },\n/* harmony export */   \"isSyntheticEvent\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isSyntheticEvent; },\n/* harmony export */   \"isThenable\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isThenable; },\n/* harmony export */   \"isVueViewModel\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_11__.isVueViewModel; },\n/* harmony export */   \"join\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_19__.join; },\n/* harmony export */   \"loadModule\": function() { return /* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_16__.loadModule; },\n/* harmony export */   \"logger\": function() { return /* reexport safe */ _logger_js__WEBPACK_IMPORTED_MODULE_13__.logger; },\n/* harmony export */   \"makeDsn\": function() { return /* reexport safe */ _dsn_js__WEBPACK_IMPORTED_MODULE_3__.makeDsn; },\n/* harmony export */   \"makeFifoCache\": function() { return /* reexport safe */ _cache_js__WEBPACK_IMPORTED_MODULE_36__.makeFifoCache; },\n/* harmony export */   \"makePromiseBuffer\": function() { return /* reexport safe */ _promisebuffer_js__WEBPACK_IMPORTED_MODULE_20__.makePromiseBuffer; },\n/* harmony export */   \"markFunctionWrapped\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_18__.markFunctionWrapped; },\n/* harmony export */   \"maybeInstrument\": function() { return /* reexport safe */ _instrument_handlers_js__WEBPACK_IMPORTED_MODULE_10__.maybeInstrument; },\n/* harmony export */   \"memoBuilder\": function() { return /* reexport safe */ _memo_js__WEBPACK_IMPORTED_MODULE_14__.memoBuilder; },\n/* harmony export */   \"node\": function() { return /* reexport safe */ _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_24__.node; },\n/* harmony export */   \"nodeStackLineParser\": function() { return /* reexport safe */ _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_24__.nodeStackLineParser; },\n/* harmony export */   \"normalize\": function() { return /* reexport safe */ _normalize_js__WEBPACK_IMPORTED_MODULE_17__.normalize; },\n/* harmony export */   \"normalizePath\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_19__.normalizePath; },\n/* harmony export */   \"normalizeToSize\": function() { return /* reexport safe */ _normalize_js__WEBPACK_IMPORTED_MODULE_17__.normalizeToSize; },\n/* harmony export */   \"normalizeUrlToBase\": function() { return /* reexport safe */ _normalize_js__WEBPACK_IMPORTED_MODULE_17__.normalizeUrlToBase; },\n/* harmony export */   \"objectify\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_18__.objectify; },\n/* harmony export */   \"originalConsoleMethods\": function() { return /* reexport safe */ _logger_js__WEBPACK_IMPORTED_MODULE_13__.originalConsoleMethods; },\n/* harmony export */   \"parseBaggageHeader\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_34__.parseBaggageHeader; },\n/* harmony export */   \"parseEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.parseEnvelope; },\n/* harmony export */   \"parseRetryAfterHeader\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_33__.parseRetryAfterHeader; },\n/* harmony export */   \"parseSemver\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_15__.parseSemver; },\n/* harmony export */   \"parseStackFrames\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_37__.parseStackFrames; },\n/* harmony export */   \"parseUrl\": function() { return /* reexport safe */ _url_js__WEBPACK_IMPORTED_MODULE_35__.parseUrl; },\n/* harmony export */   \"propagationContextFromHeaders\": function() { return /* reexport safe */ _tracing_js__WEBPACK_IMPORTED_MODULE_29__.propagationContextFromHeaders; },\n/* harmony export */   \"rejectedSyncPromise\": function() { return /* reexport safe */ _syncpromise_js__WEBPACK_IMPORTED_MODULE_27__.rejectedSyncPromise; },\n/* harmony export */   \"relative\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_19__.relative; },\n/* harmony export */   \"resetInstrumentationHandlers\": function() { return /* reexport safe */ _instrument_handlers_js__WEBPACK_IMPORTED_MODULE_10__.resetInstrumentationHandlers; },\n/* harmony export */   \"resolve\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_19__.resolve; },\n/* harmony export */   \"resolvedSyncPromise\": function() { return /* reexport safe */ _syncpromise_js__WEBPACK_IMPORTED_MODULE_27__.resolvedSyncPromise; },\n/* harmony export */   \"safeJoin\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_25__.safeJoin; },\n/* harmony export */   \"serializeEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_31__.serializeEnvelope; },\n/* harmony export */   \"severityLevelFromString\": function() { return /* reexport safe */ _severity_js__WEBPACK_IMPORTED_MODULE_22__.severityLevelFromString; },\n/* harmony export */   \"snipLine\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_25__.snipLine; },\n/* harmony export */   \"stackParserFromStackParserOptions\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_23__.stackParserFromStackParserOptions; },\n/* harmony export */   \"stringMatchesSomePattern\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_25__.stringMatchesSomePattern; },\n/* harmony export */   \"stripSentryFramesAndReverse\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_23__.stripSentryFramesAndReverse; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* reexport safe */ _url_js__WEBPACK_IMPORTED_MODULE_35__.stripUrlQueryAndFragment; },\n/* harmony export */   \"supportsDOMError\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_26__.supportsDOMError; },\n/* harmony export */   \"supportsDOMException\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_26__.supportsDOMException; },\n/* harmony export */   \"supportsErrorEvent\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_26__.supportsErrorEvent; },\n/* harmony export */   \"supportsFetch\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_26__.supportsFetch; },\n/* harmony export */   \"supportsHistory\": function() { return /* reexport safe */ _vendor_supportsHistory_js__WEBPACK_IMPORTED_MODULE_49__.supportsHistory; },\n/* harmony export */   \"supportsNativeFetch\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_26__.supportsNativeFetch; },\n/* harmony export */   \"supportsReferrerPolicy\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_26__.supportsReferrerPolicy; },\n/* harmony export */   \"supportsReportingObserver\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_26__.supportsReportingObserver; },\n/* harmony export */   \"timestampInSeconds\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_28__.timestampInSeconds; },\n/* harmony export */   \"triggerHandlers\": function() { return /* reexport safe */ _instrument_handlers_js__WEBPACK_IMPORTED_MODULE_10__.triggerHandlers; },\n/* harmony export */   \"truncate\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_25__.truncate; },\n/* harmony export */   \"updateRateLimits\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_33__.updateRateLimits; },\n/* harmony export */   \"urlEncode\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_18__.urlEncode; },\n/* harmony export */   \"uuid4\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_15__.uuid4; },\n/* harmony export */   \"validSeverityLevels\": function() { return /* reexport safe */ _severity_js__WEBPACK_IMPORTED_MODULE_22__.validSeverityLevels; },\n/* harmony export */   \"watchdogTimer\": function() { return /* reexport safe */ _anr_js__WEBPACK_IMPORTED_MODULE_38__.watchdogTimer; },\n/* harmony export */   \"winterCGHeadersToDict\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_21__.winterCGHeadersToDict; },\n/* harmony export */   \"winterCGRequestToRequestData\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_21__.winterCGRequestToRequestData; }\n/* harmony export */ });\n/* harmony import */ var _aggregate_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aggregate-errors.js */ \"./node_modules/@sentry/utils/esm/aggregate-errors.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array.js */ \"./node_modules/@sentry/utils/esm/array.js\");\n/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./browser.js */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _dsn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dsn.js */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./error.js */ \"./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _instrument_console_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./instrument/console.js */ \"./node_modules/@sentry/utils/esm/instrument/console.js\");\n/* harmony import */ var _instrument_fetch_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./instrument/fetch.js */ \"./node_modules/@sentry/utils/esm/instrument/fetch.js\");\n/* harmony import */ var _instrument_globalError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./instrument/globalError.js */ \"./node_modules/@sentry/utils/esm/instrument/globalError.js\");\n/* harmony import */ var _instrument_globalUnhandledRejection_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./instrument/globalUnhandledRejection.js */ \"./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js\");\n/* harmony import */ var _instrument_handlers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./instrument/handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/handlers.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _isBrowser_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./isBrowser.js */ \"./node_modules/@sentry/utils/esm/isBrowser.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./memo.js */ \"./node_modules/@sentry/utils/esm/memo.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./misc.js */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./node.js */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./path.js */ \"./node_modules/@sentry/utils/esm/path.js\");\n/* harmony import */ var _promisebuffer_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./promisebuffer.js */ \"./node_modules/@sentry/utils/esm/promisebuffer.js\");\n/* harmony import */ var _requestdata_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./requestdata.js */ \"./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _severity_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./severity.js */ \"./node_modules/@sentry/utils/esm/severity.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./node-stack-trace.js */ \"./node_modules/@sentry/utils/esm/node-stack-trace.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _supports_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./supports.js */ \"./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _syncpromise_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./syncpromise.js */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./time.js */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _tracing_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./tracing.js */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./env.js */ \"./node_modules/@sentry/utils/esm/env.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _clientreport_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./clientreport.js */ \"./node_modules/@sentry/utils/esm/clientreport.js\");\n/* harmony import */ var _ratelimit_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./ratelimit.js */ \"./node_modules/@sentry/utils/esm/ratelimit.js\");\n/* harmony import */ var _baggage_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./baggage.js */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./url.js */ \"./node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _cache_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./cache.js */ \"./node_modules/@sentry/utils/esm/cache.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./eventbuilder.js */ \"./node_modules/@sentry/utils/esm/eventbuilder.js\");\n/* harmony import */ var _anr_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./anr.js */ \"./node_modules/@sentry/utils/esm/anr.js\");\n/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./lru.js */ \"./node_modules/@sentry/utils/esm/lru.js\");\n/* harmony import */ var _buildPolyfills_asyncNullishCoalesce_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./buildPolyfills/_asyncNullishCoalesce.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js\");\n/* harmony import */ var _buildPolyfills_asyncOptionalChain_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./buildPolyfills/_asyncOptionalChain.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js\");\n/* harmony import */ var _buildPolyfills_asyncOptionalChainDelete_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./buildPolyfills/_asyncOptionalChainDelete.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChainDelete.js\");\n/* harmony import */ var _buildPolyfills_nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./buildPolyfills/_nullishCoalesce.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _buildPolyfills_optionalChain_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./buildPolyfills/_optionalChain.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _buildPolyfills_optionalChainDelete_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./buildPolyfills/_optionalChainDelete.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js\");\n/* harmony import */ var _propagationContext_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./propagationContext.js */ \"./node_modules/@sentry/utils/esm/propagationContext.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@sentry/utils/esm/version.js\");\n/* harmony import */ var _vendor_escapeStringForRegex_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./vendor/escapeStringForRegex.js */ \"./node_modules/@sentry/utils/esm/vendor/escapeStringForRegex.js\");\n/* harmony import */ var _vendor_supportsHistory_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./vendor/supportsHistory.js */ \"./node_modules/@sentry/utils/esm/vendor/supportsHistory.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFvRTtBQUMvQjtBQUM2RDtBQUNuQztBQUN0QjtBQUN1QjtBQUNXO0FBQ0o7QUFDWTtBQUMwQjtBQUNTO0FBQzZHO0FBQ3hMO0FBQ2tEO0FBQ3JEO0FBQ2dJO0FBQ3RHO0FBQ2M7QUFDc0g7QUFDcEc7QUFDM0M7QUFDNkg7QUFDdkc7QUFDOEY7QUFDeEY7QUFDcUI7QUFDNEY7QUFDM0c7QUFDK0M7QUFDSjtBQUMzRTtBQUM2TztBQUN2TztBQUM2RDtBQUNzSDtBQUNySTtBQUNsRTtBQUN1RTtBQUNsRDtBQUM5QjtBQUNnRDtBQUNKO0FBQ1k7QUFDbEI7QUFDSjtBQUNZO0FBQ1g7QUFDMUI7QUFDNkI7QUFDVjtBQUM5RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5kZXguanM/NTM1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBhcHBseUFnZ3JlZ2F0ZUVycm9yc1RvRXZlbnQgfSBmcm9tICcuL2FnZ3JlZ2F0ZS1lcnJvcnMuanMnO1xuZXhwb3J0IHsgZmxhdHRlbiB9IGZyb20gJy4vYXJyYXkuanMnO1xuZXhwb3J0IHsgZ2V0Q29tcG9uZW50TmFtZSwgZ2V0RG9tRWxlbWVudCwgZ2V0TG9jYXRpb25IcmVmLCBodG1sVHJlZUFzU3RyaW5nIH0gZnJvbSAnLi9icm93c2VyLmpzJztcbmV4cG9ydCB7IGRzbkZyb21TdHJpbmcsIGRzblRvU3RyaW5nLCBtYWtlRHNuIH0gZnJvbSAnLi9kc24uanMnO1xuZXhwb3J0IHsgU2VudHJ5RXJyb3IgfSBmcm9tICcuL2Vycm9yLmpzJztcbmV4cG9ydCB7IEdMT0JBTF9PQkosIGdldEdsb2JhbFNpbmdsZXRvbiB9IGZyb20gJy4vd29ybGR3aWRlLmpzJztcbmV4cG9ydCB7IGFkZENvbnNvbGVJbnN0cnVtZW50YXRpb25IYW5kbGVyIH0gZnJvbSAnLi9pbnN0cnVtZW50L2NvbnNvbGUuanMnO1xuZXhwb3J0IHsgYWRkRmV0Y2hJbnN0cnVtZW50YXRpb25IYW5kbGVyIH0gZnJvbSAnLi9pbnN0cnVtZW50L2ZldGNoLmpzJztcbmV4cG9ydCB7IGFkZEdsb2JhbEVycm9ySW5zdHJ1bWVudGF0aW9uSGFuZGxlciB9IGZyb20gJy4vaW5zdHJ1bWVudC9nbG9iYWxFcnJvci5qcyc7XG5leHBvcnQgeyBhZGRHbG9iYWxVbmhhbmRsZWRSZWplY3Rpb25JbnN0cnVtZW50YXRpb25IYW5kbGVyIH0gZnJvbSAnLi9pbnN0cnVtZW50L2dsb2JhbFVuaGFuZGxlZFJlamVjdGlvbi5qcyc7XG5leHBvcnQgeyBhZGRIYW5kbGVyLCBtYXliZUluc3RydW1lbnQsIHJlc2V0SW5zdHJ1bWVudGF0aW9uSGFuZGxlcnMsIHRyaWdnZXJIYW5kbGVycyB9IGZyb20gJy4vaW5zdHJ1bWVudC9oYW5kbGVycy5qcyc7XG5leHBvcnQgeyBpc0RPTUVycm9yLCBpc0RPTUV4Y2VwdGlvbiwgaXNFbGVtZW50LCBpc0Vycm9yLCBpc0Vycm9yRXZlbnQsIGlzRXZlbnQsIGlzSW5zdGFuY2VPZiwgaXNQYXJhbWV0ZXJpemVkU3RyaW5nLCBpc1BsYWluT2JqZWN0LCBpc1ByaW1pdGl2ZSwgaXNSZWdFeHAsIGlzU3RyaW5nLCBpc1N5bnRoZXRpY0V2ZW50LCBpc1RoZW5hYmxlLCBpc1Z1ZVZpZXdNb2RlbCB9IGZyb20gJy4vaXMuanMnO1xuZXhwb3J0IHsgaXNCcm93c2VyIH0gZnJvbSAnLi9pc0Jyb3dzZXIuanMnO1xuZXhwb3J0IHsgQ09OU09MRV9MRVZFTFMsIGNvbnNvbGVTYW5kYm94LCBsb2dnZXIsIG9yaWdpbmFsQ29uc29sZU1ldGhvZHMgfSBmcm9tICcuL2xvZ2dlci5qcyc7XG5leHBvcnQgeyBtZW1vQnVpbGRlciB9IGZyb20gJy4vbWVtby5qcyc7XG5leHBvcnQgeyBhZGRDb250ZXh0VG9GcmFtZSwgYWRkRXhjZXB0aW9uTWVjaGFuaXNtLCBhZGRFeGNlcHRpb25UeXBlVmFsdWUsIGFycmF5aWZ5LCBjaGVja09yU2V0QWxyZWFkeUNhdWdodCwgZ2V0RXZlbnREZXNjcmlwdGlvbiwgcGFyc2VTZW12ZXIsIHV1aWQ0IH0gZnJvbSAnLi9taXNjLmpzJztcbmV4cG9ydCB7IGR5bmFtaWNSZXF1aXJlLCBpc05vZGVFbnYsIGxvYWRNb2R1bGUgfSBmcm9tICcuL25vZGUuanMnO1xuZXhwb3J0IHsgbm9ybWFsaXplLCBub3JtYWxpemVUb1NpemUsIG5vcm1hbGl6ZVVybFRvQmFzZSB9IGZyb20gJy4vbm9ybWFsaXplLmpzJztcbmV4cG9ydCB7IGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eSwgY29udmVydFRvUGxhaW5PYmplY3QsIGRyb3BVbmRlZmluZWRLZXlzLCBleHRyYWN0RXhjZXB0aW9uS2V5c0Zvck1lc3NhZ2UsIGZpbGwsIGdldE9yaWdpbmFsRnVuY3Rpb24sIG1hcmtGdW5jdGlvbldyYXBwZWQsIG9iamVjdGlmeSwgdXJsRW5jb2RlIH0gZnJvbSAnLi9vYmplY3QuanMnO1xuZXhwb3J0IHsgYmFzZW5hbWUsIGRpcm5hbWUsIGlzQWJzb2x1dGUsIGpvaW4sIG5vcm1hbGl6ZVBhdGgsIHJlbGF0aXZlLCByZXNvbHZlIH0gZnJvbSAnLi9wYXRoLmpzJztcbmV4cG9ydCB7IG1ha2VQcm9taXNlQnVmZmVyIH0gZnJvbSAnLi9wcm9taXNlYnVmZmVyLmpzJztcbmV4cG9ydCB7IERFRkFVTFRfVVNFUl9JTkNMVURFUywgYWRkUmVxdWVzdERhdGFUb0V2ZW50LCBleHRyYWN0UGF0aEZvclRyYW5zYWN0aW9uLCBleHRyYWN0UmVxdWVzdERhdGEsIHdpbnRlckNHSGVhZGVyc1RvRGljdCwgd2ludGVyQ0dSZXF1ZXN0VG9SZXF1ZXN0RGF0YSB9IGZyb20gJy4vcmVxdWVzdGRhdGEuanMnO1xuZXhwb3J0IHsgc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcsIHZhbGlkU2V2ZXJpdHlMZXZlbHMgfSBmcm9tICcuL3NldmVyaXR5LmpzJztcbmV4cG9ydCB7IFVOS05PV05fRlVOQ1RJT04sIGNyZWF0ZVN0YWNrUGFyc2VyLCBnZXRGcmFtZXNGcm9tRXZlbnQsIGdldEZ1bmN0aW9uTmFtZSwgc3RhY2tQYXJzZXJGcm9tU3RhY2tQYXJzZXJPcHRpb25zLCBzdHJpcFNlbnRyeUZyYW1lc0FuZFJldmVyc2UgfSBmcm9tICcuL3N0YWNrdHJhY2UuanMnO1xuZXhwb3J0IHsgZmlsZW5hbWVJc0luQXBwLCBub2RlLCBub2RlU3RhY2tMaW5lUGFyc2VyIH0gZnJvbSAnLi9ub2RlLXN0YWNrLXRyYWNlLmpzJztcbmV4cG9ydCB7IGlzTWF0Y2hpbmdQYXR0ZXJuLCBzYWZlSm9pbiwgc25pcExpbmUsIHN0cmluZ01hdGNoZXNTb21lUGF0dGVybiwgdHJ1bmNhdGUgfSBmcm9tICcuL3N0cmluZy5qcyc7XG5leHBvcnQgeyBpc05hdGl2ZUZ1bmN0aW9uLCBzdXBwb3J0c0RPTUVycm9yLCBzdXBwb3J0c0RPTUV4Y2VwdGlvbiwgc3VwcG9ydHNFcnJvckV2ZW50LCBzdXBwb3J0c0ZldGNoLCBzdXBwb3J0c05hdGl2ZUZldGNoLCBzdXBwb3J0c1JlZmVycmVyUG9saWN5LCBzdXBwb3J0c1JlcG9ydGluZ09ic2VydmVyIH0gZnJvbSAnLi9zdXBwb3J0cy5qcyc7XG5leHBvcnQgeyBTeW5jUHJvbWlzZSwgcmVqZWN0ZWRTeW5jUHJvbWlzZSwgcmVzb2x2ZWRTeW5jUHJvbWlzZSB9IGZyb20gJy4vc3luY3Byb21pc2UuanMnO1xuZXhwb3J0IHsgX2Jyb3dzZXJQZXJmb3JtYW5jZVRpbWVPcmlnaW5Nb2RlLCBicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luLCBkYXRlVGltZXN0YW1wSW5TZWNvbmRzLCB0aW1lc3RhbXBJblNlY29uZHMgfSBmcm9tICcuL3RpbWUuanMnO1xuZXhwb3J0IHsgVFJBQ0VQQVJFTlRfUkVHRVhQLCBleHRyYWN0VHJhY2VwYXJlbnREYXRhLCBnZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyLCBwcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyB9IGZyb20gJy4vdHJhY2luZy5qcyc7XG5leHBvcnQgeyBnZXRTREtTb3VyY2UsIGlzQnJvd3NlckJ1bmRsZSB9IGZyb20gJy4vZW52LmpzJztcbmV4cG9ydCB7IGFkZEl0ZW1Ub0VudmVsb3BlLCBjcmVhdGVBdHRhY2htZW50RW52ZWxvcGVJdGVtLCBjcmVhdGVFbnZlbG9wZSwgY3JlYXRlRXZlbnRFbnZlbG9wZUhlYWRlcnMsIGNyZWF0ZVNwYW5FbnZlbG9wZUl0ZW0sIGVudmVsb3BlQ29udGFpbnNJdGVtVHlwZSwgZW52ZWxvcGVJdGVtVHlwZVRvRGF0YUNhdGVnb3J5LCBmb3JFYWNoRW52ZWxvcGVJdGVtLCBnZXRTZGtNZXRhZGF0YUZvckVudmVsb3BlSGVhZGVyLCBwYXJzZUVudmVsb3BlLCBzZXJpYWxpemVFbnZlbG9wZSB9IGZyb20gJy4vZW52ZWxvcGUuanMnO1xuZXhwb3J0IHsgY3JlYXRlQ2xpZW50UmVwb3J0RW52ZWxvcGUgfSBmcm9tICcuL2NsaWVudHJlcG9ydC5qcyc7XG5leHBvcnQgeyBERUZBVUxUX1JFVFJZX0FGVEVSLCBkaXNhYmxlZFVudGlsLCBpc1JhdGVMaW1pdGVkLCBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIsIHVwZGF0ZVJhdGVMaW1pdHMgfSBmcm9tICcuL3JhdGVsaW1pdC5qcyc7XG5leHBvcnQgeyBCQUdHQUdFX0hFQURFUl9OQU1FLCBNQVhfQkFHR0FHRV9TVFJJTkdfTEVOR1RILCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYLCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYX1JFR0VYLCBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0LCBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyLCBwYXJzZUJhZ2dhZ2VIZWFkZXIgfSBmcm9tICcuL2JhZ2dhZ2UuanMnO1xuZXhwb3J0IHsgZ2V0TnVtYmVyT2ZVcmxTZWdtZW50cywgZ2V0U2FuaXRpemVkVXJsU3RyaW5nLCBwYXJzZVVybCwgc3RyaXBVcmxRdWVyeUFuZEZyYWdtZW50IH0gZnJvbSAnLi91cmwuanMnO1xuZXhwb3J0IHsgbWFrZUZpZm9DYWNoZSB9IGZyb20gJy4vY2FjaGUuanMnO1xuZXhwb3J0IHsgZXZlbnRGcm9tTWVzc2FnZSwgZXZlbnRGcm9tVW5rbm93bklucHV0LCBleGNlcHRpb25Gcm9tRXJyb3IsIHBhcnNlU3RhY2tGcmFtZXMgfSBmcm9tICcuL2V2ZW50YnVpbGRlci5qcyc7XG5leHBvcnQgeyBjYWxsRnJhbWVUb1N0YWNrRnJhbWUsIHdhdGNoZG9nVGltZXIgfSBmcm9tICcuL2Fuci5qcyc7XG5leHBvcnQgeyBMUlVNYXAgfSBmcm9tICcuL2xydS5qcyc7XG5leHBvcnQgeyBfYXN5bmNOdWxsaXNoQ29hbGVzY2UgfSBmcm9tICcuL2J1aWxkUG9seWZpbGxzL19hc3luY051bGxpc2hDb2FsZXNjZS5qcyc7XG5leHBvcnQgeyBfYXN5bmNPcHRpb25hbENoYWluIH0gZnJvbSAnLi9idWlsZFBvbHlmaWxscy9fYXN5bmNPcHRpb25hbENoYWluLmpzJztcbmV4cG9ydCB7IF9hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUgfSBmcm9tICcuL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUuanMnO1xuZXhwb3J0IHsgX251bGxpc2hDb2FsZXNjZSB9IGZyb20gJy4vYnVpbGRQb2x5ZmlsbHMvX251bGxpc2hDb2FsZXNjZS5qcyc7XG5leHBvcnQgeyBfb3B0aW9uYWxDaGFpbiB9IGZyb20gJy4vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW4uanMnO1xuZXhwb3J0IHsgX29wdGlvbmFsQ2hhaW5EZWxldGUgfSBmcm9tICcuL2J1aWxkUG9seWZpbGxzL19vcHRpb25hbENoYWluRGVsZXRlLmpzJztcbmV4cG9ydCB7IGdlbmVyYXRlUHJvcGFnYXRpb25Db250ZXh0IH0gZnJvbSAnLi9wcm9wYWdhdGlvbkNvbnRleHQuanMnO1xuZXhwb3J0IHsgU0RLX1ZFUlNJT04gfSBmcm9tICcuL3ZlcnNpb24uanMnO1xuZXhwb3J0IHsgZXNjYXBlU3RyaW5nRm9yUmVnZXggfSBmcm9tICcuL3ZlbmRvci9lc2NhcGVTdHJpbmdGb3JSZWdleC5qcyc7XG5leHBvcnQgeyBzdXBwb3J0c0hpc3RvcnkgfSBmcm9tICcuL3ZlbmRvci9zdXBwb3J0c0hpc3RvcnkuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/console.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/console.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addConsoleInstrumentationHandler\": function() { return /* binding */ addConsoleInstrumentationHandler; }\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/handlers.js\");\n\n\n\n\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!(\"console\" in _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ)) {\n    return;\n  }\n\n  _logger_js__WEBPACK_IMPORTED_MODULE_2__.CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(_worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      _logger_js__WEBPACK_IMPORTED_MODULE_2__.originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('console', handlerData);\n\n        const log = _logger_js__WEBPACK_IMPORTED_MODULE_2__.originalConsoleMethods[level];\n        log && log.apply(_worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\n\n//# sourceMappingURL=console.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9jb25zb2xlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNFO0FBQ2xDO0FBQ1M7QUFDZ0M7O0FBRTdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdEQUFVO0FBQ1osRUFBRSw2REFBZTtBQUNqQjs7QUFFQTtBQUNBLFFBQVEsa0VBQXVCO0FBQy9CO0FBQ0E7O0FBRUEsRUFBRSw4REFBc0I7QUFDeEIsbUJBQW1CLDZEQUFrQjtBQUNyQztBQUNBOztBQUVBLElBQUksZ0RBQUksQ0FBQyw2REFBa0I7QUFDM0IsTUFBTSw4REFBc0I7O0FBRTVCO0FBQ0EsOEJBQThCO0FBQzlCLFFBQVEsNkRBQWU7O0FBRXZCLG9CQUFvQiw4REFBc0I7QUFDMUMseUJBQXlCLDZEQUFrQjtBQUMzQztBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRTRDO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9pbnN0cnVtZW50L2NvbnNvbGUuanM/NWY2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT05TT0xFX0xFVkVMUywgb3JpZ2luYWxDb25zb2xlTWV0aG9kcyB9IGZyb20gJy4uL2xvZ2dlci5qcyc7XG5pbXBvcnQgeyBmaWxsIH0gZnJvbSAnLi4vb2JqZWN0LmpzJztcbmltcG9ydCB7IEdMT0JBTF9PQkogfSBmcm9tICcuLi93b3JsZHdpZGUuanMnO1xuaW1wb3J0IHsgYWRkSGFuZGxlciwgbWF5YmVJbnN0cnVtZW50LCB0cmlnZ2VySGFuZGxlcnMgfSBmcm9tICcuL2hhbmRsZXJzLmpzJztcblxuLyoqXG4gKiBBZGQgYW4gaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXIgZm9yIHdoZW4gYSBjb25zb2xlLnh4eCBtZXRob2QgaXMgY2FsbGVkLlxuICpcbiAqIFVzZSBhdCB5b3VyIG93biByaXNrLCB0aGlzIG1pZ2h0IGJyZWFrIHdpdGhvdXQgY2hhbmdlbG9nIG5vdGljZSwgb25seSB1c2VkIGludGVybmFsbHkuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGFkZENvbnNvbGVJbnN0cnVtZW50YXRpb25IYW5kbGVyKGhhbmRsZXIpIHtcbiAgY29uc3QgdHlwZSA9ICdjb25zb2xlJztcbiAgYWRkSGFuZGxlcih0eXBlLCBoYW5kbGVyKTtcbiAgbWF5YmVJbnN0cnVtZW50KHR5cGUsIGluc3RydW1lbnRDb25zb2xlKTtcbn1cblxuZnVuY3Rpb24gaW5zdHJ1bWVudENvbnNvbGUoKSB7XG4gIGlmICghKCdjb25zb2xlJyBpbiBHTE9CQUxfT0JKKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIENPTlNPTEVfTEVWRUxTLmZvckVhY2goZnVuY3Rpb24gKGxldmVsKSB7XG4gICAgaWYgKCEobGV2ZWwgaW4gR0xPQkFMX09CSi5jb25zb2xlKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZpbGwoR0xPQkFMX09CSi5jb25zb2xlLCBsZXZlbCwgZnVuY3Rpb24gKG9yaWdpbmFsQ29uc29sZU1ldGhvZCkge1xuICAgICAgb3JpZ2luYWxDb25zb2xlTWV0aG9kc1tsZXZlbF0gPSBvcmlnaW5hbENvbnNvbGVNZXRob2Q7XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgICBjb25zdCBoYW5kbGVyRGF0YSA9IHsgYXJncywgbGV2ZWwgfTtcbiAgICAgICAgdHJpZ2dlckhhbmRsZXJzKCdjb25zb2xlJywgaGFuZGxlckRhdGEpO1xuXG4gICAgICAgIGNvbnN0IGxvZyA9IG9yaWdpbmFsQ29uc29sZU1ldGhvZHNbbGV2ZWxdO1xuICAgICAgICBsb2cgJiYgbG9nLmFwcGx5KEdMT0JBTF9PQkouY29uc29sZSwgYXJncyk7XG4gICAgICB9O1xuICAgIH0pO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgYWRkQ29uc29sZUluc3RydW1lbnRhdGlvbkhhbmRsZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnNvbGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/instrument/console.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/fetch.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/fetch.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addFetchInstrumentationHandler\": function() { return /* binding */ addFetchInstrumentationHandler; },\n/* harmony export */   \"parseFetchArgs\": function() { return /* binding */ parseFetchArgs; }\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _supports_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../supports.js */ \"./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../time.js */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/handlers.js\");\n\n\n\n\n\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addFetchInstrumentationHandler(handler) {\n  const type = 'fetch';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentFetch);\n}\n\nfunction instrumentFetch() {\n  if (!(0,_supports_js__WEBPACK_IMPORTED_MODULE_1__.supportsNativeFetch)()) {\n    return;\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(_worldwide_js__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: (0,_time_js__WEBPACK_IMPORTED_MODULE_4__.timestampInSeconds)() * 1000,\n      };\n\n      (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(_worldwide_js__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ, args).then(\n        (response) => {\n          const finishedHandlerData = {\n            ...handlerData,\n            endTimestamp: (0,_time_js__WEBPACK_IMPORTED_MODULE_4__.timestampInSeconds)() * 1000,\n            response,\n          };\n\n          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', finishedHandlerData);\n          return response;\n        },\n        (error) => {\n          const erroredHandlerData = {\n            ...handlerData,\n            endTimestamp: (0,_time_js__WEBPACK_IMPORTED_MODULE_4__.timestampInSeconds)() * 1000,\n            error,\n          };\n\n          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9mZXRjaC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW9DO0FBQ2lCO0FBQ0w7QUFDSDtBQUNnQzs7QUFFN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdEQUFVO0FBQ1osRUFBRSw2REFBZTtBQUNqQjs7QUFFQTtBQUNBLE9BQU8saUVBQW1CO0FBQzFCO0FBQ0E7O0FBRUEsRUFBRSxnREFBSSxDQUFDLHFEQUFVO0FBQ2pCO0FBQ0EsY0FBYyxjQUFjOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULHdCQUF3Qiw0REFBa0I7QUFDMUM7O0FBRUEsTUFBTSw2REFBZTtBQUNyQjtBQUNBLE9BQU87O0FBRVA7QUFDQSxpQ0FBaUMscURBQVU7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDREQUFrQjtBQUM1QztBQUNBOztBQUVBLFVBQVUsNkRBQWU7QUFDekI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDREQUFrQjtBQUM1QztBQUNBOztBQUVBLFVBQVUsNkRBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEQ7QUFDMUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2luc3RydW1lbnQvZmV0Y2guanM/YTM5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmaWxsIH0gZnJvbSAnLi4vb2JqZWN0LmpzJztcbmltcG9ydCB7IHN1cHBvcnRzTmF0aXZlRmV0Y2ggfSBmcm9tICcuLi9zdXBwb3J0cy5qcyc7XG5pbXBvcnQgeyB0aW1lc3RhbXBJblNlY29uZHMgfSBmcm9tICcuLi90aW1lLmpzJztcbmltcG9ydCB7IEdMT0JBTF9PQkogfSBmcm9tICcuLi93b3JsZHdpZGUuanMnO1xuaW1wb3J0IHsgYWRkSGFuZGxlciwgbWF5YmVJbnN0cnVtZW50LCB0cmlnZ2VySGFuZGxlcnMgfSBmcm9tICcuL2hhbmRsZXJzLmpzJztcblxuLyoqXG4gKiBBZGQgYW4gaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXIgZm9yIHdoZW4gYSBmZXRjaCByZXF1ZXN0IGhhcHBlbnMuXG4gKiBUaGUgaGFuZGxlciBmdW5jdGlvbiBpcyBjYWxsZWQgb25jZSB3aGVuIHRoZSByZXF1ZXN0IHN0YXJ0cyBhbmQgb25jZSB3aGVuIGl0IGVuZHMsXG4gKiB3aGljaCBjYW4gYmUgaWRlbnRpZmllZCBieSBjaGVja2luZyBpZiBpdCBoYXMgYW4gYGVuZFRpbWVzdGFtcGAuXG4gKlxuICogVXNlIGF0IHlvdXIgb3duIHJpc2ssIHRoaXMgbWlnaHQgYnJlYWsgd2l0aG91dCBjaGFuZ2Vsb2cgbm90aWNlLCBvbmx5IHVzZWQgaW50ZXJuYWxseS5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gYWRkRmV0Y2hJbnN0cnVtZW50YXRpb25IYW5kbGVyKGhhbmRsZXIpIHtcbiAgY29uc3QgdHlwZSA9ICdmZXRjaCc7XG4gIGFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIG1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50RmV0Y2gpO1xufVxuXG5mdW5jdGlvbiBpbnN0cnVtZW50RmV0Y2goKSB7XG4gIGlmICghc3VwcG9ydHNOYXRpdmVGZXRjaCgpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZmlsbChHTE9CQUxfT0JKLCAnZmV0Y2gnLCBmdW5jdGlvbiAob3JpZ2luYWxGZXRjaCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgY29uc3QgeyBtZXRob2QsIHVybCB9ID0gcGFyc2VGZXRjaEFyZ3MoYXJncyk7XG5cbiAgICAgIGNvbnN0IGhhbmRsZXJEYXRhID0ge1xuICAgICAgICBhcmdzLFxuICAgICAgICBmZXRjaERhdGE6IHtcbiAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgdXJsLFxuICAgICAgICB9LFxuICAgICAgICBzdGFydFRpbWVzdGFtcDogdGltZXN0YW1wSW5TZWNvbmRzKCkgKiAxMDAwLFxuICAgICAgfTtcblxuICAgICAgdHJpZ2dlckhhbmRsZXJzKCdmZXRjaCcsIHtcbiAgICAgICAgLi4uaGFuZGxlckRhdGEsXG4gICAgICB9KTtcblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgICAgcmV0dXJuIG9yaWdpbmFsRmV0Y2guYXBwbHkoR0xPQkFMX09CSiwgYXJncykudGhlbihcbiAgICAgICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgY29uc3QgZmluaXNoZWRIYW5kbGVyRGF0YSA9IHtcbiAgICAgICAgICAgIC4uLmhhbmRsZXJEYXRhLFxuICAgICAgICAgICAgZW5kVGltZXN0YW1wOiB0aW1lc3RhbXBJblNlY29uZHMoKSAqIDEwMDAsXG4gICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgdHJpZ2dlckhhbmRsZXJzKCdmZXRjaCcsIGZpbmlzaGVkSGFuZGxlckRhdGEpO1xuICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSxcbiAgICAgICAgKGVycm9yKSA9PiB7XG4gICAgICAgICAgY29uc3QgZXJyb3JlZEhhbmRsZXJEYXRhID0ge1xuICAgICAgICAgICAgLi4uaGFuZGxlckRhdGEsXG4gICAgICAgICAgICBlbmRUaW1lc3RhbXA6IHRpbWVzdGFtcEluU2Vjb25kcygpICogMTAwMCxcbiAgICAgICAgICAgIGVycm9yLFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICB0cmlnZ2VySGFuZGxlcnMoJ2ZldGNoJywgZXJyb3JlZEhhbmRsZXJEYXRhKTtcbiAgICAgICAgICAvLyBOT1RFOiBJZiB5b3UgYXJlIGEgU2VudHJ5IHVzZXIsIGFuZCB5b3UgYXJlIHNlZWluZyB0aGlzIHN0YWNrIGZyYW1lLFxuICAgICAgICAgIC8vICAgICAgIGl0IG1lYW5zIHRoZSBzZW50cnkuamF2YXNjcmlwdCBTREsgY2F1Z2h0IGFuIGVycm9yIGludm9raW5nIHlvdXIgYXBwbGljYXRpb24gY29kZS5cbiAgICAgICAgICAvLyAgICAgICBUaGlzIGlzIGV4cGVjdGVkIGJlaGF2aW9yIGFuZCBOT1QgaW5kaWNhdGl2ZSBvZiBhIGJ1ZyB3aXRoIHNlbnRyeS5qYXZhc2NyaXB0LlxuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9LFxuICAgICAgKTtcbiAgICB9O1xuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFzUHJvcChvYmosIHByb3ApIHtcbiAgcmV0dXJuICEhb2JqICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmICEhKG9iaiApW3Byb3BdO1xufVxuXG5mdW5jdGlvbiBnZXRVcmxGcm9tUmVzb3VyY2UocmVzb3VyY2UpIHtcbiAgaWYgKHR5cGVvZiByZXNvdXJjZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gcmVzb3VyY2U7XG4gIH1cblxuICBpZiAoIXJlc291cmNlKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgaWYgKGhhc1Byb3AocmVzb3VyY2UsICd1cmwnKSkge1xuICAgIHJldHVybiByZXNvdXJjZS51cmw7XG4gIH1cblxuICBpZiAocmVzb3VyY2UudG9TdHJpbmcpIHtcbiAgICByZXR1cm4gcmVzb3VyY2UudG9TdHJpbmcoKTtcbiAgfVxuXG4gIHJldHVybiAnJztcbn1cblxuLyoqXG4gKiBQYXJzZXMgdGhlIGZldGNoIGFyZ3VtZW50cyB0byBmaW5kIHRoZSB1c2VkIEh0dHAgbWV0aG9kIGFuZCB0aGUgdXJsIG9mIHRoZSByZXF1ZXN0LlxuICogRXhwb3J0ZWQgZm9yIHRlc3RzIG9ubHkuXG4gKi9cbmZ1bmN0aW9uIHBhcnNlRmV0Y2hBcmdzKGZldGNoQXJncykge1xuICBpZiAoZmV0Y2hBcmdzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB7IG1ldGhvZDogJ0dFVCcsIHVybDogJycgfTtcbiAgfVxuXG4gIGlmIChmZXRjaEFyZ3MubGVuZ3RoID09PSAyKSB7XG4gICAgY29uc3QgW3VybCwgb3B0aW9uc10gPSBmZXRjaEFyZ3MgO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHVybDogZ2V0VXJsRnJvbVJlc291cmNlKHVybCksXG4gICAgICBtZXRob2Q6IGhhc1Byb3Aob3B0aW9ucywgJ21ldGhvZCcpID8gU3RyaW5nKG9wdGlvbnMubWV0aG9kKS50b1VwcGVyQ2FzZSgpIDogJ0dFVCcsXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IGFyZyA9IGZldGNoQXJnc1swXTtcbiAgcmV0dXJuIHtcbiAgICB1cmw6IGdldFVybEZyb21SZXNvdXJjZShhcmcgKSxcbiAgICBtZXRob2Q6IGhhc1Byb3AoYXJnLCAnbWV0aG9kJykgPyBTdHJpbmcoYXJnLm1ldGhvZCkudG9VcHBlckNhc2UoKSA6ICdHRVQnLFxuICB9O1xufVxuXG5leHBvcnQgeyBhZGRGZXRjaEluc3RydW1lbnRhdGlvbkhhbmRsZXIsIHBhcnNlRmV0Y2hBcmdzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/instrument/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/globalError.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/globalError.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addGlobalErrorInstrumentationHandler\": function() { return /* binding */ addGlobalErrorInstrumentationHandler; }\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/handlers.js\");\n\n\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror;\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\n\n//# sourceMappingURL=globalError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9nbG9iYWxFcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFDZ0M7O0FBRTdFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHdEQUFVO0FBQ1osRUFBRSw2REFBZTtBQUNqQjs7QUFFQTtBQUNBLHVCQUF1Qiw2REFBa0I7O0FBRXpDLEVBQUUsNkRBQWtCO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw2REFBZTs7QUFFbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxFQUFFLHFGQUEwQztBQUM1Qzs7QUFFZ0Q7QUFDaEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2luc3RydW1lbnQvZ2xvYmFsRXJyb3IuanM/YmNmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTE9CQUxfT0JKIH0gZnJvbSAnLi4vd29ybGR3aWRlLmpzJztcbmltcG9ydCB7IGFkZEhhbmRsZXIsIG1heWJlSW5zdHJ1bWVudCwgdHJpZ2dlckhhbmRsZXJzIH0gZnJvbSAnLi9oYW5kbGVycy5qcyc7XG5cbmxldCBfb2xkT25FcnJvckhhbmRsZXIgPSBudWxsO1xuXG4vKipcbiAqIEFkZCBhbiBpbnN0cnVtZW50YXRpb24gaGFuZGxlciBmb3Igd2hlbiBhbiBlcnJvciBpcyBjYXB0dXJlZCBieSB0aGUgZ2xvYmFsIGVycm9yIGhhbmRsZXIuXG4gKlxuICogVXNlIGF0IHlvdXIgb3duIHJpc2ssIHRoaXMgbWlnaHQgYnJlYWsgd2l0aG91dCBjaGFuZ2Vsb2cgbm90aWNlLCBvbmx5IHVzZWQgaW50ZXJuYWxseS5cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gYWRkR2xvYmFsRXJyb3JJbnN0cnVtZW50YXRpb25IYW5kbGVyKGhhbmRsZXIpIHtcbiAgY29uc3QgdHlwZSA9ICdlcnJvcic7XG4gIGFkZEhhbmRsZXIodHlwZSwgaGFuZGxlcik7XG4gIG1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50RXJyb3IpO1xufVxuXG5mdW5jdGlvbiBpbnN0cnVtZW50RXJyb3IoKSB7XG4gIF9vbGRPbkVycm9ySGFuZGxlciA9IEdMT0JBTF9PQkoub25lcnJvcjtcblxuICBHTE9CQUxfT0JKLm9uZXJyb3IgPSBmdW5jdGlvbiAoXG4gICAgbXNnLFxuICAgIHVybCxcbiAgICBsaW5lLFxuICAgIGNvbHVtbixcbiAgICBlcnJvcixcbiAgKSB7XG4gICAgY29uc3QgaGFuZGxlckRhdGEgPSB7XG4gICAgICBjb2x1bW4sXG4gICAgICBlcnJvcixcbiAgICAgIGxpbmUsXG4gICAgICBtc2csXG4gICAgICB1cmwsXG4gICAgfTtcbiAgICB0cmlnZ2VySGFuZGxlcnMoJ2Vycm9yJywgaGFuZGxlckRhdGEpO1xuXG4gICAgaWYgKF9vbGRPbkVycm9ySGFuZGxlciAmJiAhX29sZE9uRXJyb3JIYW5kbGVyLl9fU0VOVFJZX0xPQURFUl9fKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLXJlc3QtcGFyYW1zXG4gICAgICByZXR1cm4gX29sZE9uRXJyb3JIYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIEdMT0JBTF9PQkoub25lcnJvci5fX1NFTlRSWV9JTlNUUlVNRU5URURfXyA9IHRydWU7XG59XG5cbmV4cG9ydCB7IGFkZEdsb2JhbEVycm9ySW5zdHJ1bWVudGF0aW9uSGFuZGxlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFsRXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/instrument/globalError.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addGlobalUnhandledRejectionInstrumentationHandler\": function() { return /* binding */ addGlobalUnhandledRejectionInstrumentationHandler; }\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers.js */ \"./node_modules/@sentry/utils/esm/instrument/handlers.js\");\n\n\n\nlet _oldOnUnhandledRejectionHandler = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalUnhandledRejectionInstrumentationHandler(\n  handler,\n) {\n  const type = 'unhandledrejection';\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);\n  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection;\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection = function (e) {\n    const handlerData = e;\n    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\n\n//# sourceMappingURL=globalUnhandledRejection.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9nbG9iYWxVbmhhbmRsZWRSZWplY3Rpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQ2dDOztBQUU3RTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsd0RBQVU7QUFDWixFQUFFLDZEQUFlO0FBQ2pCOztBQUVBO0FBQ0Esb0NBQW9DLDBFQUErQjs7QUFFbkUsRUFBRSwwRUFBK0I7QUFDakM7QUFDQSxJQUFJLDZEQUFlOztBQUVuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLEVBQUUsa0dBQXVEO0FBQ3pEOztBQUU2RDtBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9nbG9iYWxVbmhhbmRsZWRSZWplY3Rpb24uanM/NTc3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTE9CQUxfT0JKIH0gZnJvbSAnLi4vd29ybGR3aWRlLmpzJztcbmltcG9ydCB7IGFkZEhhbmRsZXIsIG1heWJlSW5zdHJ1bWVudCwgdHJpZ2dlckhhbmRsZXJzIH0gZnJvbSAnLi9oYW5kbGVycy5qcyc7XG5cbmxldCBfb2xkT25VbmhhbmRsZWRSZWplY3Rpb25IYW5kbGVyID0gbnVsbDtcblxuLyoqXG4gKiBBZGQgYW4gaW5zdHJ1bWVudGF0aW9uIGhhbmRsZXIgZm9yIHdoZW4gYW4gdW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uIGlzIGNhcHR1cmVkLlxuICpcbiAqIFVzZSBhdCB5b3VyIG93biByaXNrLCB0aGlzIG1pZ2h0IGJyZWFrIHdpdGhvdXQgY2hhbmdlbG9nIG5vdGljZSwgb25seSB1c2VkIGludGVybmFsbHkuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGFkZEdsb2JhbFVuaGFuZGxlZFJlamVjdGlvbkluc3RydW1lbnRhdGlvbkhhbmRsZXIoXG4gIGhhbmRsZXIsXG4pIHtcbiAgY29uc3QgdHlwZSA9ICd1bmhhbmRsZWRyZWplY3Rpb24nO1xuICBhZGRIYW5kbGVyKHR5cGUsIGhhbmRsZXIpO1xuICBtYXliZUluc3RydW1lbnQodHlwZSwgaW5zdHJ1bWVudFVuaGFuZGxlZFJlamVjdGlvbik7XG59XG5cbmZ1bmN0aW9uIGluc3RydW1lbnRVbmhhbmRsZWRSZWplY3Rpb24oKSB7XG4gIF9vbGRPblVuaGFuZGxlZFJlamVjdGlvbkhhbmRsZXIgPSBHTE9CQUxfT0JKLm9udW5oYW5kbGVkcmVqZWN0aW9uO1xuXG4gIEdMT0JBTF9PQkoub251bmhhbmRsZWRyZWplY3Rpb24gPSBmdW5jdGlvbiAoZSkge1xuICAgIGNvbnN0IGhhbmRsZXJEYXRhID0gZTtcbiAgICB0cmlnZ2VySGFuZGxlcnMoJ3VuaGFuZGxlZHJlamVjdGlvbicsIGhhbmRsZXJEYXRhKTtcblxuICAgIGlmIChfb2xkT25VbmhhbmRsZWRSZWplY3Rpb25IYW5kbGVyICYmICFfb2xkT25VbmhhbmRsZWRSZWplY3Rpb25IYW5kbGVyLl9fU0VOVFJZX0xPQURFUl9fKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLXJlc3QtcGFyYW1zXG4gICAgICByZXR1cm4gX29sZE9uVW5oYW5kbGVkUmVqZWN0aW9uSGFuZGxlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG4gIEdMT0JBTF9PQkoub251bmhhbmRsZWRyZWplY3Rpb24uX19TRU5UUllfSU5TVFJVTUVOVEVEX18gPSB0cnVlO1xufVxuXG5leHBvcnQgeyBhZGRHbG9iYWxVbmhhbmRsZWRSZWplY3Rpb25JbnN0cnVtZW50YXRpb25IYW5kbGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxVbmhhbmRsZWRSZWplY3Rpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/handlers.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/handlers.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addHandler\": function() { return /* binding */ addHandler; },\n/* harmony export */   \"maybeInstrument\": function() { return /* binding */ maybeInstrument; },\n/* harmony export */   \"resetInstrumentationHandlers\": function() { return /* binding */ resetInstrumentationHandlers; },\n/* harmony export */   \"triggerHandlers\": function() { return /* binding */ triggerHandlers; }\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ \"./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n\n//# sourceMappingURL=handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5zdHJ1bWVudC9oYW5kbGVycy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWdEO0FBQ1Y7QUFDYTs7QUFFbkQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixNQUFNLHdEQUFXO0FBQ2pCLFFBQVEsb0RBQVk7QUFDcEIsb0VBQW9FLEtBQUssVUFBVSwrREFBZSxVQUFVO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNGO0FBQ3RGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9pbnN0cnVtZW50L2hhbmRsZXJzLmpzPzJlNDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuLi9sb2dnZXIuanMnO1xuaW1wb3J0IHsgZ2V0RnVuY3Rpb25OYW1lIH0gZnJvbSAnLi4vc3RhY2t0cmFjZS5qcyc7XG5cbi8vIFdlIGtlZXAgdGhlIGhhbmRsZXJzIGdsb2JhbGx5XG5jb25zdCBoYW5kbGVycyA9IHt9O1xuY29uc3QgaW5zdHJ1bWVudGVkID0ge307XG5cbi8qKiBBZGQgYSBoYW5kbGVyIGZ1bmN0aW9uLiAqL1xuZnVuY3Rpb24gYWRkSGFuZGxlcih0eXBlLCBoYW5kbGVyKSB7XG4gIGhhbmRsZXJzW3R5cGVdID0gaGFuZGxlcnNbdHlwZV0gfHwgW107XG4gIChoYW5kbGVyc1t0eXBlXSApLnB1c2goaGFuZGxlcik7XG59XG5cbi8qKlxuICogUmVzZXQgYWxsIGluc3RydW1lbnRhdGlvbiBoYW5kbGVycy5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgYnkgdGVzdHMgdG8gZW5zdXJlIHdlIGhhdmUgYSBjbGVhbiBzbGF0ZSBvZiBpbnN0cnVtZW50YXRpb24gaGFuZGxlcnMuXG4gKi9cbmZ1bmN0aW9uIHJlc2V0SW5zdHJ1bWVudGF0aW9uSGFuZGxlcnMoKSB7XG4gIE9iamVjdC5rZXlzKGhhbmRsZXJzKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgaGFuZGxlcnNba2V5IF0gPSB1bmRlZmluZWQ7XG4gIH0pO1xufVxuXG4vKiogTWF5YmUgcnVuIGFuIGluc3RydW1lbnRhdGlvbiBmdW5jdGlvbiwgdW5sZXNzIGl0IHdhcyBhbHJlYWR5IGNhbGxlZC4gKi9cbmZ1bmN0aW9uIG1heWJlSW5zdHJ1bWVudCh0eXBlLCBpbnN0cnVtZW50Rm4pIHtcbiAgaWYgKCFpbnN0cnVtZW50ZWRbdHlwZV0pIHtcbiAgICBpbnN0cnVtZW50Rm4oKTtcbiAgICBpbnN0cnVtZW50ZWRbdHlwZV0gPSB0cnVlO1xuICB9XG59XG5cbi8qKiBUcmlnZ2VyIGhhbmRsZXJzIGZvciBhIGdpdmVuIGluc3RydW1lbnRhdGlvbiB0eXBlLiAqL1xuZnVuY3Rpb24gdHJpZ2dlckhhbmRsZXJzKHR5cGUsIGRhdGEpIHtcbiAgY29uc3QgdHlwZUhhbmRsZXJzID0gdHlwZSAmJiBoYW5kbGVyc1t0eXBlXTtcbiAgaWYgKCF0eXBlSGFuZGxlcnMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBmb3IgKGNvbnN0IGhhbmRsZXIgb2YgdHlwZUhhbmRsZXJzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGhhbmRsZXIoZGF0YSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgREVCVUdfQlVJTEQgJiZcbiAgICAgICAgbG9nZ2VyLmVycm9yKFxuICAgICAgICAgIGBFcnJvciB3aGlsZSB0cmlnZ2VyaW5nIGluc3RydW1lbnRhdGlvbiBoYW5kbGVyLlxcblR5cGU6ICR7dHlwZX1cXG5OYW1lOiAke2dldEZ1bmN0aW9uTmFtZShoYW5kbGVyKX1cXG5FcnJvcjpgLFxuICAgICAgICAgIGUsXG4gICAgICAgICk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IGFkZEhhbmRsZXIsIG1heWJlSW5zdHJ1bWVudCwgcmVzZXRJbnN0cnVtZW50YXRpb25IYW5kbGVycywgdHJpZ2dlckhhbmRsZXJzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYW5kbGVycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/instrument/handlers.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/is.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/is.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isDOMError\": function() { return /* binding */ isDOMError; },\n/* harmony export */   \"isDOMException\": function() { return /* binding */ isDOMException; },\n/* harmony export */   \"isElement\": function() { return /* binding */ isElement; },\n/* harmony export */   \"isError\": function() { return /* binding */ isError; },\n/* harmony export */   \"isErrorEvent\": function() { return /* binding */ isErrorEvent; },\n/* harmony export */   \"isEvent\": function() { return /* binding */ isEvent; },\n/* harmony export */   \"isInstanceOf\": function() { return /* binding */ isInstanceOf; },\n/* harmony export */   \"isParameterizedString\": function() { return /* binding */ isParameterizedString; },\n/* harmony export */   \"isPlainObject\": function() { return /* binding */ isPlainObject; },\n/* harmony export */   \"isPrimitive\": function() { return /* binding */ isPrimitive; },\n/* harmony export */   \"isRegExp\": function() { return /* binding */ isRegExp; },\n/* harmony export */   \"isString\": function() { return /* binding */ isString; },\n/* harmony export */   \"isSyntheticEvent\": function() { return /* binding */ isSyntheticEvent; },\n/* harmony export */   \"isThenable\": function() { return /* binding */ isThenable; },\n/* harmony export */   \"isVueViewModel\": function() { return /* binding */ isVueViewModel; }\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isParameterizedString(wat) {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isVueViewModel(wat) {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));\n}\n\n\n//# sourceMappingURL=is.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/is.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/isBrowser.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/isBrowser.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isBrowser\": function() { return /* binding */ isBrowser; }\n/* harmony export */ });\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node.js */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!(0,_node_js__WEBPACK_IMPORTED_MODULE_0__.isNodeEnv)() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.process !== undefined && _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.process.type === 'renderer'\n  );\n}\n\n\n//# sourceMappingURL=isBrowser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaXNCcm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUNNOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLG1EQUFTO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw2REFBcUIsa0JBQWtCLGtFQUE2QjtBQUN4RTtBQUNBOztBQUVxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaXNCcm93c2VyLmpzP2M2YTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOb2RlRW52IH0gZnJvbSAnLi9ub2RlLmpzJztcbmltcG9ydCB7IEdMT0JBTF9PQkogfSBmcm9tICcuL3dvcmxkd2lkZS5qcyc7XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHdlIGFyZSBpbiB0aGUgYnJvd3Nlci5cbiAqL1xuZnVuY3Rpb24gaXNCcm93c2VyKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1nbG9iYWxzXG4gIHJldHVybiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAoIWlzTm9kZUVudigpIHx8IGlzRWxlY3Ryb25Ob2RlUmVuZGVyZXIoKSk7XG59XG5cbi8vIEVsZWN0cm9uIHJlbmRlcmVycyB3aXRoIG5vZGVJbnRlZ3JhdGlvbiBlbmFibGVkIGFyZSBkZXRlY3RlZCBhcyBOb2RlLmpzIHNvIHdlIHNwZWNpZmljYWxseSB0ZXN0IGZvciB0aGVtXG5mdW5jdGlvbiBpc0VsZWN0cm9uTm9kZVJlbmRlcmVyKCkge1xuICByZXR1cm4gKFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAoR0xPQkFMX09CSiApLnByb2Nlc3MgIT09IHVuZGVmaW5lZCAmJiAoKEdMT0JBTF9PQkogKS5wcm9jZXNzICkudHlwZSA9PT0gJ3JlbmRlcmVyJ1xuICApO1xufVxuXG5leHBvcnQgeyBpc0Jyb3dzZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzQnJvd3Nlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/isBrowser.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/logger.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/logger.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONSOLE_LEVELS\": function() { return /* binding */ CONSOLE_LEVELS; },\n/* harmony export */   \"consoleSandbox\": function() { return /* binding */ consoleSandbox; },\n/* harmony export */   \"logger\": function() { return /* binding */ logger; },\n/* harmony export */   \"originalConsoleMethods\": function() { return /* binding */ originalConsoleMethods; }\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] ;\n\n/** This may be mutated by the console instrumentation. */\nconst originalConsoleMethods\n\n = {};\n\n/** JSDoc */\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!(\"console\" in _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console ;\n  const wrappedFuncs = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) ;\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] ;\n    wrappedFuncs[level] = console[level] ;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] ;\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\nconst logger = makeLogger();\n\n\n//# sourceMappingURL=logger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbG9nZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQztBQUNIOztBQUU1QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrRUFBdUI7QUFDL0I7QUFDQTs7QUFFQSxrQkFBa0IsNkRBQWtCO0FBQ3BDOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUEsTUFBTSx3REFBVztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2REFBa0IsVUFBVSxPQUFPLEdBQUcsS0FBSztBQUN2RCxXQUFXO0FBQ1g7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBOztBQUUwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbG9nZ2VyLmpzP2Y2YzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCB7IEdMT0JBTF9PQkogfSBmcm9tICcuL3dvcmxkd2lkZS5qcyc7XG5cbi8qKiBQcmVmaXggZm9yIGxvZ2dpbmcgc3RyaW5ncyAqL1xuY29uc3QgUFJFRklYID0gJ1NlbnRyeSBMb2dnZXIgJztcblxuY29uc3QgQ09OU09MRV9MRVZFTFMgPSBbXG4gICdkZWJ1ZycsXG4gICdpbmZvJyxcbiAgJ3dhcm4nLFxuICAnZXJyb3InLFxuICAnbG9nJyxcbiAgJ2Fzc2VydCcsXG4gICd0cmFjZScsXG5dIDtcblxuLyoqIFRoaXMgbWF5IGJlIG11dGF0ZWQgYnkgdGhlIGNvbnNvbGUgaW5zdHJ1bWVudGF0aW9uLiAqL1xuY29uc3Qgb3JpZ2luYWxDb25zb2xlTWV0aG9kc1xuXG4gPSB7fTtcblxuLyoqIEpTRG9jICovXG5cbi8qKlxuICogVGVtcG9yYXJpbHkgZGlzYWJsZSBzZW50cnkgY29uc29sZSBpbnN0cnVtZW50YXRpb25zLlxuICpcbiAqIEBwYXJhbSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdG8gcnVuIGFnYWluc3QgdGhlIG9yaWdpbmFsIGBjb25zb2xlYCBtZXNzYWdlc1xuICogQHJldHVybnMgVGhlIHJlc3VsdHMgb2YgdGhlIGNhbGxiYWNrXG4gKi9cbmZ1bmN0aW9uIGNvbnNvbGVTYW5kYm94KGNhbGxiYWNrKSB7XG4gIGlmICghKCdjb25zb2xlJyBpbiBHTE9CQUxfT0JKKSkge1xuICAgIHJldHVybiBjYWxsYmFjaygpO1xuICB9XG5cbiAgY29uc3QgY29uc29sZSA9IEdMT0JBTF9PQkouY29uc29sZSA7XG4gIGNvbnN0IHdyYXBwZWRGdW5jcyA9IHt9O1xuXG4gIGNvbnN0IHdyYXBwZWRMZXZlbHMgPSBPYmplY3Qua2V5cyhvcmlnaW5hbENvbnNvbGVNZXRob2RzKSA7XG5cbiAgLy8gUmVzdG9yZSBhbGwgd3JhcHBlZCBjb25zb2xlIG1ldGhvZHNcbiAgd3JhcHBlZExldmVscy5mb3JFYWNoKGxldmVsID0+IHtcbiAgICBjb25zdCBvcmlnaW5hbENvbnNvbGVNZXRob2QgPSBvcmlnaW5hbENvbnNvbGVNZXRob2RzW2xldmVsXSA7XG4gICAgd3JhcHBlZEZ1bmNzW2xldmVsXSA9IGNvbnNvbGVbbGV2ZWxdIDtcbiAgICBjb25zb2xlW2xldmVsXSA9IG9yaWdpbmFsQ29uc29sZU1ldGhvZDtcbiAgfSk7XG5cbiAgdHJ5IHtcbiAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgfSBmaW5hbGx5IHtcbiAgICAvLyBSZXZlcnQgcmVzdG9yYXRpb24gdG8gd3JhcHBlZCBzdGF0ZVxuICAgIHdyYXBwZWRMZXZlbHMuZm9yRWFjaChsZXZlbCA9PiB7XG4gICAgICBjb25zb2xlW2xldmVsXSA9IHdyYXBwZWRGdW5jc1tsZXZlbF0gO1xuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1ha2VMb2dnZXIoKSB7XG4gIGxldCBlbmFibGVkID0gZmFsc2U7XG4gIGNvbnN0IGxvZ2dlciA9IHtcbiAgICBlbmFibGU6ICgpID0+IHtcbiAgICAgIGVuYWJsZWQgPSB0cnVlO1xuICAgIH0sXG4gICAgZGlzYWJsZTogKCkgPT4ge1xuICAgICAgZW5hYmxlZCA9IGZhbHNlO1xuICAgIH0sXG4gICAgaXNFbmFibGVkOiAoKSA9PiBlbmFibGVkLFxuICB9O1xuXG4gIGlmIChERUJVR19CVUlMRCkge1xuICAgIENPTlNPTEVfTEVWRUxTLmZvckVhY2gobmFtZSA9PiB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgbG9nZ2VyW25hbWVdID0gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgaWYgKGVuYWJsZWQpIHtcbiAgICAgICAgICBjb25zb2xlU2FuZGJveCgoKSA9PiB7XG4gICAgICAgICAgICBHTE9CQUxfT0JKLmNvbnNvbGVbbmFtZV0oYCR7UFJFRklYfVske25hbWV9XTpgLCAuLi5hcmdzKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBDT05TT0xFX0xFVkVMUy5mb3JFYWNoKG5hbWUgPT4ge1xuICAgICAgbG9nZ2VyW25hbWVdID0gKCkgPT4gdW5kZWZpbmVkO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGxvZ2dlciA7XG59XG5cbmNvbnN0IGxvZ2dlciA9IG1ha2VMb2dnZXIoKTtcblxuZXhwb3J0IHsgQ09OU09MRV9MRVZFTFMsIGNvbnNvbGVTYW5kYm94LCBsb2dnZXIsIG9yaWdpbmFsQ29uc29sZU1ldGhvZHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/logger.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/lru.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/lru.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LRUMap\": function() { return /* binding */ LRUMap; }\n/* harmony export */ });\n/** A simple Least Recently Used map */\nclass LRUMap {\n\n   constructor(  _maxSize) {this._maxSize = _maxSize;\n    this._cache = new Map();\n  }\n\n  /** Get the current size of the cache */\n   get size() {\n    return this._cache.size;\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n   get(key) {\n    const value = this._cache.get(key);\n    if (value === undefined) {\n      return undefined;\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key);\n    this._cache.set(key, value);\n    return value;\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n   set(key, value) {\n    if (this._cache.size >= this._maxSize) {\n      // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n   remove(key) {\n    const value = this._cache.get(key);\n    if (value) {\n      this._cache.delete(key);\n    }\n    return value;\n  }\n\n  /** Clear all entries */\n   clear() {\n    this._cache.clear();\n  }\n\n  /** Get all the keys */\n   keys() {\n    return Array.from(this._cache.keys());\n  }\n\n  /** Get all the values */\n   values() {\n    const values = [];\n    this._cache.forEach(value => values.push(value));\n    return values;\n  }\n}\n\n\n//# sourceMappingURL=lru.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbHJ1LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBLDRCQUE0QjtBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbHJ1LmpzPzEyNDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEEgc2ltcGxlIExlYXN0IFJlY2VudGx5IFVzZWQgbWFwICovXG5jbGFzcyBMUlVNYXAge1xuXG4gICBjb25zdHJ1Y3RvciggIF9tYXhTaXplKSB7dGhpcy5fbWF4U2l6ZSA9IF9tYXhTaXplO1xuICAgIHRoaXMuX2NhY2hlID0gbmV3IE1hcCgpO1xuICB9XG5cbiAgLyoqIEdldCB0aGUgY3VycmVudCBzaXplIG9mIHRoZSBjYWNoZSAqL1xuICAgZ2V0IHNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NhY2hlLnNpemU7XG4gIH1cblxuICAvKiogR2V0IGFuIGVudHJ5IG9yIHVuZGVmaW5lZCBpZiBpdCB3YXMgbm90IGluIHRoZSBjYWNoZS4gUmUtaW5zZXJ0cyB0byB1cGRhdGUgdGhlIHJlY2VudGx5IHVzZWQgb3JkZXIgKi9cbiAgIGdldChrZXkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuX2NhY2hlLmdldChrZXkpO1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAvLyBSZW1vdmUgYW5kIHJlLWluc2VydCB0byB1cGRhdGUgdGhlIG9yZGVyXG4gICAgdGhpcy5fY2FjaGUuZGVsZXRlKGtleSk7XG4gICAgdGhpcy5fY2FjaGUuc2V0KGtleSwgdmFsdWUpO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIC8qKiBJbnNlcnQgYW4gZW50cnkgYW5kIGV2aWN0IGFuIG9sZGVyIGVudHJ5IGlmIHdlJ3ZlIHJlYWNoZWQgbWF4U2l6ZSAqL1xuICAgc2V0KGtleSwgdmFsdWUpIHtcbiAgICBpZiAodGhpcy5fY2FjaGUuc2l6ZSA+PSB0aGlzLl9tYXhTaXplKSB7XG4gICAgICAvLyBrZXlzKCkgcmV0dXJucyBhbiBpdGVyYXRvciBpbiBpbnNlcnRpb24gb3JkZXIgc28ga2V5cygpLm5leHQoKSBnaXZlcyB1cyB0aGUgb2xkZXN0IGtleVxuICAgICAgdGhpcy5fY2FjaGUuZGVsZXRlKHRoaXMuX2NhY2hlLmtleXMoKS5uZXh0KCkudmFsdWUpO1xuICAgIH1cbiAgICB0aGlzLl9jYWNoZS5zZXQoa2V5LCB2YWx1ZSk7XG4gIH1cblxuICAvKiogUmVtb3ZlIGFuIGVudHJ5IGFuZCByZXR1cm4gdGhlIGVudHJ5IGlmIGl0IHdhcyBpbiB0aGUgY2FjaGUgKi9cbiAgIHJlbW92ZShrZXkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuX2NhY2hlLmdldChrZXkpO1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5fY2FjaGUuZGVsZXRlKGtleSk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIC8qKiBDbGVhciBhbGwgZW50cmllcyAqL1xuICAgY2xlYXIoKSB7XG4gICAgdGhpcy5fY2FjaGUuY2xlYXIoKTtcbiAgfVxuXG4gIC8qKiBHZXQgYWxsIHRoZSBrZXlzICovXG4gICBrZXlzKCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuX2NhY2hlLmtleXMoKSk7XG4gIH1cblxuICAvKiogR2V0IGFsbCB0aGUgdmFsdWVzICovXG4gICB2YWx1ZXMoKSB7XG4gICAgY29uc3QgdmFsdWVzID0gW107XG4gICAgdGhpcy5fY2FjaGUuZm9yRWFjaCh2YWx1ZSA9PiB2YWx1ZXMucHVzaCh2YWx1ZSkpO1xuICAgIHJldHVybiB2YWx1ZXM7XG4gIH1cbn1cblxuZXhwb3J0IHsgTFJVTWFwIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1scnUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/lru.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/memo.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/memo.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"memoBuilder\": function() { return /* binding */ memoBuilder; }\n/* harmony export */ });\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\n\n//# sourceMappingURL=memo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbWVtby5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbWVtby5qcz8zZDlkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcyAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSAqL1xuXG4vKipcbiAqIEhlbHBlciB0byBkZWN5Y2xlIGpzb24gb2JqZWN0c1xuICovXG5mdW5jdGlvbiBtZW1vQnVpbGRlcigpIHtcbiAgY29uc3QgaGFzV2Vha1NldCA9IHR5cGVvZiBXZWFrU2V0ID09PSAnZnVuY3Rpb24nO1xuICBjb25zdCBpbm5lciA9IGhhc1dlYWtTZXQgPyBuZXcgV2Vha1NldCgpIDogW107XG4gIGZ1bmN0aW9uIG1lbW9pemUob2JqKSB7XG4gICAgaWYgKGhhc1dlYWtTZXQpIHtcbiAgICAgIGlmIChpbm5lci5oYXMob2JqKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlubmVyLmFkZChvYmopO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3ByZWZlci1mb3Itb2ZcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlubmVyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGlubmVyW2ldO1xuICAgICAgaWYgKHZhbHVlID09PSBvYmopIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIGlubmVyLnB1c2gob2JqKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiB1bm1lbW9pemUob2JqKSB7XG4gICAgaWYgKGhhc1dlYWtTZXQpIHtcbiAgICAgIGlubmVyLmRlbGV0ZShvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlubmVyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChpbm5lcltpXSA9PT0gb2JqKSB7XG4gICAgICAgICAgaW5uZXIuc3BsaWNlKGksIDEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBbbWVtb2l6ZSwgdW5tZW1vaXplXTtcbn1cblxuZXhwb3J0IHsgbWVtb0J1aWxkZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lbW8uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/memo.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/misc.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/misc.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addContextToFrame\": function() { return /* binding */ addContextToFrame; },\n/* harmony export */   \"addExceptionMechanism\": function() { return /* binding */ addExceptionMechanism; },\n/* harmony export */   \"addExceptionTypeValue\": function() { return /* binding */ addExceptionTypeValue; },\n/* harmony export */   \"arrayify\": function() { return /* binding */ arrayify; },\n/* harmony export */   \"checkOrSetAlreadyCaught\": function() { return /* binding */ checkOrSetAlreadyCaught; },\n/* harmony export */   \"getEventDescription\": function() { return /* binding */ getEventDescription; },\n/* harmony export */   \"parseSemver\": function() { return /* binding */ parseSemver; },\n/* harmony export */   \"uuid4\": function() { return /* binding */ uuid4; }\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = () => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n\n  frame.context_line = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\n\n//# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/misc.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/node-stack-trace.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/node-stack-trace.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"filenameIsInApp\": function() { return /* binding */ filenameIsInApp; },\n/* harmony export */   \"node\": function() { return /* binding */ node; },\n/* harmony export */   \"nodeStackLineParser\": function() { return /* binding */ nodeStackLineParser; }\n/* harmony export */ });\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n/**\n * Does this filename look like it's part of the app code?\n */\nfunction filenameIsInApp(filename, isNative = false) {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.match(/^[A-Z]:/) &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)); // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/');\n}\n\n/** Node Stack line parser */\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || _stacktrace_js__WEBPACK_IMPORTED_MODULE_0__.UNKNOWN_FUNCTION;\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`\n      if (filename && filename.match(/\\/[A-Z]:/)) {\n        filename = filename.slice(1);\n      }\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: parseInt(lineMatch[3], 10) || undefined,\n        colno: parseInt(lineMatch[4], 10) || undefined,\n        in_app: filenameIsInApp(filename, isNative),\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\n\n//# sourceMappingURL=node-stack-trace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbm9kZS1zdGFjay10cmFjZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW1EOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREOztBQUU1RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0NBQWtDLEdBQUc7QUFDckM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsNERBQWdCO0FBQ25ELHFDQUFxQyxTQUFTLEdBQUcsV0FBVztBQUM1RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRDtBQUN0RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbm9kZS1zdGFjay10cmFjZS5qcz9jMDY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVOS05PV05fRlVOQ1RJT04gfSBmcm9tICcuL3N0YWNrdHJhY2UuanMnO1xuXG4vKipcbiAqIERvZXMgdGhpcyBmaWxlbmFtZSBsb29rIGxpa2UgaXQncyBwYXJ0IG9mIHRoZSBhcHAgY29kZT9cbiAqL1xuZnVuY3Rpb24gZmlsZW5hbWVJc0luQXBwKGZpbGVuYW1lLCBpc05hdGl2ZSA9IGZhbHNlKSB7XG4gIGNvbnN0IGlzSW50ZXJuYWwgPVxuICAgIGlzTmF0aXZlIHx8XG4gICAgKGZpbGVuYW1lICYmXG4gICAgICAvLyBJdCdzIG5vdCBpbnRlcm5hbCBpZiBpdCdzIGFuIGFic29sdXRlIGxpbnV4IHBhdGhcbiAgICAgICFmaWxlbmFtZS5zdGFydHNXaXRoKCcvJykgJiZcbiAgICAgIC8vIEl0J3Mgbm90IGludGVybmFsIGlmIGl0J3MgYW4gYWJzb2x1dGUgd2luZG93cyBwYXRoXG4gICAgICAhZmlsZW5hbWUubWF0Y2goL15bQS1aXTovKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgdGhlIHBhdGggaXMgc3RhcnRpbmcgd2l0aCBhIGRvdFxuICAgICAgIWZpbGVuYW1lLnN0YXJ0c1dpdGgoJy4nKSAmJlxuICAgICAgLy8gSXQncyBub3QgaW50ZXJuYWwgaWYgdGhlIGZyYW1lIGhhcyBhIHByb3RvY29sLiBJbiBub2RlLCB0aGlzIGlzIHVzdWFsbHkgdGhlIGNhc2UgaWYgdGhlIGZpbGUgZ290IHByZS1wcm9jZXNzZWQgd2l0aCBhIGJ1bmRsZXIgbGlrZSB3ZWJwYWNrXG4gICAgICAhZmlsZW5hbWUubWF0Y2goL15bYS16QS1aXShbYS16QS1aMC05LlxcLStdKSo6XFwvXFwvLykpOyAvLyBTY2hlbWEgZnJvbTogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM2NDE3ODJcblxuICAvLyBpbl9hcHAgaXMgYWxsIHRoYXQncyBub3QgYW4gaW50ZXJuYWwgTm9kZSBmdW5jdGlvbiBvciBhIG1vZHVsZSB3aXRoaW4gbm9kZV9tb2R1bGVzXG4gIC8vIG5vdGUgdGhhdCBpc05hdGl2ZSBhcHBlYXJzIHRvIHJldHVybiB0cnVlIGV2ZW4gZm9yIG5vZGUgY29yZSBsaWJyYXJpZXNcbiAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvcmF2ZW4tbm9kZS9pc3N1ZXMvMTc2XG5cbiAgcmV0dXJuICFpc0ludGVybmFsICYmIGZpbGVuYW1lICE9PSB1bmRlZmluZWQgJiYgIWZpbGVuYW1lLmluY2x1ZGVzKCdub2RlX21vZHVsZXMvJyk7XG59XG5cbi8qKiBOb2RlIFN0YWNrIGxpbmUgcGFyc2VyICovXG5mdW5jdGlvbiBub2RlKGdldE1vZHVsZSkge1xuICBjb25zdCBGSUxFTkFNRV9NQVRDSCA9IC9eXFxzKlstXXs0LH0kLztcbiAgY29uc3QgRlVMTF9NQVRDSCA9IC9hdCAoPzphc3luYyApPyg/OiguKz8pXFxzK1xcKCk/KD86KC4rKTooXFxkKyk6KFxcZCspP3woW14pXSspKVxcKT8vO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wbGV4aXR5XG4gIHJldHVybiAobGluZSkgPT4ge1xuICAgIGNvbnN0IGxpbmVNYXRjaCA9IGxpbmUubWF0Y2goRlVMTF9NQVRDSCk7XG5cbiAgICBpZiAobGluZU1hdGNoKSB7XG4gICAgICBsZXQgb2JqZWN0O1xuICAgICAgbGV0IG1ldGhvZDtcbiAgICAgIGxldCBmdW5jdGlvbk5hbWU7XG4gICAgICBsZXQgdHlwZU5hbWU7XG4gICAgICBsZXQgbWV0aG9kTmFtZTtcblxuICAgICAgaWYgKGxpbmVNYXRjaFsxXSkge1xuICAgICAgICBmdW5jdGlvbk5hbWUgPSBsaW5lTWF0Y2hbMV07XG5cbiAgICAgICAgbGV0IG1ldGhvZFN0YXJ0ID0gZnVuY3Rpb25OYW1lLmxhc3RJbmRleE9mKCcuJyk7XG4gICAgICAgIGlmIChmdW5jdGlvbk5hbWVbbWV0aG9kU3RhcnQgLSAxXSA9PT0gJy4nKSB7XG4gICAgICAgICAgbWV0aG9kU3RhcnQtLTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChtZXRob2RTdGFydCA+IDApIHtcbiAgICAgICAgICBvYmplY3QgPSBmdW5jdGlvbk5hbWUuc2xpY2UoMCwgbWV0aG9kU3RhcnQpO1xuICAgICAgICAgIG1ldGhvZCA9IGZ1bmN0aW9uTmFtZS5zbGljZShtZXRob2RTdGFydCArIDEpO1xuICAgICAgICAgIGNvbnN0IG9iamVjdEVuZCA9IG9iamVjdC5pbmRleE9mKCcuTW9kdWxlJyk7XG4gICAgICAgICAgaWYgKG9iamVjdEVuZCA+IDApIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uTmFtZSA9IGZ1bmN0aW9uTmFtZS5zbGljZShvYmplY3RFbmQgKyAxKTtcbiAgICAgICAgICAgIG9iamVjdCA9IG9iamVjdC5zbGljZSgwLCBvYmplY3RFbmQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0eXBlTmFtZSA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgaWYgKG1ldGhvZCkge1xuICAgICAgICB0eXBlTmFtZSA9IG9iamVjdDtcbiAgICAgICAgbWV0aG9kTmFtZSA9IG1ldGhvZDtcbiAgICAgIH1cblxuICAgICAgaWYgKG1ldGhvZCA9PT0gJzxhbm9ueW1vdXM+Jykge1xuICAgICAgICBtZXRob2ROYW1lID0gdW5kZWZpbmVkO1xuICAgICAgICBmdW5jdGlvbk5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIGlmIChmdW5jdGlvbk5hbWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBtZXRob2ROYW1lID0gbWV0aG9kTmFtZSB8fCBVTktOT1dOX0ZVTkNUSU9OO1xuICAgICAgICBmdW5jdGlvbk5hbWUgPSB0eXBlTmFtZSA/IGAke3R5cGVOYW1lfS4ke21ldGhvZE5hbWV9YCA6IG1ldGhvZE5hbWU7XG4gICAgICB9XG5cbiAgICAgIGxldCBmaWxlbmFtZSA9IGxpbmVNYXRjaFsyXSAmJiBsaW5lTWF0Y2hbMl0uc3RhcnRzV2l0aCgnZmlsZTovLycpID8gbGluZU1hdGNoWzJdLnNsaWNlKDcpIDogbGluZU1hdGNoWzJdO1xuICAgICAgY29uc3QgaXNOYXRpdmUgPSBsaW5lTWF0Y2hbNV0gPT09ICduYXRpdmUnO1xuXG4gICAgICAvLyBJZiBpdCdzIGEgV2luZG93cyBwYXRoLCB0cmltIHRoZSBsZWFkaW5nIHNsYXNoIHNvIHRoYXQgYC9DOi9mb29gIGJlY29tZXMgYEM6L2Zvb2BcbiAgICAgIGlmIChmaWxlbmFtZSAmJiBmaWxlbmFtZS5tYXRjaCgvXFwvW0EtWl06LykpIHtcbiAgICAgICAgZmlsZW5hbWUgPSBmaWxlbmFtZS5zbGljZSgxKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFmaWxlbmFtZSAmJiBsaW5lTWF0Y2hbNV0gJiYgIWlzTmF0aXZlKSB7XG4gICAgICAgIGZpbGVuYW1lID0gbGluZU1hdGNoWzVdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWxlbmFtZSxcbiAgICAgICAgbW9kdWxlOiBnZXRNb2R1bGUgPyBnZXRNb2R1bGUoZmlsZW5hbWUpIDogdW5kZWZpbmVkLFxuICAgICAgICBmdW5jdGlvbjogZnVuY3Rpb25OYW1lLFxuICAgICAgICBsaW5lbm86IHBhcnNlSW50KGxpbmVNYXRjaFszXSwgMTApIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgY29sbm86IHBhcnNlSW50KGxpbmVNYXRjaFs0XSwgMTApIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgaW5fYXBwOiBmaWxlbmFtZUlzSW5BcHAoZmlsZW5hbWUsIGlzTmF0aXZlKSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKGxpbmUubWF0Y2goRklMRU5BTUVfTUFUQ0gpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBmaWxlbmFtZTogbGluZSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfTtcbn1cblxuLyoqXG4gKiBOb2RlLmpzIHN0YWNrIGxpbmUgcGFyc2VyXG4gKlxuICogVGhpcyBpcyBpbiBAc2VudHJ5L3V0aWxzIHNvIGl0IGNhbiBiZSB1c2VkIGZyb20gdGhlIEVsZWN0cm9uIFNESyBpbiB0aGUgYnJvd3NlciBmb3Igd2hlbiBgbm9kZUludGVncmF0aW9uID09IHRydWVgLlxuICogVGhpcyBhbGxvd3MgaXQgdG8gYmUgdXNlZCB3aXRob3V0IHJlZmVyZW5jaW5nIG9yIGltcG9ydGluZyBhbnkgbm9kZSBzcGVjaWZpYyBjb2RlIHdoaWNoIGNhdXNlcyBidW5kbGVycyB0byBjb21wbGFpblxuICovXG5mdW5jdGlvbiBub2RlU3RhY2tMaW5lUGFyc2VyKGdldE1vZHVsZSkge1xuICByZXR1cm4gWzkwLCBub2RlKGdldE1vZHVsZSldO1xufVxuXG5leHBvcnQgeyBmaWxlbmFtZUlzSW5BcHAsIG5vZGUsIG5vZGVTdGFja0xpbmVQYXJzZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vZGUtc3RhY2stdHJhY2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/node-stack-trace.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/node.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/node.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dynamicRequire\": function() { return /* binding */ dynamicRequire; },\n/* harmony export */   \"isNodeEnv\": function() { return /* binding */ isNodeEnv; },\n/* harmony export */   \"loadModule\": function() { return /* binding */ loadModule; }\n/* harmony export */ });\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./env.js */ \"./node_modules/@sentry/utils/esm/env.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !(0,_env_js__WEBPACK_IMPORTED_MODULE_0__.isBrowserBundle)() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\n\n//# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbm9kZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEyQzs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssd0RBQWU7QUFDcEIsMENBQTBDLE9BQU8sbUJBQW1CLE9BQU87QUFDM0U7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUZBQW1GLGdCQUFnQjtBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0EsWUFBWSxNQUFNO0FBQ2xCLG9DQUFvQyxNQUFNLGdCQUFnQixXQUFXO0FBQ3JFLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRWlEO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9ub2RlLmpzP2M2NzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNCcm93c2VyQnVuZGxlIH0gZnJvbSAnLi9lbnYuanMnO1xuXG4vKipcbiAqIE5PVEU6IEluIG9yZGVyIHRvIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcywgaWYgeW91IGFkZCBhIGZ1bmN0aW9uIHRvIHRoaXMgbW9kdWxlIGFuZCBpdCBuZWVkcyB0byBwcmludCBzb21ldGhpbmcsXG4gKiB5b3UgbXVzdCBlaXRoZXIgYSkgdXNlIGBjb25zb2xlLmxvZ2AgcmF0aGVyIHRoYW4gdGhlIGxvZ2dlciwgb3IgYikgcHV0IHlvdXIgZnVuY3Rpb24gZWxzZXdoZXJlLlxuICovXG5cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciB3ZSdyZSBpbiB0aGUgTm9kZS5qcyBvciBCcm93c2VyIGVudmlyb25tZW50XG4gKlxuICogQHJldHVybnMgQW5zd2VyIHRvIGdpdmVuIHF1ZXN0aW9uXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZUVudigpIHtcbiAgLy8gZXhwbGljaXRseSBjaGVjayBmb3IgYnJvd3NlciBidW5kbGVzIGFzIHRob3NlIGNhbiBiZSBvcHRpbWl6ZWQgc3RhdGljYWxseVxuICAvLyBieSB0ZXJzZXIvcm9sbHVwLlxuICByZXR1cm4gKFxuICAgICFpc0Jyb3dzZXJCdW5kbGUoKSAmJlxuICAgIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgPyBwcm9jZXNzIDogMCkgPT09ICdbb2JqZWN0IHByb2Nlc3NdJ1xuICApO1xufVxuXG4vKipcbiAqIFJlcXVpcmVzIGEgbW9kdWxlIHdoaWNoIGlzIHByb3RlY3RlZCBhZ2FpbnN0IGJ1bmRsZXIgbWluaWZpY2F0aW9uLlxuICpcbiAqIEBwYXJhbSByZXF1ZXN0IFRoZSBtb2R1bGUgcGF0aCB0byByZXNvbHZlXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBkeW5hbWljUmVxdWlyZShtb2QsIHJlcXVlc3QpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICByZXR1cm4gbW9kLnJlcXVpcmUocmVxdWVzdCk7XG59XG5cbi8qKlxuICogSGVscGVyIGZvciBkeW5hbWljYWxseSBsb2FkaW5nIG1vZHVsZSB0aGF0IHNob3VsZCB3b3JrIHdpdGggbGlua2VkIGRlcGVuZGVuY2llcy5cbiAqIFRoZSBwcm9ibGVtIGlzIHRoYXQgd2UgX3Nob3VsZF8gYmUgdXNpbmcgYHJlcXVpcmUocmVxdWlyZS5yZXNvbHZlKG1vZHVsZU5hbWUsIHsgcGF0aHM6IFtjd2QoKV0gfSkpYFxuICogSG93ZXZlciBpdCdzIF9ub3QgcG9zc2libGVfIHRvIGRvIHRoYXQgd2l0aCBXZWJwYWNrLCBhcyBpdCBoYXMgdG8ga25vdyBhbGwgdGhlIGRlcGVuZGVuY2llcyBkdXJpbmdcbiAqIGJ1aWxkIHRpbWUuIGByZXF1aXJlLnJlc29sdmVgIGlzIGFsc28gbm90IGF2YWlsYWJsZSBpbiBhbnkgb3RoZXIgd2F5LCBzbyB3ZSBjYW5ub3QgY3JlYXRlLFxuICogYSBmYWtlIGhlbHBlciBsaWtlIHdlIGRvIHdpdGggYGR5bmFtaWNSZXF1aXJlYC5cbiAqXG4gKiBXZSBhbHdheXMgcHJlZmVyIHRvIHVzZSBsb2NhbCBwYWNrYWdlLCB0aHVzIHRoZSB2YWx1ZSBpcyBub3QgcmV0dXJuZWQgZWFybHkgZnJvbSBlYWNoIGB0cnkvY2F0Y2hgIGJsb2NrLlxuICogVGhhdCBpcyB0byBtaW1pYyB0aGUgYmVoYXZpb3Igb2YgYHJlcXVpcmUucmVzb2x2ZWAgZXhhY3RseS5cbiAqXG4gKiBAcGFyYW0gbW9kdWxlTmFtZSBtb2R1bGUgbmFtZSB0byByZXF1aXJlXG4gKiBAcmV0dXJucyBwb3NzaWJseSByZXF1aXJlZCBtb2R1bGVcbiAqL1xuZnVuY3Rpb24gbG9hZE1vZHVsZShtb2R1bGVOYW1lKSB7XG4gIGxldCBtb2Q7XG5cbiAgdHJ5IHtcbiAgICBtb2QgPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsIG1vZHVsZU5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gbm8tZW1wdHlcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgeyBjd2QgfSA9IGR5bmFtaWNSZXF1aXJlKG1vZHVsZSwgJ3Byb2Nlc3MnKTtcbiAgICBtb2QgPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsIGAke2N3ZCgpfS9ub2RlX21vZHVsZXMvJHttb2R1bGVOYW1lfWApIDtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIG5vLWVtcHR5XG4gIH1cblxuICByZXR1cm4gbW9kO1xufVxuXG5leHBvcnQgeyBkeW5hbWljUmVxdWlyZSwgaXNOb2RlRW52LCBsb2FkTW9kdWxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/node.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/normalize.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/normalize.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"normalize\": function() { return /* binding */ normalize; },\n/* harmony export */   \"normalizeToSize\": function() { return /* binding */ normalizeToSize; },\n/* harmony export */   \"normalizeUrlToBase\": function() { return /* binding */ normalizeUrlToBase; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memo.js */ \"./node_modules/@sentry/utils/esm/memo.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n\n\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = (0,_memo_js__WEBPACK_IMPORTED_MODULE_0__.memoBuilder)(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !Number.isNaN(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.convertToPlainObject)(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isVueViewModel)(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isSyntheticEvent)(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nfunction normalizeUrlToBase(url, basePath) {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n\n\n//# sourceMappingURL=normalize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/normalize.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/object.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/object.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addNonEnumerableProperty\": function() { return /* binding */ addNonEnumerableProperty; },\n/* harmony export */   \"convertToPlainObject\": function() { return /* binding */ convertToPlainObject; },\n/* harmony export */   \"dropUndefinedKeys\": function() { return /* binding */ dropUndefinedKeys; },\n/* harmony export */   \"extractExceptionKeysForMessage\": function() { return /* binding */ extractExceptionKeysForMessage; },\n/* harmony export */   \"fill\": function() { return /* binding */ fill; },\n/* harmony export */   \"getOriginalFunction\": function() { return /* binding */ getOriginalFunction; },\n/* harmony export */   \"markFunctionWrapped\": function() { return /* binding */ markFunctionWrapped; },\n/* harmony export */   \"objectify\": function() { return /* binding */ objectify; },\n/* harmony export */   \"urlEncode\": function() { return /* binding */ urlEncode; }\n/* harmony export */ });\n/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./browser.js */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n\n\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD && _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isError)(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isEvent)(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isInstanceOf)(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isElement)(target) ? (0,_browser_js__WEBPACK_IMPORTED_MODULE_3__.htmlTreeAsString)(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.truncate)(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.truncate)(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) ).constructor.name;\n    return !name || name === 'Object';\n  } catch (e) {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPrimitive)(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\n\n//# sourceMappingURL=object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/object.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/path.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/path.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"basename\": function() { return /* binding */ basename; },\n/* harmony export */   \"dirname\": function() { return /* binding */ dirname; },\n/* harmony export */   \"isAbsolute\": function() { return /* binding */ isAbsolute; },\n/* harmony export */   \"join\": function() { return /* binding */ join; },\n/* harmony export */   \"normalizePath\": function() { return /* binding */ normalizePath; },\n/* harmony export */   \"relative\": function() { return /* binding */ relative; },\n/* harmony export */   \"resolve\": function() { return /* binding */ resolve; }\n/* harmony export */ });\n// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://github.com/calvinmetcalf/rollup-plugin-node-builtins/blob/63ab8aacd013767445ca299e468d9a60a95328d7/src/es6/path.js\n//\n// Copyright Joyent, Inc.and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\S+:\\\\|\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^/\\\\]+?|)(\\.[^./\\\\]*|))(?:[/\\\\]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n  // Truncate files names greater than 1024 characters to avoid regex dos\n  // https://github.com/getsentry/sentry-javascript/pull/8737#discussion_r1285719172\n  const truncated = filename.length > 1024 ? `<truncated>${filename.slice(-1024)}` : filename;\n  const parts = splitPathRe.exec(truncated);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve(...args) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr) {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nfunction join(...args) {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nfunction dirname(path) {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nfunction basename(path, ext) {\n  let f = splitPath(path)[2];\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\n//# sourceMappingURL=path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/path.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/promisebuffer.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/promisebuffer.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makePromiseBuffer\": function() { return /* binding */ makePromiseBuffer; }\n/* harmony export */ });\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syncpromise.js */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n\n\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(new _error_js__WEBPACK_IMPORTED_MODULE_1__.SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\n\n//# sourceMappingURL=promisebuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcHJvbWlzZWJ1ZmZlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDZ0Q7O0FBRXpGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvRUFBbUIsS0FBSyxrREFBVztBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHdEQUFXO0FBQzFCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsYUFBYSxvRUFBbUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9wcm9taXNlYnVmZmVyLmpzPzBkMzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VudHJ5RXJyb3IgfSBmcm9tICcuL2Vycm9yLmpzJztcbmltcG9ydCB7IHJlamVjdGVkU3luY1Byb21pc2UsIFN5bmNQcm9taXNlLCByZXNvbHZlZFN5bmNQcm9taXNlIH0gZnJvbSAnLi9zeW5jcHJvbWlzZS5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBuZXcgUHJvbWlzZUJ1ZmZlciBvYmplY3Qgd2l0aCB0aGUgc3BlY2lmaWVkIGxpbWl0XG4gKiBAcGFyYW0gbGltaXQgbWF4IG51bWJlciBvZiBwcm9taXNlcyB0aGF0IGNhbiBiZSBzdG9yZWQgaW4gdGhlIGJ1ZmZlclxuICovXG5mdW5jdGlvbiBtYWtlUHJvbWlzZUJ1ZmZlcihsaW1pdCkge1xuICBjb25zdCBidWZmZXIgPSBbXTtcblxuICBmdW5jdGlvbiBpc1JlYWR5KCkge1xuICAgIHJldHVybiBsaW1pdCA9PT0gdW5kZWZpbmVkIHx8IGJ1ZmZlci5sZW5ndGggPCBsaW1pdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgYSBwcm9taXNlIGZyb20gdGhlIHF1ZXVlLlxuICAgKlxuICAgKiBAcGFyYW0gdGFzayBDYW4gYmUgYW55IFByb21pc2VMaWtlPFQ+XG4gICAqIEByZXR1cm5zIFJlbW92ZWQgcHJvbWlzZS5cbiAgICovXG4gIGZ1bmN0aW9uIHJlbW92ZSh0YXNrKSB7XG4gICAgcmV0dXJuIGJ1ZmZlci5zcGxpY2UoYnVmZmVyLmluZGV4T2YodGFzayksIDEpWzBdO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBhIHByb21pc2UgKHJlcHJlc2VudGluZyBhbiBpbi1mbGlnaHQgYWN0aW9uKSB0byB0aGUgcXVldWUsIGFuZCBzZXQgaXQgdG8gcmVtb3ZlIGl0c2VsZiBvbiBmdWxmaWxsbWVudC5cbiAgICpcbiAgICogQHBhcmFtIHRhc2tQcm9kdWNlciBBIGZ1bmN0aW9uIHByb2R1Y2luZyBhbnkgUHJvbWlzZUxpa2U8VD47IEluIHByZXZpb3VzIHZlcnNpb25zIHRoaXMgdXNlZCB0byBiZSBgdGFzazpcbiAgICogICAgICAgIFByb21pc2VMaWtlPFQ+YCwgYnV0IHVuZGVyIHRoYXQgbW9kZWwsIFByb21pc2VzIHdlcmUgaW5zdGFudGx5IGNyZWF0ZWQgb24gdGhlIGNhbGwtc2l0ZSBhbmQgdGhlaXIgZXhlY3V0b3JcbiAgICogICAgICAgIGZ1bmN0aW9ucyB0aGVyZWZvcmUgcmFuIGltbWVkaWF0ZWx5LiBUaHVzLCBldmVuIGlmIHRoZSBidWZmZXIgd2FzIGZ1bGwsIHRoZSBhY3Rpb24gc3RpbGwgaGFwcGVuZWQuIEJ5XG4gICAqICAgICAgICByZXF1aXJpbmcgdGhlIHByb21pc2UgdG8gYmUgd3JhcHBlZCBpbiBhIGZ1bmN0aW9uLCB3ZSBjYW4gZGVmZXIgcHJvbWlzZSBjcmVhdGlvbiB1bnRpbCBhZnRlciB0aGUgYnVmZmVyXG4gICAqICAgICAgICBsaW1pdCBjaGVjay5cbiAgICogQHJldHVybnMgVGhlIG9yaWdpbmFsIHByb21pc2UuXG4gICAqL1xuICBmdW5jdGlvbiBhZGQodGFza1Byb2R1Y2VyKSB7XG4gICAgaWYgKCFpc1JlYWR5KCkpIHtcbiAgICAgIHJldHVybiByZWplY3RlZFN5bmNQcm9taXNlKG5ldyBTZW50cnlFcnJvcignTm90IGFkZGluZyBQcm9taXNlIGJlY2F1c2UgYnVmZmVyIGxpbWl0IHdhcyByZWFjaGVkLicpKTtcbiAgICB9XG5cbiAgICAvLyBzdGFydCB0aGUgdGFzayBhbmQgYWRkIGl0cyBwcm9taXNlIHRvIHRoZSBxdWV1ZVxuICAgIGNvbnN0IHRhc2sgPSB0YXNrUHJvZHVjZXIoKTtcbiAgICBpZiAoYnVmZmVyLmluZGV4T2YodGFzaykgPT09IC0xKSB7XG4gICAgICBidWZmZXIucHVzaCh0YXNrKTtcbiAgICB9XG4gICAgdm9pZCB0YXNrXG4gICAgICAudGhlbigoKSA9PiByZW1vdmUodGFzaykpXG4gICAgICAvLyBVc2UgYHRoZW4obnVsbCwgcmVqZWN0aW9uSGFuZGxlcilgIHJhdGhlciB0aGFuIGBjYXRjaChyZWplY3Rpb25IYW5kbGVyKWAgc28gdGhhdCB3ZSBjYW4gdXNlIGBQcm9taXNlTGlrZWBcbiAgICAgIC8vIHJhdGhlciB0aGFuIGBQcm9taXNlYC4gYFByb21pc2VMaWtlYCBkb2Vzbid0IGhhdmUgYSBgLmNhdGNoYCBtZXRob2QsIG1ha2luZyBpdHMgcG9seWZpbGwgc21hbGxlci4gKEVTNSBkaWRuJ3RcbiAgICAgIC8vIGhhdmUgcHJvbWlzZXMsIHNvIFRTIGhhcyB0byBwb2x5ZmlsbCB3aGVuIGRvd24tY29tcGlsaW5nLilcbiAgICAgIC50aGVuKG51bGwsICgpID0+XG4gICAgICAgIHJlbW92ZSh0YXNrKS50aGVuKG51bGwsICgpID0+IHtcbiAgICAgICAgICAvLyBXZSBoYXZlIHRvIGFkZCBhbm90aGVyIGNhdGNoIGhlcmUgYmVjYXVzZSBgcmVtb3ZlKClgIHN0YXJ0cyBhIG5ldyBwcm9taXNlIGNoYWluLlxuICAgICAgICB9KSxcbiAgICAgICk7XG4gICAgcmV0dXJuIHRhc2s7XG4gIH1cblxuICAvKipcbiAgICogV2FpdCBmb3IgYWxsIHByb21pc2VzIGluIHRoZSBxdWV1ZSB0byByZXNvbHZlIG9yIGZvciB0aW1lb3V0IHRvIGV4cGlyZSwgd2hpY2hldmVyIGNvbWVzIGZpcnN0LlxuICAgKlxuICAgKiBAcGFyYW0gdGltZW91dCBUaGUgdGltZSwgaW4gbXMsIGFmdGVyIHdoaWNoIHRvIHJlc29sdmUgdG8gYGZhbHNlYCBpZiB0aGUgcXVldWUgaXMgc3RpbGwgbm9uLWVtcHR5LiBQYXNzaW5nIGAwYCAob3JcbiAgICogbm90IHBhc3NpbmcgYW55dGhpbmcpIHdpbGwgbWFrZSB0aGUgcHJvbWlzZSB3YWl0IGFzIGxvbmcgYXMgaXQgdGFrZXMgZm9yIHRoZSBxdWV1ZSB0byBkcmFpbiBiZWZvcmUgcmVzb2x2aW5nIHRvXG4gICAqIGB0cnVlYC5cbiAgICogQHJldHVybnMgQSBwcm9taXNlIHdoaWNoIHdpbGwgcmVzb2x2ZSB0byBgdHJ1ZWAgaWYgdGhlIHF1ZXVlIGlzIGFscmVhZHkgZW1wdHkgb3IgZHJhaW5zIGJlZm9yZSB0aGUgdGltZW91dCwgYW5kXG4gICAqIGBmYWxzZWAgb3RoZXJ3aXNlXG4gICAqL1xuICBmdW5jdGlvbiBkcmFpbih0aW1lb3V0KSB7XG4gICAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgY291bnRlciA9IGJ1ZmZlci5sZW5ndGg7XG5cbiAgICAgIGlmICghY291bnRlcikge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZSh0cnVlKTtcbiAgICAgIH1cblxuICAgICAgLy8gd2FpdCBmb3IgYHRpbWVvdXRgIG1zIGFuZCB0aGVuIHJlc29sdmUgdG8gYGZhbHNlYCAoaWYgbm90IGNhbmNlbGxlZCBmaXJzdClcbiAgICAgIGNvbnN0IGNhcHR1cmVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBpZiAodGltZW91dCAmJiB0aW1lb3V0ID4gMCkge1xuICAgICAgICAgIHJlc29sdmUoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9LCB0aW1lb3V0KTtcblxuICAgICAgLy8gaWYgYWxsIHByb21pc2VzIHJlc29sdmUgaW4gdGltZSwgY2FuY2VsIHRoZSB0aW1lciBhbmQgcmVzb2x2ZSB0byBgdHJ1ZWBcbiAgICAgIGJ1ZmZlci5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICB2b2lkIHJlc29sdmVkU3luY1Byb21pc2UoaXRlbSkudGhlbigoKSA9PiB7XG4gICAgICAgICAgaWYgKCEtLWNvdW50ZXIpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dChjYXB0dXJlZFNldFRpbWVvdXQpO1xuICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgJDogYnVmZmVyLFxuICAgIGFkZCxcbiAgICBkcmFpbixcbiAgfTtcbn1cblxuZXhwb3J0IHsgbWFrZVByb21pc2VCdWZmZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb21pc2VidWZmZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/promisebuffer.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/propagationContext.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/propagationContext.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generatePropagationContext\": function() { return /* binding */ generatePropagationContext; }\n/* harmony export */ });\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./misc.js */ \"./node_modules/@sentry/utils/esm/misc.js\");\n\n\n/**\n * Returns a new minimal propagation context\n */\nfunction generatePropagationContext() {\n  return {\n    traceId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n    spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16),\n  };\n}\n\n\n//# sourceMappingURL=propagationContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcHJvcGFnYXRpb25Db250ZXh0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDOztBQUVsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwrQ0FBSztBQUNsQixZQUFZLCtDQUFLO0FBQ2pCO0FBQ0E7O0FBRXNDO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9wcm9wYWdhdGlvbkNvbnRleHQuanM/MmMzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1dWlkNCB9IGZyb20gJy4vbWlzYy5qcyc7XG5cbi8qKlxuICogUmV0dXJucyBhIG5ldyBtaW5pbWFsIHByb3BhZ2F0aW9uIGNvbnRleHRcbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVQcm9wYWdhdGlvbkNvbnRleHQoKSB7XG4gIHJldHVybiB7XG4gICAgdHJhY2VJZDogdXVpZDQoKSxcbiAgICBzcGFuSWQ6IHV1aWQ0KCkuc3Vic3RyaW5nKDE2KSxcbiAgfTtcbn1cblxuZXhwb3J0IHsgZ2VuZXJhdGVQcm9wYWdhdGlvbkNvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3BhZ2F0aW9uQ29udGV4dC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/propagationContext.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/ratelimit.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/ratelimit.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_RETRY_AFTER\": function() { return /* binding */ DEFAULT_RETRY_AFTER; },\n/* harmony export */   \"disabledUntil\": function() { return /* binding */ disabledUntil; },\n/* harmony export */   \"isRateLimited\": function() { return /* binding */ isRateLimited; },\n/* harmony export */   \"parseRetryAfterHeader\": function() { return /* binding */ parseRetryAfterHeader; },\n/* harmony export */   \"updateRateLimits\": function() { return /* binding */ updateRateLimits; }\n/* harmony export */ });\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, dataCategory) {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, dataCategory, now = Date.now()) {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\n\n//# sourceMappingURL=ratelimit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcmF0ZWxpbWl0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUEsdUNBQXVDOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxPQUFPO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsT0FBTztBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHFCQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixXQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUU7QUFDckU7QUFDQTtBQUNBLFFBQVE7QUFDUixrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVzRztBQUN0RyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcmF0ZWxpbWl0LmpzPzVmMjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW50ZW50aW9uYWxseSBrZWVwaW5nIHRoZSBrZXkgYnJvYWQsIGFzIHdlIGRvbid0IGtub3cgZm9yIHN1cmUgd2hhdCByYXRlIGxpbWl0IGhlYWRlcnMgZ2V0IHJldHVybmVkIGZyb20gYmFja2VuZFxuXG5jb25zdCBERUZBVUxUX1JFVFJZX0FGVEVSID0gNjAgKiAxMDAwOyAvLyA2MCBzZWNvbmRzXG5cbi8qKlxuICogRXh0cmFjdHMgUmV0cnktQWZ0ZXIgdmFsdWUgZnJvbSB0aGUgcmVxdWVzdCBoZWFkZXIgb3IgcmV0dXJucyBkZWZhdWx0IHZhbHVlXG4gKiBAcGFyYW0gaGVhZGVyIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiAnUmV0cnktQWZ0ZXInIGhlYWRlclxuICogQHBhcmFtIG5vdyBjdXJyZW50IHVuaXggdGltZXN0YW1wXG4gKlxuICovXG5mdW5jdGlvbiBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIoaGVhZGVyLCBub3cgPSBEYXRlLm5vdygpKSB7XG4gIGNvbnN0IGhlYWRlckRlbGF5ID0gcGFyc2VJbnQoYCR7aGVhZGVyfWAsIDEwKTtcbiAgaWYgKCFpc05hTihoZWFkZXJEZWxheSkpIHtcbiAgICByZXR1cm4gaGVhZGVyRGVsYXkgKiAxMDAwO1xuICB9XG5cbiAgY29uc3QgaGVhZGVyRGF0ZSA9IERhdGUucGFyc2UoYCR7aGVhZGVyfWApO1xuICBpZiAoIWlzTmFOKGhlYWRlckRhdGUpKSB7XG4gICAgcmV0dXJuIGhlYWRlckRhdGUgLSBub3c7XG4gIH1cblxuICByZXR1cm4gREVGQVVMVF9SRVRSWV9BRlRFUjtcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSB0aW1lIHRoYXQgdGhlIGdpdmVuIGNhdGVnb3J5IGlzIGRpc2FibGVkIHVudGlsIGZvciByYXRlIGxpbWl0aW5nLlxuICogSW4gY2FzZSBubyBjYXRlZ29yeS1zcGVjaWZpYyBsaW1pdCBpcyBzZXQgYnV0IGEgZ2VuZXJhbCByYXRlIGxpbWl0IGFjcm9zcyBhbGwgY2F0ZWdvcmllcyBpcyBhY3RpdmUsXG4gKiB0aGF0IHRpbWUgaXMgcmV0dXJuZWQuXG4gKlxuICogQHJldHVybiB0aGUgdGltZSBpbiBtcyB0aGF0IHRoZSBjYXRlZ29yeSBpcyBkaXNhYmxlZCB1bnRpbCBvciAwIGlmIHRoZXJlJ3Mgbm8gYWN0aXZlIHJhdGUgbGltaXQuXG4gKi9cbmZ1bmN0aW9uIGRpc2FibGVkVW50aWwobGltaXRzLCBkYXRhQ2F0ZWdvcnkpIHtcbiAgcmV0dXJuIGxpbWl0c1tkYXRhQ2F0ZWdvcnldIHx8IGxpbWl0cy5hbGwgfHwgMDtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBjYXRlZ29yeSBpcyByYXRlIGxpbWl0ZWRcbiAqL1xuZnVuY3Rpb24gaXNSYXRlTGltaXRlZChsaW1pdHMsIGRhdGFDYXRlZ29yeSwgbm93ID0gRGF0ZS5ub3coKSkge1xuICByZXR1cm4gZGlzYWJsZWRVbnRpbChsaW1pdHMsIGRhdGFDYXRlZ29yeSkgPiBub3c7XG59XG5cbi8qKlxuICogVXBkYXRlIHJhdGVsaW1pdHMgZnJvbSBpbmNvbWluZyBoZWFkZXJzLlxuICpcbiAqIEByZXR1cm4gdGhlIHVwZGF0ZWQgUmF0ZUxpbWl0cyBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIHVwZGF0ZVJhdGVMaW1pdHMoXG4gIGxpbWl0cyxcbiAgeyBzdGF0dXNDb2RlLCBoZWFkZXJzIH0sXG4gIG5vdyA9IERhdGUubm93KCksXG4pIHtcbiAgY29uc3QgdXBkYXRlZFJhdGVMaW1pdHMgPSB7XG4gICAgLi4ubGltaXRzLFxuICB9O1xuXG4gIC8vIFwiVGhlIG5hbWUgaXMgY2FzZS1pbnNlbnNpdGl2ZS5cIlxuICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSGVhZGVycy9nZXRcbiAgY29uc3QgcmF0ZUxpbWl0SGVhZGVyID0gaGVhZGVycyAmJiBoZWFkZXJzWyd4LXNlbnRyeS1yYXRlLWxpbWl0cyddO1xuICBjb25zdCByZXRyeUFmdGVySGVhZGVyID0gaGVhZGVycyAmJiBoZWFkZXJzWydyZXRyeS1hZnRlciddO1xuXG4gIGlmIChyYXRlTGltaXRIZWFkZXIpIHtcbiAgICAvKipcbiAgICAgKiByYXRlIGxpbWl0IGhlYWRlcnMgYXJlIG9mIHRoZSBmb3JtXG4gICAgICogICAgIDxoZWFkZXI+LDxoZWFkZXI+LC4uXG4gICAgICogd2hlcmUgZWFjaCA8aGVhZGVyPiBpcyBvZiB0aGUgZm9ybVxuICAgICAqICAgICA8cmV0cnlfYWZ0ZXI+OiA8Y2F0ZWdvcmllcz46IDxzY29wZT46IDxyZWFzb25fY29kZT46IDxuYW1lc3BhY2VzPlxuICAgICAqIHdoZXJlXG4gICAgICogICAgIDxyZXRyeV9hZnRlcj4gaXMgYSBkZWxheSBpbiBzZWNvbmRzXG4gICAgICogICAgIDxjYXRlZ29yaWVzPiBpcyB0aGUgZXZlbnQgdHlwZShzKSAoZXJyb3IsIHRyYW5zYWN0aW9uLCBldGMpIGJlaW5nIHJhdGUgbGltaXRlZCBhbmQgaXMgb2YgdGhlIGZvcm1cbiAgICAgKiAgICAgICAgIDxjYXRlZ29yeT47PGNhdGVnb3J5PjsuLi5cbiAgICAgKiAgICAgPHNjb3BlPiBpcyB3aGF0J3MgYmVpbmcgbGltaXRlZCAob3JnLCBwcm9qZWN0LCBvciBrZXkpIC0gaWdub3JlZCBieSBTREtcbiAgICAgKiAgICAgPHJlYXNvbl9jb2RlPiBpcyBhbiBhcmJpdHJhcnkgc3RyaW5nIGxpa2UgXCJvcmdfcXVvdGFcIiAtIGlnbm9yZWQgYnkgU0RLXG4gICAgICogICAgIDxuYW1lc3BhY2VzPiBTZW1pY29sb24tc2VwYXJhdGVkIGxpc3Qgb2YgbWV0cmljIG5hbWVzcGFjZSBpZGVudGlmaWVycy4gRGVmaW5lcyB3aGljaCBuYW1lc3BhY2Uocykgd2lsbCBiZSBhZmZlY3RlZC5cbiAgICAgKiAgICAgICAgIE9ubHkgcHJlc2VudCBpZiByYXRlIGxpbWl0IGFwcGxpZXMgdG8gdGhlIG1ldHJpY19idWNrZXQgZGF0YSBjYXRlZ29yeS5cbiAgICAgKi9cbiAgICBmb3IgKGNvbnN0IGxpbWl0IG9mIHJhdGVMaW1pdEhlYWRlci50cmltKCkuc3BsaXQoJywnKSkge1xuICAgICAgY29uc3QgW3JldHJ5QWZ0ZXIsIGNhdGVnb3JpZXMsICwgLCBuYW1lc3BhY2VzXSA9IGxpbWl0LnNwbGl0KCc6JywgNSk7XG4gICAgICBjb25zdCBoZWFkZXJEZWxheSA9IHBhcnNlSW50KHJldHJ5QWZ0ZXIsIDEwKTtcbiAgICAgIGNvbnN0IGRlbGF5ID0gKCFpc05hTihoZWFkZXJEZWxheSkgPyBoZWFkZXJEZWxheSA6IDYwKSAqIDEwMDA7IC8vIDYwc2VjIGRlZmF1bHRcbiAgICAgIGlmICghY2F0ZWdvcmllcykge1xuICAgICAgICB1cGRhdGVkUmF0ZUxpbWl0cy5hbGwgPSBub3cgKyBkZWxheTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAoY29uc3QgY2F0ZWdvcnkgb2YgY2F0ZWdvcmllcy5zcGxpdCgnOycpKSB7XG4gICAgICAgICAgaWYgKGNhdGVnb3J5ID09PSAnbWV0cmljX2J1Y2tldCcpIHtcbiAgICAgICAgICAgIC8vIG5hbWVzcGFjZXMgd2lsbCBiZSBwcmVzZW50IHdoZW4gY2F0ZWdvcnkgPT09ICdtZXRyaWNfYnVja2V0J1xuICAgICAgICAgICAgaWYgKCFuYW1lc3BhY2VzIHx8IG5hbWVzcGFjZXMuc3BsaXQoJzsnKS5pbmNsdWRlcygnY3VzdG9tJykpIHtcbiAgICAgICAgICAgICAgdXBkYXRlZFJhdGVMaW1pdHNbY2F0ZWdvcnldID0gbm93ICsgZGVsYXk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHVwZGF0ZWRSYXRlTGltaXRzW2NhdGVnb3J5XSA9IG5vdyArIGRlbGF5O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmIChyZXRyeUFmdGVySGVhZGVyKSB7XG4gICAgdXBkYXRlZFJhdGVMaW1pdHMuYWxsID0gbm93ICsgcGFyc2VSZXRyeUFmdGVySGVhZGVyKHJldHJ5QWZ0ZXJIZWFkZXIsIG5vdyk7XG4gIH0gZWxzZSBpZiAoc3RhdHVzQ29kZSA9PT0gNDI5KSB7XG4gICAgdXBkYXRlZFJhdGVMaW1pdHMuYWxsID0gbm93ICsgNjAgKiAxMDAwO1xuICB9XG5cbiAgcmV0dXJuIHVwZGF0ZWRSYXRlTGltaXRzO1xufVxuXG5leHBvcnQgeyBERUZBVUxUX1JFVFJZX0FGVEVSLCBkaXNhYmxlZFVudGlsLCBpc1JhdGVMaW1pdGVkLCBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIsIHVwZGF0ZVJhdGVMaW1pdHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhdGVsaW1pdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/ratelimit.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/requestdata.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/requestdata.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_USER_INCLUDES\": function() { return /* binding */ DEFAULT_USER_INCLUDES; },\n/* harmony export */   \"addRequestDataToEvent\": function() { return /* binding */ addRequestDataToEvent; },\n/* harmony export */   \"extractPathForTransaction\": function() { return /* binding */ extractPathForTransaction; },\n/* harmony export */   \"extractRequestData\": function() { return /* binding */ extractRequestData; },\n/* harmony export */   \"winterCGHeadersToDict\": function() { return /* binding */ winterCGHeadersToDict; },\n/* harmony export */   \"winterCGRequestToRequestData\": function() { return /* binding */ winterCGRequestToRequestData; }\n/* harmony export */ });\n/* harmony import */ var _cookie_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cookie.js */ \"./node_modules/@sentry/utils/esm/cookie.js\");\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url.js */ \"./node_modules/@sentry/utils/esm/url.js\");\n\n\n\n\n\n\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = (0,_url_js__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment)(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      // if exist _reconstructedRoute return that path instead of route.path\n      const customRoute = req._reconstructedRoute ? req._reconstructedRoute : undefined;\n      return extractPathForTransaction(req, { path: true, method: true, customRoute })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES } = options || {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  // Express 4 mistakenly strips off port number from req.host / req.hostname so we can't rely on them\n  // See: https://github.com/expressjs/express/issues/3047#issuecomment-236653223\n  // Also: https://github.com/getsentry/sentry-javascript/issues/1917\n  const host = headers.host || req.hostname || req.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = originalUrl.startsWith(protocol) ? originalUrl : `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n\n        // Remove the Cookie header in case cookie data should not be included in the event\n        if (!include.includes('cookies')) {\n          delete (requestData.headers ).cookie;\n        }\n\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && (0,_cookie_js__WEBPACK_IMPORTED_MODULE_1__.parseCookie)(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        requestData.query_string = extractQueryParams(req);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isString)(req.body) ? req.body : JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_3__.normalize)(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @returns The mutated `Event` object\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request })\n      : extractRequestData(req);\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction && event.type === 'transaction') {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(req) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  try {\n    const queryParams = req.query || new URL(originalUrl).search.slice(1);\n    return queryParams.length ? queryParams : undefined;\n  } catch (e2) {\n    return undefined;\n  }\n}\n\n/**\n * Transforms a `Headers` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into a simple key-value dict.\n * The header keys will be lower case: e.g. A \"Content-Type\" header will be stored as \"content-type\".\n */\n// TODO(v8): Make this function return undefined when the extraction fails.\nfunction winterCGHeadersToDict(winterCGHeaders) {\n  const headers = {};\n  try {\n    winterCGHeaders.forEach((value, key) => {\n      if (typeof value === 'string') {\n        // We check that value is a string even though it might be redundant to make sure prototype pollution is not possible.\n        headers[key] = value;\n      }\n    });\n  } catch (e) {\n    _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD &&\n      _logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.warn('Sentry failed extracting headers from a request object. If you see this, please file an issue.');\n  }\n\n  return headers;\n}\n\n/**\n * Converts a `Request` object that implements the `Web Fetch API` (https://developer.mozilla.org/en-US/docs/Web/API/Headers) into the format that the `RequestData` integration understands.\n */\nfunction winterCGRequestToRequestData(req) {\n  const headers = winterCGHeadersToDict(req.headers);\n  return {\n    method: req.method,\n    url: req.url,\n    headers,\n  };\n}\n\n\n//# sourceMappingURL=requestdata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/requestdata.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/severity.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/severity.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"severityLevelFromString\": function() { return /* binding */ severityLevelFromString; },\n/* harmony export */   \"validSeverityLevels\": function() { return /* binding */ validSeverityLevels; }\n/* harmony export */ });\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\n\n//# sourceMappingURL=severity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc2V2ZXJpdHkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RDtBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc2V2ZXJpdHkuanM/ZDVlMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBOb3RlOiBJZGVhbGx5IHRoZSBgU2V2ZXJpdHlMZXZlbGAgdHlwZSB3b3VsZCBiZSBkZXJpdmVkIGZyb20gYHZhbGlkU2V2ZXJpdHlMZXZlbHNgLCBidXQgdGhhdCB3b3VsZCBtZWFuIGVpdGhlclxuLy9cbi8vIGEpIG1vdmluZyBgdmFsaWRTZXZlcml0eUxldmVsc2AgdG8gYEBzZW50cnkvdHlwZXNgLFxuLy8gYikgbW92aW5nIHRoZWBTZXZlcml0eUxldmVsYCB0eXBlIGhlcmUsIG9yXG4vLyBjKSBpbXBvcnRpbmcgYHZhbGlkU2V2ZXJpdHlMZXZlbHNgIGZyb20gaGVyZSBpbnRvIGBAc2VudHJ5L3R5cGVzYC5cbi8vXG4vLyBPcHRpb24gQSB3b3VsZCBtYWtlIGBAc2VudHJ5L3R5cGVzYCBhIHJ1bnRpbWUgZGVwZW5kZW5jeSBvZiBgQHNlbnRyeS91dGlsc2AgKG5vdCBnb29kKSwgYW5kIG9wdGlvbnMgQiBhbmQgQyB3b3VsZFxuLy8gY3JlYXRlIGEgY2lyY3VsYXIgZGVwZW5kZW5jeSBiZXR3ZWVuIGBAc2VudHJ5L3R5cGVzYCBhbmQgYEBzZW50cnkvdXRpbHNgIChhbHNvIG5vdCBnb29kKS4gU28gYSBUT0RPIGFjY29tcGFueWluZyB0aGVcbi8vIHR5cGUsIHJlbWluZGluZyBhbnlvbmUgd2hvIGNoYW5nZXMgaXQgdG8gY2hhbmdlIHRoaXMgbGlzdCBhbHNvLCB3aWxsIGhhdmUgdG8gZG8uXG5cbmNvbnN0IHZhbGlkU2V2ZXJpdHlMZXZlbHMgPSBbJ2ZhdGFsJywgJ2Vycm9yJywgJ3dhcm5pbmcnLCAnbG9nJywgJ2luZm8nLCAnZGVidWcnXTtcblxuLyoqXG4gKiBDb252ZXJ0cyBhIHN0cmluZy1iYXNlZCBsZXZlbCBpbnRvIGEgYFNldmVyaXR5TGV2ZWxgLCBub3JtYWxpemluZyBpdCBhbG9uZyB0aGUgd2F5LlxuICpcbiAqIEBwYXJhbSBsZXZlbCBTdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgZGVzaXJlZCBgU2V2ZXJpdHlMZXZlbGAuXG4gKiBAcmV0dXJucyBUaGUgYFNldmVyaXR5TGV2ZWxgIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGdpdmVuIHN0cmluZywgb3IgJ2xvZycgaWYgdGhlIHN0cmluZyBpc24ndCBhIHZhbGlkIGxldmVsLlxuICovXG5mdW5jdGlvbiBzZXZlcml0eUxldmVsRnJvbVN0cmluZyhsZXZlbCkge1xuICByZXR1cm4gKGxldmVsID09PSAnd2FybicgPyAnd2FybmluZycgOiB2YWxpZFNldmVyaXR5TGV2ZWxzLmluY2x1ZGVzKGxldmVsKSA/IGxldmVsIDogJ2xvZycpIDtcbn1cblxuZXhwb3J0IHsgc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcsIHZhbGlkU2V2ZXJpdHlMZXZlbHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNldmVyaXR5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/severity.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/stacktrace.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/stacktrace.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UNKNOWN_FUNCTION\": function() { return /* binding */ UNKNOWN_FUNCTION; },\n/* harmony export */   \"createStackParser\": function() { return /* binding */ createStackParser; },\n/* harmony export */   \"getFramesFromEvent\": function() { return /* binding */ getFramesFromEvent; },\n/* harmony export */   \"getFunctionName\": function() { return /* binding */ getFunctionName; },\n/* harmony export */   \"stackParserFromStackParserOptions\": function() { return /* binding */ stackParserFromStackParserOptions; },\n/* harmony export */   \"stripSentryFramesAndReverse\": function() { return /* binding */ stripSentryFramesAndReverse; }\n/* harmony export */ });\nconst STACKTRACE_FRAME_LIMIT = 50;\nconst UNKNOWN_FUNCTION = '?';\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirstLines = 0, framesToPop = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT + framesToPop) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames.slice(framesToPop));\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Get's stack frames from an event without needing to check for undefined properties.\n */\nfunction getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    const frames = [];\n    try {\n      // @ts-expect-error Object could be undefined\n      exception.values.forEach(value => {\n        // @ts-expect-error Value could be undefined\n        if (value.stacktrace.frames) {\n          // @ts-expect-error Value could be undefined\n          frames.push(...value.stacktrace.frames);\n        }\n      });\n      return frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\n\n//# sourceMappingURL=stacktrace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/stacktrace.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/string.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/string.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isMatchingPattern\": function() { return /* binding */ isMatchingPattern; },\n/* harmony export */   \"safeJoin\": function() { return /* binding */ safeJoin; },\n/* harmony export */   \"snipLine\": function() { return /* binding */ snipLine; },\n/* harmony export */   \"stringMatchesSomePattern\": function() { return /* binding */ stringMatchesSomePattern; },\n/* harmony export */   \"truncate\": function() { return /* binding */ truncate; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isVueViewModel)(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) {\n    return false;\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isRegExp)(pattern)) {\n    return pattern.test(value);\n  }\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\n\n//# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3RyaW5nLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE2RDs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxrQkFBa0I7QUFDeEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSxFQUFFLFFBQVE7QUFDakM7QUFDQTtBQUNBLGtCQUFrQixLQUFLO0FBQ3ZCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsc0RBQWM7QUFDeEI7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sZ0RBQVE7QUFDZjtBQUNBOztBQUVBLE1BQU0sZ0RBQVE7QUFDZDtBQUNBO0FBQ0EsTUFBTSxnREFBUTtBQUNkO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVxRjtBQUNyRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3RyaW5nLmpzP2M0ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNWdWVWaWV3TW9kZWwsIGlzU3RyaW5nLCBpc1JlZ0V4cCB9IGZyb20gJy4vaXMuanMnO1xuXG4vKipcbiAqIFRydW5jYXRlcyBnaXZlbiBzdHJpbmcgdG8gdGhlIG1heGltdW0gY2hhcmFjdGVycyBjb3VudFxuICpcbiAqIEBwYXJhbSBzdHIgQW4gb2JqZWN0IHRoYXQgY29udGFpbnMgc2VyaWFsaXphYmxlIHZhbHVlc1xuICogQHBhcmFtIG1heCBNYXhpbXVtIG51bWJlciBvZiBjaGFyYWN0ZXJzIGluIHRydW5jYXRlZCBzdHJpbmcgKDAgPSB1bmxpbWl0ZWQpXG4gKiBAcmV0dXJucyBzdHJpbmcgRW5jb2RlZFxuICovXG5mdW5jdGlvbiB0cnVuY2F0ZShzdHIsIG1heCA9IDApIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnIHx8IG1heCA9PT0gMCkge1xuICAgIHJldHVybiBzdHI7XG4gIH1cbiAgcmV0dXJuIHN0ci5sZW5ndGggPD0gbWF4ID8gc3RyIDogYCR7c3RyLnNsaWNlKDAsIG1heCl9Li4uYDtcbn1cblxuLyoqXG4gKiBUaGlzIGlzIGJhc2ljYWxseSBqdXN0IGB0cmltX2xpbmVgIGZyb21cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5L2Jsb2IvbWFzdGVyL3NyYy9zZW50cnkvbGFuZy9qYXZhc2NyaXB0L3Byb2Nlc3Nvci5weSNMNjdcbiAqXG4gKiBAcGFyYW0gc3RyIEFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIHNlcmlhbGl6YWJsZSB2YWx1ZXNcbiAqIEBwYXJhbSBtYXggTWF4aW11bSBudW1iZXIgb2YgY2hhcmFjdGVycyBpbiB0cnVuY2F0ZWQgc3RyaW5nXG4gKiBAcmV0dXJucyBzdHJpbmcgRW5jb2RlZFxuICovXG5mdW5jdGlvbiBzbmlwTGluZShsaW5lLCBjb2xubykge1xuICBsZXQgbmV3TGluZSA9IGxpbmU7XG4gIGNvbnN0IGxpbmVMZW5ndGggPSBuZXdMaW5lLmxlbmd0aDtcbiAgaWYgKGxpbmVMZW5ndGggPD0gMTUwKSB7XG4gICAgcmV0dXJuIG5ld0xpbmU7XG4gIH1cbiAgaWYgKGNvbG5vID4gbGluZUxlbmd0aCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIGNvbG5vID0gbGluZUxlbmd0aDtcbiAgfVxuXG4gIGxldCBzdGFydCA9IE1hdGgubWF4KGNvbG5vIC0gNjAsIDApO1xuICBpZiAoc3RhcnQgPCA1KSB7XG4gICAgc3RhcnQgPSAwO1xuICB9XG5cbiAgbGV0IGVuZCA9IE1hdGgubWluKHN0YXJ0ICsgMTQwLCBsaW5lTGVuZ3RoKTtcbiAgaWYgKGVuZCA+IGxpbmVMZW5ndGggLSA1KSB7XG4gICAgZW5kID0gbGluZUxlbmd0aDtcbiAgfVxuICBpZiAoZW5kID09PSBsaW5lTGVuZ3RoKSB7XG4gICAgc3RhcnQgPSBNYXRoLm1heChlbmQgLSAxNDAsIDApO1xuICB9XG5cbiAgbmV3TGluZSA9IG5ld0xpbmUuc2xpY2Uoc3RhcnQsIGVuZCk7XG4gIGlmIChzdGFydCA+IDApIHtcbiAgICBuZXdMaW5lID0gYCd7c25pcH0gJHtuZXdMaW5lfWA7XG4gIH1cbiAgaWYgKGVuZCA8IGxpbmVMZW5ndGgpIHtcbiAgICBuZXdMaW5lICs9ICcge3NuaXB9JztcbiAgfVxuXG4gIHJldHVybiBuZXdMaW5lO1xufVxuXG4vKipcbiAqIEpvaW4gdmFsdWVzIGluIGFycmF5XG4gKiBAcGFyYW0gaW5wdXQgYXJyYXkgb2YgdmFsdWVzIHRvIGJlIGpvaW5lZCB0b2dldGhlclxuICogQHBhcmFtIGRlbGltaXRlciBzdHJpbmcgdG8gYmUgcGxhY2VkIGluLWJldHdlZW4gdmFsdWVzXG4gKiBAcmV0dXJucyBKb2luZWQgdmFsdWVzXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBzYWZlSm9pbihpbnB1dCwgZGVsaW1pdGVyKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9wcmVmZXItZm9yLW9mXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCB2YWx1ZSA9IGlucHV0W2ldO1xuICAgIHRyeSB7XG4gICAgICAvLyBUaGlzIGlzIGEgaGFjayB0byBmaXggYSBWdWUzLXNwZWNpZmljIGJ1ZyB0aGF0IGNhdXNlcyBhbiBpbmZpbml0ZSBsb29wIG9mXG4gICAgICAvLyBjb25zb2xlIHdhcm5pbmdzLiBUaGlzIGhhcHBlbnMgd2hlbiBhIFZ1ZSB0ZW1wbGF0ZSBpcyByZW5kZXJlZCB3aXRoXG4gICAgICAvLyBhbiB1bmRlY2xhcmVkIHZhcmlhYmxlLCB3aGljaCB3ZSB0cnkgdG8gc3RyaW5naWZ5LCB1bHRpbWF0ZWx5IGNhdXNpbmdcbiAgICAgIC8vIFZ1ZSB0byBpc3N1ZSBhbm90aGVyIHdhcm5pbmcgd2hpY2ggcmVwZWF0cyBpbmRlZmluaXRlbHkuXG4gICAgICAvLyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvcHVsbC84OTgxXG4gICAgICBpZiAoaXNWdWVWaWV3TW9kZWwodmFsdWUpKSB7XG4gICAgICAgIG91dHB1dC5wdXNoKCdbVnVlVmlld01vZGVsXScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0cHV0LnB1c2goU3RyaW5nKHZhbHVlKSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgb3V0cHV0LnB1c2goJ1t2YWx1ZSBjYW5ub3QgYmUgc2VyaWFsaXplZF0nKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb3V0cHV0LmpvaW4oZGVsaW1pdGVyKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGdpdmVuIHZhbHVlIG1hdGNoZXMgYSByZWdleCBvciBzdHJpbmdcbiAqXG4gKiBAcGFyYW0gdmFsdWUgVGhlIHN0cmluZyB0byB0ZXN0XG4gKiBAcGFyYW0gcGF0dGVybiBFaXRoZXIgYSByZWdleCBvciBhIHN0cmluZyBhZ2FpbnN0IHdoaWNoIGB2YWx1ZWAgd2lsbCBiZSBtYXRjaGVkXG4gKiBAcGFyYW0gcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggSWYgdHJ1ZSwgYHZhbHVlYCBtdXN0IG1hdGNoIGBwYXR0ZXJuYCBleGFjdGx5LiBJZiBmYWxzZSwgYHZhbHVlYCB3aWxsIG1hdGNoXG4gKiBgcGF0dGVybmAgaWYgaXQgY29udGFpbnMgYHBhdHRlcm5gLiBPbmx5IGFwcGxpZXMgdG8gc3RyaW5nLXR5cGUgcGF0dGVybnMuXG4gKi9cbmZ1bmN0aW9uIGlzTWF0Y2hpbmdQYXR0ZXJuKFxuICB2YWx1ZSxcbiAgcGF0dGVybixcbiAgcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggPSBmYWxzZSxcbikge1xuICBpZiAoIWlzU3RyaW5nKHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChpc1JlZ0V4cChwYXR0ZXJuKSkge1xuICAgIHJldHVybiBwYXR0ZXJuLnRlc3QodmFsdWUpO1xuICB9XG4gIGlmIChpc1N0cmluZyhwYXR0ZXJuKSkge1xuICAgIHJldHVybiByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCA/IHZhbHVlID09PSBwYXR0ZXJuIDogdmFsdWUuaW5jbHVkZXMocGF0dGVybik7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogVGVzdCB0aGUgZ2l2ZW4gc3RyaW5nIGFnYWluc3QgYW4gYXJyYXkgb2Ygc3RyaW5ncyBhbmQgcmVnZXhlcy4gQnkgZGVmYXVsdCwgc3RyaW5nIG1hdGNoaW5nIGlzIGRvbmUgb24gYVxuICogc3Vic3RyaW5nLWluY2x1c2lvbiBiYXNpcyByYXRoZXIgdGhhbiBhIHN0cmljdCBlcXVhbGl0eSBiYXNpc1xuICpcbiAqIEBwYXJhbSB0ZXN0U3RyaW5nIFRoZSBzdHJpbmcgdG8gdGVzdFxuICogQHBhcmFtIHBhdHRlcm5zIFRoZSBwYXR0ZXJucyBhZ2FpbnN0IHdoaWNoIHRvIHRlc3QgdGhlIHN0cmluZ1xuICogQHBhcmFtIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoIElmIHRydWUsIGB0ZXN0U3RyaW5nYCBtdXN0IG1hdGNoIG9uZSBvZiB0aGUgZ2l2ZW4gc3RyaW5nIHBhdHRlcm5zIGV4YWN0bHkgaW4gb3JkZXIgdG9cbiAqIGNvdW50LiBJZiBmYWxzZSwgYHRlc3RTdHJpbmdgIHdpbGwgbWF0Y2ggYSBzdHJpbmcgcGF0dGVybiBpZiBpdCBjb250YWlucyB0aGF0IHBhdHRlcm4uXG4gKiBAcmV0dXJuc1xuICovXG5mdW5jdGlvbiBzdHJpbmdNYXRjaGVzU29tZVBhdHRlcm4oXG4gIHRlc3RTdHJpbmcsXG4gIHBhdHRlcm5zID0gW10sXG4gIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoID0gZmFsc2UsXG4pIHtcbiAgcmV0dXJuIHBhdHRlcm5zLnNvbWUocGF0dGVybiA9PiBpc01hdGNoaW5nUGF0dGVybih0ZXN0U3RyaW5nLCBwYXR0ZXJuLCByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCkpO1xufVxuXG5leHBvcnQgeyBpc01hdGNoaW5nUGF0dGVybiwgc2FmZUpvaW4sIHNuaXBMaW5lLCBzdHJpbmdNYXRjaGVzU29tZVBhdHRlcm4sIHRydW5jYXRlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/string.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/supports.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/supports.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNativeFunction\": function() { return /* binding */ isNativeFunction; },\n/* harmony export */   \"supportsDOMError\": function() { return /* binding */ supportsDOMError; },\n/* harmony export */   \"supportsDOMException\": function() { return /* binding */ supportsDOMException; },\n/* harmony export */   \"supportsErrorEvent\": function() { return /* binding */ supportsErrorEvent; },\n/* harmony export */   \"supportsFetch\": function() { return /* binding */ supportsFetch; },\n/* harmony export */   \"supportsNativeFetch\": function() { return /* binding */ supportsNativeFetch; },\n/* harmony export */   \"supportsReferrerPolicy\": function() { return /* binding */ supportsReferrerPolicy; },\n/* harmony export */   \"supportsReportingObserver\": function() { return /* binding */ supportsReportingObserver; }\n/* harmony export */ });\n/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ \"./node_modules/@sentry/utils/esm/debug-build.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\nconst WINDOW = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * isNative checks if the given function is a native implementation\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFunction(func) {\n  return func && /^function\\s+\\w+\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFunction(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFunction(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n\n//# sourceMappingURL=supports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3VwcG9ydHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0M7QUFDVjtBQUNPOztBQUU1QyxlQUFlLHFEQUFVOztBQUV6QjtBQUNBO0FBQ0EsSUFBSSx5QkFBeUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHVCQUF1QjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksMkJBQTJCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxvQkFBb0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyx1QkFBdUI7QUFDakU7O0FBRUE7QUFDQTtBQUNBLElBQUksMEJBQTBCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixNQUFNLHdEQUFXO0FBQ2pCLFFBQVEsbURBQVc7QUFDbkI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGdDQUFnQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksNkJBQTZCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRStLO0FBQy9LIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9zdXBwb3J0cy5qcz81ODY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi9kZWJ1Zy1idWlsZC5qcyc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuL2xvZ2dlci5qcyc7XG5pbXBvcnQgeyBHTE9CQUxfT0JKIH0gZnJvbSAnLi93b3JsZHdpZGUuanMnO1xuXG5jb25zdCBXSU5ET1cgPSBHTE9CQUxfT0JKIDtcblxuLyoqXG4gKiBUZWxscyB3aGV0aGVyIGN1cnJlbnQgZW52aXJvbm1lbnQgc3VwcG9ydHMgRXJyb3JFdmVudCBvYmplY3RzXG4gKiB7QGxpbmsgc3VwcG9ydHNFcnJvckV2ZW50fS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c0Vycm9yRXZlbnQoKSB7XG4gIHRyeSB7XG4gICAgbmV3IEVycm9yRXZlbnQoJycpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIERPTUVycm9yIG9iamVjdHNcbiAqIHtAbGluayBzdXBwb3J0c0RPTUVycm9yfS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c0RPTUVycm9yKCkge1xuICB0cnkge1xuICAgIC8vIENocm9tZTogVk04OToxIFVuY2F1Z2h0IFR5cGVFcnJvcjogRmFpbGVkIHRvIGNvbnN0cnVjdCAnRE9NRXJyb3InOlxuICAgIC8vIDEgYXJndW1lbnQgcmVxdWlyZWQsIGJ1dCBvbmx5IDAgcHJlc2VudC5cbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIEl0IHJlYWxseSBuZWVkcyAxIGFyZ3VtZW50LCBub3QgMC5cbiAgICBuZXcgRE9NRXJyb3IoJycpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIERPTUV4Y2VwdGlvbiBvYmplY3RzXG4gKiB7QGxpbmsgc3VwcG9ydHNET01FeGNlcHRpb259LlxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byB0aGUgZ2l2ZW4gcXVlc3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzRE9NRXhjZXB0aW9uKCkge1xuICB0cnkge1xuICAgIG5ldyBET01FeGNlcHRpb24oJycpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIEZldGNoIEFQSVxuICoge0BsaW5rIHN1cHBvcnRzRmV0Y2h9LlxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byB0aGUgZ2l2ZW4gcXVlc3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHN1cHBvcnRzRmV0Y2goKSB7XG4gIGlmICghKCdmZXRjaCcgaW4gV0lORE9XKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbmV3IEhlYWRlcnMoKTtcbiAgICBuZXcgUmVxdWVzdCgnaHR0cDovL3d3dy5leGFtcGxlLmNvbScpO1xuICAgIG5ldyBSZXNwb25zZSgpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogaXNOYXRpdmUgY2hlY2tzIGlmIHRoZSBnaXZlbiBmdW5jdGlvbiBpcyBhIG5hdGl2ZSBpbXBsZW1lbnRhdGlvblxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlc1xuZnVuY3Rpb24gaXNOYXRpdmVGdW5jdGlvbihmdW5jKSB7XG4gIHJldHVybiBmdW5jICYmIC9eZnVuY3Rpb25cXHMrXFx3K1xcKFxcKVxccytcXHtcXHMrXFxbbmF0aXZlIGNvZGVcXF1cXHMrXFx9JC8udGVzdChmdW5jLnRvU3RyaW5nKCkpO1xufVxuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBGZXRjaCBBUEkgbmF0aXZlbHlcbiAqIHtAbGluayBzdXBwb3J0c05hdGl2ZUZldGNofS5cbiAqXG4gKiBAcmV0dXJucyB0cnVlIGlmIGB3aW5kb3cuZmV0Y2hgIGlzIG5hdGl2ZWx5IGltcGxlbWVudGVkLCBmYWxzZSBvdGhlcndpc2VcbiAqL1xuZnVuY3Rpb24gc3VwcG9ydHNOYXRpdmVGZXRjaCgpIHtcbiAgaWYgKHR5cGVvZiBFZGdlUnVudGltZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICghc3VwcG9ydHNGZXRjaCgpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gRmFzdCBwYXRoIHRvIGF2b2lkIERPTSBJL09cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC91bmJvdW5kLW1ldGhvZFxuICBpZiAoaXNOYXRpdmVGdW5jdGlvbihXSU5ET1cuZmV0Y2gpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvLyB3aW5kb3cuZmV0Y2ggaXMgaW1wbGVtZW50ZWQsIGJ1dCBpcyBwb2x5ZmlsbGVkIG9yIGFscmVhZHkgd3JhcHBlZCAoZS5nOiBieSBhIGNocm9tZSBleHRlbnNpb24pXG4gIC8vIHNvIGNyZWF0ZSBhIFwicHVyZVwiIGlmcmFtZSB0byBzZWUgaWYgdGhhdCBoYXMgbmF0aXZlIGZldGNoXG4gIGxldCByZXN1bHQgPSBmYWxzZTtcbiAgY29uc3QgZG9jID0gV0lORE9XLmRvY3VtZW50O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgaWYgKGRvYyAmJiB0eXBlb2YgKGRvYy5jcmVhdGVFbGVtZW50ICkgPT09ICdmdW5jdGlvbicpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3Qgc2FuZGJveCA9IGRvYy5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgICAgIHNhbmRib3guaGlkZGVuID0gdHJ1ZTtcbiAgICAgIGRvYy5oZWFkLmFwcGVuZENoaWxkKHNhbmRib3gpO1xuICAgICAgaWYgKHNhbmRib3guY29udGVudFdpbmRvdyAmJiBzYW5kYm94LmNvbnRlbnRXaW5kb3cuZmV0Y2gpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC91bmJvdW5kLW1ldGhvZFxuICAgICAgICByZXN1bHQgPSBpc05hdGl2ZUZ1bmN0aW9uKHNhbmRib3guY29udGVudFdpbmRvdy5mZXRjaCk7XG4gICAgICB9XG4gICAgICBkb2MuaGVhZC5yZW1vdmVDaGlsZChzYW5kYm94KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIERFQlVHX0JVSUxEICYmXG4gICAgICAgIGxvZ2dlci53YXJuKCdDb3VsZCBub3QgY3JlYXRlIHNhbmRib3ggaWZyYW1lIGZvciBwdXJlIGZldGNoIGNoZWNrLCBiYWlsaW5nIHRvIHdpbmRvdy5mZXRjaDogJywgZXJyKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFRlbGxzIHdoZXRoZXIgY3VycmVudCBlbnZpcm9ubWVudCBzdXBwb3J0cyBSZXBvcnRpbmdPYnNlcnZlciBBUElcbiAqIHtAbGluayBzdXBwb3J0c1JlcG9ydGluZ09ic2VydmVyfS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c1JlcG9ydGluZ09ic2VydmVyKCkge1xuICByZXR1cm4gJ1JlcG9ydGluZ09ic2VydmVyJyBpbiBXSU5ET1c7XG59XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIFJlZmVycmVyIFBvbGljeSBBUElcbiAqIHtAbGluayBzdXBwb3J0c1JlZmVycmVyUG9saWN5fS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c1JlZmVycmVyUG9saWN5KCkge1xuICAvLyBEZXNwaXRlIGFsbCBzdGFycyBpbiB0aGUgc2t5IHNheWluZyB0aGF0IEVkZ2Ugc3VwcG9ydHMgb2xkIGRyYWZ0IHN5bnRheCwgYWthICduZXZlcicsICdhbHdheXMnLCAnb3JpZ2luJyBhbmQgJ2RlZmF1bHQnXG4gIC8vIChzZWUgaHR0cHM6Ly9jYW5pdXNlLmNvbS8jZmVhdD1yZWZlcnJlci1wb2xpY3kpLFxuICAvLyBpdCBkb2Vzbid0LiBBbmQgaXQgdGhyb3dzIGFuIGV4Y2VwdGlvbiBpbnN0ZWFkIG9mIGlnbm9yaW5nIHRoaXMgcGFyYW1ldGVyLi4uXG4gIC8vIFJFRjogaHR0cHM6Ly9naXRodWIuY29tL2dldHNlbnRyeS9yYXZlbi1qcy9pc3N1ZXMvMTIzM1xuXG4gIGlmICghc3VwcG9ydHNGZXRjaCgpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBuZXcgUmVxdWVzdCgnXycsIHtcbiAgICAgIHJlZmVycmVyUG9saWN5OiAnb3JpZ2luJyAsXG4gICAgfSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IHsgaXNOYXRpdmVGdW5jdGlvbiwgc3VwcG9ydHNET01FcnJvciwgc3VwcG9ydHNET01FeGNlcHRpb24sIHN1cHBvcnRzRXJyb3JFdmVudCwgc3VwcG9ydHNGZXRjaCwgc3VwcG9ydHNOYXRpdmVGZXRjaCwgc3VwcG9ydHNSZWZlcnJlclBvbGljeSwgc3VwcG9ydHNSZXBvcnRpbmdPYnNlcnZlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3VwcG9ydHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/supports.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/syncpromise.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/syncpromise.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SyncPromise\": function() { return /* binding */ SyncPromise; },\n/* harmony export */   \"rejectedSyncPromise\": function() { return /* binding */ rejectedSyncPromise; },\n/* harmony export */   \"resolvedSyncPromise\": function() { return /* binding */ resolvedSyncPromise; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init2() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init3() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init4() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\n\n//# sourceMappingURL=syncpromise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3luY3Byb21pc2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQzs7QUFFckM7QUFDQTs7QUFFQTtBQUNBLFlBQVk7QUFDWjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBLHNCQUFzQjtBQUN0QixDQUFDLHdCQUF3Qjs7QUFFekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLLHdDQUF3Qyx5Q0FBeUMseUNBQXlDO0FBQy9IO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7O0FBRUE7QUFDQSxlQUFlO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxrREFBVTtBQUNsQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFaUU7QUFDakUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3N5bmNwcm9taXNlLmpzP2Q0OWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNUaGVuYWJsZSB9IGZyb20gJy4vaXMuanMnO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvZXhwbGljaXQtZnVuY3Rpb24tcmV0dXJuLXR5cGUgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cblxuLyoqIFN5bmNQcm9taXNlIGludGVybmFsIHN0YXRlcyAqL1xudmFyIFN0YXRlczsgKGZ1bmN0aW9uIChTdGF0ZXMpIHtcbiAgLyoqIFBlbmRpbmcgKi9cbiAgY29uc3QgUEVORElORyA9IDA7IFN0YXRlc1tTdGF0ZXNbXCJQRU5ESU5HXCJdID0gUEVORElOR10gPSBcIlBFTkRJTkdcIjtcbiAgLyoqIFJlc29sdmVkIC8gT0sgKi9cbiAgY29uc3QgUkVTT0xWRUQgPSAxOyBTdGF0ZXNbU3RhdGVzW1wiUkVTT0xWRURcIl0gPSBSRVNPTFZFRF0gPSBcIlJFU09MVkVEXCI7XG4gIC8qKiBSZWplY3RlZCAvIEVycm9yICovXG4gIGNvbnN0IFJFSkVDVEVEID0gMjsgU3RhdGVzW1N0YXRlc1tcIlJFSkVDVEVEXCJdID0gUkVKRUNURURdID0gXCJSRUpFQ1RFRFwiO1xufSkoU3RhdGVzIHx8IChTdGF0ZXMgPSB7fSkpO1xuXG4vLyBPdmVybG9hZHMgc28gd2UgY2FuIGNhbGwgcmVzb2x2ZWRTeW5jUHJvbWlzZSB3aXRob3V0IGFyZ3VtZW50cyBhbmQgZ2VuZXJpYyBhcmd1bWVudFxuXG4vKipcbiAqIENyZWF0ZXMgYSByZXNvbHZlZCBzeW5jIHByb21pc2UuXG4gKlxuICogQHBhcmFtIHZhbHVlIHRoZSB2YWx1ZSB0byByZXNvbHZlIHRoZSBwcm9taXNlIHdpdGhcbiAqIEByZXR1cm5zIHRoZSByZXNvbHZlZCBzeW5jIHByb21pc2VcbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZWRTeW5jUHJvbWlzZSh2YWx1ZSkge1xuICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9KTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgcmVqZWN0ZWQgc3luYyBwcm9taXNlLlxuICpcbiAqIEBwYXJhbSB2YWx1ZSB0aGUgdmFsdWUgdG8gcmVqZWN0IHRoZSBwcm9taXNlIHdpdGhcbiAqIEByZXR1cm5zIHRoZSByZWplY3RlZCBzeW5jIHByb21pc2VcbiAqL1xuZnVuY3Rpb24gcmVqZWN0ZWRTeW5jUHJvbWlzZShyZWFzb24pIHtcbiAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZSgoXywgcmVqZWN0KSA9PiB7XG4gICAgcmVqZWN0KHJlYXNvbik7XG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZW5hYmxlIGNsYXNzIHRoYXQgYmVoYXZlcyBsaWtlIGEgUHJvbWlzZSBhbmQgZm9sbG93cyBpdCdzIGludGVyZmFjZVxuICogYnV0IGlzIG5vdCBhc3luYyBpbnRlcm5hbGx5XG4gKi9cbmNsYXNzIFN5bmNQcm9taXNlIHtcblxuICAgY29uc3RydWN0b3IoXG4gICAgZXhlY3V0b3IsXG4gICkge1N5bmNQcm9taXNlLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0Mi5jYWxsKHRoaXMpO1N5bmNQcm9taXNlLnByb3RvdHlwZS5fX2luaXQzLmNhbGwodGhpcyk7U3luY1Byb21pc2UucHJvdG90eXBlLl9faW5pdDQuY2FsbCh0aGlzKTtcbiAgICB0aGlzLl9zdGF0ZSA9IFN0YXRlcy5QRU5ESU5HO1xuICAgIHRoaXMuX2hhbmRsZXJzID0gW107XG5cbiAgICB0cnkge1xuICAgICAgZXhlY3V0b3IodGhpcy5fcmVzb2x2ZSwgdGhpcy5fcmVqZWN0KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aGlzLl9yZWplY3QoZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqIEpTRG9jICovXG4gICB0aGVuKFxuICAgIG9uZnVsZmlsbGVkLFxuICAgIG9ucmVqZWN0ZWQsXG4gICkge1xuICAgIHJldHVybiBuZXcgU3luY1Byb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlcnMucHVzaChbXG4gICAgICAgIGZhbHNlLFxuICAgICAgICByZXN1bHQgPT4ge1xuICAgICAgICAgIGlmICghb25mdWxmaWxsZWQpIHtcbiAgICAgICAgICAgIC8vIFRPRE86IMKvXFxfKOODhClfL8KvXG4gICAgICAgICAgICAvLyBUT0RPOiBGSVhNRVxuICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHQgKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShvbmZ1bGZpbGxlZChyZXN1bHQpKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcmVhc29uID0+IHtcbiAgICAgICAgICBpZiAoIW9ucmVqZWN0ZWQpIHtcbiAgICAgICAgICAgIHJlamVjdChyZWFzb24pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICByZXNvbHZlKG9ucmVqZWN0ZWQocmVhc29uKSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICBdKTtcbiAgICAgIHRoaXMuX2V4ZWN1dGVIYW5kbGVycygpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqIEpTRG9jICovXG4gICBjYXRjaChcbiAgICBvbnJlamVjdGVkLFxuICApIHtcbiAgICByZXR1cm4gdGhpcy50aGVuKHZhbCA9PiB2YWwsIG9ucmVqZWN0ZWQpO1xuICB9XG5cbiAgLyoqIEpTRG9jICovXG4gICBmaW5hbGx5KG9uZmluYWxseSkge1xuICAgIHJldHVybiBuZXcgU3luY1Byb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbGV0IHZhbDtcbiAgICAgIGxldCBpc1JlamVjdGVkO1xuXG4gICAgICByZXR1cm4gdGhpcy50aGVuKFxuICAgICAgICB2YWx1ZSA9PiB7XG4gICAgICAgICAgaXNSZWplY3RlZCA9IGZhbHNlO1xuICAgICAgICAgIHZhbCA9IHZhbHVlO1xuICAgICAgICAgIGlmIChvbmZpbmFsbHkpIHtcbiAgICAgICAgICAgIG9uZmluYWxseSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcmVhc29uID0+IHtcbiAgICAgICAgICBpc1JlamVjdGVkID0gdHJ1ZTtcbiAgICAgICAgICB2YWwgPSByZWFzb247XG4gICAgICAgICAgaWYgKG9uZmluYWxseSkge1xuICAgICAgICAgICAgb25maW5hbGx5KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgKS50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKGlzUmVqZWN0ZWQpIHtcbiAgICAgICAgICByZWplY3QodmFsKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXNvbHZlKHZhbCApO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvKiogSlNEb2MgKi9cbiAgICBfX2luaXQoKSB7dGhpcy5fcmVzb2x2ZSA9ICh2YWx1ZSkgPT4ge1xuICAgIHRoaXMuX3NldFJlc3VsdChTdGF0ZXMuUkVTT0xWRUQsIHZhbHVlKTtcbiAgfTt9XG5cbiAgLyoqIEpTRG9jICovXG4gICAgX19pbml0MigpIHt0aGlzLl9yZWplY3QgPSAocmVhc29uKSA9PiB7XG4gICAgdGhpcy5fc2V0UmVzdWx0KFN0YXRlcy5SRUpFQ1RFRCwgcmVhc29uKTtcbiAgfTt9XG5cbiAgLyoqIEpTRG9jICovXG4gICAgX19pbml0MygpIHt0aGlzLl9zZXRSZXN1bHQgPSAoc3RhdGUsIHZhbHVlKSA9PiB7XG4gICAgaWYgKHRoaXMuX3N0YXRlICE9PSBTdGF0ZXMuUEVORElORykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChpc1RoZW5hYmxlKHZhbHVlKSkge1xuICAgICAgdm9pZCAodmFsdWUgKS50aGVuKHRoaXMuX3Jlc29sdmUsIHRoaXMuX3JlamVjdCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fc3RhdGUgPSBzdGF0ZTtcbiAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuXG4gICAgdGhpcy5fZXhlY3V0ZUhhbmRsZXJzKCk7XG4gIH07fVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgIF9faW5pdDQoKSB7dGhpcy5fZXhlY3V0ZUhhbmRsZXJzID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLl9zdGF0ZSA9PT0gU3RhdGVzLlBFTkRJTkcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBjYWNoZWRIYW5kbGVycyA9IHRoaXMuX2hhbmRsZXJzLnNsaWNlKCk7XG4gICAgdGhpcy5faGFuZGxlcnMgPSBbXTtcblxuICAgIGNhY2hlZEhhbmRsZXJzLmZvckVhY2goaGFuZGxlciA9PiB7XG4gICAgICBpZiAoaGFuZGxlclswXSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9zdGF0ZSA9PT0gU3RhdGVzLlJFU09MVkVEKSB7XG4gICAgICAgIGhhbmRsZXJbMV0odGhpcy5fdmFsdWUgKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX3N0YXRlID09PSBTdGF0ZXMuUkVKRUNURUQpIHtcbiAgICAgICAgaGFuZGxlclsyXSh0aGlzLl92YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGhhbmRsZXJbMF0gPSB0cnVlO1xuICAgIH0pO1xuICB9O31cbn1cblxuZXhwb3J0IHsgU3luY1Byb21pc2UsIHJlamVjdGVkU3luY1Byb21pc2UsIHJlc29sdmVkU3luY1Byb21pc2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5bmNwcm9taXNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/syncpromise.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/time.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/time.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_browserPerformanceTimeOriginMode\": function() { return /* binding */ _browserPerformanceTimeOriginMode; },\n/* harmony export */   \"browserPerformanceTimeOrigin\": function() { return /* binding */ browserPerformanceTimeOrigin; },\n/* harmony export */   \"dateTimestampInSeconds\": function() { return /* binding */ dateTimestampInSeconds; },\n/* harmony export */   \"timestampInSeconds\": function() { return /* binding */ timestampInSeconds; }\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nfunction dateTimestampInSeconds() {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc() {\n  const { performance } = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\n\n//# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdGltZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0Qzs7QUFFNUM7O0FBRUE7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxjQUFjLEVBQUUscURBQVU7QUFDcEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsVUFBVSxjQUFjLEVBQUUscURBQVU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRXNIO0FBQ3ZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS90aW1lLmpzP2JkMzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR0xPQkFMX09CSiB9IGZyb20gJy4vd29ybGR3aWRlLmpzJztcblxuY29uc3QgT05FX1NFQ09ORF9JTl9NUyA9IDEwMDA7XG5cbi8qKlxuICogQSBwYXJ0aWFsIGRlZmluaXRpb24gb2YgdGhlIFtQZXJmb3JtYW5jZSBXZWIgQVBJXXtAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvUGVyZm9ybWFuY2V9XG4gKiBmb3IgYWNjZXNzaW5nIGEgaGlnaC1yZXNvbHV0aW9uIG1vbm90b25pYyBjbG9jay5cbiAqL1xuXG4vKipcbiAqIFJldHVybnMgYSB0aW1lc3RhbXAgaW4gc2Vjb25kcyBzaW5jZSB0aGUgVU5JWCBlcG9jaCB1c2luZyB0aGUgRGF0ZSBBUEkuXG4gKlxuICogVE9ETyh2OCk6IFJldHVybiB0eXBlIHNob3VsZCBiZSByb3VuZGVkLlxuICovXG5mdW5jdGlvbiBkYXRlVGltZXN0YW1wSW5TZWNvbmRzKCkge1xuICByZXR1cm4gRGF0ZS5ub3coKSAvIE9ORV9TRUNPTkRfSU5fTVM7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIHdyYXBwZXIgYXJvdW5kIHRoZSBuYXRpdmUgUGVyZm9ybWFuY2UgQVBJIGJyb3dzZXIgaW1wbGVtZW50YXRpb24sIG9yIHVuZGVmaW5lZCBmb3IgYnJvd3NlcnMgdGhhdCBkbyBub3RcbiAqIHN1cHBvcnQgdGhlIEFQSS5cbiAqXG4gKiBXcmFwcGluZyB0aGUgbmF0aXZlIEFQSSB3b3JrcyBhcm91bmQgZGlmZmVyZW5jZXMgaW4gYmVoYXZpb3IgZnJvbSBkaWZmZXJlbnQgYnJvd3NlcnMuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVVuaXhUaW1lc3RhbXBJblNlY29uZHNGdW5jKCkge1xuICBjb25zdCB7IHBlcmZvcm1hbmNlIH0gPSBHTE9CQUxfT0JKIDtcbiAgaWYgKCFwZXJmb3JtYW5jZSB8fCAhcGVyZm9ybWFuY2Uubm93KSB7XG4gICAgcmV0dXJuIGRhdGVUaW1lc3RhbXBJblNlY29uZHM7XG4gIH1cblxuICAvLyBTb21lIGJyb3dzZXIgYW5kIGVudmlyb25tZW50cyBkb24ndCBoYXZlIGEgdGltZU9yaWdpbiwgc28gd2UgZmFsbGJhY2sgdG9cbiAgLy8gdXNpbmcgRGF0ZS5ub3coKSB0byBjb21wdXRlIHRoZSBzdGFydGluZyB0aW1lLlxuICBjb25zdCBhcHByb3hTdGFydGluZ1RpbWVPcmlnaW4gPSBEYXRlLm5vdygpIC0gcGVyZm9ybWFuY2Uubm93KCk7XG4gIGNvbnN0IHRpbWVPcmlnaW4gPSBwZXJmb3JtYW5jZS50aW1lT3JpZ2luID09IHVuZGVmaW5lZCA/IGFwcHJveFN0YXJ0aW5nVGltZU9yaWdpbiA6IHBlcmZvcm1hbmNlLnRpbWVPcmlnaW47XG5cbiAgLy8gcGVyZm9ybWFuY2Uubm93KCkgaXMgYSBtb25vdG9uaWMgY2xvY2ssIHdoaWNoIG1lYW5zIGl0IHN0YXJ0cyBhdCAwIHdoZW4gdGhlIHByb2Nlc3MgYmVnaW5zLiBUbyBnZXQgdGhlIGN1cnJlbnRcbiAgLy8gd2FsbCBjbG9jayB0aW1lIChhY3R1YWwgVU5JWCB0aW1lc3RhbXApLCB3ZSBuZWVkIHRvIGFkZCB0aGUgc3RhcnRpbmcgdGltZSBvcmlnaW4gYW5kIHRoZSBjdXJyZW50IHRpbWUgZWxhcHNlZC5cbiAgLy9cbiAgLy8gVE9ETzogVGhpcyBkb2VzIG5vdCBhY2NvdW50IGZvciB0aGUgY2FzZSB3aGVyZSB0aGUgbW9ub3RvbmljIGNsb2NrIHRoYXQgcG93ZXJzIHBlcmZvcm1hbmNlLm5vdygpIGRyaWZ0cyBmcm9tIHRoZVxuICAvLyB3YWxsIGNsb2NrIHRpbWUsIHdoaWNoIGNhdXNlcyB0aGUgcmV0dXJuZWQgdGltZXN0YW1wIHRvIGJlIGluYWNjdXJhdGUuIFdlIHNob3VsZCBpbnZlc3RpZ2F0ZSBob3cgdG8gZGV0ZWN0IGFuZFxuICAvLyBjb3JyZWN0IGZvciB0aGlzLlxuICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzI1OTBcbiAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vbWRuL2NvbnRlbnQvaXNzdWVzLzQ3MTNcbiAgLy8gU2VlOiBodHRwczovL2Rldi50by9ub2Ftci93aGVuLWEtbWlsbGlzZWNvbmQtaXMtbm90LWEtbWlsbGlzZWNvbmQtM2g2XG4gIHJldHVybiAoKSA9PiB7XG4gICAgcmV0dXJuICh0aW1lT3JpZ2luICsgcGVyZm9ybWFuY2Uubm93KCkpIC8gT05FX1NFQ09ORF9JTl9NUztcbiAgfTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgdGltZXN0YW1wIGluIHNlY29uZHMgc2luY2UgdGhlIFVOSVggZXBvY2ggdXNpbmcgZWl0aGVyIHRoZSBQZXJmb3JtYW5jZSBvciBEYXRlIEFQSXMsIGRlcGVuZGluZyBvbiB0aGVcbiAqIGF2YWlsYWJpbGl0eSBvZiB0aGUgUGVyZm9ybWFuY2UgQVBJLlxuICpcbiAqIEJVRzogTm90ZSB0aGF0IGJlY2F1c2Ugb2YgaG93IGJyb3dzZXJzIGltcGxlbWVudCB0aGUgUGVyZm9ybWFuY2UgQVBJLCB0aGUgY2xvY2sgbWlnaHQgc3RvcCB3aGVuIHRoZSBjb21wdXRlciBpc1xuICogYXNsZWVwLiBUaGlzIGNyZWF0ZXMgYSBza2V3IGJldHdlZW4gYGRhdGVUaW1lc3RhbXBJblNlY29uZHNgIGFuZCBgdGltZXN0YW1wSW5TZWNvbmRzYC4gVGhlXG4gKiBza2V3IGNhbiBncm93IHRvIGFyYml0cmFyeSBhbW91bnRzIGxpa2UgZGF5cywgd2Vla3Mgb3IgbW9udGhzLlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzI1OTAuXG4gKi9cbmNvbnN0IHRpbWVzdGFtcEluU2Vjb25kcyA9IGNyZWF0ZVVuaXhUaW1lc3RhbXBJblNlY29uZHNGdW5jKCk7XG5cbi8qKlxuICogSW50ZXJuYWwgaGVscGVyIHRvIHN0b3JlIHdoYXQgaXMgdGhlIHNvdXJjZSBvZiBicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luIGJlbG93LiBGb3IgZGVidWdnaW5nIG9ubHkuXG4gKi9cbmxldCBfYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbk1vZGU7XG5cbi8qKlxuICogVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgc2luY2UgdGhlIFVOSVggZXBvY2guIFRoaXMgdmFsdWUgaXMgb25seSB1c2FibGUgaW4gYSBicm93c2VyLCBhbmQgb25seSB3aGVuIHRoZVxuICogcGVyZm9ybWFuY2UgQVBJIGlzIGF2YWlsYWJsZS5cbiAqL1xuY29uc3QgYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbiA9ICgoKSA9PiB7XG4gIC8vIFVuZm9ydHVuYXRlbHkgYnJvd3NlcnMgbWF5IHJlcG9ydCBhbiBpbmFjY3VyYXRlIHRpbWUgb3JpZ2luIGRhdGEsIHRocm91Z2ggZWl0aGVyIHBlcmZvcm1hbmNlLnRpbWVPcmlnaW4gb3JcbiAgLy8gcGVyZm9ybWFuY2UudGltaW5nLm5hdmlnYXRpb25TdGFydCwgd2hpY2ggcmVzdWx0cyBpbiBwb29yIHJlc3VsdHMgaW4gcGVyZm9ybWFuY2UgZGF0YS4gV2Ugb25seSB0cmVhdCB0aW1lIG9yaWdpblxuICAvLyBkYXRhIGFzIHJlbGlhYmxlIGlmIHRoZXkgYXJlIHdpdGhpbiBhIHJlYXNvbmFibGUgdGhyZXNob2xkIG9mIHRoZSBjdXJyZW50IHRpbWUuXG5cbiAgY29uc3QgeyBwZXJmb3JtYW5jZSB9ID0gR0xPQkFMX09CSiA7XG4gIGlmICghcGVyZm9ybWFuY2UgfHwgIXBlcmZvcm1hbmNlLm5vdykge1xuICAgIF9icm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luTW9kZSA9ICdub25lJztcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgY29uc3QgdGhyZXNob2xkID0gMzYwMCAqIDEwMDA7XG4gIGNvbnN0IHBlcmZvcm1hbmNlTm93ID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gIGNvbnN0IGRhdGVOb3cgPSBEYXRlLm5vdygpO1xuXG4gIC8vIGlmIHRpbWVPcmlnaW4gaXNuJ3QgYXZhaWxhYmxlIHNldCBkZWx0YSB0byB0aHJlc2hvbGQgc28gaXQgaXNuJ3QgdXNlZFxuICBjb25zdCB0aW1lT3JpZ2luRGVsdGEgPSBwZXJmb3JtYW5jZS50aW1lT3JpZ2luXG4gICAgPyBNYXRoLmFicyhwZXJmb3JtYW5jZS50aW1lT3JpZ2luICsgcGVyZm9ybWFuY2VOb3cgLSBkYXRlTm93KVxuICAgIDogdGhyZXNob2xkO1xuICBjb25zdCB0aW1lT3JpZ2luSXNSZWxpYWJsZSA9IHRpbWVPcmlnaW5EZWx0YSA8IHRocmVzaG9sZDtcblxuICAvLyBXaGlsZSBwZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0IGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgcGVyZm9ybWFuY2UudGltZU9yaWdpbiwgcGVyZm9ybWFuY2UudGltZU9yaWdpblxuICAvLyBpcyBub3QgYXMgd2lkZWx5IHN1cHBvcnRlZC4gTmFtZWx5LCBwZXJmb3JtYW5jZS50aW1lT3JpZ2luIGlzIHVuZGVmaW5lZCBpbiBTYWZhcmkgYXMgb2Ygd3JpdGluZy5cbiAgLy8gQWxzbyBhcyBvZiB3cml0aW5nLCBwZXJmb3JtYW5jZS50aW1pbmcgaXMgbm90IGF2YWlsYWJsZSBpbiBXZWIgV29ya2VycyBpbiBtYWluc3RyZWFtIGJyb3dzZXJzLCBzbyBpdCBpcyBub3QgYWx3YXlzXG4gIC8vIGEgdmFsaWQgZmFsbGJhY2suIEluIHRoZSBhYnNlbmNlIG9mIGFuIGluaXRpYWwgdGltZSBwcm92aWRlZCBieSB0aGUgYnJvd3NlciwgZmFsbGJhY2sgdG8gdGhlIGN1cnJlbnQgdGltZSBmcm9tIHRoZVxuICAvLyBEYXRlIEFQSS5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IG5hdmlnYXRpb25TdGFydCA9IHBlcmZvcm1hbmNlLnRpbWluZyAmJiBwZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0O1xuICBjb25zdCBoYXNOYXZpZ2F0aW9uU3RhcnQgPSB0eXBlb2YgbmF2aWdhdGlvblN0YXJ0ID09PSAnbnVtYmVyJztcbiAgLy8gaWYgbmF2aWdhdGlvblN0YXJ0IGlzbid0IGF2YWlsYWJsZSBzZXQgZGVsdGEgdG8gdGhyZXNob2xkIHNvIGl0IGlzbid0IHVzZWRcbiAgY29uc3QgbmF2aWdhdGlvblN0YXJ0RGVsdGEgPSBoYXNOYXZpZ2F0aW9uU3RhcnQgPyBNYXRoLmFicyhuYXZpZ2F0aW9uU3RhcnQgKyBwZXJmb3JtYW5jZU5vdyAtIGRhdGVOb3cpIDogdGhyZXNob2xkO1xuICBjb25zdCBuYXZpZ2F0aW9uU3RhcnRJc1JlbGlhYmxlID0gbmF2aWdhdGlvblN0YXJ0RGVsdGEgPCB0aHJlc2hvbGQ7XG5cbiAgaWYgKHRpbWVPcmlnaW5Jc1JlbGlhYmxlIHx8IG5hdmlnYXRpb25TdGFydElzUmVsaWFibGUpIHtcbiAgICAvLyBVc2UgdGhlIG1vcmUgcmVsaWFibGUgdGltZSBvcmlnaW5cbiAgICBpZiAodGltZU9yaWdpbkRlbHRhIDw9IG5hdmlnYXRpb25TdGFydERlbHRhKSB7XG4gICAgICBfYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbk1vZGUgPSAndGltZU9yaWdpbic7XG4gICAgICByZXR1cm4gcGVyZm9ybWFuY2UudGltZU9yaWdpbjtcbiAgICB9IGVsc2Uge1xuICAgICAgX2Jyb3dzZXJQZXJmb3JtYW5jZVRpbWVPcmlnaW5Nb2RlID0gJ25hdmlnYXRpb25TdGFydCc7XG4gICAgICByZXR1cm4gbmF2aWdhdGlvblN0YXJ0O1xuICAgIH1cbiAgfVxuXG4gIC8vIEVpdGhlciBib3RoIHRpbWVPcmlnaW4gYW5kIG5hdmlnYXRpb25TdGFydCBhcmUgc2tld2VkIG9yIG5laXRoZXIgaXMgYXZhaWxhYmxlLCBmYWxsYmFjayB0byBEYXRlLlxuICBfYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbk1vZGUgPSAnZGF0ZU5vdyc7XG4gIHJldHVybiBkYXRlTm93O1xufSkoKTtcblxuZXhwb3J0IHsgX2Jyb3dzZXJQZXJmb3JtYW5jZVRpbWVPcmlnaW5Nb2RlLCBicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luLCBkYXRlVGltZXN0YW1wSW5TZWNvbmRzLCB0aW1lc3RhbXBJblNlY29uZHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/time.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/tracing.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/tracing.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TRACEPARENT_REGEXP\": function() { return /* binding */ TRACEPARENT_REGEXP; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* binding */ extractTraceparentData; },\n/* harmony export */   \"generateSentryTraceHeader\": function() { return /* binding */ generateSentryTraceHeader; },\n/* harmony export */   \"propagationContextFromHeaders\": function() { return /* binding */ propagationContextFromHeaders; }\n/* harmony export */ });\n/* harmony import */ var _baggage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baggage.js */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./misc.js */ \"./node_modules/@sentry/utils/esm/misc.js\");\n\n\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create a propagation context from incoming headers or\n * creates a minimal new one if the headers are undefined.\n */\nfunction propagationContextFromHeaders(\n  sentryTrace,\n  baggage,\n) {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = (0,_baggage_js__WEBPACK_IMPORTED_MODULE_0__.baggageHeaderToDynamicSamplingContext)(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n      spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n      parentSpanId: parentSpanId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n      spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nfunction generateSentryTraceHeader(\n  traceId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n  spanId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),\n  sampled,\n) {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n\n\n//# sourceMappingURL=tracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdHJhY2luZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBcUU7QUFDbkM7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBLGVBQWUsR0FBRztBQUNsQixpQkFBaUIsR0FBRztBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGtGQUFxQzs7QUFFdEUsVUFBVSx1Q0FBdUM7O0FBRWpEO0FBQ0E7QUFDQSwwQkFBMEIsK0NBQUs7QUFDL0IsY0FBYywrQ0FBSztBQUNuQjtBQUNBLElBQUk7QUFDSjtBQUNBLDBCQUEwQiwrQ0FBSztBQUMvQixvQ0FBb0MsK0NBQUs7QUFDekMsY0FBYywrQ0FBSztBQUNuQjtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLCtDQUFLO0FBQ2pCLFdBQVcsK0NBQUs7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRLEdBQUcsT0FBTyxFQUFFLGNBQWM7QUFDOUM7O0FBRWdIO0FBQ2hIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS90cmFjaW5nLmpzP2ViMGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFnZ2FnZUhlYWRlclRvRHluYW1pY1NhbXBsaW5nQ29udGV4dCB9IGZyb20gJy4vYmFnZ2FnZS5qcyc7XG5pbXBvcnQgeyB1dWlkNCB9IGZyb20gJy4vbWlzYy5qcyc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAc2VudHJ5LWludGVybmFsL3Nkay9uby1yZWdleHAtY29uc3RydWN0b3IgLS0gUmVnRXhwIGlzIHVzZWQgZm9yIHJlYWRhYmlsaXR5IGhlcmVcbmNvbnN0IFRSQUNFUEFSRU5UX1JFR0VYUCA9IG5ldyBSZWdFeHAoXG4gICdeWyBcXFxcdF0qJyArIC8vIHdoaXRlc3BhY2VcbiAgICAnKFswLTlhLWZdezMyfSk/JyArIC8vIHRyYWNlX2lkXG4gICAgJy0/KFswLTlhLWZdezE2fSk/JyArIC8vIHNwYW5faWRcbiAgICAnLT8oWzAxXSk/JyArIC8vIHNhbXBsZWRcbiAgICAnWyBcXFxcdF0qJCcsIC8vIHdoaXRlc3BhY2Vcbik7XG5cbi8qKlxuICogRXh0cmFjdCB0cmFuc2FjdGlvbiBjb250ZXh0IGRhdGEgZnJvbSBhIGBzZW50cnktdHJhY2VgIGhlYWRlci5cbiAqXG4gKiBAcGFyYW0gdHJhY2VwYXJlbnQgVHJhY2VwYXJlbnQgc3RyaW5nXG4gKlxuICogQHJldHVybnMgT2JqZWN0IGNvbnRhaW5pbmcgZGF0YSBmcm9tIHRoZSBoZWFkZXIsIG9yIHVuZGVmaW5lZCBpZiB0cmFjZXBhcmVudCBzdHJpbmcgaXMgbWFsZm9ybWVkXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RUcmFjZXBhcmVudERhdGEodHJhY2VwYXJlbnQpIHtcbiAgaWYgKCF0cmFjZXBhcmVudCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBjb25zdCBtYXRjaGVzID0gdHJhY2VwYXJlbnQubWF0Y2goVFJBQ0VQQVJFTlRfUkVHRVhQKTtcbiAgaWYgKCFtYXRjaGVzKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGxldCBwYXJlbnRTYW1wbGVkO1xuICBpZiAobWF0Y2hlc1szXSA9PT0gJzEnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IHRydWU7XG4gIH0gZWxzZSBpZiAobWF0Y2hlc1szXSA9PT0gJzAnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0cmFjZUlkOiBtYXRjaGVzWzFdLFxuICAgIHBhcmVudFNhbXBsZWQsXG4gICAgcGFyZW50U3BhbklkOiBtYXRjaGVzWzJdLFxuICB9O1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIHByb3BhZ2F0aW9uIGNvbnRleHQgZnJvbSBpbmNvbWluZyBoZWFkZXJzIG9yXG4gKiBjcmVhdGVzIGEgbWluaW1hbCBuZXcgb25lIGlmIHRoZSBoZWFkZXJzIGFyZSB1bmRlZmluZWQuXG4gKi9cbmZ1bmN0aW9uIHByb3BhZ2F0aW9uQ29udGV4dEZyb21IZWFkZXJzKFxuICBzZW50cnlUcmFjZSxcbiAgYmFnZ2FnZSxcbikge1xuICBjb25zdCB0cmFjZXBhcmVudERhdGEgPSBleHRyYWN0VHJhY2VwYXJlbnREYXRhKHNlbnRyeVRyYWNlKTtcbiAgY29uc3QgZHluYW1pY1NhbXBsaW5nQ29udGV4dCA9IGJhZ2dhZ2VIZWFkZXJUb0R5bmFtaWNTYW1wbGluZ0NvbnRleHQoYmFnZ2FnZSk7XG5cbiAgY29uc3QgeyB0cmFjZUlkLCBwYXJlbnRTcGFuSWQsIHBhcmVudFNhbXBsZWQgfSA9IHRyYWNlcGFyZW50RGF0YSB8fCB7fTtcblxuICBpZiAoIXRyYWNlcGFyZW50RGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICB0cmFjZUlkOiB0cmFjZUlkIHx8IHV1aWQ0KCksXG4gICAgICBzcGFuSWQ6IHV1aWQ0KCkuc3Vic3RyaW5nKDE2KSxcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7XG4gICAgICB0cmFjZUlkOiB0cmFjZUlkIHx8IHV1aWQ0KCksXG4gICAgICBwYXJlbnRTcGFuSWQ6IHBhcmVudFNwYW5JZCB8fCB1dWlkNCgpLnN1YnN0cmluZygxNiksXG4gICAgICBzcGFuSWQ6IHV1aWQ0KCkuc3Vic3RyaW5nKDE2KSxcbiAgICAgIHNhbXBsZWQ6IHBhcmVudFNhbXBsZWQsXG4gICAgICBkc2M6IGR5bmFtaWNTYW1wbGluZ0NvbnRleHQgfHwge30sIC8vIElmIHdlIGhhdmUgdHJhY2VwYXJlbnQgZGF0YSBidXQgbm8gRFNDIGl0IG1lYW5zIHdlIGFyZSBub3QgaGVhZCBvZiB0cmFjZSBhbmQgd2UgbXVzdCBmcmVlemUgaXRcbiAgICB9O1xuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIHNlbnRyeS10cmFjZSBoZWFkZXIgZnJvbSBzcGFuIGNvbnRleHQgdmFsdWVzLlxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyKFxuICB0cmFjZUlkID0gdXVpZDQoKSxcbiAgc3BhbklkID0gdXVpZDQoKS5zdWJzdHJpbmcoMTYpLFxuICBzYW1wbGVkLFxuKSB7XG4gIGxldCBzYW1wbGVkU3RyaW5nID0gJyc7XG4gIGlmIChzYW1wbGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICBzYW1wbGVkU3RyaW5nID0gc2FtcGxlZCA/ICctMScgOiAnLTAnO1xuICB9XG4gIHJldHVybiBgJHt0cmFjZUlkfS0ke3NwYW5JZH0ke3NhbXBsZWRTdHJpbmd9YDtcbn1cblxuZXhwb3J0IHsgVFJBQ0VQQVJFTlRfUkVHRVhQLCBleHRyYWN0VHJhY2VwYXJlbnREYXRhLCBnZW5lcmF0ZVNlbnRyeVRyYWNlSGVhZGVyLCBwcm9wYWdhdGlvbkNvbnRleHRGcm9tSGVhZGVycyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhY2luZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/tracing.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/url.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/url.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNumberOfUrlSegments\": function() { return /* binding */ getNumberOfUrlSegments; },\n/* harmony export */   \"getSanitizedUrlString\": function() { return /* binding */ getSanitizedUrlString; },\n/* harmony export */   \"parseUrl\": function() { return /* binding */ parseUrl; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* binding */ stripUrlQueryAndFragment; }\n/* harmony export */ });\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span name\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\n\n//# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdXJsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdUJBQXVCOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLGNBQWMsU0FBUyxVQUFVLEVBQUUsYUFBYSxFQUFFLEtBQUs7QUFDbkU7O0FBRTZGO0FBQzdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS91cmwuanM/MDYxYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBhcnNlcyBzdHJpbmcgZm9ybSBvZiBVUkwgaW50byBhbiBvYmplY3RcbiAqIC8vIGJvcnJvd2VkIGZyb20gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzM5ODYjYXBwZW5kaXgtQlxuICogLy8gaW50ZW50aW9uYWxseSB1c2luZyByZWdleCBhbmQgbm90IDxhLz4gaHJlZiBwYXJzaW5nIHRyaWNrIGJlY2F1c2UgUmVhY3QgTmF0aXZlIGFuZCBvdGhlclxuICogLy8gZW52aXJvbm1lbnRzIHdoZXJlIERPTSBtaWdodCBub3QgYmUgYXZhaWxhYmxlXG4gKiBAcmV0dXJucyBwYXJzZWQgVVJMIG9iamVjdFxuICovXG5mdW5jdGlvbiBwYXJzZVVybCh1cmwpIHtcbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICBjb25zdCBtYXRjaCA9IHVybC5tYXRjaCgvXigoW146Lz8jXSspOik/KFxcL1xcLyhbXi8/I10qKSk/KFtePyNdKikoXFw/KFteI10qKSk/KCMoLiopKT8kLyk7XG5cbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIC8vIGNvZXJjZSB0byB1bmRlZmluZWQgdmFsdWVzIHRvIGVtcHR5IHN0cmluZyBzbyB3ZSBkb24ndCBnZXQgJ3VuZGVmaW5lZCdcbiAgY29uc3QgcXVlcnkgPSBtYXRjaFs2XSB8fCAnJztcbiAgY29uc3QgZnJhZ21lbnQgPSBtYXRjaFs4XSB8fCAnJztcbiAgcmV0dXJuIHtcbiAgICBob3N0OiBtYXRjaFs0XSxcbiAgICBwYXRoOiBtYXRjaFs1XSxcbiAgICBwcm90b2NvbDogbWF0Y2hbMl0sXG4gICAgc2VhcmNoOiBxdWVyeSxcbiAgICBoYXNoOiBmcmFnbWVudCxcbiAgICByZWxhdGl2ZTogbWF0Y2hbNV0gKyBxdWVyeSArIGZyYWdtZW50LCAvLyBldmVyeXRoaW5nIG1pbnVzIG9yaWdpblxuICB9O1xufVxuXG4vKipcbiAqIFN0cmlwIHRoZSBxdWVyeSBzdHJpbmcgYW5kIGZyYWdtZW50IG9mZiBvZiBhIGdpdmVuIFVSTCBvciBwYXRoIChpZiBwcmVzZW50KVxuICpcbiAqIEBwYXJhbSB1cmxQYXRoIEZ1bGwgVVJMIG9yIHBhdGgsIGluY2x1ZGluZyBwb3NzaWJsZSBxdWVyeSBzdHJpbmcgYW5kL29yIGZyYWdtZW50XG4gKiBAcmV0dXJucyBVUkwgb3IgcGF0aCB3aXRob3V0IHF1ZXJ5IHN0cmluZyBvciBmcmFnbWVudFxuICovXG5mdW5jdGlvbiBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQodXJsUGF0aCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1lc2NhcGVcbiAgcmV0dXJuIHVybFBhdGguc3BsaXQoL1tcXD8jXS8sIDEpWzBdO1xufVxuXG4vKipcbiAqIFJldHVybnMgbnVtYmVyIG9mIFVSTCBzZWdtZW50cyBvZiBhIHBhc3NlZCBzdHJpbmcgVVJMLlxuICovXG5mdW5jdGlvbiBnZXROdW1iZXJPZlVybFNlZ21lbnRzKHVybCkge1xuICAvLyBzcGxpdCBhdCAnLycgb3IgYXQgJ1xcLycgdG8gc3BsaXQgcmVnZXggdXJscyBjb3JyZWN0bHlcbiAgcmV0dXJuIHVybC5zcGxpdCgvXFxcXD9cXC8vKS5maWx0ZXIocyA9PiBzLmxlbmd0aCA+IDAgJiYgcyAhPT0gJywnKS5sZW5ndGg7XG59XG5cbi8qKlxuICogVGFrZXMgYSBVUkwgb2JqZWN0IGFuZCByZXR1cm5zIGEgc2FuaXRpemVkIHN0cmluZyB3aGljaCBpcyBzYWZlIHRvIHVzZSBhcyBzcGFuIG5hbWVcbiAqIHNlZTogaHR0cHM6Ly9kZXZlbG9wLnNlbnRyeS5kZXYvc2RrL2RhdGEtaGFuZGxpbmcvI3N0cnVjdHVyaW5nLWRhdGFcbiAqL1xuZnVuY3Rpb24gZ2V0U2FuaXRpemVkVXJsU3RyaW5nKHVybCkge1xuICBjb25zdCB7IHByb3RvY29sLCBob3N0LCBwYXRoIH0gPSB1cmw7XG5cbiAgY29uc3QgZmlsdGVyZWRIb3N0ID1cbiAgICAoaG9zdCAmJlxuICAgICAgaG9zdFxuICAgICAgICAvLyBBbHdheXMgZmlsdGVyIG91dCBhdXRob3JpdHlcbiAgICAgICAgLnJlcGxhY2UoL14uKkAvLCAnW2ZpbHRlcmVkXTpbZmlsdGVyZWRdQCcpXG4gICAgICAgIC8vIERvbid0IHNob3cgc3RhbmRhcmQgOjgwIChodHRwKSBhbmQgOjQ0MyAoaHR0cHMpIHBvcnRzIHRvIHJlZHVjZSB0aGUgbm9pc2VcbiAgICAgICAgLy8gVE9ETzogVXNlIG5ldyBVUkwgZ2xvYmFsIGlmIGl0IGV4aXN0c1xuICAgICAgICAucmVwbGFjZSgvKDo4MCkkLywgJycpXG4gICAgICAgIC5yZXBsYWNlKC8oOjQ0MykkLywgJycpKSB8fFxuICAgICcnO1xuXG4gIHJldHVybiBgJHtwcm90b2NvbCA/IGAke3Byb3RvY29sfTovL2AgOiAnJ30ke2ZpbHRlcmVkSG9zdH0ke3BhdGh9YDtcbn1cblxuZXhwb3J0IHsgZ2V0TnVtYmVyT2ZVcmxTZWdtZW50cywgZ2V0U2FuaXRpemVkVXJsU3RyaW5nLCBwYXJzZVVybCwgc3RyaXBVcmxRdWVyeUFuZEZyYWdtZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/url.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/vendor/escapeStringForRegex.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/vendor/escapeStringForRegex.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"escapeStringForRegex\": function() { return /* binding */ escapeStringForRegex; }\n/* harmony export */ });\n// Based on https://github.com/sindresorhus/escape-string-regexp but with modifications to:\n//   a) reduce the size by skipping the runtime type - checking\n//   b) ensure it gets down - compiled for old versions of Node(the published package only supports Node 14+).\n//\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n// documentation files(the \"Software\"), to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and\n// to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of\n// the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\n// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\n\n//# sourceMappingURL=escapeStringForRegex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdmVuZG9yL2VzY2FwZVN0cmluZ0ZvclJlZ2V4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS92ZW5kb3IvZXNjYXBlU3RyaW5nRm9yUmVnZXguanM/N2NmMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2VzY2FwZS1zdHJpbmctcmVnZXhwIGJ1dCB3aXRoIG1vZGlmaWNhdGlvbnMgdG86XG4vLyAgIGEpIHJlZHVjZSB0aGUgc2l6ZSBieSBza2lwcGluZyB0aGUgcnVudGltZSB0eXBlIC0gY2hlY2tpbmdcbi8vICAgYikgZW5zdXJlIGl0IGdldHMgZG93biAtIGNvbXBpbGVkIGZvciBvbGQgdmVyc2lvbnMgb2YgTm9kZSh0aGUgcHVibGlzaGVkIHBhY2thZ2Ugb25seSBzdXBwb3J0cyBOb2RlIDE0KykuXG4vL1xuLy8gTUlUIExpY2Vuc2Vcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIFNpbmRyZSBTb3JodXMgPHNpbmRyZXNvcmh1c0BnbWFpbC5jb20+IChodHRwczovL3NpbmRyZXNvcmh1cy5jb20pXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkXG4vLyBkb2N1bWVudGF0aW9uIGZpbGVzKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uXG4vLyB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kIC8gb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmRcbi8vIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZlxuLy8gdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUT1xuLy8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULklOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULFxuLy8gVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HU1xuLy8gSU4gVEhFIFNPRlRXQVJFLlxuXG4vKipcbiAqIEdpdmVuIGEgc3RyaW5nLCBlc2NhcGUgY2hhcmFjdGVycyB3aGljaCBoYXZlIG1lYW5pbmcgaW4gdGhlIHJlZ2V4IGdyYW1tYXIsIHN1Y2ggdGhhdCB0aGUgcmVzdWx0IGlzIHNhZmUgdG8gZmVlZCB0b1xuICogYG5ldyBSZWdFeHAoKWAuXG4gKlxuICogQHBhcmFtIHJlZ2V4U3RyaW5nIFRoZSBzdHJpbmcgdG8gZXNjYXBlXG4gKiBAcmV0dXJucyBBbiB2ZXJzaW9uIG9mIHRoZSBzdHJpbmcgd2l0aCBhbGwgc3BlY2lhbCByZWdleCBjaGFyYWN0ZXJzIGVzY2FwZWRcbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nRm9yUmVnZXgocmVnZXhTdHJpbmcpIHtcbiAgLy8gZXNjYXBlIHRoZSBoeXBoZW4gc2VwYXJhdGVseSBzbyB3ZSBjYW4gYWxzbyByZXBsYWNlIGl0IHdpdGggYSB1bmljb2RlIGxpdGVyYWwgaHlwaGVuLCB0byBhdm9pZCB0aGUgcHJvYmxlbXNcbiAgLy8gZGlzY3Vzc2VkIGluIGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvZXNjYXBlLXN0cmluZy1yZWdleHAvaXNzdWVzLzIwLlxuICByZXR1cm4gcmVnZXhTdHJpbmcucmVwbGFjZSgvW3xcXFxce30oKVtcXF1eJCsqPy5dL2csICdcXFxcJCYnKS5yZXBsYWNlKC8tL2csICdcXFxceDJkJyk7XG59XG5cbmV4cG9ydCB7IGVzY2FwZVN0cmluZ0ZvclJlZ2V4IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lc2NhcGVTdHJpbmdGb3JSZWdleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/vendor/escapeStringForRegex.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/vendor/supportsHistory.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/vendor/supportsHistory.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"supportsHistory\": function() { return /* binding */ supportsHistory; }\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n\nconst WINDOW = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW ).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\n\n//# sourceMappingURL=supportsHistory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdmVuZG9yL3N1cHBvcnRzSGlzdG9yeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2Qzs7QUFFN0M7QUFDQTs7O0FBR0EsZUFBZSxxREFBVTs7QUFFekI7QUFDQTtBQUNBLElBQUksc0JBQXNCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS92ZW5kb3Ivc3VwcG9ydHNIaXN0b3J5LmpzPzI2ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR0xPQkFMX09CSiB9IGZyb20gJy4uL3dvcmxkd2lkZS5qcyc7XG5cbi8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIuanMvcHVsbC8xMzk0NS9maWxlc1xuLy8gVGhlIE1JVCBMaWNlbnNlXG5cblxuY29uc3QgV0lORE9XID0gR0xPQkFMX09CSiA7XG5cbi8qKlxuICogVGVsbHMgd2hldGhlciBjdXJyZW50IGVudmlyb25tZW50IHN1cHBvcnRzIEhpc3RvcnkgQVBJXG4gKiB7QGxpbmsgc3VwcG9ydHNIaXN0b3J5fS5cbiAqXG4gKiBAcmV0dXJucyBBbnN3ZXIgdG8gdGhlIGdpdmVuIHF1ZXN0aW9uLlxuICovXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIC8vIE5PVEU6IGluIENocm9tZSBBcHAgZW52aXJvbm1lbnQsIHRvdWNoaW5nIGhpc3RvcnkucHVzaFN0YXRlLCAqZXZlbiBpbnNpZGVcbiAgLy8gICAgICAgYSB0cnkvY2F0Y2ggYmxvY2sqLCB3aWxsIGNhdXNlIENocm9tZSB0byBvdXRwdXQgYW4gZXJyb3IgdG8gY29uc29sZS5lcnJvclxuICAvLyBib3Jyb3dlZCBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyLmpzL3B1bGwvMTM5NDUvZmlsZXNcbiAgLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIGNvbnN0IGNocm9tZVZhciA9IChXSU5ET1cgKS5jaHJvbWU7XG4gIGNvbnN0IGlzQ2hyb21lUGFja2FnZWRBcHAgPSBjaHJvbWVWYXIgJiYgY2hyb21lVmFyLmFwcCAmJiBjaHJvbWVWYXIuYXBwLnJ1bnRpbWU7XG4gIC8qIGVzbGludC1lbmFibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzICovXG4gIGNvbnN0IGhhc0hpc3RvcnlBcGkgPSAnaGlzdG9yeScgaW4gV0lORE9XICYmICEhV0lORE9XLmhpc3RvcnkucHVzaFN0YXRlICYmICEhV0lORE9XLmhpc3RvcnkucmVwbGFjZVN0YXRlO1xuXG4gIHJldHVybiAhaXNDaHJvbWVQYWNrYWdlZEFwcCAmJiBoYXNIaXN0b3J5QXBpO1xufVxuXG5leHBvcnQgeyBzdXBwb3J0c0hpc3RvcnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1cHBvcnRzSGlzdG9yeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/vendor/supportsHistory.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/version.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/version.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SDK_VERSION\": function() { return /* binding */ SDK_VERSION; }\n/* harmony export */ });\nconst SDK_VERSION = '8.8.0';\n\n\n//# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdmVyc2lvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS92ZXJzaW9uLmpzP2YzY2UiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU0RLX1ZFUlNJT04gPSAnOC44LjAnO1xuXG5leHBvcnQgeyBTREtfVkVSU0lPTiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/version.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/worldwide.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/worldwide.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GLOBAL_OBJ\": function() { return /* binding */ GLOBAL_OBJ; },\n/* harmony export */   \"getGlobalSingleton\": function() { return /* binding */ getGlobalSingleton; }\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@sentry/utils/esm/version.js\");\n\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ = globalThis ;\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__[]` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const versionedCarrier = (__SENTRY__[_version_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION] = __SENTRY__[_version_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION] || {});\n  return versionedCarrier[name] || (versionedCarrier[name] = creator());\n}\n\n\n//# sourceMappingURL=worldwide.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vd29ybGR3aWRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQzs7QUFFM0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRCx1Q0FBdUMsb0RBQVcsZUFBZSxvREFBVyxPQUFPO0FBQ25GO0FBQ0E7O0FBRTBDO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS93b3JsZHdpZGUuanM/MzA2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTREtfVkVSU0lPTiB9IGZyb20gJy4vdmVyc2lvbi5qcyc7XG5cbi8qKiBHZXQncyB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgdGhlIGN1cnJlbnQgSmF2YVNjcmlwdCBydW50aW1lICovXG5jb25zdCBHTE9CQUxfT0JKID0gZ2xvYmFsVGhpcyA7XG5cbi8qKlxuICogUmV0dXJucyBhIGdsb2JhbCBzaW5nbGV0b24gY29udGFpbmVkIGluIHRoZSBnbG9iYWwgYF9fU0VOVFJZX19bXWAgb2JqZWN0LlxuICpcbiAqIElmIHRoZSBzaW5nbGV0b24gZG9lc24ndCBhbHJlYWR5IGV4aXN0IGluIGBfX1NFTlRSWV9fYCwgaXQgd2lsbCBiZSBjcmVhdGVkIHVzaW5nIHRoZSBnaXZlbiBmYWN0b3J5XG4gKiBmdW5jdGlvbiBhbmQgYWRkZWQgdG8gdGhlIGBfX1NFTlRSWV9fYCBvYmplY3QuXG4gKlxuICogQHBhcmFtIG5hbWUgbmFtZSBvZiB0aGUgZ2xvYmFsIHNpbmdsZXRvbiBvbiBfX1NFTlRSWV9fXG4gKiBAcGFyYW0gY3JlYXRvciBjcmVhdG9yIEZhY3RvcnkgZnVuY3Rpb24gdG8gY3JlYXRlIHRoZSBzaW5nbGV0b24gaWYgaXQgZG9lc24ndCBhbHJlYWR5IGV4aXN0IG9uIGBfX1NFTlRSWV9fYFxuICogQHBhcmFtIG9iaiAoT3B0aW9uYWwpIFRoZSBnbG9iYWwgb2JqZWN0IG9uIHdoaWNoIHRvIGxvb2sgZm9yIGBfX1NFTlRSWV9fYCwgaWYgbm90IGBHTE9CQUxfT0JKYCdzIHJldHVybiB2YWx1ZVxuICogQHJldHVybnMgdGhlIHNpbmdsZXRvblxuICovXG5mdW5jdGlvbiBnZXRHbG9iYWxTaW5nbGV0b24obmFtZSwgY3JlYXRvciwgb2JqKSB7XG4gIGNvbnN0IGdibCA9IChvYmogfHwgR0xPQkFMX09CSikgO1xuICBjb25zdCBfX1NFTlRSWV9fID0gKGdibC5fX1NFTlRSWV9fID0gZ2JsLl9fU0VOVFJZX18gfHwge30pO1xuICBjb25zdCB2ZXJzaW9uZWRDYXJyaWVyID0gKF9fU0VOVFJZX19bU0RLX1ZFUlNJT05dID0gX19TRU5UUllfX1tTREtfVkVSU0lPTl0gfHwge30pO1xuICByZXR1cm4gdmVyc2lvbmVkQ2FycmllcltuYW1lXSB8fCAodmVyc2lvbmVkQ2FycmllcltuYW1lXSA9IGNyZWF0b3IoKSk7XG59XG5cbmV4cG9ydCB7IEdMT0JBTF9PQkosIGdldEdsb2JhbFNpbmdsZXRvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29ybGR3aWRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/worldwide.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"), __webpack_exec__("./sentry.client.config.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);