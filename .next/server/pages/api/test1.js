"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/test1";
exports.ids = ["pages/api/test1"];
exports.modules = {

/***/ "@sentry/nextjs":
/*!*********************************!*\
  !*** external "@sentry/nextjs" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@sentry/nextjs");

/***/ }),

/***/ "(api)/./pages/api/test1.js":
/*!****************************!*\
  !*** ./pages/api/test1.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ wrappedHandler$1)\n/* harmony export */ });\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/nextjs */ \"@sentry/nextjs\");\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst doAsyncWork = ()=>Promise.reject(new Error(\"API Test 1\"));\ndoAsyncWork();\nfunction handler(req, res) {\n    res.status(200).json({\n        name: \"John Doe\"\n    });\n}\n\nvar serverComponentModule = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    default: handler\n});\n\n/*\n * This file is a template for the code which will be substituted when our webpack loader handles API files in the\n * `pages/` directory.\n *\n * We use `__SENTRY_WRAPPING_TARGET_FILE__.cjs` as a placeholder for the path to the file being wrapped. Because it's not a real package,\n * this causes both TS and ESLint to complain, hence the pragma comments below.\n */\n\n\nconst userApiModule = serverComponentModule ;\n\n// Default to undefined. It's possible for Next.js users to not define any exports/handlers in an API route. If that is\n// the case Next.js wil crash during runtime but the Sentry SDK should definitely not crash so we need tohandle it.\nlet userProvidedHandler = undefined;\n\nif ('default' in userApiModule && typeof userApiModule.default === 'function') {\n  // Handle when user defines via ESM export: `export default myFunction;`\n  userProvidedHandler = userApiModule.default;\n} else if (typeof userApiModule === 'function') {\n  // Handle when user defines via CJS export: \"module.exports = myFunction;\"\n  userProvidedHandler = userApiModule;\n}\n\nconst origConfig = userApiModule.config || {};\n\n// Setting `externalResolver` to `true` prevents nextjs from throwing a warning in dev about API routes resolving\n// without sending a response. It's a false positive (a response is sent, but only after we flush our send queue), and\n// we throw a warning of our own to tell folks that, but it's better if we just don't have to deal with it in the first\n// place.\nconst config = {\n  ...origConfig,\n  api: {\n    ...origConfig.api,\n    externalResolver: true,\n  },\n};\n\nlet wrappedHandler = userProvidedHandler;\n\nif (wrappedHandler && undefined) {}\n\nif (wrappedHandler) {\n  wrappedHandler = _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.wrapApiHandlerWithSentry(wrappedHandler, '/api/test1');\n}\n\nconst wrappedHandler$1 = wrappedHandler;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdGVzdDEuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsTUFBTUEsY0FBYyxJQUFNQyxPQUFBQSxDQUFRQyxNQUFNLENBQUMsSUFBSUMsS0FBTTtBQUNuREgsV0FBQUEsRUFBQUEsQ0FBQUE7QUFFZSxTQUFTSSxPQUFBQSxDQUFRQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtBQUN4Q0EsSUFBQUEsR0FBQUEsQ0FBSUMsTUFBTSxDQUFDLEdBQUtDLENBQUFBLENBQUFBLElBQUksQ0FBQztRQUFFQyxJQUFNO0FBQVc7QUFDMUM7Ozs7Ozs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLGFBQWEsR0FBRyxxQkFBcUIsRUFBRTtBQUM3QztBQUNBO0FBQ0E7QUFDQSxJQUFJLG1CQUFtQixHQUFHLFNBQVMsQ0FBQztBQUNwQztBQUNBLElBQUksU0FBUyxJQUFJLGFBQWEsSUFBSSxPQUFPLGFBQWEsQ0FBQyxPQUFPLEtBQUssVUFBVSxFQUFFO0FBQy9FO0FBQ0EsRUFBRSxtQkFBbUIsR0FBRyxhQUFhLENBQUMsT0FBTyxDQUFDO0FBQzlDLENBQUMsTUFBTSxJQUFJLE9BQU8sYUFBYSxLQUFLLFVBQVUsRUFBRTtBQUNoRDtBQUNBLEVBQUUsbUJBQW1CLEdBQUcsYUFBYSxDQUFDO0FBQ3RDLENBQUM7QUFDRDtBQUNBLE1BQU0sVUFBVSxHQUFHLGFBQWEsQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDSyxNQUFDLE1BQU0sR0FBRztBQUNmLEVBQUUsR0FBRyxVQUFVO0FBQ2YsRUFBRSxHQUFHLEVBQUU7QUFDUCxJQUFJLEdBQUcsVUFBVSxDQUFDLEdBQUc7QUFDckIsSUFBSSxnQkFBZ0IsRUFBRSxJQUFJO0FBQzFCLEdBQUc7QUFDSCxFQUFFO0FBQ0Y7QUFDQSxJQUFJLGNBQWMsR0FBRyxtQkFBbUIsQ0FBQztBQUN6QztBQUNBLElBQUksY0FBYyxJQUFJLFNBQVMsRUFBRSxFQUVoQztBQUNEO0FBQ0EsSUFBSSxjQUFjLEVBQUU7QUFDcEIsRUFBRSxjQUFjLEdBQUcsb0VBQStCLENBQUMsY0FBYyxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBQ2pGLENBQUM7QUFDRDtBQUNLLE1BQUMsZ0JBQWdCLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcGFnZXMvYXBpL3Rlc3QxLmpzP2RhZGMiLCJ3ZWJwYWNrOi8vL3NlbnRyeS13cmFwcGVyLW1vZHVsZT82Zjk2Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRvQXN5bmNXb3JrID0gKCkgPT4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdBUEkgVGVzdCAxJykpXHJcbmRvQXN5bmNXb3JrKClcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG5hbWU6ICdKb2huIERvZScgfSlcclxufVxyXG4iLCJpbXBvcnQgKiBhcyBTZW50cnkgZnJvbSAnQHNlbnRyeS9uZXh0anMnO1xuaW1wb3J0ICogYXMgc2VydmVyQ29tcG9uZW50TW9kdWxlIGZyb20gJ19fU0VOVFJZX1dSQVBQSU5HX1RBUkdFVF9GSUxFX18uY2pzJztcbmV4cG9ydCAqIGZyb20gJ19fU0VOVFJZX1dSQVBQSU5HX1RBUkdFVF9GSUxFX18uY2pzJztcblxuLypcbiAqIFRoaXMgZmlsZSBpcyBhIHRlbXBsYXRlIGZvciB0aGUgY29kZSB3aGljaCB3aWxsIGJlIHN1YnN0aXR1dGVkIHdoZW4gb3VyIHdlYnBhY2sgbG9hZGVyIGhhbmRsZXMgQVBJIGZpbGVzIGluIHRoZVxuICogYHBhZ2VzL2AgZGlyZWN0b3J5LlxuICpcbiAqIFdlIHVzZSBgX19TRU5UUllfV1JBUFBJTkdfVEFSR0VUX0ZJTEVfXy5janNgIGFzIGEgcGxhY2Vob2xkZXIgZm9yIHRoZSBwYXRoIHRvIHRoZSBmaWxlIGJlaW5nIHdyYXBwZWQuIEJlY2F1c2UgaXQncyBub3QgYSByZWFsIHBhY2thZ2UsXG4gKiB0aGlzIGNhdXNlcyBib3RoIFRTIGFuZCBFU0xpbnQgdG8gY29tcGxhaW4sIGhlbmNlIHRoZSBwcmFnbWEgY29tbWVudHMgYmVsb3cuXG4gKi9cblxuXG5jb25zdCB1c2VyQXBpTW9kdWxlID0gc2VydmVyQ29tcG9uZW50TW9kdWxlIDtcblxuLy8gRGVmYXVsdCB0byB1bmRlZmluZWQuIEl0J3MgcG9zc2libGUgZm9yIE5leHQuanMgdXNlcnMgdG8gbm90IGRlZmluZSBhbnkgZXhwb3J0cy9oYW5kbGVycyBpbiBhbiBBUEkgcm91dGUuIElmIHRoYXQgaXNcbi8vIHRoZSBjYXNlIE5leHQuanMgd2lsIGNyYXNoIGR1cmluZyBydW50aW1lIGJ1dCB0aGUgU2VudHJ5IFNESyBzaG91bGQgZGVmaW5pdGVseSBub3QgY3Jhc2ggc28gd2UgbmVlZCB0b2hhbmRsZSBpdC5cbmxldCB1c2VyUHJvdmlkZWRIYW5kbGVyID0gdW5kZWZpbmVkO1xuXG5pZiAoJ2RlZmF1bHQnIGluIHVzZXJBcGlNb2R1bGUgJiYgdHlwZW9mIHVzZXJBcGlNb2R1bGUuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJykge1xuICAvLyBIYW5kbGUgd2hlbiB1c2VyIGRlZmluZXMgdmlhIEVTTSBleHBvcnQ6IGBleHBvcnQgZGVmYXVsdCBteUZ1bmN0aW9uO2BcbiAgdXNlclByb3ZpZGVkSGFuZGxlciA9IHVzZXJBcGlNb2R1bGUuZGVmYXVsdDtcbn0gZWxzZSBpZiAodHlwZW9mIHVzZXJBcGlNb2R1bGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gSGFuZGxlIHdoZW4gdXNlciBkZWZpbmVzIHZpYSBDSlMgZXhwb3J0OiBcIm1vZHVsZS5leHBvcnRzID0gbXlGdW5jdGlvbjtcIlxuICB1c2VyUHJvdmlkZWRIYW5kbGVyID0gdXNlckFwaU1vZHVsZTtcbn1cblxuY29uc3Qgb3JpZ0NvbmZpZyA9IHVzZXJBcGlNb2R1bGUuY29uZmlnIHx8IHt9O1xuXG4vLyBTZXR0aW5nIGBleHRlcm5hbFJlc29sdmVyYCB0byBgdHJ1ZWAgcHJldmVudHMgbmV4dGpzIGZyb20gdGhyb3dpbmcgYSB3YXJuaW5nIGluIGRldiBhYm91dCBBUEkgcm91dGVzIHJlc29sdmluZ1xuLy8gd2l0aG91dCBzZW5kaW5nIGEgcmVzcG9uc2UuIEl0J3MgYSBmYWxzZSBwb3NpdGl2ZSAoYSByZXNwb25zZSBpcyBzZW50LCBidXQgb25seSBhZnRlciB3ZSBmbHVzaCBvdXIgc2VuZCBxdWV1ZSksIGFuZFxuLy8gd2UgdGhyb3cgYSB3YXJuaW5nIG9mIG91ciBvd24gdG8gdGVsbCBmb2xrcyB0aGF0LCBidXQgaXQncyBiZXR0ZXIgaWYgd2UganVzdCBkb24ndCBoYXZlIHRvIGRlYWwgd2l0aCBpdCBpbiB0aGUgZmlyc3Rcbi8vIHBsYWNlLlxuY29uc3QgY29uZmlnID0ge1xuICAuLi5vcmlnQ29uZmlnLFxuICBhcGk6IHtcbiAgICAuLi5vcmlnQ29uZmlnLmFwaSxcbiAgICBleHRlcm5hbFJlc29sdmVyOiB0cnVlLFxuICB9LFxufTtcblxubGV0IHdyYXBwZWRIYW5kbGVyID0gdXNlclByb3ZpZGVkSGFuZGxlcjtcblxuaWYgKHdyYXBwZWRIYW5kbGVyICYmIHVuZGVmaW5lZCkge1xuICB3cmFwcGVkSGFuZGxlciA9IFNlbnRyeS53cmFwQXBpSGFuZGxlcldpdGhTZW50cnlWZXJjZWxDcm9ucyh3cmFwcGVkSGFuZGxlciwgdW5kZWZpbmVkKTtcbn1cblxuaWYgKHdyYXBwZWRIYW5kbGVyKSB7XG4gIHdyYXBwZWRIYW5kbGVyID0gU2VudHJ5LndyYXBBcGlIYW5kbGVyV2l0aFNlbnRyeSh3cmFwcGVkSGFuZGxlciwgJy9hcGkvdGVzdDEnKTtcbn1cblxuY29uc3Qgd3JhcHBlZEhhbmRsZXIkMSA9IHdyYXBwZWRIYW5kbGVyO1xuXG5leHBvcnQgeyBjb25maWcsIHdyYXBwZWRIYW5kbGVyJDEgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbImRvQXN5bmNXb3JrIiwiUHJvbWlzZSIsInJlamVjdCIsIkVycm9yIiwiaGFuZGxlciIsInJlcSIsInJlcyIsInN0YXR1cyIsImpzb24iLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/test1.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/test1.js"));
module.exports = __webpack_exports__;

})();